Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Options:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommandLineParser:

  Verifying word remove isEmpty:

    No occurrences

Checking class StressThread:

  Verifying word remove isEmpty:

    No occurrences

Checking class PosixParser:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommandLine:

  Verifying word remove isEmpty:

    No occurrences

Checking class StressAction:

  Verifying word remove isEmpty:

    No occurrences

Checking class Session:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSlicer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Stress:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlInserter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Inserter:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterGetter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterAdder:

  Verifying word remove isEmpty:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word remove isEmpty:

    No occurrences

Checking class StressAction$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StressAction$Producer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Reader:

  Verifying word remove isEmpty:

    No occurrences

Checking class Uninterruptibles:

  Verifying word remove isEmpty:

    No occurrences

Checking class StressStatistics:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word remove isEmpty:

    No occurrences

Checking class RateLimiter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Stress$Operations:

  Verifying word remove isEmpty:

    No occurrences

Checking class Timer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiGetter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Snapshot:

  Verifying word remove isEmpty:

    No occurrences

Checking class SyntaxException:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexType:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word remove isEmpty:

    No occurrences

Checking class EncryptionOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class ITransportFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraClient:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleClient:

  Verifying word remove isEmpty:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnDef:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFMetaData:

  Verifying word remove isEmpty:

    No occurrences

Checking class Metrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeParser:

  Verifying word remove isEmpty:

    No occurrences

Checking class CfDef:

  Verifying word remove isEmpty:

    No occurrences

Checking class TTransport:

  Verifying word remove isEmpty:

    No occurrences

Checking class StringUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word remove isEmpty:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word remove isEmpty:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Joiner:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConfigurationException:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word remove isEmpty:

    No occurrences

Checking class InvalidRequestException:

  Verifying word remove isEmpty:

    No occurrences

Checking class KsDef:

  Verifying word remove isEmpty:

    No occurrences

Checking class UTF8Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeUUIDType:

  Verifying word remove isEmpty:

    No occurrences

Checking class AsciiType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Document:

  Verifying word remove isEmpty:

    No occurrences

Checking class Element:

  Verifying word remove isEmpty:

    No occurrences

Checking class Node:

  Verifying word remove isEmpty:

    No occurrences

Checking class NodeList:

  Verifying word remove isEmpty:

    No occurrences

Checking class Text:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyRange:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceRange:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimerContext:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnParent:

  Verifying word remove isEmpty:

    No occurrences

Checking class SlicePredicate:

  Verifying word remove isEmpty:

    No occurrences

Checking class Option:

  Verifying word remove isEmpty:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQLOperation:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class UUIDGen:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlRow:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class Column:

  Verifying word remove isEmpty:

    No occurrences

Checking class FBUtilities:

  Verifying word remove isEmpty:

    No occurrences

Checking class Mutation:

  Verifying word remove isEmpty:

    No occurrences

Checking class SuperColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexOperator:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexExpression:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexClause:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeySlice:

  Verifying word remove isEmpty:

    No occurrences

Checking class Cassandra$Client:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists:

  Verifying word remove isEmpty:

    No occurrences

Checking class MD5Digest:

  Verifying word remove isEmpty:

    No occurrences

Checking class Hex:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$Response:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message:

  Verifying word remove isEmpty:

    No occurrences

Checking class InvalidRequestException:

  Verifying word remove isEmpty:

    No occurrences

Checking class Logger:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnDefinition:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionParameters:

  Verifying word remove isEmpty:

      Method: CompressionParameters.create()
      Calls Location: CompressionParameters.java:63 CompressionParameters.java:160
      Atomic: NO

      Method: CompressionParameters.create()
      Calls Location: CompressionParameters.java:62 CompressionParameters.java:160
      Atomic: NO

Checking class CFDefinition:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word remove isEmpty:

    No occurrences

Checking class Descriptor$Version:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowMutation:

  Verifying word remove isEmpty:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class Row:

  Verifying word remove isEmpty:

    No occurrences

Checking class TriggerDefinition:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositeType:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstone:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class Iterables:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFMetaData$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQLStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class SuperColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFMetaData$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestValidationException:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeletedColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesType:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamily:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word remove isEmpty:

    No occurrences

Checking class OnDiskAtom:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateTableStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryProcessor:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterColumnType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Descriptor:

  Verifying word remove isEmpty:

    No occurrences

Checking class Schema:

  Verifying word remove isEmpty:

    No occurrences

Checking class ICompressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class MapDifference:

  Verifying word remove isEmpty:

    No occurrences

Checking class UntypedResultSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class SystemKeyspace:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParsedStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class ToStringBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps:

  Verifying word remove isEmpty:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word remove isEmpty:

    No occurrences

Checking class LoggerFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class MarshalException:

  Verifying word remove isEmpty:

    No occurrences

Checking class EqualsBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class LongType:

  Verifying word remove isEmpty:

    No occurrences

Checking class LZ4Compressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class Column:

  Verifying word remove isEmpty:

    No occurrences

Checking class CollectionType:

  Verifying word remove isEmpty:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileDataInput:

  Verifying word remove isEmpty:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class TFramedTransport:

  Verifying word remove isEmpty:

    No occurrences

Checking class TSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexHelper:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSlice:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReversedType:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractType$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnavailableException:

  Verifying word remove isEmpty:

    No occurrences

Checking class Keyspace:

  Verifying word remove isEmpty:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProtocolException:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class Connection$Tracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class Connection:

  Verifying word remove isEmpty:

    No occurrences

Checking class ClientBootstrap:

  Verifying word remove isEmpty:

    No occurrences

Checking class Channel:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelFuture:

  Verifying word remove isEmpty:

    No occurrences

Checking class Connection$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame$Compressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame$Encoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$Request:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleClient$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class FrameCompressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ErrorMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class CredentialsMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class StartupMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame:

  Verifying word remove isEmpty:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class TransportException:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExecuteMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExceptionCode:

  Verifying word remove isEmpty:

    No occurrences

Checking class UTF8Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimestampSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AsciiSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DOMException:

  Verifying word remove isEmpty:

    No occurrences

Checking class Attr:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class DocumentType:

  Verifying word remove isEmpty:

    No occurrences

Checking class DOMImplementation:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word remove isEmpty:

    No occurrences

Checking class DOMConfiguration:

  Verifying word remove isEmpty:

    No occurrences

Checking class NamedNodeMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class UserDataHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class CharacterData:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQLOperation$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQLOperation$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSpecification:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlMetadata:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectMapper:

  Verifying word remove isEmpty:

    No occurrences

Checking class Pair:

  Verifying word remove isEmpty:

    No occurrences

Checking class TSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TDeserializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Range:

  Verifying word remove isEmpty:

    No occurrences

Checking class IPartitioner:

  Verifying word remove isEmpty:

    No occurrences

Checking class IAllocator:

  Verifying word remove isEmpty:

    No occurrences

Checking class IAuthorizer:

  Verifying word remove isEmpty:

    No occurrences

Checking class IAuthenticator:

  Verifying word remove isEmpty:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word remove isEmpty:

    No occurrences

Checking class JsonFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class RingPosition:

  Verifying word remove isEmpty:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class FBUtilities$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class FBUtilities$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FBUtilities$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class Token:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteComparisons:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$Direction:

  Verifying word remove isEmpty:

    No occurrences

Checking class CBCodec:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadyMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class SupportedMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthChallenge:

  Verifying word remove isEmpty:

    No occurrences

Checking class RegisterMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class EventMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthSuccess:

  Verifying word remove isEmpty:

    No occurrences

Checking class OptionsMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelBuffer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ImmutableList:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositeType$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Interval:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeletionTime:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeSizes:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class ISerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Relation$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class Relation:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExpiringColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class DecoratedKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class LocalToken:

  Verifying word remove isEmpty:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeysIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ImmutableMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnauthorizedException:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestExecutionException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ClientState:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryState:

  Verifying word remove isEmpty:

    No occurrences

Checking class ImmutableSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$SetView:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeletionInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TriggerDef:

  Verifying word remove isEmpty:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word remove isEmpty:

    No occurrences

Checking class Objects:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraException:

  Verifying word remove isEmpty:

    No occurrences

Checking class Allocator:

  Verifying word remove isEmpty:

    No occurrences

Checking class HeapAllocator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnStats:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamingHistogram:

  Verifying word remove isEmpty:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Functions:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnsortedColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memtable:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionController:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataTracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class ICompactionScanner:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Component:

  Verifying word remove isEmpty:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFPropDefs:

  Verifying word remove isEmpty:

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:91 CFPropDefs.java:97
      Atomic: NO

Checking class CFName:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word remove isEmpty:

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:394 CreateTableStatement.java:246
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:394 CreateTableStatement.java:356
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:394 CreateTableStatement.java:351
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:394 CreateTableStatement.java:363
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:394 CreateTableStatement.java:326
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:344 CreateTableStatement.java:363
      Atomic: NO

Checking class CreateTableStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Permission:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class SemanticVersion:

  Verifying word remove isEmpty:

    No occurrences

Checking class MemoryMeter:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchQueryOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tracing:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word remove isEmpty:

    No occurrences

Checking class CharStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftClientState:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommonTokenStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class INotificationConsumer:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledManifest:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word remove isEmpty:

    No occurrences

Checking class Multimap:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word remove isEmpty:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word remove isEmpty:

    No occurrences

Checking class OperationType:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word remove isEmpty:

    No occurrences

Checking class LongSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class KSMetaData:

  Verifying word remove isEmpty:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word remove isEmpty:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class InetAddressType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Int32Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimestampType:

  Verifying word remove isEmpty:

    No occurrences

Checking class UUIDType:

  Verifying word remove isEmpty:

    No occurrences

Checking class ListType:

  Verifying word remove isEmpty:

    No occurrences

Checking class DoubleType:

  Verifying word remove isEmpty:

    No occurrences

Checking class MapType:

  Verifying word remove isEmpty:

    No occurrences

Checking class BooleanType:

  Verifying word remove isEmpty:

    No occurrences

Checking class SetType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Row$RowSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReplayPosition:

  Verifying word remove isEmpty:

    No occurrences

Checking class SetMultimap:

  Verifying word remove isEmpty:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterId:

  Verifying word remove isEmpty:

    No occurrences

Checking class PaxosState:

  Verifying word remove isEmpty:

    No occurrences

Checking class Commit:

  Verifying word remove isEmpty:

    No occurrences

Checking class RestorableMeter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractBounds:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Token$KeyBound:

  Verifying word remove isEmpty:

    No occurrences

Checking class HashMultimap:

  Verifying word remove isEmpty:

    No occurrences

Checking class EmptyColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word remove isEmpty:

    No occurrences

Checking class DefsTables:

  Verifying word remove isEmpty:

    No occurrences

Checking class SystemKeyspace$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class VariableSpecifications:

  Verifying word remove isEmpty:

    No occurrences

Checking class IMutation:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessageOut:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStoreMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class DefaultInteger:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndexManager$Updater:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataTracker$View:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataRange:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExtendedFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowCacheKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheService:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamLockfile:

  Verifying word remove isEmpty:

    No occurrences

Checking class CollationController:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTable:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyCacheKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableMetadata:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word remove isEmpty:

    No occurrences

Checking class Histogram:

  Verifying word remove isEmpty:

    No occurrences

Checking class Counter:

  Verifying word remove isEmpty:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word remove isEmpty:

    No occurrences

Checking class Futures:

  Verifying word remove isEmpty:

    No occurrences

Checking class FSReadError:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionMetadata:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataRange$Paging:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word remove isEmpty:

    No occurrences

Checking class LocalPartitioner:

  Verifying word remove isEmpty:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIndexEntry:

  Verifying word remove isEmpty:

    No occurrences

Checking class LatencyMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowPosition:

  Verifying word remove isEmpty:

    No occurrences

Checking class AutoSavingCache:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLog:

  Verifying word remove isEmpty:

    No occurrences

Checking class Gauge:

  Verifying word remove isEmpty:

    No occurrences

Checking class SeedProvider:

  Verifying word remove isEmpty:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config:

  Verifying word remove isEmpty:

    No occurrences

Checking class IRequestScheduler:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word remove isEmpty:

    No occurrences

Checking class FSWriteError:

  Verifying word remove isEmpty:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word remove isEmpty:

    No occurrences

Checking class NoScheduler:

  Verifying word remove isEmpty:

    No occurrences

Checking class Longs:

  Verifying word remove isEmpty:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word remove isEmpty:

    No occurrences

Checking class SeedProviderDef:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word remove isEmpty:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word remove isEmpty:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word remove isEmpty:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DateType:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFDefinition$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFDefinition$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class LZ4Compressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class LZ4Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word remove isEmpty:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class Column$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word remove isEmpty:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word remove isEmpty:

    No occurrences

Checking class FSError:

  Verifying word remove isEmpty:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileUtils$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileUtils$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3Type$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectSizes:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCounter:

  Verifying word remove isEmpty:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenMetadata:

  Verifying word remove isEmpty:

    No occurrences

Checking class Keyspace$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryPagers:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class WriteType:

  Verifying word remove isEmpty:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word remove isEmpty:

    No occurrences

Checking class FrameCompressor$LZ4Compressor:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelPipeline:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame$Decoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Channels:

  Verifying word remove isEmpty:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ServerError:

  Verifying word remove isEmpty:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word remove isEmpty:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame$Header:

  Verifying word remove isEmpty:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word remove isEmpty:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CBUtil:

  Verifying word remove isEmpty:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthenticationException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelBuffers:

  Verifying word remove isEmpty:

    No occurrences

Checking class StartupMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Snappy:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class PagingState:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessageEvent:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExceptionEvent:

  Verifying word remove isEmpty:

    No occurrences

Checking class SslHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSLFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word remove isEmpty:

    No occurrences

Checking class FloatType:

  Verifying word remove isEmpty:

    No occurrences

Checking class DecimalType:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntegerType:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class DateUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class UUIDSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DOMStringList:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftConversion:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class IResource:

  Verifying word remove isEmpty:

    No occurrences

Checking class IAsyncCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessageIn:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class Bounds:

  Verifying word remove isEmpty:

    No occurrences

Checking class Range$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word remove isEmpty:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term:

  Verifying word remove isEmpty:

    No occurrences

Checking class Restriction:

  Verifying word remove isEmpty:

    No occurrences

Checking class Restriction$Slice:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class Bound:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word remove isEmpty:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExcludingBounds:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ServerConnection:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthResponse$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class Attributes:

  Verifying word remove isEmpty:

    No occurrences

Checking class ModificationStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchMessage$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event:

  Verifying word remove isEmpty:

    No occurrences

Checking class EventMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Relation$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterContext:

  Verifying word remove isEmpty:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word remove isEmpty:

    No occurrences

Checking class IContext:

  Verifying word remove isEmpty:

    No occurrences

Checking class IMergeIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class MergeIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesSearcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraDaemon:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$Mode:

  Verifying word remove isEmpty:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word remove isEmpty:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word remove isEmpty:

    No occurrences

Checking class EndpointState:

  Verifying word remove isEmpty:

    No occurrences

Checking class ApplicationState:

  Verifying word remove isEmpty:

    No occurrences

Checking class VersionedValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairFuture:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamResultFuture:

  Verifying word remove isEmpty:

      Method: StreamResultFuture.maybeComplete()
      Calls Location: StreamResultFuture.java:209 StreamResultFuture.java:210
      Atomic: YES

Checking class SSTableLoader:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class Iterators:

  Verifying word remove isEmpty:

    No occurrences

Checking class FailureDetector:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$8:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$7:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamPlan:

  Verifying word remove isEmpty:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class ActiveRepairService:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenRange:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeStreamer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Gossiper:

  Verifying word remove isEmpty:

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:332 Gossiper.java:677
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:355 Gossiper.java:677
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:330 Gossiper.java:677
      Atomic: NO

Checking class LoadBroadcaster:

  Verifying word remove isEmpty:

    No occurrences

Checking class Auth:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutputHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class BiMultiValMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class StageManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class IVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class BootStrapper:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word remove isEmpty:

    No occurrences

Checking class Level:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class IFailureDetector:

  Verifying word remove isEmpty:

    No occurrences

Checking class Logger:

  Verifying word remove isEmpty:

    No occurrences

Checking class Collections2:

  Verifying word remove isEmpty:

    No occurrences

Checking class LocalStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class EndpointDetails:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class Stage:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchlogManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class LogManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word remove isEmpty:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexSummary:

  Verifying word remove isEmpty:

    No occurrences

Checking class IFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class InstrumentingCache:

  Verifying word remove isEmpty:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableScanner:

  Verifying word remove isEmpty:

    No occurrences

Checking class RandomAccessReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class CLibrary:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word remove isEmpty:

    No occurrences

Checking class FilterFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class ICompressedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThrottledReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class Multiset:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word remove isEmpty:

    No occurrences

Checking class Validator:

  Verifying word remove isEmpty:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairJobDesc:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$10:

  Verifying word remove isEmpty:

    No occurrences

Checking class Meter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionIterable:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word remove isEmpty:

    No occurrences

Checking class Throwables:

  Verifying word remove isEmpty:

    No occurrences

Checking class Scrubber:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$7:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$8:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$9:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeysSearcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class LoadingCache:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataResource:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheLoader:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftValidation:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryProcessor:

  Verifying word remove isEmpty:

    No occurrences

Checking class ClientState$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Resources:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word remove isEmpty:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word remove isEmpty:

    No occurrences

Checking class UUIDSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrecompactedRow:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataTracker$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word remove isEmpty:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memtable$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memtable$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memtable$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word remove isEmpty:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Component$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class Component$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word remove isEmpty:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class Multiset$Entry:

  Verifying word remove isEmpty:

    No occurrences

Checking class HashMultiset:

  Verifying word remove isEmpty:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word remove isEmpty:

    No occurrences

Checking class IMigrationListener:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationManager$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class TraceState:

  Verifying word remove isEmpty:

    No occurrences

Checking class OverloadedException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tracing$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tracing$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Parser:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word remove isEmpty:

    No occurrences

Checking class BitSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$Raw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$Literal:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word remove isEmpty:

    No occurrences

Checking class UseStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class RawSelector:

  Verifying word remove isEmpty:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word remove isEmpty:

    No occurrences

Checking class Attributes$Raw:

  Verifying word remove isEmpty:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word remove isEmpty:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterTableStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class DropTableStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class DropIndexStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncateStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class GrantStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class RevokeStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateUserStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterUserStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class DropUserStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class ListUsersStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class UserOptions:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Literal:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term$Raw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$Literal:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$Prepend:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class MismatchedSetException:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeleteStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$SetValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class Token:

  Verifying word remove isEmpty:

    No occurrences

Checking class NoViableAltException:

  Verifying word remove isEmpty:

    No occurrences

Checking class UpdateStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeCast:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition:

  Verifying word remove isEmpty:

    No occurrences

Checking class DFA:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$Substraction:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$Addition:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word remove isEmpty:

    No occurrences

Checking class KSPropDefs:

  Verifying word remove isEmpty:

    No occurrences

Checking class FunctionCall:

  Verifying word remove isEmpty:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$SetElement:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractMarker:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Literal:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$Literal:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexPropDefs:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lexer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word remove isEmpty:

    No occurrences

Checking class EarlyExitException:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterMutation:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word remove isEmpty:

    No occurrences

Checking class UpdateParameters:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word remove isEmpty:

    No occurrences

Checking class CASConditions:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word remove isEmpty:

    No occurrences

Checking class Ints:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Ordering:

  Verifying word remove isEmpty:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word remove isEmpty:

    No occurrences

Checking class ImmutableSortedSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Predicates:

  Verifying word remove isEmpty:

    No occurrences

Checking class Doubles:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleStrategy:

  Verifying word remove isEmpty:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Int32Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ListSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DoubleSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MapSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class BooleanSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SetSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class EmptyType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryFilter$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryFilter$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word remove isEmpty:

    No occurrences

Checking class Clock:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExpiringMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleCondition:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word remove isEmpty:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word remove isEmpty:

    No occurrences

Checking class CallbackInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word remove isEmpty:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class StatusLogger:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class SinkManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessagingService$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word remove isEmpty:

    No occurrences

Checking class ICache:

  Verifying word remove isEmpty:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Files:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTable$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTable$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntervalTree:

  Verifying word remove isEmpty:

    No occurrences

Checking class Memory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class WrappedRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word remove isEmpty:

    No occurrences

Checking class MetricNameFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class MetricsRegistry:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class MetricName:

  Verifying word remove isEmpty:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word remove isEmpty:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word remove isEmpty:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class SequentialWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogSegment:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchCommitLogExecutorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLog$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLog$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLog$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLog$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories$FileAction:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Directories$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word remove isEmpty:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class PropertyUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word remove isEmpty:

    No occurrences

Checking class TypeDescription:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constructor:

  Verifying word remove isEmpty:

    No occurrences

Checking class Yaml:

  Verifying word remove isEmpty:

    No occurrences

Checking class NativeAllocator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CsvListReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word remove isEmpty:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word remove isEmpty:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class BiMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class HashBiMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class NamesQueryPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceQueryPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryPagers$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FrameDecoder:

  Verifying word remove isEmpty:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncateException:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word remove isEmpty:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word remove isEmpty:

    No occurrences

Checking class FloatSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class DecimalSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntegerSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class LSResourceResolver:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnavailableException:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimedOutException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class OptionCodec:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataType:

  Verifying word remove isEmpty:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word remove isEmpty:

    No occurrences

Checking class Restriction$IN:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$Selector:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word remove isEmpty:

    No occurrences

Checking class Functions:

  Verifying word remove isEmpty:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word remove isEmpty:

    No occurrences

Checking class Function:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term$Terminal:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$Value:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class IReadCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowDataResolver:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Marker:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word remove isEmpty:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$8:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$9:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$6:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$7:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word remove isEmpty:

    No occurrences

Checking class DigestMismatchException:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class IResponseResolver:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowDigestResolver:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProposeCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class Truncation:

  Verifying word remove isEmpty:

    No occurrences

Checking class TriggerExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class ServerConnection$State:

  Verifying word remove isEmpty:

    No occurrences

Checking class ServerConnection$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word remove isEmpty:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelGroup:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word remove isEmpty:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExecutionHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class ClientMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ServerBootstrap:

  Verifying word remove isEmpty:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$StatusChange:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word remove isEmpty:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word remove isEmpty:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word remove isEmpty:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word remove isEmpty:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEventHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamState:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEvent:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSession:

  Verifying word remove isEmpty:

      Method: StreamSession.taskCompleted()
      Calls Location: StreamSession.java:588 StreamSession.java:628
      Atomic: YES

      Method: StreamSession.taskCompleted()
      Calls Location: StreamSession.java:594 StreamSession.java:628
      Atomic: YES

      Method: StreamSession.taskCompleted()
      Calls Location: StreamSession.java:588 StreamSession.java:628
      Atomic: YES

      Method: StreamSession.taskCompleted()
      Calls Location: StreamSession.java:594 StreamSession.java:628
      Atomic: YES

      Method: StreamSession.startStreamingFiles()
      Calls Location: StreamSession.java:594 StreamSession.java:628
      Atomic: NO

      Method: StreamSession.startStreamingFiles()
      Calls Location: StreamSession.java:594 StreamSession.java:628
      Atomic: NO

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamManager$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class MoreExecutors:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamManager$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class EchoMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnapshotCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigest:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestAck:

  Verifying word remove isEmpty:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrivalWindow:

  Verifying word remove isEmpty:

    No occurrences

Checking class HeartBeatState:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairSession:

  Verifying word remove isEmpty:

      Method: RepairSession.syncComplete()
      Calls Location: RepairSession.java:216 RepairSession.java:223
      Atomic: NO

Checking class RepairMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SyncComplete:

  Verifying word remove isEmpty:

    No occurrences

Checking class ValidationComplete:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class NodePair:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree:

  Verifying word remove isEmpty:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTransfer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ValidationRequest:

  Verifying word remove isEmpty:

    No occurrences

Checking class SyncRequest:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceReply:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncateResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossiperMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class Gossiper$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Gossiper$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Mx4jTool:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word remove isEmpty:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReporterConfig:

  Verifying word remove isEmpty:

    No occurrences

Checking class MeteredFlusher:

  Verifying word remove isEmpty:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class GCInspector:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Auth$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word remove isEmpty:

    No occurrences

Checking class Multimaps:

  Verifying word remove isEmpty:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class StageManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class WriteResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class VersionGenerator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractFuture:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProgressInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamException:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class BooleanSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class Stage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AtomicDouble:

  Verifying word remove isEmpty:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class CorruptBlockException:

  Verifying word remove isEmpty:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word remove isEmpty:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class OpenBitSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class IBitSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class BloomFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word remove isEmpty:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class BloomCalculations:

  Verifying word remove isEmpty:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word remove isEmpty:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word remove isEmpty:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word remove isEmpty:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class MemoryInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class Scrubber$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word remove isEmpty:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnPath:

  Verifying word remove isEmpty:

    No occurrences

Checking class Deletion:

  Verifying word remove isEmpty:

    No occurrences

Checking class PreExecutionHook:

  Verifying word remove isEmpty:

    No occurrences

Checking class PostPreparationHook:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQLStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExecutionContext:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UpdateStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class Relation:

  Verifying word remove isEmpty:

    No occurrences

Checking class DropIndexStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class PreparationContext:

  Verifying word remove isEmpty:

    No occurrences

Checking class DeleteStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class RelationType:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class RandomPartitioner:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term:

  Verifying word remove isEmpty:

    No occurrences

Checking class StatementType:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractModification:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterTableStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class CliUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataResource$Level:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataResource$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word remove isEmpty:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnapTreeMap:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word remove isEmpty:

    No occurrences

Checking class MigrationTask$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Stopwatch:

  Verifying word remove isEmpty:

    No occurrences

Checking class FormattingTuple:

  Verifying word remove isEmpty:

    No occurrences

Checking class MessageFormatter:

  Verifying word remove isEmpty:

    No occurrences

Checking class TraceState$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Prepender:

  Verifying word remove isEmpty:

    No occurrences

Checking class TupleType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$Marker:

  Verifying word remove isEmpty:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$Setter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$Value:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$Putter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$Marker:

  Verifying word remove isEmpty:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$Setter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Setter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Setter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class AssignementTestable:

  Verifying word remove isEmpty:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Value:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Deleter:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$Discarder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$Adder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$Value:

  Verifying word remove isEmpty:

    No occurrences

Checking class Sets$Marker:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Marker:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word remove isEmpty:

    No occurrences

Checking class PermissionDetails:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Discarder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Substracter:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$Adder:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$InValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Appender:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$Value:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word remove isEmpty:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word remove isEmpty:

    No occurrences

Checking class FunctionCall$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ITrigger:

  Verifying word remove isEmpty:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word remove isEmpty:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word remove isEmpty:

    No occurrences

Checking class JsonNode:

  Verifying word remove isEmpty:

    No occurrences

Checking class CollectionSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class EmptySerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IMessageSink:

  Verifying word remove isEmpty:

    No occurrences

Checking class IRequestSink:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word remove isEmpty:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word remove isEmpty:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SerializingCache:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntervalTree$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class IntervalTree$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class RatioGauge:

  Verifying word remove isEmpty:

    No occurrences

Checking class IExecutorMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word remove isEmpty:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word remove isEmpty:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word remove isEmpty:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogAllocator$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Strings:

  Verifying word remove isEmpty:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class Property:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word remove isEmpty:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class TreeMultimap:

  Verifying word remove isEmpty:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word remove isEmpty:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class LSInput:

  Verifying word remove isEmpty:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word remove isEmpty:

    No occurrences

Checking class DataType$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UnsignedBytes:

  Verifying word remove isEmpty:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Function$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenFct:

  Verifying word remove isEmpty:

    No occurrences

Checking class UuidFcts:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractFunction:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word remove isEmpty:

    No occurrences

Checking class ListMultimap:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class TruncationSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomClassLoader:

  Verifying word remove isEmpty:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word remove isEmpty:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word remove isEmpty:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamState$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamingMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSession$State:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileMessageHeader:

  Verifying word remove isEmpty:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamTransferTask:

  Verifying word remove isEmpty:

      Method: StreamTransferTask.complete()
      Calls Location: StreamTransferTask.java:63 StreamTransferTask.java:68
      Atomic: YES

Checking class StreamSummary:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamRequest:

  Verifying word remove isEmpty:

    No occurrences

Checking class RetryMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSession$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSession$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReceivedMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompleteMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word remove isEmpty:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word remove isEmpty:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairException:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairJob:

  Verifying word remove isEmpty:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word remove isEmpty:

    No occurrences

Checking class Preconditions:

  Verifying word remove isEmpty:

    No occurrences

Checking class HistogramBuilder:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word remove isEmpty:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TFramedTransport$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word remove isEmpty:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class GCInspector$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfo$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileCacheService:

  Verifying word remove isEmpty:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class BitUtil:

  Verifying word remove isEmpty:

    No occurrences

Checking class BloomFilter$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class MurmurHash:

  Verifying word remove isEmpty:

    No occurrences

Checking class RefCountedMemory:

  Verifying word remove isEmpty:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractDataInput:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SelectExpression:

  Verifying word remove isEmpty:

    No occurrences

Checking class WhereClause:

  Verifying word remove isEmpty:

    No occurrences

Checking class Attributes:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation:

  Verifying word remove isEmpty:

    No occurrences

Checking class Optional:

  Verifying word remove isEmpty:

    No occurrences

Checking class CFPropDefs:

  Verifying word remove isEmpty:

    No occurrences

Checking class BigIntegerToken:

  Verifying word remove isEmpty:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class GuidGenerator:

  Verifying word remove isEmpty:

    No occurrences

Checking class MissingTokenException:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word remove isEmpty:

    No occurrences

Checking class TermType:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Operation$OperationType:

  Verifying word remove isEmpty:

    No occurrences

Checking class Term$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word remove isEmpty:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommonToken:

  Verifying word remove isEmpty:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ComparisonChain:

  Verifying word remove isEmpty:

    No occurrences

Checking class Constants$1$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnappyInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamInitMessage:

  Verifying word remove isEmpty:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class SerializingCache$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SerializingCache$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class QueryPath:

  Verifying word remove isEmpty:

    No occurrences

Checking class TokenFct$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class UuidFcts$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RetryMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionInfo:

  Verifying word remove isEmpty:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word remove isEmpty:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestCoordinator:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairJob$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class RepairJob$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class TreeResponse:

  Verifying word remove isEmpty:

    No occurrences

Checking class Differencer:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnapshotTask:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word remove isEmpty:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TServerFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word remove isEmpty:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class NotFoundException:

  Verifying word remove isEmpty:

    No occurrences

Checking class CASResult:

  Verifying word remove isEmpty:

    No occurrences

Checking class CfSplit:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraServer$3:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraServer$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraServer$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word remove isEmpty:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class SettableFuture:

  Verifying word remove isEmpty:

    No occurrences

Checking class Cache:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileCacheService$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileCacheService$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word remove isEmpty:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamWriter:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class StreamReader:

  Verifying word remove isEmpty:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word remove isEmpty:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class RemovalNotification:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word remove isEmpty:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word remove isEmpty:

    No occurrences

Checking class LZFOutputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class BytesReadTracker:

  Verifying word remove isEmpty:

    No occurrences

Checking class LZFInputStream:

  Verifying word remove isEmpty:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word remove isEmpty:

    No occurrences

Checking class TNonblockingServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word remove isEmpty:

    No occurrences

Checking class TServerTransport:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word remove isEmpty:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word remove isEmpty:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word remove isEmpty:

    No occurrences

Checking class TServerSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word remove isEmpty:

    No occurrences

Checking class TDisruptorServer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word remove isEmpty:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word remove isEmpty:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word remove isEmpty:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word remove isEmpty:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class TCustomSocket:

  Verifying word remove isEmpty:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word remove isEmpty:

    No occurrences


Run Time:
                                .buildTree       0.018s
                                    .onLCA       0.084s
                         analysis-behavior      28.477s
                          analysis-threads       0.020s
                       build-parsing-table       0.553s
                       check-word-instance       0.028s
                               grammar-opt       2.372s
                        grammar-rm-epsilon      25.523s
                                   parsing       0.268s
                                 soot-init     109.047s
                                     total     341.796s

Profiling Vars:
                                 cfg-nodes     185745
                       grammar-productions       6144
                            parse-branches       6240
                               parse-trees         21
                      parsing-table-states       7289
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word remove add:

    No occurrences

Checking class Options:

  Verifying word remove add:

    No occurrences

Checking class CommandLineParser:

  Verifying word remove add:

    No occurrences

Checking class StressThread:

  Verifying word remove add:

    No occurrences

Checking class PosixParser:

  Verifying word remove add:

    No occurrences

Checking class CommandLine:

  Verifying word remove add:

    No occurrences

Checking class StressAction:

  Verifying word remove add:

    No occurrences

Checking class Session:

  Verifying word remove add:

    No occurrences

Checking class Operation:

  Verifying word remove add:

    No occurrences

Checking class RangeSlicer:

  Verifying word remove add:

    No occurrences

Checking class Stress:

  Verifying word remove add:

    No occurrences

Checking class CqlInserter:

  Verifying word remove add:

    No occurrences

Checking class CqlReader:

  Verifying word remove add:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word remove add:

    No occurrences

Checking class Inserter:

  Verifying word remove add:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word remove add:

    No occurrences

Checking class CounterGetter:

  Verifying word remove add:

    No occurrences

Checking class CounterAdder:

  Verifying word remove add:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word remove add:

    No occurrences

Checking class StressAction$1:

  Verifying word remove add:

    No occurrences

Checking class StressAction$Producer:

  Verifying word remove add:

    No occurrences

Checking class Reader:

  Verifying word remove add:

    No occurrences

Checking class Uninterruptibles:

  Verifying word remove add:

    No occurrences

Checking class StressStatistics:

  Verifying word remove add:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word remove add:

    No occurrences

Checking class RateLimiter:

  Verifying word remove add:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word remove add:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word remove add:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word remove add:

    No occurrences

Checking class Stress$Operations:

  Verifying word remove add:

    No occurrences

Checking class Timer:

  Verifying word remove add:

    No occurrences

Checking class MultiGetter:

  Verifying word remove add:

    No occurrences

Checking class Snapshot:

  Verifying word remove add:

    No occurrences

Checking class SyntaxException:

  Verifying word remove add:

    No occurrences

Checking class IndexType:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word remove add:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word remove add:

    No occurrences

Checking class EncryptionOptions:

  Verifying word remove add:

    No occurrences

Checking class ITransportFactory:

  Verifying word remove add:

    No occurrences

Checking class CassandraClient:

  Verifying word remove add:

    No occurrences

Checking class SimpleClient:

  Verifying word remove add:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage:

  Verifying word remove add:

    No occurrences

Checking class ColumnDef:

  Verifying word remove add:

    No occurrences

Checking class CFMetaData:

  Verifying word remove add:

    No occurrences

Checking class Metrics:

  Verifying word remove add:

    No occurrences

Checking class TypeParser:

  Verifying word remove add:

    No occurrences

Checking class CfDef:

  Verifying word remove add:

    No occurrences

Checking class TTransport:

  Verifying word remove add:

    No occurrences

Checking class StringUtils:

  Verifying word remove add:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word remove add:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word remove add:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word remove add:

    No occurrences

Checking class AbstractType:

  Verifying word remove add:

    No occurrences

Checking class Joiner:

  Verifying word remove add:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word remove add:

    No occurrences

Checking class ConfigurationException:

  Verifying word remove add:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word remove add:

    No occurrences

Checking class InvalidRequestException:

  Verifying word remove add:

    No occurrences

Checking class KsDef:

  Verifying word remove add:

    No occurrences

Checking class UTF8Type:

  Verifying word remove add:

    No occurrences

Checking class TimeUUIDType:

  Verifying word remove add:

    No occurrences

Checking class AsciiType:

  Verifying word remove add:

    No occurrences

Checking class Document:

  Verifying word remove add:

    No occurrences

Checking class Element:

  Verifying word remove add:

    No occurrences

Checking class Node:

  Verifying word remove add:

    No occurrences

Checking class NodeList:

  Verifying word remove add:

    No occurrences

Checking class Text:

  Verifying word remove add:

    No occurrences

Checking class KeyRange:

  Verifying word remove add:

    No occurrences

Checking class SliceRange:

  Verifying word remove add:

    No occurrences

Checking class TimerContext:

  Verifying word remove add:

    No occurrences

Checking class ColumnParent:

  Verifying word remove add:

    No occurrences

Checking class SlicePredicate:

  Verifying word remove add:

    No occurrences

Checking class Option:

  Verifying word remove add:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word remove add:

    No occurrences

Checking class CQLOperation:

  Verifying word remove add:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word remove add:

    No occurrences

Checking class UUIDGen:

  Verifying word remove add:

    No occurrences

Checking class ResultSet:

  Verifying word remove add:

    No occurrences

Checking class CqlRow:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word remove add:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word remove add:

    No occurrences

Checking class Column:

  Verifying word remove add:

    No occurrences

Checking class FBUtilities:

  Verifying word remove add:

    No occurrences

Checking class Mutation:

  Verifying word remove add:

    No occurrences

Checking class SuperColumn:

  Verifying word remove add:

    No occurrences

Checking class IndexOperator:

  Verifying word remove add:

    No occurrences

Checking class IndexExpression:

  Verifying word remove add:

    No occurrences

Checking class IndexClause:

  Verifying word remove add:

    No occurrences

Checking class KeySlice:

  Verifying word remove add:

    No occurrences

Checking class Cassandra$Client:

  Verifying word remove add:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word remove add:

    No occurrences

Checking class CounterColumn:

  Verifying word remove add:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word remove add:

    No occurrences

Checking class Operation$1:

  Verifying word remove add:

    No occurrences

Checking class Lists:

  Verifying word remove add:

    No occurrences

Checking class MD5Digest:

  Verifying word remove add:

    No occurrences

Checking class Hex:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word remove add:

    No occurrences

Checking class Message$Response:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word remove add:

    No occurrences

Checking class Message$Type:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$1:

  Verifying word remove add:

    No occurrences

Checking class Message:

  Verifying word remove add:

    No occurrences

Checking class InvalidRequestException:

  Verifying word remove add:

    No occurrences

Checking class Logger:

  Verifying word remove add:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word remove add:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word remove add:

    No occurrences

Checking class ColumnDefinition:

  Verifying word remove add:

    No occurrences

Checking class CompressionParameters:

  Verifying word remove add:

    No occurrences

Checking class CFDefinition:

  Verifying word remove add:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word remove add:

    No occurrences

Checking class Descriptor$Version:

  Verifying word remove add:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word remove add:

    No occurrences

Checking class RowMutation:

  Verifying word remove add:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word remove add:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word remove add:

    No occurrences

Checking class Row:

  Verifying word remove add:

    No occurrences

Checking class TriggerDefinition:

  Verifying word remove add:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word remove add:

    No occurrences

Checking class CompositeType:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstone:

  Verifying word remove add:

    No occurrences

Checking class ColumnSerializer:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndex:

  Verifying word remove add:

    No occurrences

Checking class Iterables:

  Verifying word remove add:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word remove add:

    No occurrences

Checking class CFMetaData$2:

  Verifying word remove add:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word remove add:

    No occurrences

Checking class CQLStatement:

  Verifying word remove add:

    No occurrences

Checking class SuperColumns:

  Verifying word remove add:

    No occurrences

Checking class ArrayUtils:

  Verifying word remove add:

    No occurrences

Checking class CFMetaData$1:

  Verifying word remove add:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word remove add:

    No occurrences

Checking class RequestValidationException:

  Verifying word remove add:

    No occurrences

Checking class DeletedColumn:

  Verifying word remove add:

    No occurrences

Checking class BytesType:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamily:

  Verifying word remove add:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word remove add:

    No occurrences

Checking class OnDiskAtom:

  Verifying word remove add:

    No occurrences

Checking class CreateTableStatement:

  Verifying word remove add:

    No occurrences

Checking class QueryProcessor:

  Verifying word remove add:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word remove add:

    No occurrences

Checking class CounterColumnType:

  Verifying word remove add:

    No occurrences

Checking class Descriptor:

  Verifying word remove add:

    No occurrences

Checking class Schema:

  Verifying word remove add:

    No occurrences

Checking class ICompressor:

  Verifying word remove add:

    No occurrences

Checking class MapDifference:

  Verifying word remove add:

    No occurrences

Checking class UntypedResultSet:

  Verifying word remove add:

    No occurrences

Checking class SystemKeyspace:

  Verifying word remove add:

    No occurrences

Checking class ParsedStatement:

  Verifying word remove add:

    No occurrences

Checking class ToStringBuilder:

  Verifying word remove add:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word remove add:

    No occurrences

Checking class Maps:

  Verifying word remove add:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word remove add:

    No occurrences

Checking class LoggerFactory:

  Verifying word remove add:

    No occurrences

Checking class MarshalException:

  Verifying word remove add:

    No occurrences

Checking class EqualsBuilder:

  Verifying word remove add:

    No occurrences

Checking class LongType:

  Verifying word remove add:

    No occurrences

Checking class LZ4Compressor:

  Verifying word remove add:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word remove add:

    No occurrences

Checking class Column:

  Verifying word remove add:

    No occurrences

Checking class CollectionType:

  Verifying word remove add:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word remove add:

    No occurrences

Checking class FileUtils:

  Verifying word remove add:

    No occurrences

Checking class FileDataInput:

  Verifying word remove add:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word remove add:

    No occurrences

Checking class TFramedTransport:

  Verifying word remove add:

    No occurrences

Checking class TSocket:

  Verifying word remove add:

    No occurrences

Checking class CQL3Type:

  Verifying word remove add:

    No occurrences

Checking class TypeSerializer:

  Verifying word remove add:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word remove add:

    No occurrences

Checking class IndexHelper:

  Verifying word remove add:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word remove add:

    No occurrences

Checking class ColumnSlice:

  Verifying word remove add:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word remove add:

    No occurrences

Checking class AbstractType$6:

  Verifying word remove add:

    No occurrences

Checking class AbstractType$4:

  Verifying word remove add:

    No occurrences

Checking class AbstractType$5:

  Verifying word remove add:

    No occurrences

Checking class AbstractType$3:

  Verifying word remove add:

    No occurrences

Checking class ReversedType:

  Verifying word remove add:

    No occurrences

Checking class AbstractType$2:

  Verifying word remove add:

    No occurrences

Checking class AbstractType$1:

  Verifying word remove add:

    No occurrences

Checking class UnavailableException:

  Verifying word remove add:

    No occurrences

Checking class Keyspace:

  Verifying word remove add:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word remove add:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word remove add:

    No occurrences

Checking class ProtocolException:

  Verifying word remove add:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word remove add:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word remove add:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word remove add:

    No occurrences

Checking class Connection$Tracker:

  Verifying word remove add:

    No occurrences

Checking class Connection:

  Verifying word remove add:

    No occurrences

Checking class ClientBootstrap:

  Verifying word remove add:

    No occurrences

Checking class Channel:

  Verifying word remove add:

    No occurrences

Checking class ChannelFuture:

  Verifying word remove add:

    No occurrences

Checking class Connection$Factory:

  Verifying word remove add:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word remove add:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word remove add:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word remove add:

    No occurrences

Checking class Frame$Compressor:

  Verifying word remove add:

    No occurrences

Checking class Frame$Encoder:

  Verifying word remove add:

    No occurrences

Checking class Message$Request:

  Verifying word remove add:

    No occurrences

Checking class SimpleClient$1:

  Verifying word remove add:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word remove add:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word remove add:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word remove add:

    No occurrences

Checking class FrameCompressor:

  Verifying word remove add:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word remove add:

    No occurrences

Checking class ErrorMessage:

  Verifying word remove add:

    No occurrences

Checking class CredentialsMessage:

  Verifying word remove add:

    No occurrences

Checking class StartupMessage:

  Verifying word remove add:

    No occurrences

Checking class PrepareMessage:

  Verifying word remove add:

    No occurrences

Checking class QueryMessage:

  Verifying word remove add:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word remove add:

    No occurrences

Checking class Frame:

  Verifying word remove add:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word remove add:

    No occurrences

Checking class TransportException:

  Verifying word remove add:

    No occurrences

Checking class QueryOptions:

  Verifying word remove add:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word remove add:

    No occurrences

Checking class ExecuteMessage:

  Verifying word remove add:

    No occurrences

Checking class ExceptionCode:

  Verifying word remove add:

    No occurrences

Checking class UTF8Serializer:

  Verifying word remove add:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word remove add:

    No occurrences

Checking class TimestampSerializer:

  Verifying word remove add:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word remove add:

    No occurrences

Checking class AsciiSerializer:

  Verifying word remove add:

    No occurrences

Checking class DOMException:

  Verifying word remove add:

    No occurrences

Checking class Attr:

  Verifying word remove add:

    No occurrences

Checking class TypeInfo:

  Verifying word remove add:

    No occurrences

Checking class DocumentType:

  Verifying word remove add:

    No occurrences

Checking class DOMImplementation:

  Verifying word remove add:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word remove add:

    No occurrences

Checking class DOMConfiguration:

  Verifying word remove add:

    No occurrences

Checking class NamedNodeMap:

  Verifying word remove add:

    No occurrences

Checking class UserDataHandler:

  Verifying word remove add:

    No occurrences

Checking class CharacterData:

  Verifying word remove add:

    No occurrences

Checking class CQLOperation$1:

  Verifying word remove add:

    No occurrences

Checking class CQLOperation$2:

  Verifying word remove add:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word remove add:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word remove add:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word remove add:

    No occurrences

Checking class ColumnSpecification:

  Verifying word remove add:

    No occurrences

Checking class CqlMetadata:

  Verifying word remove add:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word remove add:

    No occurrences

Checking class ObjectMapper:

  Verifying word remove add:

    No occurrences

Checking class Pair:

  Verifying word remove add:

    No occurrences

Checking class TSerializer:

  Verifying word remove add:

    No occurrences

Checking class TDeserializer:

  Verifying word remove add:

    No occurrences

Checking class Range:

  Verifying word remove add:

    No occurrences

Checking class IPartitioner:

  Verifying word remove add:

    No occurrences

Checking class IAllocator:

  Verifying word remove add:

    No occurrences

Checking class IAuthorizer:

  Verifying word remove add:

    No occurrences

Checking class IAuthenticator:

  Verifying word remove add:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word remove add:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word remove add:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word remove add:

    No occurrences

Checking class JsonFactory:

  Verifying word remove add:

    No occurrences

Checking class RingPosition:

  Verifying word remove add:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word remove add:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word remove add:

    No occurrences

Checking class FBUtilities$2:

  Verifying word remove add:

    No occurrences

Checking class FBUtilities$1:

  Verifying word remove add:

    No occurrences

Checking class FBUtilities$3:

  Verifying word remove add:

    No occurrences

Checking class Token:

  Verifying word remove add:

    No occurrences

Checking class FastByteComparisons:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement:

  Verifying word remove add:

    No occurrences

Checking class Message$Direction:

  Verifying word remove add:

    No occurrences

Checking class CBCodec:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word remove add:

    No occurrences

Checking class ReadyMessage:

  Verifying word remove add:

    No occurrences

Checking class SupportedMessage:

  Verifying word remove add:

    No occurrences

Checking class AuthResponse:

  Verifying word remove add:

    No occurrences

Checking class BatchMessage:

  Verifying word remove add:

    No occurrences

Checking class AuthChallenge:

  Verifying word remove add:

    No occurrences

Checking class RegisterMessage:

  Verifying word remove add:

    No occurrences

Checking class EventMessage:

  Verifying word remove add:

    No occurrences

Checking class AuthSuccess:

  Verifying word remove add:

    No occurrences

Checking class OptionsMessage:

  Verifying word remove add:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word remove add:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word remove add:

    No occurrences

Checking class ChannelBuffer:

  Verifying word remove add:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word remove add:

    No occurrences

Checking class ImmutableList:

  Verifying word remove add:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word remove add:

    No occurrences

Checking class CompositeType$1:

  Verifying word remove add:

    No occurrences

Checking class Interval:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word remove add:

    No occurrences

Checking class DeletionTime:

  Verifying word remove add:

    No occurrences

Checking class TypeSizes:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word remove add:

    No occurrences

Checking class ISerializer:

  Verifying word remove add:

    No occurrences

Checking class Relation$Type:

  Verifying word remove add:

    No occurrences

Checking class Relation:

  Verifying word remove add:

    No occurrences

Checking class ExpiringColumn:

  Verifying word remove add:

    No occurrences

Checking class CounterColumn:

  Verifying word remove add:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word remove add:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word remove add:

    No occurrences

Checking class DecoratedKey:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word remove add:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word remove add:

    No occurrences

Checking class CompositesIndex:

  Verifying word remove add:

    No occurrences

Checking class LocalToken:

  Verifying word remove add:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word remove add:

    No occurrences

Checking class StorageService:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager:

  Verifying word remove add:

    No occurrences

Checking class KeysIndex:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word remove add:

    No occurrences

Checking class BytesSerializer:

  Verifying word remove add:

    No occurrences

Checking class ImmutableMap:

  Verifying word remove add:

    No occurrences

Checking class UnauthorizedException:

  Verifying word remove add:

    No occurrences

Checking class RequestExecutionException:

  Verifying word remove add:

    No occurrences

Checking class ClientState:

  Verifying word remove add:

    No occurrences

Checking class QueryState:

  Verifying word remove add:

    No occurrences

Checking class ImmutableSet:

  Verifying word remove add:

    No occurrences

Checking class Sets$SetView:

  Verifying word remove add:

    No occurrences

Checking class Sets:

  Verifying word remove add:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word remove add:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word remove add:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word remove add:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word remove add:

    No occurrences

Checking class DeletionInfo:

  Verifying word remove add:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word remove add:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word remove add:

    No occurrences

Checking class TriggerDef:

  Verifying word remove add:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word remove add:

    No occurrences

Checking class Objects:

  Verifying word remove add:

    No occurrences

Checking class CassandraException:

  Verifying word remove add:

    No occurrences

Checking class Allocator:

  Verifying word remove add:

    No occurrences

Checking class HeapAllocator:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word remove add:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word remove add:

    No occurrences

Checking class ColumnStats:

  Verifying word remove add:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word remove add:

    No occurrences

Checking class StreamingHistogram:

  Verifying word remove add:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word remove add:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word remove add:

    No occurrences

Checking class Functions:

  Verifying word remove add:

    No occurrences

Checking class UnsortedColumns:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word remove add:

    No occurrences

Checking class Memtable:

  Verifying word remove add:

    No occurrences

Checking class CompactionController:

  Verifying word remove add:

    No occurrences

Checking class DataTracker:

  Verifying word remove add:

    No occurrences

Checking class ICompactionScanner:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word remove add:

    No occurrences

Checking class Component:

  Verifying word remove add:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word remove add:

    No occurrences

Checking class CompactionTask:

  Verifying word remove add:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word remove add:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word remove add:

    No occurrences

Checking class CFPropDefs:

  Verifying word remove add:

    No occurrences

Checking class CFName:

  Verifying word remove add:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word remove add:

    No occurrences

Checking class CreateTableStatement$1:

  Verifying word remove add:

    No occurrences

Checking class Permission:

  Verifying word remove add:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word remove add:

    No occurrences

Checking class MigrationManager:

  Verifying word remove add:

    No occurrences

Checking class QueryHandler:

  Verifying word remove add:

    No occurrences

Checking class SemanticVersion:

  Verifying word remove add:

    No occurrences

Checking class MemoryMeter:

  Verifying word remove add:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement:

  Verifying word remove add:

    No occurrences

Checking class BatchQueryOptions:

  Verifying word remove add:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word remove add:

    No occurrences

Checking class Tracing:

  Verifying word remove add:

    No occurrences

Checking class CFStatement:

  Verifying word remove add:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word remove add:

    No occurrences

Checking class CqlParser:

  Verifying word remove add:

    No occurrences

Checking class TokenStream:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer:

  Verifying word remove add:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word remove add:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word remove add:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word remove add:

    No occurrences

Checking class CharStream:

  Verifying word remove add:

    No occurrences

Checking class ThriftClientState:

  Verifying word remove add:

    No occurrences

Checking class CommonTokenStream:

  Verifying word remove add:

    No occurrences

Checking class INotificationConsumer:

  Verifying word remove add:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word remove add:

    No occurrences

Checking class Multimap:

  Verifying word remove add:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word remove add:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word remove add:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word remove add:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word remove add:

    No occurrences

Checking class OperationType:

  Verifying word remove add:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word remove add:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word remove add:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word remove add:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word remove add:

    No occurrences

Checking class LongSerializer:

  Verifying word remove add:

    No occurrences

Checking class CounterSerializer:

  Verifying word remove add:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word remove add:

    No occurrences

Checking class KSMetaData:

  Verifying word remove add:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word remove add:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word remove add:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word remove add:

    No occurrences

Checking class InetAddressType:

  Verifying word remove add:

    No occurrences

Checking class Int32Type:

  Verifying word remove add:

    No occurrences

Checking class TimestampType:

  Verifying word remove add:

    No occurrences

Checking class UUIDType:

  Verifying word remove add:

    No occurrences

Checking class ListType:

  Verifying word remove add:

    No occurrences

Checking class DoubleType:

  Verifying word remove add:

    No occurrences

Checking class MapType:

  Verifying word remove add:

    No occurrences

Checking class BooleanType:

  Verifying word remove add:

    No occurrences

Checking class SetType:

  Verifying word remove add:

    No occurrences

Checking class Row$RowSerializer:

  Verifying word remove add:

    No occurrences

Checking class ReplayPosition:

  Verifying word remove add:

    No occurrences

Checking class SetMultimap:

  Verifying word remove add:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word remove add:

    No occurrences

Checking class CounterId:

  Verifying word remove add:

    No occurrences

Checking class PaxosState:

  Verifying word remove add:

    No occurrences

Checking class Commit:

  Verifying word remove add:

    No occurrences

Checking class RestorableMeter:

  Verifying word remove add:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word remove add:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word remove add:

    No occurrences

Checking class AbstractBounds:

  Verifying word remove add:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word remove add:

    No occurrences

Checking class QueryFilter:

  Verifying word remove add:

    No occurrences

Checking class Token$KeyBound:

  Verifying word remove add:

    No occurrences

Checking class HashMultimap:

  Verifying word remove add:

    No occurrences

Checking class EmptyColumns:

  Verifying word remove add:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word remove add:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word remove add:

    No occurrences

Checking class DefsTables:

  Verifying word remove add:

    No occurrences

Checking class SystemKeyspace$1:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word remove add:

    No occurrences

Checking class VariableSpecifications:

  Verifying word remove add:

    No occurrences

Checking class IMutation:

  Verifying word remove add:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word remove add:

    No occurrences

Checking class MessageOut:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word remove add:

    No occurrences

Checking class MessagingService:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStoreMBean:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word remove add:

    No occurrences

Checking class DefaultInteger:

  Verifying word remove add:

    No occurrences

Checking class Directories:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndexManager$Updater:

  Verifying word remove add:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word remove add:

    No occurrences

Checking class DataTracker$View:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word remove add:

    No occurrences

Checking class DataRange:

  Verifying word remove add:

    No occurrences

Checking class ExtendedFilter:

  Verifying word remove add:

    No occurrences

Checking class RowCacheKey:

  Verifying word remove add:

    No occurrences

Checking class CacheService:

  Verifying word remove add:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word remove add:

    No occurrences

Checking class StreamLockfile:

  Verifying word remove add:

    No occurrences

Checking class CollationController:

  Verifying word remove add:

    No occurrences

Checking class SSTable:

  Verifying word remove add:

    No occurrences

Checking class KeyCacheKey:

  Verifying word remove add:

    No occurrences

Checking class SSTableMetadata:

  Verifying word remove add:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word remove add:

    No occurrences

Checking class Histogram:

  Verifying word remove add:

    No occurrences

Checking class Counter:

  Verifying word remove add:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word remove add:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word remove add:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word remove add:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word remove add:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word remove add:

    No occurrences

Checking class Futures:

  Verifying word remove add:

    No occurrences

Checking class FSReadError:

  Verifying word remove add:

    No occurrences

Checking class CompressionMetadata:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word remove add:

    No occurrences

Checking class DataRange$Paging:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word remove add:

    No occurrences

Checking class LocalPartitioner:

  Verifying word remove add:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word remove add:

    No occurrences

Checking class RowIndexEntry:

  Verifying word remove add:

    No occurrences

Checking class LatencyMetrics:

  Verifying word remove add:

    No occurrences

Checking class RowPosition:

  Verifying word remove add:

    No occurrences

Checking class AutoSavingCache:

  Verifying word remove add:

    No occurrences

Checking class SSTableWriter:

  Verifying word remove add:

    No occurrences

Checking class CommitLog:

  Verifying word remove add:

    No occurrences

Checking class Gauge:

  Verifying word remove add:

    No occurrences

Checking class SeedProvider:

  Verifying word remove add:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word remove add:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word remove add:

    No occurrences

Checking class Config:

  Verifying word remove add:

    No occurrences

Checking class IRequestScheduler:

  Verifying word remove add:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word remove add:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word remove add:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word remove add:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word remove add:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word remove add:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word remove add:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word remove add:

    No occurrences

Checking class FSWriteError:

  Verifying word remove add:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word remove add:

    No occurrences

Checking class NoScheduler:

  Verifying word remove add:

    No occurrences

Checking class Longs:

  Verifying word remove add:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word remove add:

    No occurrences

Checking class SeedProviderDef:

  Verifying word remove add:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word remove add:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word remove add:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word remove add:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word remove add:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word remove add:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word remove add:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word remove add:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word remove add:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word remove add:

    No occurrences

Checking class DateType:

  Verifying word remove add:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word remove add:

    No occurrences

Checking class CFDefinition$2:

  Verifying word remove add:

    No occurrences

Checking class CFDefinition$1:

  Verifying word remove add:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word remove add:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word remove add:

    No occurrences

Checking class LZ4Compressor:

  Verifying word remove add:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word remove add:

    No occurrences

Checking class LZ4Factory:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word remove add:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word remove add:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word remove add:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word remove add:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word remove add:

    No occurrences

Checking class Column$1:

  Verifying word remove add:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word remove add:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word remove add:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word remove add:

    No occurrences

Checking class FSError:

  Verifying word remove add:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word remove add:

    No occurrences

Checking class FileUtils$2:

  Verifying word remove add:

    No occurrences

Checking class FileUtils$1:

  Verifying word remove add:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word remove add:

    No occurrences

Checking class CQL3Type$1:

  Verifying word remove add:

    No occurrences

Checking class ObjectSizes:

  Verifying word remove add:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word remove add:

    No occurrences

Checking class ColumnCounter:

  Verifying word remove add:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word remove add:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word remove add:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word remove add:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word remove add:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word remove add:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word remove add:

    No occurrences

Checking class TokenMetadata:

  Verifying word remove add:

    No occurrences

Checking class Keyspace$1:

  Verifying word remove add:

    No occurrences

Checking class QueryPagers:

  Verifying word remove add:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word remove add:

    No occurrences

Checking class WriteType:

  Verifying word remove add:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word remove add:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word remove add:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word remove add:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word remove add:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word remove add:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word remove add:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word remove add:

    No occurrences

Checking class FrameCompressor$LZ4Compressor:

  Verifying word remove add:

    No occurrences

Checking class ChannelPipeline:

  Verifying word remove add:

    No occurrences

Checking class Frame$Decoder:

  Verifying word remove add:

    No occurrences

Checking class Channels:

  Verifying word remove add:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word remove add:

    No occurrences

Checking class ServerError:

  Verifying word remove add:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word remove add:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word remove add:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word remove add:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word remove add:

    No occurrences

Checking class Frame$Header:

  Verifying word remove add:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word remove add:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word remove add:

    No occurrences

Checking class CBUtil:

  Verifying word remove add:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word remove add:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word remove add:

    No occurrences

Checking class AuthenticationException:

  Verifying word remove add:

    No occurrences

Checking class ChannelBuffers:

  Verifying word remove add:

    No occurrences

Checking class StartupMessage$1:

  Verifying word remove add:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word remove add:

    No occurrences

Checking class QueryMessage$1:

  Verifying word remove add:

    No occurrences

Checking class Snappy:

  Verifying word remove add:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word remove add:

    No occurrences

Checking class PagingState:

  Verifying word remove add:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word remove add:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word remove add:

    No occurrences

Checking class MessageEvent:

  Verifying word remove add:

    No occurrences

Checking class ExceptionEvent:

  Verifying word remove add:

    No occurrences

Checking class SslHandler:

  Verifying word remove add:

    No occurrences

Checking class SSLFactory:

  Verifying word remove add:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word remove add:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word remove add:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word remove add:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word remove add:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word remove add:

    No occurrences

Checking class FloatType:

  Verifying word remove add:

    No occurrences

Checking class DecimalType:

  Verifying word remove add:

    No occurrences

Checking class IntegerType:

  Verifying word remove add:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word remove add:

    No occurrences

Checking class DateUtils:

  Verifying word remove add:

    No occurrences

Checking class UUIDSerializer:

  Verifying word remove add:

    No occurrences

Checking class DOMStringList:

  Verifying word remove add:

    No occurrences

Checking class ThriftConversion:

  Verifying word remove add:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word remove add:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word remove add:

    No occurrences

Checking class IResource:

  Verifying word remove add:

    No occurrences

Checking class IAsyncCallback:

  Verifying word remove add:

    No occurrences

Checking class MessageIn:

  Verifying word remove add:

    No occurrences

Checking class AbstractIterator:

  Verifying word remove add:

    No occurrences

Checking class Bounds:

  Verifying word remove add:

    No occurrences

Checking class Range$1:

  Verifying word remove add:

    No occurrences

Checking class ObjectUtils:

  Verifying word remove add:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word remove add:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word remove add:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word remove add:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word remove add:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word remove add:

    No occurrences

Checking class Selection:

  Verifying word remove add:

    No occurrences

Checking class Term:

  Verifying word remove add:

    No occurrences

Checking class Restriction:

  Verifying word remove add:

    No occurrences

Checking class Restriction$Slice:

  Verifying word remove add:

    No occurrences

Checking class QueryPager:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word remove add:

    No occurrences

Checking class Bound:

  Verifying word remove add:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word remove add:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word remove add:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word remove add:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word remove add:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word remove add:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word remove add:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word remove add:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word remove add:

    No occurrences

Checking class ReadCommand:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word remove add:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word remove add:

    No occurrences

Checking class ExcludingBounds:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$1:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$2:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy:

  Verifying word remove add:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word remove add:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word remove add:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word remove add:

    No occurrences

Checking class ServerConnection:

  Verifying word remove add:

    No occurrences

Checking class AuthResponse$1:

  Verifying word remove add:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word remove add:

    No occurrences

Checking class Attributes:

  Verifying word remove add:

    No occurrences

Checking class ModificationStatement:

  Verifying word remove add:

    No occurrences

Checking class BatchMessage$1:

  Verifying word remove add:

    No occurrences

Checking class BatchMessage$2:

  Verifying word remove add:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word remove add:

    No occurrences

Checking class Event$Type:

  Verifying word remove add:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word remove add:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word remove add:

    No occurrences

Checking class Server:

  Verifying word remove add:

    No occurrences

Checking class Event:

  Verifying word remove add:

    No occurrences

Checking class EventMessage$1:

  Verifying word remove add:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word remove add:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word remove add:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word remove add:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word remove add:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word remove add:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word remove add:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word remove add:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word remove add:

    No occurrences

Checking class Relation$1:

  Verifying word remove add:

    No occurrences

Checking class CounterContext:

  Verifying word remove add:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word remove add:

    No occurrences

Checking class IContext:

  Verifying word remove add:

    No occurrences

Checking class IMergeIterator:

  Verifying word remove add:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word remove add:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word remove add:

    No occurrences

Checking class KeyIterator:

  Verifying word remove add:

    No occurrences

Checking class MergeIterator:

  Verifying word remove add:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word remove add:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word remove add:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word remove add:

    No occurrences

Checking class CompositesSearcher:

  Verifying word remove add:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word remove add:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word remove add:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word remove add:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word remove add:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word remove add:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word remove add:

    No occurrences

Checking class CassandraDaemon:

  Verifying word remove add:

    No occurrences

Checking class StorageService$Mode:

  Verifying word remove add:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word remove add:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word remove add:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word remove add:

    No occurrences

Checking class EndpointState:

  Verifying word remove add:

    No occurrences

Checking class ApplicationState:

  Verifying word remove add:

    No occurrences

Checking class VersionedValue:

  Verifying word remove add:

    No occurrences

Checking class RepairFuture:

  Verifying word remove add:

    No occurrences

Checking class StreamResultFuture:

  Verifying word remove add:

    No occurrences

Checking class SSTableLoader:

  Verifying word remove add:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class StreamManager:

  Verifying word remove add:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word remove add:

    No occurrences

Checking class TokenSerializer:

  Verifying word remove add:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class Iterators:

  Verifying word remove add:

    No occurrences

Checking class FailureDetector:

  Verifying word remove add:

    No occurrences

Checking class StorageService$2:

  Verifying word remove add:

    No occurrences

Checking class StorageService$1:

  Verifying word remove add:

    No occurrences

Checking class StorageService$4:

  Verifying word remove add:

    No occurrences

Checking class StorageService$3:

  Verifying word remove add:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class StorageService$8:

  Verifying word remove add:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word remove add:

    No occurrences

Checking class StorageService$7:

  Verifying word remove add:

    No occurrences

Checking class StorageService$6:

  Verifying word remove add:

    No occurrences

Checking class StorageService$5:

  Verifying word remove add:

    No occurrences

Checking class StreamPlan:

  Verifying word remove add:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class ActiveRepairService:

  Verifying word remove add:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class TokenRange:

  Verifying word remove add:

    No occurrences

Checking class StorageMetrics:

  Verifying word remove add:

    No occurrences

Checking class RangeStreamer:

  Verifying word remove add:

    No occurrences

Checking class Gossiper:

  Verifying word remove add:

    No occurrences

Checking class LoadBroadcaster:

  Verifying word remove add:

    No occurrences

Checking class Auth:

  Verifying word remove add:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word remove add:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class OutputHandler:

  Verifying word remove add:

    No occurrences

Checking class BiMultiValMap:

  Verifying word remove add:

    No occurrences

Checking class StageManager:

  Verifying word remove add:

    No occurrences

Checking class IVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class BootStrapper:

  Verifying word remove add:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word remove add:

    No occurrences

Checking class Level:

  Verifying word remove add:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word remove add:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word remove add:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class IFailureDetector:

  Verifying word remove add:

    No occurrences

Checking class Logger:

  Verifying word remove add:

    No occurrences

Checking class Collections2:

  Verifying word remove add:

    No occurrences

Checking class LocalStrategy:

  Verifying word remove add:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word remove add:

    No occurrences

Checking class EndpointDetails:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word remove add:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class Stage:

  Verifying word remove add:

    No occurrences

Checking class BatchlogManager:

  Verifying word remove add:

    No occurrences

Checking class LogManager:

  Verifying word remove add:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word remove add:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word remove add:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word remove add:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word remove add:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word remove add:

    No occurrences

Checking class SegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class IndexSummary:

  Verifying word remove add:

    No occurrences

Checking class IFilter:

  Verifying word remove add:

    No occurrences

Checking class InstrumentingCache:

  Verifying word remove add:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word remove add:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word remove add:

    No occurrences

Checking class SSTableScanner:

  Verifying word remove add:

    No occurrences

Checking class RandomAccessReader:

  Verifying word remove add:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word remove add:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word remove add:

    No occurrences

Checking class CLibrary:

  Verifying word remove add:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word remove add:

    No occurrences

Checking class FilterFactory:

  Verifying word remove add:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word remove add:

    No occurrences

Checking class ICompressedFile:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$2:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$1:

  Verifying word remove add:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$3:

  Verifying word remove add:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word remove add:

    No occurrences

Checking class ThrottledReader:

  Verifying word remove add:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word remove add:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word remove add:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word remove add:

    No occurrences

Checking class CompactionMetrics:

  Verifying word remove add:

    No occurrences

Checking class Multiset:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word remove add:

    No occurrences

Checking class Validator:

  Verifying word remove add:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word remove add:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word remove add:

    No occurrences

Checking class CompactionInfo:

  Verifying word remove add:

    No occurrences

Checking class RepairJobDesc:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$10:

  Verifying word remove add:

    No occurrences

Checking class Meter:

  Verifying word remove add:

    No occurrences

Checking class CompactionIterable:

  Verifying word remove add:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word remove add:

    No occurrences

Checking class Throwables:

  Verifying word remove add:

    No occurrences

Checking class Scrubber:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$1:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$2:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$3:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$4:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$5:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$6:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$7:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$8:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$9:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word remove add:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word remove add:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word remove add:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word remove add:

    No occurrences

Checking class KeysSearcher:

  Verifying word remove add:

    No occurrences

Checking class LoadingCache:

  Verifying word remove add:

    No occurrences

Checking class DataResource:

  Verifying word remove add:

    No occurrences

Checking class CacheBuilder:

  Verifying word remove add:

    No occurrences

Checking class CacheLoader:

  Verifying word remove add:

    No occurrences

Checking class ThriftValidation:

  Verifying word remove add:

    No occurrences

Checking class QueryProcessor:

  Verifying word remove add:

    No occurrences

Checking class ClientState$1:

  Verifying word remove add:

    No occurrences

Checking class Resources:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word remove add:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word remove add:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word remove add:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word remove add:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word remove add:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word remove add:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word remove add:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word remove add:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word remove add:

    No occurrences

Checking class UUIDSerializer:

  Verifying word remove add:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word remove add:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word remove add:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word remove add:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word remove add:

    No occurrences

Checking class PrecompactedRow:

  Verifying word remove add:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word remove add:

    No occurrences

Checking class DataTracker$1:

  Verifying word remove add:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word remove add:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word remove add:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word remove add:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word remove add:

    No occurrences

Checking class Memtable$2:

  Verifying word remove add:

    No occurrences

Checking class Memtable$1:

  Verifying word remove add:

    No occurrences

Checking class Memtable$3:

  Verifying word remove add:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word remove add:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word remove add:

    No occurrences

Checking class Component$Type:

  Verifying word remove add:

    No occurrences

Checking class Component$1:

  Verifying word remove add:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word remove add:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word remove add:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word remove add:

    No occurrences

Checking class Multiset$Entry:

  Verifying word remove add:

    No occurrences

Checking class HashMultiset:

  Verifying word remove add:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word remove add:

    No occurrences

Checking class IMigrationListener:

  Verifying word remove add:

    No occurrences

Checking class MigrationManager$2:

  Verifying word remove add:

    No occurrences

Checking class MigrationManager$1:

  Verifying word remove add:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word remove add:

    No occurrences

Checking class MigrationTask:

  Verifying word remove add:

    No occurrences

Checking class TraceState:

  Verifying word remove add:

    No occurrences

Checking class OverloadedException:

  Verifying word remove add:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word remove add:

    No occurrences

Checking class Tracing$1:

  Verifying word remove add:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word remove add:

    No occurrences

Checking class Tracing$2:

  Verifying word remove add:

    No occurrences

Checking class Parser:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word remove add:

    No occurrences

Checking class BitSet:

  Verifying word remove add:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word remove add:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word remove add:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word remove add:

    No occurrences

Checking class Tuples$Raw:

  Verifying word remove add:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word remove add:

    No occurrences

Checking class Maps$Literal:

  Verifying word remove add:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word remove add:

    No occurrences

Checking class UseStatement:

  Verifying word remove add:

    No occurrences

Checking class RawSelector:

  Verifying word remove add:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word remove add:

    No occurrences

Checking class Attributes$Raw:

  Verifying word remove add:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word remove add:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word remove add:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word remove add:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word remove add:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word remove add:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word remove add:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word remove add:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word remove add:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word remove add:

    No occurrences

Checking class AlterTableStatement:

  Verifying word remove add:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word remove add:

    No occurrences

Checking class DropTableStatement:

  Verifying word remove add:

    No occurrences

Checking class DropIndexStatement:

  Verifying word remove add:

    No occurrences

Checking class TruncateStatement:

  Verifying word remove add:

    No occurrences

Checking class GrantStatement:

  Verifying word remove add:

    No occurrences

Checking class RevokeStatement:

  Verifying word remove add:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word remove add:

    No occurrences

Checking class CreateUserStatement:

  Verifying word remove add:

    No occurrences

Checking class AlterUserStatement:

  Verifying word remove add:

    No occurrences

Checking class DropUserStatement:

  Verifying word remove add:

    No occurrences

Checking class ListUsersStatement:

  Verifying word remove add:

    No occurrences

Checking class UserOptions:

  Verifying word remove add:

    No occurrences

Checking class Constants$Literal:

  Verifying word remove add:

    No occurrences

Checking class Term$Raw:

  Verifying word remove add:

    No occurrences

Checking class Tuples$Literal:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word remove add:

    No occurrences

Checking class Operation$Prepend:

  Verifying word remove add:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word remove add:

    No occurrences

Checking class MismatchedSetException:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word remove add:

    No occurrences

Checking class Maps:

  Verifying word remove add:

    No occurrences

Checking class DeleteStatement:

  Verifying word remove add:

    No occurrences

Checking class Operation$SetValue:

  Verifying word remove add:

    No occurrences

Checking class Token:

  Verifying word remove add:

    No occurrences

Checking class NoViableAltException:

  Verifying word remove add:

    No occurrences

Checking class UpdateStatement:

  Verifying word remove add:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word remove add:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word remove add:

    No occurrences

Checking class TypeCast:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition:

  Verifying word remove add:

    No occurrences

Checking class DFA:

  Verifying word remove add:

    No occurrences

Checking class Sets:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word remove add:

    No occurrences

Checking class Operation$Substraction:

  Verifying word remove add:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word remove add:

    No occurrences

Checking class Operation:

  Verifying word remove add:

    No occurrences

Checking class Constants:

  Verifying word remove add:

    No occurrences

Checking class Tuples:

  Verifying word remove add:

    No occurrences

Checking class Operation$Addition:

  Verifying word remove add:

    No occurrences

Checking class Lists:

  Verifying word remove add:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word remove add:

    No occurrences

Checking class KSPropDefs:

  Verifying word remove add:

    No occurrences

Checking class FunctionCall:

  Verifying word remove add:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word remove add:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word remove add:

    No occurrences

Checking class Operation$SetElement:

  Verifying word remove add:

    No occurrences

Checking class AbstractMarker:

  Verifying word remove add:

    No occurrences

Checking class Lists$Literal:

  Verifying word remove add:

    No occurrences

Checking class Sets$Literal:

  Verifying word remove add:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word remove add:

    No occurrences

Checking class IndexPropDefs:

  Verifying word remove add:

    No occurrences

Checking class Lexer:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word remove add:

    No occurrences

Checking class EarlyExitException:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word remove add:

    No occurrences

Checking class CounterMutation:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement$1:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word remove add:

    No occurrences

Checking class UpdateParameters:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word remove add:

    No occurrences

Checking class CASConditions:

  Verifying word remove add:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word remove add:

    No occurrences

Checking class Ints:

  Verifying word remove add:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word remove add:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word remove add:

    No occurrences

Checking class Ordering:

  Verifying word remove add:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word remove add:

    No occurrences

Checking class ImmutableSortedSet:

  Verifying word remove add:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word remove add:

    No occurrences

Checking class Predicates:

  Verifying word remove add:

    No occurrences

Checking class Doubles:

  Verifying word remove add:

    No occurrences

Checking class SimpleStrategy:

  Verifying word remove add:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word remove add:

    No occurrences

Checking class Int32Serializer:

  Verifying word remove add:

    No occurrences

Checking class ListSerializer:

  Verifying word remove add:

    No occurrences

Checking class DoubleSerializer:

  Verifying word remove add:

    No occurrences

Checking class MapSerializer:

  Verifying word remove add:

    No occurrences

Checking class BooleanSerializer:

  Verifying word remove add:

    No occurrences

Checking class SetSerializer:

  Verifying word remove add:

    No occurrences

Checking class EmptyType:

  Verifying word remove add:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word remove add:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word remove add:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word remove add:

    No occurrences

Checking class QueryFilter$2:

  Verifying word remove add:

    No occurrences

Checking class QueryFilter$1:

  Verifying word remove add:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word remove add:

    No occurrences

Checking class Clock:

  Verifying word remove add:

    No occurrences

Checking class PrepareResponse:

  Verifying word remove add:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word remove add:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word remove add:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word remove add:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word remove add:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word remove add:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word remove add:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word remove add:

    No occurrences

Checking class ExpiringMap:

  Verifying word remove add:

    No occurrences

Checking class SimpleCondition:

  Verifying word remove add:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word remove add:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word remove add:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word remove add:

    No occurrences

Checking class CallbackInfo:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$1:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word remove add:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word remove add:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word remove add:

    No occurrences

Checking class StatusLogger:

  Verifying word remove add:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word remove add:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word remove add:

    No occurrences

Checking class SinkManager:

  Verifying word remove add:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$5:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$4:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$3:

  Verifying word remove add:

    No occurrences

Checking class MessagingService$2:

  Verifying word remove add:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word remove add:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word remove add:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word remove add:

    No occurrences

Checking class CacheMetrics:

  Verifying word remove add:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word remove add:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word remove add:

    No occurrences

Checking class ICache:

  Verifying word remove add:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word remove add:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word remove add:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word remove add:

    No occurrences

Checking class Files:

  Verifying word remove add:

    No occurrences

Checking class SSTable$2:

  Verifying word remove add:

    No occurrences

Checking class SSTable$1:

  Verifying word remove add:

    No occurrences

Checking class CacheKey:

  Verifying word remove add:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word remove add:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word remove add:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word remove add:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word remove add:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word remove add:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word remove add:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word remove add:

    No occurrences

Checking class IntervalTree:

  Verifying word remove add:

    No occurrences

Checking class Memory:

  Verifying word remove add:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word remove add:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word remove add:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word remove add:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word remove add:

    No occurrences

Checking class WrappedRunnable:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word remove add:

    No occurrences

Checking class MetricNameFactory:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word remove add:

    No occurrences

Checking class MetricsRegistry:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word remove add:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word remove add:

    No occurrences

Checking class MetricName:

  Verifying word remove add:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word remove add:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word remove add:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word remove add:

    No occurrences

Checking class ColumnIndex:

  Verifying word remove add:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word remove add:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word remove add:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word remove add:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word remove add:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word remove add:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word remove add:

    No occurrences

Checking class SequentialWriter:

  Verifying word remove add:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word remove add:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word remove add:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word remove add:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word remove add:

    No occurrences

Checking class CommitLogMBean:

  Verifying word remove add:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word remove add:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word remove add:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word remove add:

    No occurrences

Checking class CommitLogSegment:

  Verifying word remove add:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word remove add:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word remove add:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word remove add:

    No occurrences

Checking class BatchCommitLogExecutorService:

  Verifying word remove add:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word remove add:

    No occurrences

Checking class CommitLog$4:

  Verifying word remove add:

    No occurrences

Checking class CommitLog$1:

  Verifying word remove add:

    No occurrences

Checking class CommitLog$3:

  Verifying word remove add:

    No occurrences

Checking class CommitLog$2:

  Verifying word remove add:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word remove add:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word remove add:

    No occurrences

Checking class Directories$FileAction:

  Verifying word remove add:

    No occurrences

Checking class Directories$2:

  Verifying word remove add:

    No occurrences

Checking class Directories$1:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word remove add:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word remove add:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word remove add:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word remove add:

    No occurrences

Checking class PropertyUtils:

  Verifying word remove add:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word remove add:

    No occurrences

Checking class TypeDescription:

  Verifying word remove add:

    No occurrences

Checking class Constructor:

  Verifying word remove add:

    No occurrences

Checking class Yaml:

  Verifying word remove add:

    No occurrences

Checking class NativeAllocator:

  Verifying word remove add:

    No occurrences

Checking class CsvListReader:

  Verifying word remove add:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word remove add:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word remove add:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word remove add:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word remove add:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word remove add:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word remove add:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word remove add:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word remove add:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word remove add:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word remove add:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word remove add:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word remove add:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word remove add:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word remove add:

    No occurrences

Checking class BiMap:

  Verifying word remove add:

    No occurrences

Checking class HashBiMap:

  Verifying word remove add:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word remove add:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word remove add:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word remove add:

    No occurrences

Checking class NamesQueryPager:

  Verifying word remove add:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word remove add:

    No occurrences

Checking class SliceQueryPager:

  Verifying word remove add:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word remove add:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word remove add:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word remove add:

    No occurrences

Checking class QueryPagers$1:

  Verifying word remove add:

    No occurrences

Checking class FrameDecoder:

  Verifying word remove add:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word remove add:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word remove add:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word remove add:

    No occurrences

Checking class TruncateException:

  Verifying word remove add:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word remove add:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word remove add:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word remove add:

    No occurrences

Checking class FloatSerializer:

  Verifying word remove add:

    No occurrences

Checking class DecimalSerializer:

  Verifying word remove add:

    No occurrences

Checking class IntegerSerializer:

  Verifying word remove add:

    No occurrences

Checking class LSResourceResolver:

  Verifying word remove add:

    No occurrences

Checking class UnavailableException:

  Verifying word remove add:

    No occurrences

Checking class TimedOutException:

  Verifying word remove add:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word remove add:

    No occurrences

Checking class OptionCodec:

  Verifying word remove add:

    No occurrences

Checking class DataType:

  Verifying word remove add:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word remove add:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word remove add:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word remove add:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word remove add:

    No occurrences

Checking class Restriction$IN:

  Verifying word remove add:

    No occurrences

Checking class Selection$Selector:

  Verifying word remove add:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word remove add:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word remove add:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word remove add:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word remove add:

    No occurrences

Checking class Functions:

  Verifying word remove add:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word remove add:

    No occurrences

Checking class Function:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word remove add:

    No occurrences

Checking class Term$Terminal:

  Verifying word remove add:

    No occurrences

Checking class Tuples$Value:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word remove add:

    No occurrences

Checking class IReadCommand:

  Verifying word remove add:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word remove add:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word remove add:

    No occurrences

Checking class RowDataResolver:

  Verifying word remove add:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word remove add:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word remove add:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word remove add:

    No occurrences

Checking class Lists$Marker:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word remove add:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word remove add:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word remove add:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word remove add:

    No occurrences

Checking class PrepareCallback:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$8:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$9:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$6:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$7:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$4:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$5:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$2:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$3:

  Verifying word remove add:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$1:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word remove add:

    No occurrences

Checking class ReadCallback:

  Verifying word remove add:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word remove add:

    No occurrences

Checking class DigestMismatchException:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word remove add:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word remove add:

    No occurrences

Checking class IResponseResolver:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word remove add:

    No occurrences

Checking class RowDigestResolver:

  Verifying word remove add:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word remove add:

    No occurrences

Checking class ProposeCallback:

  Verifying word remove add:

    No occurrences

Checking class Truncation:

  Verifying word remove add:

    No occurrences

Checking class TriggerExecutor:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word remove add:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word remove add:

    No occurrences

Checking class ServerConnection$State:

  Verifying word remove add:

    No occurrences

Checking class ServerConnection$1:

  Verifying word remove add:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word remove add:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word remove add:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word remove add:

    No occurrences

Checking class ChannelGroup:

  Verifying word remove add:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word remove add:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word remove add:

    No occurrences

Checking class ExecutionHandler:

  Verifying word remove add:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word remove add:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word remove add:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word remove add:

    No occurrences

Checking class ClientMetrics:

  Verifying word remove add:

    No occurrences

Checking class Server$1:

  Verifying word remove add:

    No occurrences

Checking class Server$2:

  Verifying word remove add:

    No occurrences

Checking class ServerBootstrap:

  Verifying word remove add:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word remove add:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word remove add:

    No occurrences

Checking class Event$1:

  Verifying word remove add:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word remove add:

    No occurrences

Checking class Event$StatusChange:

  Verifying word remove add:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word remove add:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word remove add:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word remove add:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word remove add:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word remove add:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word remove add:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word remove add:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word remove add:

    No occurrences

Checking class StreamEventHandler:

  Verifying word remove add:

    No occurrences

Checking class StreamState:

  Verifying word remove add:

    No occurrences

Checking class StreamEvent:

  Verifying word remove add:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word remove add:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word remove add:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word remove add:

    No occurrences

Checking class StreamSession:

  Verifying word remove add:

    No occurrences

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word remove add:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word remove add:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word remove add:

    No occurrences

Checking class StreamManager$3:

  Verifying word remove add:

    No occurrences

Checking class MoreExecutors:

  Verifying word remove add:

    No occurrences

Checking class StreamManager$1:

  Verifying word remove add:

    No occurrences

Checking class StreamManager$2:

  Verifying word remove add:

    No occurrences

Checking class EchoMessage:

  Verifying word remove add:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word remove add:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word remove add:

    No occurrences

Checking class SnapshotCommand:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word remove add:

    No occurrences

Checking class GossipDigest:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestAck:

  Verifying word remove add:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word remove add:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word remove add:

    No occurrences

Checking class ArrivalWindow:

  Verifying word remove add:

    No occurrences

Checking class HeartBeatState:

  Verifying word remove add:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word remove add:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word remove add:

    No occurrences

Checking class RepairSession:

  Verifying word remove add:

    No occurrences

Checking class RepairMessage:

  Verifying word remove add:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word remove add:

    No occurrences

Checking class SyncComplete:

  Verifying word remove add:

    No occurrences

Checking class ValidationComplete:

  Verifying word remove add:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word remove add:

    No occurrences

Checking class NodePair:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree:

  Verifying word remove add:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word remove add:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word remove add:

    No occurrences

Checking class RangeTransfer:

  Verifying word remove add:

    No occurrences

Checking class ValidationRequest:

  Verifying word remove add:

    No occurrences

Checking class SyncRequest:

  Verifying word remove add:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word remove add:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceReply:

  Verifying word remove add:

    No occurrences

Checking class TruncateResponse:

  Verifying word remove add:

    No occurrences

Checking class GossiperMBean:

  Verifying word remove add:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word remove add:

    No occurrences

Checking class Gossiper$2:

  Verifying word remove add:

    No occurrences

Checking class Gossiper$1:

  Verifying word remove add:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word remove add:

    No occurrences

Checking class Mx4jTool:

  Verifying word remove add:

    No occurrences

Checking class ThriftServer:

  Verifying word remove add:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word remove add:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word remove add:

    No occurrences

Checking class ReporterConfig:

  Verifying word remove add:

    No occurrences

Checking class MeteredFlusher:

  Verifying word remove add:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word remove add:

    No occurrences

Checking class GCInspector:

  Verifying word remove add:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word remove add:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word remove add:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word remove add:

    No occurrences

Checking class Auth$1:

  Verifying word remove add:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word remove add:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word remove add:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word remove add:

    No occurrences

Checking class Multimaps:

  Verifying word remove add:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word remove add:

    No occurrences

Checking class StageManager$1:

  Verifying word remove add:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word remove add:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word remove add:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word remove add:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word remove add:

    No occurrences

Checking class WriteResponse:

  Verifying word remove add:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word remove add:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word remove add:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word remove add:

    No occurrences

Checking class VersionGenerator:

  Verifying word remove add:

    No occurrences

Checking class ReadResponse:

  Verifying word remove add:

    No occurrences

Checking class AbstractFuture:

  Verifying word remove add:

    No occurrences

Checking class ProgressInfo:

  Verifying word remove add:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word remove add:

    No occurrences

Checking class StreamException:

  Verifying word remove add:

    No occurrences

Checking class SessionInfo:

  Verifying word remove add:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word remove add:

    No occurrences

Checking class ConnectionHandler:

  Verifying word remove add:

    No occurrences

Checking class BooleanSerializer:

  Verifying word remove add:

    No occurrences

Checking class Stage$1:

  Verifying word remove add:

    No occurrences

Checking class AtomicDouble:

  Verifying word remove add:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word remove add:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word remove add:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word remove add:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word remove add:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word remove add:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class CorruptBlockException:

  Verifying word remove add:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word remove add:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word remove add:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word remove add:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word remove add:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word remove add:

    No occurrences

Checking class OpenBitSet:

  Verifying word remove add:

    No occurrences

Checking class IBitSet:

  Verifying word remove add:

    No occurrences

Checking class BloomFilter:

  Verifying word remove add:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word remove add:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word remove add:

    No occurrences

Checking class BloomCalculations:

  Verifying word remove add:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word remove add:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word remove add:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word remove add:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word remove add:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word remove add:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word remove add:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word remove add:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word remove add:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word remove add:

    No occurrences

Checking class MemoryInputStream:

  Verifying word remove add:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word remove add:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word remove add:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word remove add:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word remove add:

    No occurrences

Checking class Scrubber$1:

  Verifying word remove add:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word remove add:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word remove add:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word remove add:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word remove add:

    No occurrences

Checking class ColumnPath:

  Verifying word remove add:

    No occurrences

Checking class Deletion:

  Verifying word remove add:

    No occurrences

Checking class PreExecutionHook:

  Verifying word remove add:

    No occurrences

Checking class PostPreparationHook:

  Verifying word remove add:

    No occurrences

Checking class SelectStatement:

  Verifying word remove add:

    No occurrences

Checking class CQLStatement:

  Verifying word remove add:

    No occurrences

Checking class ExecutionContext:

  Verifying word remove add:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word remove add:

    No occurrences

Checking class UpdateStatement:

  Verifying word remove add:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word remove add:

    No occurrences

Checking class Relation:

  Verifying word remove add:

    No occurrences

Checking class DropIndexStatement:

  Verifying word remove add:

    No occurrences

Checking class PreparationContext:

  Verifying word remove add:

    No occurrences

Checking class DeleteStatement:

  Verifying word remove add:

    No occurrences

Checking class RelationType:

  Verifying word remove add:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word remove add:

    No occurrences

Checking class RandomPartitioner:

  Verifying word remove add:

    No occurrences

Checking class CqlParser:

  Verifying word remove add:

    No occurrences

Checking class Term:

  Verifying word remove add:

    No occurrences

Checking class StatementType:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer:

  Verifying word remove add:

    No occurrences

Checking class AbstractModification:

  Verifying word remove add:

    No occurrences

Checking class AlterTableStatement:

  Verifying word remove add:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word remove add:

    No occurrences

Checking class CliUtils:

  Verifying word remove add:

    No occurrences

Checking class BatchStatement:

  Verifying word remove add:

    No occurrences

Checking class DataResource$Level:

  Verifying word remove add:

    No occurrences

Checking class DataResource$1:

  Verifying word remove add:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word remove add:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word remove add:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word remove add:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word remove add:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word remove add:

    No occurrences

Checking class SnapTreeMap:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word remove add:

    No occurrences

Checking class MigrationTask$1:

  Verifying word remove add:

    No occurrences

Checking class Stopwatch:

  Verifying word remove add:

    No occurrences

Checking class FormattingTuple:

  Verifying word remove add:

    No occurrences

Checking class MessageFormatter:

  Verifying word remove add:

    No occurrences

Checking class TraceState$1:

  Verifying word remove add:

    No occurrences

Checking class Lists$Prepender:

  Verifying word remove add:

    No occurrences

Checking class TupleType:

  Verifying word remove add:

    No occurrences

Checking class Tuples$Marker:

  Verifying word remove add:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word remove add:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word remove add:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word remove add:

    No occurrences

Checking class Maps$Setter:

  Verifying word remove add:

    No occurrences

Checking class Maps$Value:

  Verifying word remove add:

    No occurrences

Checking class Maps$Putter:

  Verifying word remove add:

    No occurrences

Checking class Maps$Marker:

  Verifying word remove add:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word remove add:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word remove add:

    No occurrences

Checking class Operation$1:

  Verifying word remove add:

    No occurrences

Checking class Sets$Setter:

  Verifying word remove add:

    No occurrences

Checking class Lists$Setter:

  Verifying word remove add:

    No occurrences

Checking class Constants$Setter:

  Verifying word remove add:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word remove add:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word remove add:

    No occurrences

Checking class AssignementTestable:

  Verifying word remove add:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word remove add:

    No occurrences

Checking class Constants$Value:

  Verifying word remove add:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word remove add:

    No occurrences

Checking class Constants$Deleter:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word remove add:

    No occurrences

Checking class Sets$Discarder:

  Verifying word remove add:

    No occurrences

Checking class Sets$Adder:

  Verifying word remove add:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word remove add:

    No occurrences

Checking class Sets$Value:

  Verifying word remove add:

    No occurrences

Checking class Sets$Marker:

  Verifying word remove add:

    No occurrences

Checking class Constants$Marker:

  Verifying word remove add:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word remove add:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word remove add:

    No occurrences

Checking class PermissionDetails:

  Verifying word remove add:

    No occurrences

Checking class Lists$Discarder:

  Verifying word remove add:

    No occurrences

Checking class Constants$Substracter:

  Verifying word remove add:

    No occurrences

Checking class Constants$Type:

  Verifying word remove add:

    No occurrences

Checking class Constants$2:

  Verifying word remove add:

    No occurrences

Checking class Constants$Adder:

  Verifying word remove add:

    No occurrences

Checking class Constants$1:

  Verifying word remove add:

    No occurrences

Checking class Tuples$InValue:

  Verifying word remove add:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word remove add:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word remove add:

    No occurrences

Checking class Lists$Appender:

  Verifying word remove add:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word remove add:

    No occurrences

Checking class Lists$Value:

  Verifying word remove add:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word remove add:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word remove add:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word remove add:

    No occurrences

Checking class FunctionCall$1:

  Verifying word remove add:

    No occurrences

Checking class ITrigger:

  Verifying word remove add:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word remove add:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word remove add:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word remove add:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word remove add:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word remove add:

    No occurrences

Checking class JsonNode:

  Verifying word remove add:

    No occurrences

Checking class CollectionSerializer:

  Verifying word remove add:

    No occurrences

Checking class EmptySerializer:

  Verifying word remove add:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word remove add:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word remove add:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word remove add:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word remove add:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word remove add:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class IMessageSink:

  Verifying word remove add:

    No occurrences

Checking class IRequestSink:

  Verifying word remove add:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word remove add:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word remove add:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word remove add:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word remove add:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word remove add:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word remove add:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word remove add:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word remove add:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word remove add:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word remove add:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word remove add:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word remove add:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word remove add:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word remove add:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word remove add:

    No occurrences

Checking class SerializingCache:

  Verifying word remove add:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word remove add:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word remove add:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word remove add:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word remove add:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word remove add:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word remove add:

    No occurrences

Checking class IntervalTree$1:

  Verifying word remove add:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word remove add:

    No occurrences

Checking class IntervalTree$2:

  Verifying word remove add:

    No occurrences

Checking class RatioGauge:

  Verifying word remove add:

    No occurrences

Checking class IExecutorMBean:

  Verifying word remove add:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word remove add:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word remove add:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word remove add:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word remove add:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word remove add:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word remove add:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word remove add:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word remove add:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word remove add:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word remove add:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word remove add:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word remove add:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word remove add:

    No occurrences

Checking class CommitLogAllocator$5:

  Verifying word remove add:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word remove add:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word remove add:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word remove add:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word remove add:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word remove add:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word remove add:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word remove add:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word remove add:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word remove add:

    No occurrences

Checking class Strings:

  Verifying word remove add:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word remove add:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word remove add:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word remove add:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word remove add:

    No occurrences

Checking class Property:

  Verifying word remove add:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word remove add:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word remove add:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word remove add:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word remove add:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word remove add:

    No occurrences

Checking class TreeMultimap:

  Verifying word remove add:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word remove add:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word remove add:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word remove add:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word remove add:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word remove add:

    No occurrences

Checking class LSInput:

  Verifying word remove add:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word remove add:

    No occurrences

Checking class DataType$1:

  Verifying word remove add:

    No occurrences

Checking class UnsignedBytes:

  Verifying word remove add:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word remove add:

    No occurrences

Checking class Function$Factory:

  Verifying word remove add:

    No occurrences

Checking class TokenFct:

  Verifying word remove add:

    No occurrences

Checking class UuidFcts:

  Verifying word remove add:

    No occurrences

Checking class AbstractFunction:

  Verifying word remove add:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word remove add:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word remove add:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word remove add:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word remove add:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word remove add:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word remove add:

    No occurrences

Checking class ListMultimap:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word remove add:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word remove add:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word remove add:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word remove add:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word remove add:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word remove add:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word remove add:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word remove add:

    No occurrences

Checking class TruncationSerializer:

  Verifying word remove add:

    No occurrences

Checking class CustomClassLoader:

  Verifying word remove add:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word remove add:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word remove add:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word remove add:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word remove add:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word remove add:

    No occurrences

Checking class StreamState$1:

  Verifying word remove add:

    No occurrences

Checking class StreamingMetrics:

  Verifying word remove add:

    No occurrences

Checking class StreamSession$State:

  Verifying word remove add:

    No occurrences

Checking class StreamMessage:

  Verifying word remove add:

    No occurrences

Checking class FileMessageHeader:

  Verifying word remove add:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word remove add:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word remove add:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word remove add:

    No occurrences

Checking class StreamTransferTask:

  Verifying word remove add:

    No occurrences

Checking class StreamSummary:

  Verifying word remove add:

    No occurrences

Checking class StreamTask:

  Verifying word remove add:

    No occurrences

Checking class StreamRequest:

  Verifying word remove add:

    No occurrences

Checking class RetryMessage:

  Verifying word remove add:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word remove add:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word remove add:

    No occurrences

Checking class StreamSession$2:

  Verifying word remove add:

    No occurrences

Checking class StreamSession$1:

  Verifying word remove add:

    No occurrences

Checking class PrepareMessage:

  Verifying word remove add:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word remove add:

    No occurrences

Checking class ReceivedMessage:

  Verifying word remove add:

    No occurrences

Checking class CompleteMessage:

  Verifying word remove add:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word remove add:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word remove add:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word remove add:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word remove add:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word remove add:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word remove add:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word remove add:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word remove add:

    No occurrences

Checking class RepairException:

  Verifying word remove add:

    No occurrences

Checking class RepairJob:

  Verifying word remove add:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word remove add:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word remove add:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word remove add:

    No occurrences

Checking class Preconditions:

  Verifying word remove add:

    No occurrences

Checking class HistogramBuilder:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word remove add:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word remove add:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word remove add:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word remove add:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word remove add:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word remove add:

    No occurrences

Checking class CassandraServer:

  Verifying word remove add:

    No occurrences

Checking class TFramedTransport$Factory:

  Verifying word remove add:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word remove add:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word remove add:

    No occurrences

Checking class GCInspector$1:

  Verifying word remove add:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word remove add:

    No occurrences

Checking class SessionInfo$1:

  Verifying word remove add:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word remove add:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word remove add:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word remove add:

    No occurrences

Checking class FileCacheService:

  Verifying word remove add:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word remove add:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word remove add:

    No occurrences

Checking class BitUtil:

  Verifying word remove add:

    No occurrences

Checking class BloomFilter$1:

  Verifying word remove add:

    No occurrences

Checking class MurmurHash:

  Verifying word remove add:

    No occurrences

Checking class RefCountedMemory:

  Verifying word remove add:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word remove add:

    No occurrences

Checking class AbstractDataInput:

  Verifying word remove add:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word remove add:

    No occurrences

Checking class SelectExpression:

  Verifying word remove add:

    No occurrences

Checking class WhereClause:

  Verifying word remove add:

    No occurrences

Checking class Attributes:

  Verifying word remove add:

    No occurrences

Checking class Operation:

  Verifying word remove add:

    No occurrences

Checking class Optional:

  Verifying word remove add:

    No occurrences

Checking class CFPropDefs:

  Verifying word remove add:

    No occurrences

Checking class BigIntegerToken:

  Verifying word remove add:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word remove add:

    No occurrences

Checking class GuidGenerator:

  Verifying word remove add:

    No occurrences

Checking class MissingTokenException:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word remove add:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word remove add:

    No occurrences

Checking class TermType:

  Verifying word remove add:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word remove add:

    No occurrences

Checking class Operation$OperationType:

  Verifying word remove add:

    No occurrences

Checking class Term$1:

  Verifying word remove add:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word remove add:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word remove add:

    No occurrences

Checking class CommonToken:

  Verifying word remove add:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word remove add:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word remove add:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word remove add:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word remove add:

    No occurrences

Checking class ComparisonChain:

  Verifying word remove add:

    No occurrences

Checking class Constants$1$1:

  Verifying word remove add:

    No occurrences

Checking class SnappyInputStream:

  Verifying word remove add:

    No occurrences

Checking class StreamInitMessage:

  Verifying word remove add:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word remove add:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word remove add:

    No occurrences

Checking class SerializingCache$1:

  Verifying word remove add:

    No occurrences

Checking class SerializingCache$2:

  Verifying word remove add:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word remove add:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word remove add:

    No occurrences

Checking class QueryPath:

  Verifying word remove add:

    No occurrences

Checking class TokenFct$1:

  Verifying word remove add:

    No occurrences

Checking class UuidFcts$1:

  Verifying word remove add:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word remove add:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word remove add:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word remove add:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word remove add:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word remove add:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word remove add:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word remove add:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word remove add:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word remove add:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word remove add:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word remove add:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word remove add:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word remove add:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word remove add:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word remove add:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word remove add:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word remove add:

    No occurrences

Checking class RetryMessage$1:

  Verifying word remove add:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word remove add:

    No occurrences

Checking class CompressionInfo:

  Verifying word remove add:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word remove add:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word remove add:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word remove add:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word remove add:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word remove add:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word remove add:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word remove add:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word remove add:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word remove add:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word remove add:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word remove add:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word remove add:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word remove add:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word remove add:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word remove add:

    No occurrences

Checking class RequestCoordinator:

  Verifying word remove add:

    No occurrences

Checking class RepairJob$2:

  Verifying word remove add:

    No occurrences

Checking class RepairJob$1:

  Verifying word remove add:

    No occurrences

Checking class TreeResponse:

  Verifying word remove add:

    No occurrences

Checking class Differencer:

  Verifying word remove add:

    No occurrences

Checking class SnapshotTask:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word remove add:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word remove add:

    No occurrences

Checking class TServer:

  Verifying word remove add:

    No occurrences

Checking class TServerFactory:

  Verifying word remove add:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word remove add:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word remove add:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word remove add:

    No occurrences

Checking class NotFoundException:

  Verifying word remove add:

    No occurrences

Checking class CASResult:

  Verifying word remove add:

    No occurrences

Checking class CfSplit:

  Verifying word remove add:

    No occurrences

Checking class CassandraServer$3:

  Verifying word remove add:

    No occurrences

Checking class CassandraServer$2:

  Verifying word remove add:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word remove add:

    No occurrences

Checking class CassandraServer$1:

  Verifying word remove add:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word remove add:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word remove add:

    No occurrences

Checking class SettableFuture:

  Verifying word remove add:

    No occurrences

Checking class Cache:

  Verifying word remove add:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word remove add:

    No occurrences

Checking class FileCacheService$1:

  Verifying word remove add:

    No occurrences

Checking class FileCacheService$2:

  Verifying word remove add:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word remove add:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word remove add:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word remove add:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word remove add:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word remove add:

    No occurrences

Checking class StreamWriter:

  Verifying word remove add:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word remove add:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word remove add:

    No occurrences

Checking class StreamReader:

  Verifying word remove add:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word remove add:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word remove add:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word remove add:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word remove add:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word remove add:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word remove add:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word remove add:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word remove add:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word remove add:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word remove add:

    No occurrences

Checking class RemovalNotification:

  Verifying word remove add:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word remove add:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word remove add:

    No occurrences

Checking class LZFOutputStream:

  Verifying word remove add:

    No occurrences

Checking class CompressedInputStream:

  Verifying word remove add:

    No occurrences

Checking class BytesReadTracker:

  Verifying word remove add:

    No occurrences

Checking class LZFInputStream:

  Verifying word remove add:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word remove add:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word remove add:

    No occurrences

Checking class TNonblockingServer:

  Verifying word remove add:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word remove add:

    No occurrences

Checking class TServerTransport:

  Verifying word remove add:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word remove add:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word remove add:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word remove add:

    No occurrences

Checking class TServerSocket:

  Verifying word remove add:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word remove add:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word remove add:

    No occurrences

Checking class TDisruptorServer:

  Verifying word remove add:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word remove add:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word remove add:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word remove add:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word remove add:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word remove add:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word remove add:

    No occurrences

Checking class TCustomSocket:

  Verifying word remove add:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word remove add:

    No occurrences


Run Time:
                         analysis-behavior      31.432s
                          analysis-threads       0.017s
                       build-parsing-table       0.139s
                               grammar-opt       2.572s
                        grammar-rm-epsilon      28.243s
                                   parsing       0.007s
                                 soot-init     138.865s
                                     total     386.338s

Profiling Vars:
                                 cfg-nodes     184857
                       grammar-productions       1973
                      parsing-table-states       3517
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word get put:

    No occurrences

Checking class Options:

  Verifying word get put:

    No occurrences

Checking class CommandLineParser:

  Verifying word get put:

    No occurrences

Checking class StressThread:

  Verifying word get put:

    No occurrences

Checking class PosixParser:

  Verifying word get put:

    No occurrences

Checking class CommandLine:

  Verifying word get put:

    No occurrences

Checking class StressAction:

  Verifying word get put:

    No occurrences

Checking class Session:

  Verifying word get put:

    No occurrences

Checking class Operation:

  Verifying word get put:

      Method: Operation.getPreparedStatement()
      Calls Location: Operation.java:314 Operation.java:318
      Atomic: NO

      Method: Operation.getPreparedStatement()
      Calls Location: Operation.java:297 Operation.java:304
      Atomic: NO

Checking class RangeSlicer:

  Verifying word get put:

    No occurrences

Checking class Stress:

  Verifying word get put:

    No occurrences

Checking class CqlInserter:

  Verifying word get put:

    No occurrences

Checking class CqlReader:

  Verifying word get put:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word get put:

    No occurrences

Checking class Inserter:

  Verifying word get put:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word get put:

    No occurrences

Checking class CounterGetter:

  Verifying word get put:

    No occurrences

Checking class CounterAdder:

  Verifying word get put:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word get put:

    No occurrences

Checking class StressAction$1:

  Verifying word get put:

    No occurrences

Checking class StressAction$Producer:

  Verifying word get put:

    No occurrences

Checking class Reader:

  Verifying word get put:

    No occurrences

Checking class Uninterruptibles:

  Verifying word get put:

    No occurrences

Checking class StressStatistics:

  Verifying word get put:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word get put:

    No occurrences

Checking class RateLimiter:

  Verifying word get put:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word get put:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word get put:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word get put:

    No occurrences

Checking class Stress$Operations:

  Verifying word get put:

    No occurrences

Checking class Timer:

  Verifying word get put:

    No occurrences

Checking class MultiGetter:

  Verifying word get put:

    No occurrences

Checking class Snapshot:

  Verifying word get put:

    No occurrences

Checking class SyntaxException:

  Verifying word get put:

    No occurrences

Checking class IndexType:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word get put:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word get put:

    No occurrences

Checking class EncryptionOptions:

  Verifying word get put:

    No occurrences

Checking class ITransportFactory:

  Verifying word get put:

    No occurrences

Checking class CassandraClient:

  Verifying word get put:

    No occurrences

Checking class SimpleClient:

  Verifying word get put:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word get put:

    No occurrences

Checking class ResultMessage:

  Verifying word get put:

    No occurrences

Checking class ColumnDef:

  Verifying word get put:

    No occurrences

Checking class CFMetaData:

  Verifying word get put:

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1084 CFMetaData.java:2029
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1083 CFMetaData.java:2029
      Atomic: NO

      Method: CFMetaData.renameColumn()
      Calls Location: CFMetaData.java:1892 CFMetaData.java:1907
      Atomic: NO

      Method: CFMetaData.renameColumn()
      Calls Location: CFMetaData.java:1888 CFMetaData.java:1907
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1084 CFMetaData.java:1992
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1083 CFMetaData.java:1992
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1084 CFMetaData.java:2014
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1083 CFMetaData.java:2014
      Atomic: NO

Checking class Metrics:

  Verifying word get put:

    No occurrences

Checking class TypeParser:

  Verifying word get put:

      Method: TypeParser.parse()
      Calls Location: TypeParser.java:68 TypeParser.java:92
      Atomic: NO

Checking class CfDef:

  Verifying word get put:

    No occurrences

Checking class TTransport:

  Verifying word get put:

    No occurrences

Checking class StringUtils:

  Verifying word get put:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word get put:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word get put:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word get put:

    No occurrences

Checking class AbstractType:

  Verifying word get put:

    No occurrences

Checking class Joiner:

  Verifying word get put:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word get put:

    No occurrences

Checking class ConfigurationException:

  Verifying word get put:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word get put:

    No occurrences

Checking class InvalidRequestException:

  Verifying word get put:

    No occurrences

Checking class KsDef:

  Verifying word get put:

    No occurrences

Checking class UTF8Type:

  Verifying word get put:

    No occurrences

Checking class TimeUUIDType:

  Verifying word get put:

    No occurrences

Checking class AsciiType:

  Verifying word get put:

    No occurrences

Checking class Document:

  Verifying word get put:

    No occurrences

Checking class Element:

  Verifying word get put:

    No occurrences

Checking class Node:

  Verifying word get put:

    No occurrences

Checking class NodeList:

  Verifying word get put:

    No occurrences

Checking class Text:

  Verifying word get put:

    No occurrences

Checking class KeyRange:

  Verifying word get put:

    No occurrences

Checking class SliceRange:

  Verifying word get put:

    No occurrences

Checking class TimerContext:

  Verifying word get put:

    No occurrences

Checking class ColumnParent:

  Verifying word get put:

    No occurrences

Checking class SlicePredicate:

  Verifying word get put:

    No occurrences

Checking class Option:

  Verifying word get put:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word get put:

    No occurrences

Checking class CQLOperation:

  Verifying word get put:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word get put:

    No occurrences

Checking class UUIDGen:

  Verifying word get put:

    No occurrences

Checking class ResultSet:

  Verifying word get put:

    No occurrences

Checking class CqlRow:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word get put:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word get put:

    No occurrences

Checking class Column:

  Verifying word get put:

    No occurrences

Checking class FBUtilities:

  Verifying word get put:

    No occurrences

Checking class Mutation:

  Verifying word get put:

    No occurrences

Checking class SuperColumn:

  Verifying word get put:

    No occurrences

Checking class IndexOperator:

  Verifying word get put:

    No occurrences

Checking class IndexExpression:

  Verifying word get put:

    No occurrences

Checking class IndexClause:

  Verifying word get put:

    No occurrences

Checking class KeySlice:

  Verifying word get put:

    No occurrences

Checking class Cassandra$Client:

  Verifying word get put:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word get put:

    No occurrences

Checking class CounterColumn:

  Verifying word get put:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word get put:

    No occurrences

Checking class Operation$1:

  Verifying word get put:

    No occurrences

Checking class Lists:

  Verifying word get put:

    No occurrences

Checking class MD5Digest:

  Verifying word get put:

    No occurrences

Checking class Hex:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word get put:

    No occurrences

Checking class Message$Response:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word get put:

    No occurrences

Checking class Message$Type:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$1:

  Verifying word get put:

    No occurrences

Checking class Message:

  Verifying word get put:

    No occurrences

Checking class InvalidRequestException:

  Verifying word get put:

    No occurrences

Checking class Logger:

  Verifying word get put:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word get put:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word get put:

    No occurrences

Checking class ColumnDefinition:

  Verifying word get put:

    No occurrences

Checking class CompressionParameters:

  Verifying word get put:

    No occurrences

Checking class CFDefinition:

  Verifying word get put:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word get put:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word get put:

    No occurrences

Checking class Descriptor$Version:

  Verifying word get put:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word get put:

    No occurrences

Checking class RowMutation:

  Verifying word get put:

      Method: RowMutation.addOrGet()
      Calls Location: RowMutation.java:138 RowMutation.java:142
      Atomic: NO

Checking class UntypedResultSet$Row:

  Verifying word get put:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word get put:

    No occurrences

Checking class Row:

  Verifying word get put:

    No occurrences

Checking class TriggerDefinition:

  Verifying word get put:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word get put:

    No occurrences

Checking class CompositeType:

  Verifying word get put:

      Method: CompositeType.getInstance()
      Calls Location: CompositeType.java:106 CompositeType.java:110
      Atomic: YES

Checking class RangeTombstone:

  Verifying word get put:

    No occurrences

Checking class ColumnSerializer:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndex:

  Verifying word get put:

    No occurrences

Checking class Iterables:

  Verifying word get put:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word get put:

      Method: ColumnToCollectionType.getInstance()
      Calls Location: ColumnToCollectionType.java:49 ColumnToCollectionType.java:53
      Atomic: YES

Checking class CFMetaData$2:

  Verifying word get put:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word get put:

    No occurrences

Checking class CQLStatement:

  Verifying word get put:

    No occurrences

Checking class SuperColumns:

  Verifying word get put:

    No occurrences

Checking class ArrayUtils:

  Verifying word get put:

    No occurrences

Checking class CFMetaData$1:

  Verifying word get put:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word get put:

    No occurrences

Checking class RequestValidationException:

  Verifying word get put:

    No occurrences

Checking class DeletedColumn:

  Verifying word get put:

    No occurrences

Checking class BytesType:

  Verifying word get put:

    No occurrences

Checking class ColumnFamily:

  Verifying word get put:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word get put:

    No occurrences

Checking class OnDiskAtom:

  Verifying word get put:

    No occurrences

Checking class CreateTableStatement:

  Verifying word get put:

    No occurrences

Checking class QueryProcessor:

  Verifying word get put:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word get put:

    No occurrences

Checking class CounterColumnType:

  Verifying word get put:

    No occurrences

Checking class Descriptor:

  Verifying word get put:

    No occurrences

Checking class Schema:

  Verifying word get put:

    No occurrences

Checking class ICompressor:

  Verifying word get put:

    No occurrences

Checking class MapDifference:

  Verifying word get put:

    No occurrences

Checking class UntypedResultSet:

  Verifying word get put:

    No occurrences

Checking class SystemKeyspace:

  Verifying word get put:

      Method: SystemKeyspace.serializeSchema()
      Calls Location: SystemKeyspace.java:815 SystemKeyspace.java:819
      Atomic: NO

      Method: SystemKeyspace.serializeSchema()
      Calls Location: SystemKeyspace.java:815 SystemKeyspace.java:819
      Atomic: NO

Checking class ParsedStatement:

  Verifying word get put:

    No occurrences

Checking class ToStringBuilder:

  Verifying word get put:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word get put:

    No occurrences

Checking class Maps:

  Verifying word get put:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word get put:

    No occurrences

Checking class LoggerFactory:

  Verifying word get put:

    No occurrences

Checking class MarshalException:

  Verifying word get put:

    No occurrences

Checking class EqualsBuilder:

  Verifying word get put:

    No occurrences

Checking class LongType:

  Verifying word get put:

    No occurrences

Checking class LZ4Compressor:

  Verifying word get put:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word get put:

    No occurrences

Checking class Column:

  Verifying word get put:

    No occurrences

Checking class CollectionType:

  Verifying word get put:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word get put:

    No occurrences

Checking class FileUtils:

  Verifying word get put:

    No occurrences

Checking class FileDataInput:

  Verifying word get put:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word get put:

    No occurrences

Checking class TFramedTransport:

  Verifying word get put:

    No occurrences

Checking class TSocket:

  Verifying word get put:

    No occurrences

Checking class CQL3Type:

  Verifying word get put:

    No occurrences

Checking class TypeSerializer:

  Verifying word get put:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word get put:

    No occurrences

Checking class IndexHelper:

  Verifying word get put:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word get put:

    No occurrences

Checking class ColumnSlice:

  Verifying word get put:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word get put:

    No occurrences

Checking class AbstractType$6:

  Verifying word get put:

    No occurrences

Checking class AbstractType$4:

  Verifying word get put:

    No occurrences

Checking class AbstractType$5:

  Verifying word get put:

    No occurrences

Checking class AbstractType$3:

  Verifying word get put:

    No occurrences

Checking class ReversedType:

  Verifying word get put:

      Method: ReversedType.getInstance()
      Calls Location: ReversedType.java:47 ReversedType.java:51
      Atomic: YES

Checking class AbstractType$2:

  Verifying word get put:

    No occurrences

Checking class AbstractType$1:

  Verifying word get put:

    No occurrences

Checking class UnavailableException:

  Verifying word get put:

    No occurrences

Checking class Keyspace:

  Verifying word get put:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word get put:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word get put:

    No occurrences

Checking class ProtocolException:

  Verifying word get put:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word get put:

      Method: AbstractReplicationStrategy.getNaturalEndpoints()
      Calls Location: AbstractReplicationStrategy.java:93 AbstractReplicationStrategy.java:114
      Atomic: NO

Checking class NetworkTopologyStrategy:

  Verifying word get put:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word get put:

    No occurrences

Checking class Connection$Tracker:

  Verifying word get put:

    No occurrences

Checking class Connection:

  Verifying word get put:

    No occurrences

Checking class ClientBootstrap:

  Verifying word get put:

    No occurrences

Checking class Channel:

  Verifying word get put:

    No occurrences

Checking class ChannelFuture:

  Verifying word get put:

    No occurrences

Checking class Connection$Factory:

  Verifying word get put:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word get put:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word get put:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word get put:

    No occurrences

Checking class Frame$Compressor:

  Verifying word get put:

    No occurrences

Checking class Frame$Encoder:

  Verifying word get put:

    No occurrences

Checking class Message$Request:

  Verifying word get put:

    No occurrences

Checking class SimpleClient$1:

  Verifying word get put:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word get put:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word get put:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word get put:

    No occurrences

Checking class FrameCompressor:

  Verifying word get put:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word get put:

    No occurrences

Checking class ErrorMessage:

  Verifying word get put:

    No occurrences

Checking class CredentialsMessage:

  Verifying word get put:

    No occurrences

Checking class StartupMessage:

  Verifying word get put:

    No occurrences

Checking class PrepareMessage:

  Verifying word get put:

    No occurrences

Checking class QueryMessage:

  Verifying word get put:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word get put:

    No occurrences

Checking class Frame:

  Verifying word get put:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word get put:

    No occurrences

Checking class TransportException:

  Verifying word get put:

    No occurrences

Checking class QueryOptions:

  Verifying word get put:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word get put:

    No occurrences

Checking class ExecuteMessage:

  Verifying word get put:

    No occurrences

Checking class ExceptionCode:

  Verifying word get put:

    No occurrences

Checking class UTF8Serializer:

  Verifying word get put:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word get put:

    No occurrences

Checking class TimestampSerializer:

  Verifying word get put:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word get put:

    No occurrences

Checking class AsciiSerializer:

  Verifying word get put:

    No occurrences

Checking class DOMException:

  Verifying word get put:

    No occurrences

Checking class Attr:

  Verifying word get put:

    No occurrences

Checking class TypeInfo:

  Verifying word get put:

    No occurrences

Checking class DocumentType:

  Verifying word get put:

    No occurrences

Checking class DOMImplementation:

  Verifying word get put:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word get put:

    No occurrences

Checking class DOMConfiguration:

  Verifying word get put:

    No occurrences

Checking class NamedNodeMap:

  Verifying word get put:

    No occurrences

Checking class UserDataHandler:

  Verifying word get put:

    No occurrences

Checking class CharacterData:

  Verifying word get put:

    No occurrences

Checking class CQLOperation$1:

  Verifying word get put:

    No occurrences

Checking class CQLOperation$2:

  Verifying word get put:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word get put:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word get put:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word get put:

    No occurrences

Checking class ColumnSpecification:

  Verifying word get put:

    No occurrences

Checking class CqlMetadata:

  Verifying word get put:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word get put:

    No occurrences

Checking class ObjectMapper:

  Verifying word get put:

    No occurrences

Checking class Pair:

  Verifying word get put:

    No occurrences

Checking class TSerializer:

  Verifying word get put:

    No occurrences

Checking class TDeserializer:

  Verifying word get put:

    No occurrences

Checking class Range:

  Verifying word get put:

    No occurrences

Checking class IPartitioner:

  Verifying word get put:

    No occurrences

Checking class IAllocator:

  Verifying word get put:

    No occurrences

Checking class IAuthorizer:

  Verifying word get put:

    No occurrences

Checking class IAuthenticator:

  Verifying word get put:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word get put:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word get put:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word get put:

    No occurrences

Checking class JsonFactory:

  Verifying word get put:

    No occurrences

Checking class RingPosition:

  Verifying word get put:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word get put:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word get put:

    No occurrences

Checking class FBUtilities$2:

  Verifying word get put:

    No occurrences

Checking class FBUtilities$1:

  Verifying word get put:

    No occurrences

Checking class FBUtilities$3:

  Verifying word get put:

    No occurrences

Checking class Token:

  Verifying word get put:

    No occurrences

Checking class FastByteComparisons:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word get put:

    No occurrences

Checking class SelectStatement:

  Verifying word get put:

    No occurrences

Checking class Message$Direction:

  Verifying word get put:

    No occurrences

Checking class CBCodec:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word get put:

    No occurrences

Checking class ReadyMessage:

  Verifying word get put:

    No occurrences

Checking class SupportedMessage:

  Verifying word get put:

    No occurrences

Checking class AuthResponse:

  Verifying word get put:

    No occurrences

Checking class BatchMessage:

  Verifying word get put:

    No occurrences

Checking class AuthChallenge:

  Verifying word get put:

    No occurrences

Checking class RegisterMessage:

  Verifying word get put:

    No occurrences

Checking class EventMessage:

  Verifying word get put:

    No occurrences

Checking class AuthSuccess:

  Verifying word get put:

    No occurrences

Checking class OptionsMessage:

  Verifying word get put:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word get put:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word get put:

    No occurrences

Checking class ChannelBuffer:

  Verifying word get put:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word get put:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word get put:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word get put:

    No occurrences

Checking class ImmutableList:

  Verifying word get put:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word get put:

    No occurrences

Checking class CompositeType$1:

  Verifying word get put:

    No occurrences

Checking class Interval:

  Verifying word get put:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word get put:

    No occurrences

Checking class DeletionTime:

  Verifying word get put:

    No occurrences

Checking class TypeSizes:

  Verifying word get put:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word get put:

    No occurrences

Checking class ISerializer:

  Verifying word get put:

    No occurrences

Checking class Relation$Type:

  Verifying word get put:

    No occurrences

Checking class Relation:

  Verifying word get put:

    No occurrences

Checking class ExpiringColumn:

  Verifying word get put:

    No occurrences

Checking class CounterColumn:

  Verifying word get put:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word get put:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word get put:

    No occurrences

Checking class DecoratedKey:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word get put:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word get put:

    No occurrences

Checking class CompositesIndex:

  Verifying word get put:

    No occurrences

Checking class LocalToken:

  Verifying word get put:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word get put:

    No occurrences

Checking class StorageService:

  Verifying word get put:

    No occurrences

Checking class SSTableReader:

  Verifying word get put:

    No occurrences

Checking class CompactionManager:

  Verifying word get put:

    No occurrences

Checking class KeysIndex:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word get put:

    No occurrences

Checking class BytesSerializer:

  Verifying word get put:

    No occurrences

Checking class ImmutableMap:

  Verifying word get put:

    No occurrences

Checking class UnauthorizedException:

  Verifying word get put:

    No occurrences

Checking class RequestExecutionException:

  Verifying word get put:

    No occurrences

Checking class ClientState:

  Verifying word get put:

    No occurrences

Checking class QueryState:

  Verifying word get put:

    No occurrences

Checking class ImmutableSet:

  Verifying word get put:

    No occurrences

Checking class Sets$SetView:

  Verifying word get put:

    No occurrences

Checking class Sets:

  Verifying word get put:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word get put:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word get put:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word get put:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word get put:

    No occurrences

Checking class DeletionInfo:

  Verifying word get put:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word get put:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word get put:

    No occurrences

Checking class TriggerDef:

  Verifying word get put:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word get put:

    No occurrences

Checking class Objects:

  Verifying word get put:

    No occurrences

Checking class CassandraException:

  Verifying word get put:

    No occurrences

Checking class Allocator:

  Verifying word get put:

    No occurrences

Checking class HeapAllocator:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word get put:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word get put:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word get put:

    No occurrences

Checking class ColumnStats:

  Verifying word get put:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word get put:

    No occurrences

Checking class StreamingHistogram:

  Verifying word get put:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word get put:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word get put:

    No occurrences

Checking class Functions:

  Verifying word get put:

    No occurrences

Checking class UnsortedColumns:

  Verifying word get put:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word get put:

    No occurrences

Checking class Memtable:

  Verifying word get put:

    No occurrences

Checking class CompactionController:

  Verifying word get put:

    No occurrences

Checking class DataTracker:

  Verifying word get put:

    No occurrences

Checking class ICompactionScanner:

  Verifying word get put:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word get put:

    No occurrences

Checking class Component:

  Verifying word get put:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word get put:

    No occurrences

Checking class CompactionTask:

  Verifying word get put:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word get put:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word get put:

    No occurrences

Checking class CFPropDefs:

  Verifying word get put:

    No occurrences

Checking class CFName:

  Verifying word get put:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word get put:

    No occurrences

Checking class CreateTableStatement$1:

  Verifying word get put:

    No occurrences

Checking class Permission:

  Verifying word get put:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word get put:

    No occurrences

Checking class MigrationManager:

  Verifying word get put:

    No occurrences

Checking class QueryHandler:

  Verifying word get put:

    No occurrences

Checking class SemanticVersion:

  Verifying word get put:

    No occurrences

Checking class MemoryMeter:

  Verifying word get put:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word get put:

    No occurrences

Checking class BatchStatement:

  Verifying word get put:

      Method: BatchStatement.addStatementMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:175
      Atomic: NO

      Method: BatchStatement.addStatementMutations()
      Calls Location: BatchStatement.java:187 BatchStatement.java:193
      Atomic: NO

      Method: BatchStatement.addStatementMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:193
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:187 BatchStatement.java:175
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:187 BatchStatement.java:193
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:175
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:193
      Atomic: NO

Checking class BatchQueryOptions:

  Verifying word get put:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word get put:

    No occurrences

Checking class Tracing:

  Verifying word get put:

    No occurrences

Checking class CFStatement:

  Verifying word get put:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word get put:

    No occurrences

Checking class CqlParser:

  Verifying word get put:

    No occurrences

Checking class TokenStream:

  Verifying word get put:

    No occurrences

Checking class CqlLexer:

  Verifying word get put:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word get put:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word get put:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word get put:

    No occurrences

Checking class CharStream:

  Verifying word get put:

    No occurrences

Checking class ThriftClientState:

  Verifying word get put:

    No occurrences

Checking class CommonTokenStream:

  Verifying word get put:

    No occurrences

Checking class INotificationConsumer:

  Verifying word get put:

    No occurrences

Checking class LeveledManifest:

  Verifying word get put:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word get put:

    No occurrences

Checking class Multimap:

  Verifying word get put:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word get put:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word get put:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word get put:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word get put:

    No occurrences

Checking class OperationType:

  Verifying word get put:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word get put:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word get put:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word get put:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word get put:

    No occurrences

Checking class LongSerializer:

  Verifying word get put:

    No occurrences

Checking class CounterSerializer:

  Verifying word get put:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word get put:

      Method: ConcurrentBiMap.put()
      Calls Location: ConcurrentBiMap.java:95 ConcurrentBiMap.java:101
      Atomic: YES

      Method: ConcurrentBiMap.put()
      Calls Location: ConcurrentBiMap.java:95 ConcurrentBiMap.java:98
      Atomic: YES

      Method: ConcurrentBiMap.putAll()
      Calls Location: ConcurrentBiMap.java:95 ConcurrentBiMap.java:101
      Atomic: YES

      Method: ConcurrentBiMap.putAll()
      Calls Location: ConcurrentBiMap.java:95 ConcurrentBiMap.java:98
      Atomic: YES

Checking class KSMetaData:

  Verifying word get put:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word get put:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word get put:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word get put:

    No occurrences

Checking class InetAddressType:

  Verifying word get put:

    No occurrences

Checking class Int32Type:

  Verifying word get put:

    No occurrences

Checking class TimestampType:

  Verifying word get put:

    No occurrences

Checking class UUIDType:

  Verifying word get put:

    No occurrences

Checking class ListType:

  Verifying word get put:

      Method: ListType.getInstance()
      Calls Location: ListType.java:50 ListType.java:54
      Atomic: YES

Checking class DoubleType:

  Verifying word get put:

    No occurrences

Checking class MapType:

  Verifying word get put:

      Method: MapType.getInstance()
      Calls Location: MapType.java:52 MapType.java:56
      Atomic: YES

Checking class BooleanType:

  Verifying word get put:

    No occurrences

Checking class SetType:

  Verifying word get put:

      Method: SetType.getInstance()
      Calls Location: SetType.java:49 SetType.java:53
      Atomic: YES

Checking class Row$RowSerializer:

  Verifying word get put:

    No occurrences

Checking class ReplayPosition:

  Verifying word get put:

    No occurrences

Checking class SetMultimap:

  Verifying word get put:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word get put:

    No occurrences

Checking class CounterId:

  Verifying word get put:

    No occurrences

Checking class PaxosState:

  Verifying word get put:

    No occurrences

Checking class Commit:

  Verifying word get put:

    No occurrences

Checking class RestorableMeter:

  Verifying word get put:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word get put:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word get put:

    No occurrences

Checking class AbstractBounds:

  Verifying word get put:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word get put:

    No occurrences

Checking class QueryFilter:

  Verifying word get put:

    No occurrences

Checking class Token$KeyBound:

  Verifying word get put:

    No occurrences

Checking class HashMultimap:

  Verifying word get put:

    No occurrences

Checking class EmptyColumns:

  Verifying word get put:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word get put:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word get put:

    No occurrences

Checking class DefsTables:

  Verifying word get put:

    No occurrences

Checking class SystemKeyspace$1:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word get put:

    No occurrences

Checking class VariableSpecifications:

  Verifying word get put:

    No occurrences

Checking class IMutation:

  Verifying word get put:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word get put:

    No occurrences

Checking class MessageOut:

  Verifying word get put:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word get put:

    No occurrences

Checking class MessagingService:

  Verifying word get put:

      Method: MessagingService.incrementRejectedMessages()
      Calls Location: MessagingService.java:837 MessagingService.java:841
      Atomic: NO

      Method: MessagingService.logDroppedMessages()
      Calls Location: MessagingService.java:853 MessagingService.java:859
      Atomic: NO

Checking class ColumnFamilyStoreMBean:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word get put:

    No occurrences

Checking class DefaultInteger:

  Verifying word get put:

    No occurrences

Checking class Directories:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndexManager$Updater:

  Verifying word get put:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word get put:

    No occurrences

Checking class DataTracker$View:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word get put:

    No occurrences

Checking class DataRange:

  Verifying word get put:

    No occurrences

Checking class ExtendedFilter:

  Verifying word get put:

    No occurrences

Checking class RowCacheKey:

  Verifying word get put:

    No occurrences

Checking class CacheService:

  Verifying word get put:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word get put:

    No occurrences

Checking class StreamLockfile:

  Verifying word get put:

    No occurrences

Checking class CollationController:

  Verifying word get put:

    No occurrences

Checking class SSTable:

  Verifying word get put:

    No occurrences

Checking class KeyCacheKey:

  Verifying word get put:

    No occurrences

Checking class SSTableMetadata:

  Verifying word get put:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word get put:

    No occurrences

Checking class Histogram:

  Verifying word get put:

    No occurrences

Checking class Counter:

  Verifying word get put:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word get put:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word get put:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word get put:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word get put:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word get put:

    No occurrences

Checking class Futures:

  Verifying word get put:

    No occurrences

Checking class FSReadError:

  Verifying word get put:

    No occurrences

Checking class CompressionMetadata:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word get put:

    No occurrences

Checking class DataRange$Paging:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word get put:

    No occurrences

Checking class LocalPartitioner:

  Verifying word get put:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word get put:

    No occurrences

Checking class RowIndexEntry:

  Verifying word get put:

    No occurrences

Checking class LatencyMetrics:

  Verifying word get put:

    No occurrences

Checking class RowPosition:

  Verifying word get put:

    No occurrences

Checking class AutoSavingCache:

  Verifying word get put:

    No occurrences

Checking class SSTableWriter:

  Verifying word get put:

    No occurrences

Checking class CommitLog:

  Verifying word get put:

    No occurrences

Checking class Gauge:

  Verifying word get put:

    No occurrences

Checking class SeedProvider:

  Verifying word get put:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word get put:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word get put:

    No occurrences

Checking class Config:

  Verifying word get put:

    No occurrences

Checking class IRequestScheduler:

  Verifying word get put:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word get put:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word get put:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word get put:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word get put:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word get put:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word get put:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word get put:

    No occurrences

Checking class FSWriteError:

  Verifying word get put:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word get put:

    No occurrences

Checking class NoScheduler:

  Verifying word get put:

    No occurrences

Checking class Longs:

  Verifying word get put:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word get put:

    No occurrences

Checking class SeedProviderDef:

  Verifying word get put:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word get put:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word get put:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word get put:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word get put:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word get put:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word get put:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word get put:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word get put:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word get put:

    No occurrences

Checking class DateType:

  Verifying word get put:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word get put:

    No occurrences

Checking class CFDefinition$2:

  Verifying word get put:

    No occurrences

Checking class CFDefinition$1:

  Verifying word get put:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word get put:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word get put:

    No occurrences

Checking class LZ4Compressor:

  Verifying word get put:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word get put:

    No occurrences

Checking class LZ4Factory:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word get put:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word get put:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word get put:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word get put:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word get put:

    No occurrences

Checking class Column$1:

  Verifying word get put:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word get put:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word get put:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word get put:

    No occurrences

Checking class FSError:

  Verifying word get put:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word get put:

    No occurrences

Checking class FileUtils$2:

  Verifying word get put:

    No occurrences

Checking class FileUtils$1:

  Verifying word get put:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word get put:

    No occurrences

Checking class CQL3Type$1:

  Verifying word get put:

    No occurrences

Checking class ObjectSizes:

  Verifying word get put:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word get put:

    No occurrences

Checking class ColumnCounter:

  Verifying word get put:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word get put:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word get put:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word get put:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word get put:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word get put:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word get put:

    No occurrences

Checking class TokenMetadata:

  Verifying word get put:

    No occurrences

Checking class Keyspace$1:

  Verifying word get put:

    No occurrences

Checking class QueryPagers:

  Verifying word get put:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word get put:

    No occurrences

Checking class WriteType:

  Verifying word get put:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word get put:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word get put:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word get put:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word get put:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word get put:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word get put:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word get put:

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1151 TokenMetadata.java:1153
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1143 TokenMetadata.java:1150
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1138 TokenMetadata.java:1150
      Atomic: NO

      Method: TokenMetadata$Topology.<init>()
      Calls Location: TokenMetadata.java:1126 TokenMetadata.java:1126
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1143 TokenMetadata.java:1153
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1138 TokenMetadata.java:1153
      Atomic: NO

Checking class FrameCompressor$LZ4Compressor:

  Verifying word get put:

    No occurrences

Checking class ChannelPipeline:

  Verifying word get put:

    No occurrences

Checking class Frame$Decoder:

  Verifying word get put:

    No occurrences

Checking class Channels:

  Verifying word get put:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word get put:

    No occurrences

Checking class ServerError:

  Verifying word get put:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word get put:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word get put:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word get put:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word get put:

    No occurrences

Checking class Frame$Header:

  Verifying word get put:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word get put:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word get put:

    No occurrences

Checking class CBUtil:

  Verifying word get put:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word get put:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word get put:

    No occurrences

Checking class AuthenticationException:

  Verifying word get put:

    No occurrences

Checking class ChannelBuffers:

  Verifying word get put:

    No occurrences

Checking class StartupMessage$1:

  Verifying word get put:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word get put:

    No occurrences

Checking class QueryMessage$1:

  Verifying word get put:

    No occurrences

Checking class Snappy:

  Verifying word get put:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word get put:

    No occurrences

Checking class PagingState:

  Verifying word get put:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word get put:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word get put:

    No occurrences

Checking class MessageEvent:

  Verifying word get put:

    No occurrences

Checking class ExceptionEvent:

  Verifying word get put:

    No occurrences

Checking class SslHandler:

  Verifying word get put:

    No occurrences

Checking class SSLFactory:

  Verifying word get put:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word get put:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word get put:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word get put:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word get put:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word get put:

    No occurrences

Checking class FloatType:

  Verifying word get put:

    No occurrences

Checking class DecimalType:

  Verifying word get put:

    No occurrences

Checking class IntegerType:

  Verifying word get put:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word get put:

    No occurrences

Checking class DateUtils:

  Verifying word get put:

    No occurrences

Checking class UUIDSerializer:

  Verifying word get put:

    No occurrences

Checking class DOMStringList:

  Verifying word get put:

    No occurrences

Checking class ThriftConversion:

  Verifying word get put:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word get put:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word get put:

    No occurrences

Checking class IResource:

  Verifying word get put:

    No occurrences

Checking class IAsyncCallback:

  Verifying word get put:

    No occurrences

Checking class MessageIn:

  Verifying word get put:

    No occurrences

Checking class AbstractIterator:

  Verifying word get put:

    No occurrences

Checking class Bounds:

  Verifying word get put:

    No occurrences

Checking class Range$1:

  Verifying word get put:

    No occurrences

Checking class ObjectUtils:

  Verifying word get put:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word get put:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word get put:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word get put:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word get put:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word get put:

    No occurrences

Checking class Selection:

  Verifying word get put:

    No occurrences

Checking class Term:

  Verifying word get put:

    No occurrences

Checking class Restriction:

  Verifying word get put:

    No occurrences

Checking class Restriction$Slice:

  Verifying word get put:

    No occurrences

Checking class QueryPager:

  Verifying word get put:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word get put:

    No occurrences

Checking class Bound:

  Verifying word get put:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word get put:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word get put:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word get put:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word get put:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word get put:

      Method: ColumnGroupMap.add()
      Calls Location: ColumnGroupMap.java:52 ColumnGroupMap.java:56
      Atomic: NO

Checking class SelectStatement$SingleColumnComparator:

  Verifying word get put:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word get put:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word get put:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word get put:

    No occurrences

Checking class ReadCommand:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word get put:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word get put:

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1612 SelectStatement.java:1635
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1612 SelectStatement.java:1910
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1612 SelectStatement.java:1894
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1631 SelectStatement.java:1635
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1631 SelectStatement.java:1910
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1631 SelectStatement.java:1894
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1631 SelectStatement.java:1635
      Atomic: NO

Checking class ExcludingBounds:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$1:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$2:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word get put:

    No occurrences

Checking class StorageProxy:

  Verifying word get put:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word get put:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word get put:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word get put:

    No occurrences

Checking class ServerConnection:

  Verifying word get put:

    No occurrences

Checking class AuthResponse$1:

  Verifying word get put:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word get put:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word get put:

    No occurrences

Checking class Attributes:

  Verifying word get put:

    No occurrences

Checking class ModificationStatement:

  Verifying word get put:

    No occurrences

Checking class BatchMessage$1:

  Verifying word get put:

    No occurrences

Checking class BatchMessage$2:

  Verifying word get put:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word get put:

    No occurrences

Checking class Event$Type:

  Verifying word get put:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word get put:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word get put:

    No occurrences

Checking class Server:

  Verifying word get put:

    No occurrences

Checking class Event:

  Verifying word get put:

    No occurrences

Checking class EventMessage$1:

  Verifying word get put:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word get put:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word get put:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word get put:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word get put:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word get put:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word get put:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word get put:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word get put:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word get put:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word get put:

    No occurrences

Checking class Relation$1:

  Verifying word get put:

    No occurrences

Checking class CounterContext:

  Verifying word get put:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word get put:

    No occurrences

Checking class IContext:

  Verifying word get put:

    No occurrences

Checking class IMergeIterator:

  Verifying word get put:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word get put:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word get put:

    No occurrences

Checking class KeyIterator:

  Verifying word get put:

    No occurrences

Checking class MergeIterator:

  Verifying word get put:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word get put:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word get put:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word get put:

    No occurrences

Checking class CompositesSearcher:

  Verifying word get put:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word get put:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word get put:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word get put:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word get put:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word get put:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word get put:

    No occurrences

Checking class CassandraDaemon:

  Verifying word get put:

    No occurrences

Checking class StorageService$Mode:

  Verifying word get put:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word get put:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word get put:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word get put:

    No occurrences

Checking class EndpointState:

  Verifying word get put:

    No occurrences

Checking class ApplicationState:

  Verifying word get put:

    No occurrences

Checking class VersionedValue:

  Verifying word get put:

    No occurrences

Checking class RepairFuture:

  Verifying word get put:

    No occurrences

Checking class StreamResultFuture:

  Verifying word get put:

    No occurrences

Checking class SSTableLoader:

  Verifying word get put:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word get put:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word get put:

    No occurrences

Checking class StreamManager:

  Verifying word get put:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word get put:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word get put:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word get put:

    No occurrences

Checking class TokenSerializer:

  Verifying word get put:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word get put:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word get put:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word get put:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word get put:

    No occurrences

Checking class Iterators:

  Verifying word get put:

    No occurrences

Checking class FailureDetector:

  Verifying word get put:

      Method: FailureDetector.report()
      Calls Location: FailureDetector.java:209 FailureDetector.java:215
      Atomic: NO

Checking class StorageService$2:

  Verifying word get put:

    No occurrences

Checking class StorageService$1:

  Verifying word get put:

    No occurrences

Checking class StorageService$4:

  Verifying word get put:

    No occurrences

Checking class StorageService$3:

  Verifying word get put:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word get put:

    No occurrences

Checking class StorageService$8:

  Verifying word get put:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word get put:

    No occurrences

Checking class StorageService$7:

  Verifying word get put:

    No occurrences

Checking class StorageService$6:

  Verifying word get put:

    No occurrences

Checking class StorageService$5:

  Verifying word get put:

    No occurrences

Checking class StreamPlan:

  Verifying word get put:

      Method: StreamPlan.getOrCreateSession()
      Calls Location: StreamPlan.java:167 StreamPlan.java:171
      Atomic: NO

Checking class SchemaCheckVerbHandler:

  Verifying word get put:

    No occurrences

Checking class ActiveRepairService:

  Verifying word get put:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word get put:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word get put:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word get put:

    No occurrences

Checking class TokenRange:

  Verifying word get put:

    No occurrences

Checking class StorageMetrics:

  Verifying word get put:

    No occurrences

Checking class RangeStreamer:

  Verifying word get put:

    No occurrences

Checking class Gossiper:

  Verifying word get put:

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:694 Gossiper.java:372
      Atomic: NO

Checking class LoadBroadcaster:

  Verifying word get put:

    No occurrences

Checking class Auth:

  Verifying word get put:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word get put:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word get put:

    No occurrences

Checking class OutputHandler:

  Verifying word get put:

    No occurrences

Checking class BiMultiValMap:

  Verifying word get put:

    No occurrences

Checking class StageManager:

  Verifying word get put:

    No occurrences

Checking class IVerbHandler:

  Verifying word get put:

    No occurrences

Checking class BootStrapper:

  Verifying word get put:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word get put:

      Method: SSTableLoader$Client.addRangeForEndpoint()
      Calls Location: SSTableLoader.java:271 SSTableLoader.java:275
      Atomic: NO

Checking class Level:

  Verifying word get put:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word get put:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word get put:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word get put:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word get put:

    No occurrences

Checking class IFailureDetector:

  Verifying word get put:

    No occurrences

Checking class Logger:

  Verifying word get put:

    No occurrences

Checking class Collections2:

  Verifying word get put:

    No occurrences

Checking class LocalStrategy:

  Verifying word get put:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word get put:

    No occurrences

Checking class EndpointDetails:

  Verifying word get put:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word get put:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word get put:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word get put:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word get put:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word get put:

    No occurrences

Checking class Stage:

  Verifying word get put:

    No occurrences

Checking class BatchlogManager:

  Verifying word get put:

    No occurrences

Checking class LogManager:

  Verifying word get put:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word get put:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word get put:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word get put:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word get put:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word get put:

    No occurrences

Checking class SegmentedFile:

  Verifying word get put:

    No occurrences

Checking class IndexSummary:

  Verifying word get put:

    No occurrences

Checking class IFilter:

  Verifying word get put:

    No occurrences

Checking class InstrumentingCache:

  Verifying word get put:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word get put:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word get put:

    No occurrences

Checking class SSTableScanner:

  Verifying word get put:

    No occurrences

Checking class RandomAccessReader:

  Verifying word get put:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word get put:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word get put:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word get put:

    No occurrences

Checking class CLibrary:

  Verifying word get put:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word get put:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word get put:

    No occurrences

Checking class FilterFactory:

  Verifying word get put:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word get put:

    No occurrences

Checking class ICompressedFile:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$2:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$1:

  Verifying word get put:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$3:

  Verifying word get put:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word get put:

    No occurrences

Checking class ThrottledReader:

  Verifying word get put:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word get put:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word get put:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word get put:

    No occurrences

Checking class CompactionMetrics:

  Verifying word get put:

    No occurrences

Checking class Multiset:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word get put:

    No occurrences

Checking class Validator:

  Verifying word get put:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word get put:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word get put:

    No occurrences

Checking class CompactionInfo:

  Verifying word get put:

    No occurrences

Checking class RepairJobDesc:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$10:

  Verifying word get put:

    No occurrences

Checking class Meter:

  Verifying word get put:

    No occurrences

Checking class CompactionIterable:

  Verifying word get put:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word get put:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word get put:

    No occurrences

Checking class Throwables:

  Verifying word get put:

    No occurrences

Checking class Scrubber:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$1:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$2:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$3:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$4:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$5:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$6:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$7:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$8:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$9:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word get put:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word get put:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word get put:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word get put:

    No occurrences

Checking class KeysSearcher:

  Verifying word get put:

    No occurrences

Checking class LoadingCache:

  Verifying word get put:

    No occurrences

Checking class DataResource:

  Verifying word get put:

    No occurrences

Checking class CacheBuilder:

  Verifying word get put:

    No occurrences

Checking class CacheLoader:

  Verifying word get put:

    No occurrences

Checking class ThriftValidation:

  Verifying word get put:

    No occurrences

Checking class QueryProcessor:

  Verifying word get put:

    No occurrences

Checking class ClientState$1:

  Verifying word get put:

    No occurrences

Checking class Resources:

  Verifying word get put:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word get put:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word get put:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word get put:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word get put:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word get put:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word get put:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word get put:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word get put:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word get put:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word get put:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word get put:

    No occurrences

Checking class UUIDSerializer:

  Verifying word get put:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word get put:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word get put:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word get put:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word get put:

    No occurrences

Checking class PrecompactedRow:

  Verifying word get put:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word get put:

    No occurrences

Checking class DataTracker$1:

  Verifying word get put:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word get put:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word get put:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word get put:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word get put:

    No occurrences

Checking class Memtable$2:

  Verifying word get put:

    No occurrences

Checking class Memtable$1:

  Verifying word get put:

    No occurrences

Checking class Memtable$3:

  Verifying word get put:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word get put:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word get put:

    No occurrences

Checking class Component$Type:

  Verifying word get put:

    No occurrences

Checking class Component$1:

  Verifying word get put:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word get put:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word get put:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word get put:

    No occurrences

Checking class Multiset$Entry:

  Verifying word get put:

    No occurrences

Checking class HashMultiset:

  Verifying word get put:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word get put:

    No occurrences

Checking class IMigrationListener:

  Verifying word get put:

    No occurrences

Checking class MigrationManager$2:

  Verifying word get put:

    No occurrences

Checking class MigrationManager$1:

  Verifying word get put:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word get put:

    No occurrences

Checking class MigrationTask:

  Verifying word get put:

    No occurrences

Checking class TraceState:

  Verifying word get put:

    No occurrences

Checking class OverloadedException:

  Verifying word get put:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word get put:

    No occurrences

Checking class Tracing$1:

  Verifying word get put:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word get put:

    No occurrences

Checking class Tracing$2:

  Verifying word get put:

    No occurrences

Checking class Parser:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word get put:

    No occurrences

Checking class BitSet:

  Verifying word get put:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word get put:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word get put:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word get put:

    No occurrences

Checking class Tuples$Raw:

  Verifying word get put:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word get put:

    No occurrences

Checking class Maps$Literal:

  Verifying word get put:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word get put:

    No occurrences

Checking class UseStatement:

  Verifying word get put:

    No occurrences

Checking class RawSelector:

  Verifying word get put:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word get put:

    No occurrences

Checking class Attributes$Raw:

  Verifying word get put:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word get put:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word get put:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word get put:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word get put:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word get put:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word get put:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word get put:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word get put:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word get put:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word get put:

    No occurrences

Checking class AlterTableStatement:

  Verifying word get put:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word get put:

    No occurrences

Checking class DropTableStatement:

  Verifying word get put:

    No occurrences

Checking class DropIndexStatement:

  Verifying word get put:

    No occurrences

Checking class TruncateStatement:

  Verifying word get put:

    No occurrences

Checking class GrantStatement:

  Verifying word get put:

    No occurrences

Checking class RevokeStatement:

  Verifying word get put:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word get put:

    No occurrences

Checking class CreateUserStatement:

  Verifying word get put:

    No occurrences

Checking class AlterUserStatement:

  Verifying word get put:

    No occurrences

Checking class DropUserStatement:

  Verifying word get put:

    No occurrences

Checking class ListUsersStatement:

  Verifying word get put:

    No occurrences

Checking class UserOptions:

  Verifying word get put:

    No occurrences

Checking class Constants$Literal:

  Verifying word get put:

    No occurrences

Checking class Term$Raw:

  Verifying word get put:

    No occurrences

Checking class Tuples$Literal:

  Verifying word get put:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word get put:

    No occurrences

Checking class Operation$Prepend:

  Verifying word get put:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word get put:

    No occurrences

Checking class MismatchedSetException:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word get put:

    No occurrences

Checking class Maps:

  Verifying word get put:

    No occurrences

Checking class DeleteStatement:

  Verifying word get put:

    No occurrences

Checking class Operation$SetValue:

  Verifying word get put:

    No occurrences

Checking class Token:

  Verifying word get put:

    No occurrences

Checking class NoViableAltException:

  Verifying word get put:

    No occurrences

Checking class UpdateStatement:

  Verifying word get put:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word get put:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word get put:

    No occurrences

Checking class TypeCast:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition:

  Verifying word get put:

    No occurrences

Checking class DFA:

  Verifying word get put:

    No occurrences

Checking class Sets:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word get put:

    No occurrences

Checking class Operation$Substraction:

  Verifying word get put:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word get put:

    No occurrences

Checking class Operation:

  Verifying word get put:

    No occurrences

Checking class Constants:

  Verifying word get put:

    No occurrences

Checking class Tuples:

  Verifying word get put:

    No occurrences

Checking class Operation$Addition:

  Verifying word get put:

    No occurrences

Checking class Lists:

  Verifying word get put:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word get put:

    No occurrences

Checking class KSPropDefs:

  Verifying word get put:

    No occurrences

Checking class FunctionCall:

  Verifying word get put:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word get put:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word get put:

    No occurrences

Checking class Operation$SetElement:

  Verifying word get put:

    No occurrences

Checking class AbstractMarker:

  Verifying word get put:

    No occurrences

Checking class Lists$Literal:

  Verifying word get put:

    No occurrences

Checking class Sets$Literal:

  Verifying word get put:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word get put:

    No occurrences

Checking class IndexPropDefs:

  Verifying word get put:

    No occurrences

Checking class Lexer:

  Verifying word get put:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word get put:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word get put:

    No occurrences

Checking class EarlyExitException:

  Verifying word get put:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word get put:

    No occurrences

Checking class CounterMutation:

  Verifying word get put:

    No occurrences

Checking class BatchStatement$1:

  Verifying word get put:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word get put:

    No occurrences

Checking class UpdateParameters:

  Verifying word get put:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word get put:

    No occurrences

Checking class CASConditions:

  Verifying word get put:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word get put:

    No occurrences

Checking class Ints:

  Verifying word get put:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word get put:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word get put:

    No occurrences

Checking class Ordering:

  Verifying word get put:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word get put:

    No occurrences

Checking class ImmutableSortedSet:

  Verifying word get put:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word get put:

    No occurrences

Checking class Predicates:

  Verifying word get put:

    No occurrences

Checking class Doubles:

  Verifying word get put:

    No occurrences

Checking class SimpleStrategy:

  Verifying word get put:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word get put:

    No occurrences

Checking class Int32Serializer:

  Verifying word get put:

    No occurrences

Checking class ListSerializer:

  Verifying word get put:

      Method: ListSerializer.getInstance()
      Calls Location: ListSerializer.java:36 ListSerializer.java:40
      Atomic: YES

Checking class DoubleSerializer:

  Verifying word get put:

    No occurrences

Checking class MapSerializer:

  Verifying word get put:

      Method: MapSerializer.getInstance()
      Calls Location: MapSerializer.java:39 MapSerializer.java:43
      Atomic: YES

Checking class BooleanSerializer:

  Verifying word get put:

    No occurrences

Checking class SetSerializer:

  Verifying word get put:

      Method: SetSerializer.getInstance()
      Calls Location: SetSerializer.java:36 SetSerializer.java:40
      Atomic: YES

Checking class EmptyType:

  Verifying word get put:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word get put:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word get put:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word get put:

    No occurrences

Checking class QueryFilter$2:

  Verifying word get put:

    No occurrences

Checking class QueryFilter$1:

  Verifying word get put:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word get put:

    No occurrences

Checking class Clock:

  Verifying word get put:

    No occurrences

Checking class PrepareResponse:

  Verifying word get put:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word get put:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word get put:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word get put:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word get put:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word get put:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word get put:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word get put:

    No occurrences

Checking class ExpiringMap:

  Verifying word get put:

    No occurrences

Checking class SimpleCondition:

  Verifying word get put:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word get put:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word get put:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word get put:

    No occurrences

Checking class CallbackInfo:

  Verifying word get put:

    No occurrences

Checking class MessagingService$1:

  Verifying word get put:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word get put:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word get put:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word get put:

    No occurrences

Checking class StatusLogger:

  Verifying word get put:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word get put:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word get put:

    No occurrences

Checking class SinkManager:

  Verifying word get put:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word get put:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word get put:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word get put:

    No occurrences

Checking class MessagingService$5:

  Verifying word get put:

    No occurrences

Checking class MessagingService$4:

  Verifying word get put:

    No occurrences

Checking class MessagingService$3:

  Verifying word get put:

    No occurrences

Checking class MessagingService$2:

  Verifying word get put:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word get put:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word get put:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word get put:

    No occurrences

Checking class CacheMetrics:

  Verifying word get put:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word get put:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word get put:

    No occurrences

Checking class ICache:

  Verifying word get put:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word get put:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word get put:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word get put:

      Method: Directories$SSTableLister$1.accept()
      Calls Location: Directories.java:424 Directories.java:428
      Atomic: NO

Checking class Files:

  Verifying word get put:

    No occurrences

Checking class SSTable$2:

  Verifying word get put:

    No occurrences

Checking class SSTable$1:

  Verifying word get put:

    No occurrences

Checking class CacheKey:

  Verifying word get put:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word get put:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word get put:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word get put:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word get put:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word get put:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word get put:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word get put:

    No occurrences

Checking class IntervalTree:

  Verifying word get put:

    No occurrences

Checking class Memory:

  Verifying word get put:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word get put:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word get put:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word get put:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word get put:

    No occurrences

Checking class WrappedRunnable:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word get put:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word get put:

    No occurrences

Checking class MetricNameFactory:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word get put:

    No occurrences

Checking class MetricsRegistry:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word get put:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word get put:

    No occurrences

Checking class MetricName:

  Verifying word get put:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word get put:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word get put:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word get put:

    No occurrences

Checking class ColumnIndex:

  Verifying word get put:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word get put:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word get put:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word get put:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word get put:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word get put:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word get put:

    No occurrences

Checking class SequentialWriter:

  Verifying word get put:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word get put:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word get put:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word get put:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word get put:

    No occurrences

Checking class CommitLogMBean:

  Verifying word get put:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word get put:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word get put:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word get put:

    No occurrences

Checking class CommitLogSegment:

  Verifying word get put:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word get put:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word get put:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word get put:

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:280 CommitLogReplayer.java:284
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:280 CommitLogReplayer.java:284
      Atomic: NO

Checking class BatchCommitLogExecutorService:

  Verifying word get put:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word get put:

    No occurrences

Checking class CommitLog$4:

  Verifying word get put:

    No occurrences

Checking class CommitLog$1:

  Verifying word get put:

    No occurrences

Checking class CommitLog$3:

  Verifying word get put:

    No occurrences

Checking class CommitLog$2:

  Verifying word get put:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word get put:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word get put:

    No occurrences

Checking class Directories$FileAction:

  Verifying word get put:

    No occurrences

Checking class Directories$2:

  Verifying word get put:

    No occurrences

Checking class Directories$1:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word get put:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word get put:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word get put:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word get put:

    No occurrences

Checking class PropertyUtils:

  Verifying word get put:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word get put:

    No occurrences

Checking class TypeDescription:

  Verifying word get put:

    No occurrences

Checking class Constructor:

  Verifying word get put:

    No occurrences

Checking class Yaml:

  Verifying word get put:

    No occurrences

Checking class NativeAllocator:

  Verifying word get put:

    No occurrences

Checking class CsvListReader:

  Verifying word get put:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word get put:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word get put:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word get put:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word get put:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word get put:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word get put:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word get put:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word get put:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word get put:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word get put:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word get put:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word get put:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word get put:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word get put:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word get put:

    No occurrences

Checking class BiMap:

  Verifying word get put:

    No occurrences

Checking class HashBiMap:

  Verifying word get put:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word get put:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word get put:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word get put:

    No occurrences

Checking class NamesQueryPager:

  Verifying word get put:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word get put:

    No occurrences

Checking class SliceQueryPager:

  Verifying word get put:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word get put:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word get put:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word get put:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word get put:

    No occurrences

Checking class QueryPagers$1:

  Verifying word get put:

    No occurrences

Checking class FrameDecoder:

  Verifying word get put:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word get put:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word get put:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word get put:

    No occurrences

Checking class TruncateException:

  Verifying word get put:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word get put:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word get put:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word get put:

    No occurrences

Checking class FloatSerializer:

  Verifying word get put:

    No occurrences

Checking class DecimalSerializer:

  Verifying word get put:

    No occurrences

Checking class IntegerSerializer:

  Verifying word get put:

    No occurrences

Checking class LSResourceResolver:

  Verifying word get put:

    No occurrences

Checking class UnavailableException:

  Verifying word get put:

    No occurrences

Checking class TimedOutException:

  Verifying word get put:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word get put:

    No occurrences

Checking class OptionCodec:

  Verifying word get put:

    No occurrences

Checking class DataType:

  Verifying word get put:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word get put:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word get put:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word get put:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word get put:

    No occurrences

Checking class Restriction$IN:

  Verifying word get put:

    No occurrences

Checking class Selection$Selector:

  Verifying word get put:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word get put:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word get put:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word get put:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word get put:

    No occurrences

Checking class Functions:

  Verifying word get put:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word get put:

    No occurrences

Checking class Function:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word get put:

    No occurrences

Checking class Term$Terminal:

  Verifying word get put:

    No occurrences

Checking class Tuples$Value:

  Verifying word get put:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word get put:

    No occurrences

Checking class IReadCommand:

  Verifying word get put:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word get put:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word get put:

    No occurrences

Checking class RowDataResolver:

  Verifying word get put:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word get put:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word get put:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word get put:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word get put:

    No occurrences

Checking class Lists$Marker:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word get put:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word get put:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word get put:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word get put:

    No occurrences

Checking class PrepareCallback:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$8:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$9:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$6:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$7:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$4:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$5:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$2:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$3:

  Verifying word get put:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$1:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word get put:

    No occurrences

Checking class ReadCallback:

  Verifying word get put:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word get put:

    No occurrences

Checking class DigestMismatchException:

  Verifying word get put:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word get put:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word get put:

    No occurrences

Checking class IResponseResolver:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word get put:

    No occurrences

Checking class RowDigestResolver:

  Verifying word get put:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word get put:

    No occurrences

Checking class ProposeCallback:

  Verifying word get put:

    No occurrences

Checking class Truncation:

  Verifying word get put:

    No occurrences

Checking class TriggerExecutor:

  Verifying word get put:

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:210 TriggerExecutor.java:188
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:210 TriggerExecutor.java:188
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:184 TriggerExecutor.java:188
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:184 TriggerExecutor.java:188
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:188
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:188
      Atomic: NO

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word get put:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word get put:

    No occurrences

Checking class ServerConnection$State:

  Verifying word get put:

    No occurrences

Checking class ServerConnection$1:

  Verifying word get put:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word get put:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word get put:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word get put:

    No occurrences

Checking class ChannelGroup:

  Verifying word get put:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word get put:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word get put:

    No occurrences

Checking class ExecutionHandler:

  Verifying word get put:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word get put:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word get put:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word get put:

    No occurrences

Checking class ClientMetrics:

  Verifying word get put:

    No occurrences

Checking class Server$1:

  Verifying word get put:

    No occurrences

Checking class Server$2:

  Verifying word get put:

    No occurrences

Checking class ServerBootstrap:

  Verifying word get put:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word get put:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word get put:

    No occurrences

Checking class Event$1:

  Verifying word get put:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word get put:

    No occurrences

Checking class Event$StatusChange:

  Verifying word get put:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word get put:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word get put:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word get put:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word get put:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word get put:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word get put:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word get put:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word get put:

    No occurrences

Checking class StreamEventHandler:

  Verifying word get put:

    No occurrences

Checking class StreamState:

  Verifying word get put:

    No occurrences

Checking class StreamEvent:

  Verifying word get put:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word get put:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word get put:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word get put:

    No occurrences

Checking class StreamSession:

  Verifying word get put:

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:310 StreamSession.java:314
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:310 StreamSession.java:666
      Atomic: NO

      Method: StreamSession.addTransferFiles()
      Calls Location: StreamSession.java:310 StreamSession.java:314
      Atomic: NO

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word get put:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word get put:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word get put:

    No occurrences

Checking class StreamManager$3:

  Verifying word get put:

    No occurrences

Checking class MoreExecutors:

  Verifying word get put:

    No occurrences

Checking class StreamManager$1:

  Verifying word get put:

    No occurrences

Checking class StreamManager$2:

  Verifying word get put:

    No occurrences

Checking class EchoMessage:

  Verifying word get put:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word get put:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word get put:

    No occurrences

Checking class SnapshotCommand:

  Verifying word get put:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word get put:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word get put:

    No occurrences

Checking class GossipDigest:

  Verifying word get put:

    No occurrences

Checking class GossipDigestAck:

  Verifying word get put:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word get put:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word get put:

    No occurrences

Checking class ArrivalWindow:

  Verifying word get put:

    No occurrences

Checking class HeartBeatState:

  Verifying word get put:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word get put:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word get put:

    No occurrences

Checking class RepairSession:

  Verifying word get put:

    No occurrences

Checking class RepairMessage:

  Verifying word get put:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word get put:

    No occurrences

Checking class SyncComplete:

  Verifying word get put:

    No occurrences

Checking class ValidationComplete:

  Verifying word get put:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word get put:

    No occurrences

Checking class NodePair:

  Verifying word get put:

    No occurrences

Checking class MerkleTree:

  Verifying word get put:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word get put:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word get put:

    No occurrences

Checking class RangeTransfer:

  Verifying word get put:

    No occurrences

Checking class ValidationRequest:

  Verifying word get put:

    No occurrences

Checking class SyncRequest:

  Verifying word get put:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word get put:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word get put:

    No occurrences

Checking class RangeSliceReply:

  Verifying word get put:

    No occurrences

Checking class TruncateResponse:

  Verifying word get put:

    No occurrences

Checking class GossiperMBean:

  Verifying word get put:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word get put:

    No occurrences

Checking class Gossiper$2:

  Verifying word get put:

    No occurrences

Checking class Gossiper$1:

  Verifying word get put:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word get put:

    No occurrences

Checking class Mx4jTool:

  Verifying word get put:

    No occurrences

Checking class ThriftServer:

  Verifying word get put:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word get put:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word get put:

    No occurrences

Checking class ReporterConfig:

  Verifying word get put:

    No occurrences

Checking class MeteredFlusher:

  Verifying word get put:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word get put:

    No occurrences

Checking class GCInspector:

  Verifying word get put:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word get put:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word get put:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word get put:

    No occurrences

Checking class Auth$1:

  Verifying word get put:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word get put:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word get put:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word get put:

    No occurrences

Checking class Multimaps:

  Verifying word get put:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word get put:

    No occurrences

Checking class StageManager$1:

  Verifying word get put:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word get put:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word get put:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word get put:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word get put:

    No occurrences

Checking class WriteResponse:

  Verifying word get put:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word get put:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word get put:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word get put:

    No occurrences

Checking class VersionGenerator:

  Verifying word get put:

    No occurrences

Checking class ReadResponse:

  Verifying word get put:

    No occurrences

Checking class AbstractFuture:

  Verifying word get put:

    No occurrences

Checking class ProgressInfo:

  Verifying word get put:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word get put:

    No occurrences

Checking class StreamException:

  Verifying word get put:

    No occurrences

Checking class SessionInfo:

  Verifying word get put:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word get put:

    No occurrences

Checking class ConnectionHandler:

  Verifying word get put:

    No occurrences

Checking class BooleanSerializer:

  Verifying word get put:

    No occurrences

Checking class Stage$1:

  Verifying word get put:

    No occurrences

Checking class AtomicDouble:

  Verifying word get put:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word get put:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word get put:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word get put:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word get put:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word get put:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word get put:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word get put:

    No occurrences

Checking class CorruptBlockException:

  Verifying word get put:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word get put:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word get put:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word get put:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word get put:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word get put:

    No occurrences

Checking class OpenBitSet:

  Verifying word get put:

    No occurrences

Checking class IBitSet:

  Verifying word get put:

    No occurrences

Checking class BloomFilter:

  Verifying word get put:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word get put:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word get put:

    No occurrences

Checking class BloomCalculations:

  Verifying word get put:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word get put:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word get put:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word get put:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word get put:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word get put:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word get put:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word get put:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word get put:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word get put:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word get put:

    No occurrences

Checking class MemoryInputStream:

  Verifying word get put:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word get put:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word get put:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word get put:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word get put:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word get put:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word get put:

    No occurrences

Checking class Scrubber$1:

  Verifying word get put:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word get put:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word get put:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word get put:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word get put:

    No occurrences

Checking class ColumnPath:

  Verifying word get put:

    No occurrences

Checking class Deletion:

  Verifying word get put:

    No occurrences

Checking class PreExecutionHook:

  Verifying word get put:

    No occurrences

Checking class PostPreparationHook:

  Verifying word get put:

    No occurrences

Checking class SelectStatement:

  Verifying word get put:

    No occurrences

Checking class CQLStatement:

  Verifying word get put:

    No occurrences

Checking class ExecutionContext:

  Verifying word get put:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word get put:

    No occurrences

Checking class UpdateStatement:

  Verifying word get put:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word get put:

      Method: CreateKeyspaceStatement.validate()
      Calls Location: CreateKeyspaceStatement.java:63 CreateKeyspaceStatement.java:63
      Atomic: NO

      Method: CreateKeyspaceStatement.validate()
      Calls Location: CreateKeyspaceStatement.java:58 CreateKeyspaceStatement.java:63
      Atomic: NO

Checking class Relation:

  Verifying word get put:

    No occurrences

Checking class DropIndexStatement:

  Verifying word get put:

    No occurrences

Checking class PreparationContext:

  Verifying word get put:

    No occurrences

Checking class DeleteStatement:

  Verifying word get put:

    No occurrences

Checking class RelationType:

  Verifying word get put:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word get put:

    No occurrences

Checking class RandomPartitioner:

  Verifying word get put:

    No occurrences

Checking class CqlParser:

  Verifying word get put:

    No occurrences

Checking class Term:

  Verifying word get put:

    No occurrences

Checking class StatementType:

  Verifying word get put:

    No occurrences

Checking class CqlLexer:

  Verifying word get put:

    No occurrences

Checking class AbstractModification:

  Verifying word get put:

    No occurrences

Checking class AlterTableStatement:

  Verifying word get put:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word get put:

    No occurrences

Checking class CliUtils:

  Verifying word get put:

    No occurrences

Checking class BatchStatement:

  Verifying word get put:

    No occurrences

Checking class DataResource$Level:

  Verifying word get put:

    No occurrences

Checking class DataResource$1:

  Verifying word get put:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word get put:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word get put:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word get put:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word get put:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word get put:

    No occurrences

Checking class SnapTreeMap:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word get put:

    No occurrences

Checking class MigrationTask$1:

  Verifying word get put:

    No occurrences

Checking class Stopwatch:

  Verifying word get put:

    No occurrences

Checking class FormattingTuple:

  Verifying word get put:

    No occurrences

Checking class MessageFormatter:

  Verifying word get put:

    No occurrences

Checking class TraceState$1:

  Verifying word get put:

    No occurrences

Checking class Lists$Prepender:

  Verifying word get put:

    No occurrences

Checking class TupleType:

  Verifying word get put:

    No occurrences

Checking class Tuples$Marker:

  Verifying word get put:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word get put:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word get put:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word get put:

    No occurrences

Checking class Maps$Setter:

  Verifying word get put:

    No occurrences

Checking class Maps$Value:

  Verifying word get put:

    No occurrences

Checking class Maps$Putter:

  Verifying word get put:

    No occurrences

Checking class Maps$Marker:

  Verifying word get put:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word get put:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word get put:

    No occurrences

Checking class Operation$1:

  Verifying word get put:

    No occurrences

Checking class Sets$Setter:

  Verifying word get put:

    No occurrences

Checking class Lists$Setter:

  Verifying word get put:

    No occurrences

Checking class Constants$Setter:

  Verifying word get put:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word get put:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word get put:

    No occurrences

Checking class AssignementTestable:

  Verifying word get put:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word get put:

    No occurrences

Checking class Constants$Value:

  Verifying word get put:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word get put:

    No occurrences

Checking class Constants$Deleter:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word get put:

    No occurrences

Checking class Sets$Discarder:

  Verifying word get put:

    No occurrences

Checking class Sets$Adder:

  Verifying word get put:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word get put:

    No occurrences

Checking class Sets$Value:

  Verifying word get put:

    No occurrences

Checking class Sets$Marker:

  Verifying word get put:

    No occurrences

Checking class Constants$Marker:

  Verifying word get put:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word get put:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word get put:

    No occurrences

Checking class PermissionDetails:

  Verifying word get put:

    No occurrences

Checking class Lists$Discarder:

  Verifying word get put:

    No occurrences

Checking class Constants$Substracter:

  Verifying word get put:

    No occurrences

Checking class Constants$Type:

  Verifying word get put:

    No occurrences

Checking class Constants$2:

  Verifying word get put:

    No occurrences

Checking class Constants$Adder:

  Verifying word get put:

    No occurrences

Checking class Constants$1:

  Verifying word get put:

    No occurrences

Checking class Tuples$InValue:

  Verifying word get put:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word get put:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word get put:

    No occurrences

Checking class Lists$Appender:

  Verifying word get put:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word get put:

    No occurrences

Checking class Lists$Value:

  Verifying word get put:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word get put:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word get put:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word get put:

    No occurrences

Checking class FunctionCall$1:

  Verifying word get put:

    No occurrences

Checking class ITrigger:

  Verifying word get put:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word get put:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word get put:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word get put:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word get put:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word get put:

    No occurrences

Checking class JsonNode:

  Verifying word get put:

    No occurrences

Checking class CollectionSerializer:

  Verifying word get put:

    No occurrences

Checking class EmptySerializer:

  Verifying word get put:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word get put:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word get put:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word get put:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word get put:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word get put:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word get put:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word get put:

    No occurrences

Checking class IMessageSink:

  Verifying word get put:

    No occurrences

Checking class IRequestSink:

  Verifying word get put:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word get put:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word get put:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word get put:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word get put:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word get put:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word get put:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word get put:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word get put:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word get put:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word get put:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word get put:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word get put:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word get put:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word get put:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word get put:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word get put:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word get put:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word get put:

    No occurrences

Checking class SerializingCache:

  Verifying word get put:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word get put:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word get put:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word get put:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word get put:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word get put:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word get put:

    No occurrences

Checking class IntervalTree$1:

  Verifying word get put:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word get put:

    No occurrences

Checking class IntervalTree$2:

  Verifying word get put:

    No occurrences

Checking class RatioGauge:

  Verifying word get put:

    No occurrences

Checking class IExecutorMBean:

  Verifying word get put:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word get put:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word get put:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word get put:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word get put:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word get put:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word get put:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word get put:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word get put:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word get put:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word get put:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word get put:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word get put:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word get put:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word get put:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word get put:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word get put:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word get put:

    No occurrences

Checking class CommitLogAllocator$5:

  Verifying word get put:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word get put:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word get put:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word get put:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word get put:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word get put:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word get put:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word get put:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word get put:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word get put:

    No occurrences

Checking class Strings:

  Verifying word get put:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word get put:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word get put:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word get put:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word get put:

    No occurrences

Checking class Property:

  Verifying word get put:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word get put:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word get put:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word get put:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word get put:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word get put:

    No occurrences

Checking class TreeMultimap:

  Verifying word get put:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word get put:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word get put:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word get put:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word get put:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word get put:

    No occurrences

Checking class LSInput:

  Verifying word get put:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word get put:

    No occurrences

Checking class DataType$1:

  Verifying word get put:

    No occurrences

Checking class UnsignedBytes:

  Verifying word get put:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word get put:

    No occurrences

Checking class Function$Factory:

  Verifying word get put:

    No occurrences

Checking class TokenFct:

  Verifying word get put:

    No occurrences

Checking class UuidFcts:

  Verifying word get put:

    No occurrences

Checking class AbstractFunction:

  Verifying word get put:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word get put:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word get put:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word get put:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word get put:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word get put:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word get put:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word get put:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word get put:

    No occurrences

Checking class ListMultimap:

  Verifying word get put:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word get put:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word get put:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word get put:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word get put:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word get put:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word get put:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word get put:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word get put:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word get put:

    No occurrences

Checking class TruncationSerializer:

  Verifying word get put:

    No occurrences

Checking class CustomClassLoader:

  Verifying word get put:

      Method: CustomClassLoader.loadClass()
      Calls Location: CustomClassLoader.java:101 CustomClassLoader.java:119
      Atomic: NO

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word get put:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word get put:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word get put:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word get put:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word get put:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word get put:

    No occurrences

Checking class StreamState$1:

  Verifying word get put:

    No occurrences

Checking class StreamingMetrics:

  Verifying word get put:

    No occurrences

Checking class StreamSession$State:

  Verifying word get put:

    No occurrences

Checking class StreamMessage:

  Verifying word get put:

    No occurrences

Checking class FileMessageHeader:

  Verifying word get put:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word get put:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word get put:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word get put:

    No occurrences

Checking class StreamTransferTask:

  Verifying word get put:

    No occurrences

Checking class StreamSummary:

  Verifying word get put:

    No occurrences

Checking class StreamTask:

  Verifying word get put:

    No occurrences

Checking class StreamRequest:

  Verifying word get put:

    No occurrences

Checking class RetryMessage:

  Verifying word get put:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word get put:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word get put:

    No occurrences

Checking class StreamSession$2:

  Verifying word get put:

    No occurrences

Checking class StreamSession$1:

  Verifying word get put:

    No occurrences

Checking class PrepareMessage:

  Verifying word get put:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word get put:

    No occurrences

Checking class ReceivedMessage:

  Verifying word get put:

    No occurrences

Checking class CompleteMessage:

  Verifying word get put:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word get put:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word get put:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word get put:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word get put:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word get put:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word get put:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word get put:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word get put:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word get put:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word get put:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word get put:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word get put:

    No occurrences

Checking class RepairException:

  Verifying word get put:

    No occurrences

Checking class RepairJob:

  Verifying word get put:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word get put:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word get put:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word get put:

    No occurrences

Checking class Preconditions:

  Verifying word get put:

    No occurrences

Checking class HistogramBuilder:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word get put:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word get put:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word get put:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word get put:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word get put:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word get put:

    No occurrences

Checking class CassandraServer:

  Verifying word get put:

    No occurrences

Checking class TFramedTransport$Factory:

  Verifying word get put:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word get put:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word get put:

    No occurrences

Checking class GCInspector$1:

  Verifying word get put:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word get put:

    No occurrences

Checking class SessionInfo$1:

  Verifying word get put:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word get put:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word get put:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word get put:

    No occurrences

Checking class FileCacheService:

  Verifying word get put:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word get put:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word get put:

    No occurrences

Checking class BitUtil:

  Verifying word get put:

    No occurrences

Checking class BloomFilter$1:

  Verifying word get put:

    No occurrences

Checking class MurmurHash:

  Verifying word get put:

    No occurrences

Checking class RefCountedMemory:

  Verifying word get put:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word get put:

    No occurrences

Checking class AbstractDataInput:

  Verifying word get put:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word get put:

    No occurrences

Checking class SelectExpression:

  Verifying word get put:

    No occurrences

Checking class WhereClause:

  Verifying word get put:

    No occurrences

Checking class Attributes:

  Verifying word get put:

    No occurrences

Checking class Operation:

  Verifying word get put:

    No occurrences

Checking class Optional:

  Verifying word get put:

    No occurrences

Checking class CFPropDefs:

  Verifying word get put:

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:134 CFPropDefs.java:138
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:134 CFPropDefs.java:144
      Atomic: NO

Checking class BigIntegerToken:

  Verifying word get put:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word get put:

    No occurrences

Checking class GuidGenerator:

  Verifying word get put:

    No occurrences

Checking class MissingTokenException:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word get put:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word get put:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word get put:

    No occurrences

Checking class TermType:

  Verifying word get put:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word get put:

    No occurrences

Checking class Operation$OperationType:

  Verifying word get put:

    No occurrences

Checking class Term$1:

  Verifying word get put:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word get put:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word get put:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word get put:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word get put:

    No occurrences

Checking class CommonToken:

  Verifying word get put:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word get put:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word get put:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word get put:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word get put:

    No occurrences

Checking class ComparisonChain:

  Verifying word get put:

    No occurrences

Checking class Constants$1$1:

  Verifying word get put:

    No occurrences

Checking class SnappyInputStream:

  Verifying word get put:

    No occurrences

Checking class StreamInitMessage:

  Verifying word get put:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word get put:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word get put:

    No occurrences

Checking class SerializingCache$1:

  Verifying word get put:

    No occurrences

Checking class SerializingCache$2:

  Verifying word get put:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word get put:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word get put:

    No occurrences

Checking class QueryPath:

  Verifying word get put:

    No occurrences

Checking class TokenFct$1:

  Verifying word get put:

    No occurrences

Checking class UuidFcts$1:

  Verifying word get put:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word get put:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word get put:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word get put:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word get put:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word get put:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word get put:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word get put:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word get put:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word get put:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word get put:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word get put:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word get put:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word get put:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word get put:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word get put:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word get put:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word get put:

    No occurrences

Checking class RetryMessage$1:

  Verifying word get put:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word get put:

    No occurrences

Checking class CompressionInfo:

  Verifying word get put:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word get put:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word get put:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word get put:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word get put:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word get put:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word get put:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word get put:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word get put:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word get put:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word get put:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word get put:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word get put:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word get put:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word get put:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word get put:

    No occurrences

Checking class RequestCoordinator:

  Verifying word get put:

    No occurrences

Checking class RepairJob$2:

  Verifying word get put:

    No occurrences

Checking class RepairJob$1:

  Verifying word get put:

    No occurrences

Checking class TreeResponse:

  Verifying word get put:

    No occurrences

Checking class Differencer:

  Verifying word get put:

    No occurrences

Checking class SnapshotTask:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word get put:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word get put:

    No occurrences

Checking class TServer:

  Verifying word get put:

    No occurrences

Checking class TServerFactory:

  Verifying word get put:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word get put:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word get put:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word get put:

    No occurrences

Checking class NotFoundException:

  Verifying word get put:

    No occurrences

Checking class CASResult:

  Verifying word get put:

    No occurrences

Checking class CfSplit:

  Verifying word get put:

    No occurrences

Checking class CassandraServer$3:

  Verifying word get put:

    No occurrences

Checking class CassandraServer$2:

  Verifying word get put:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word get put:

      Method: ThriftSessionManager.currentSession()
      Calls Location: ThriftSessionManager.java:57 ThriftSessionManager.java:61
      Atomic: NO

Checking class CassandraServer$1:

  Verifying word get put:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word get put:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word get put:

    No occurrences

Checking class SettableFuture:

  Verifying word get put:

    No occurrences

Checking class Cache:

  Verifying word get put:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word get put:

    No occurrences

Checking class FileCacheService$1:

  Verifying word get put:

    No occurrences

Checking class FileCacheService$2:

  Verifying word get put:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word get put:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word get put:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word get put:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word get put:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word get put:

    No occurrences

Checking class StreamWriter:

  Verifying word get put:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word get put:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word get put:

    No occurrences

Checking class StreamReader:

  Verifying word get put:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word get put:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word get put:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word get put:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word get put:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word get put:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word get put:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word get put:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word get put:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word get put:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word get put:

    No occurrences

Checking class RemovalNotification:

  Verifying word get put:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word get put:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word get put:

    No occurrences

Checking class LZFOutputStream:

  Verifying word get put:

    No occurrences

Checking class CompressedInputStream:

  Verifying word get put:

    No occurrences

Checking class BytesReadTracker:

  Verifying word get put:

    No occurrences

Checking class LZFInputStream:

  Verifying word get put:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word get put:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word get put:

    No occurrences

Checking class TNonblockingServer:

  Verifying word get put:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word get put:

    No occurrences

Checking class TServerTransport:

  Verifying word get put:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word get put:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word get put:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word get put:

    No occurrences

Checking class TServerSocket:

  Verifying word get put:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word get put:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word get put:

    No occurrences

Checking class TDisruptorServer:

  Verifying word get put:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word get put:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word get put:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word get put:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word get put:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word get put:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word get put:

    No occurrences

Checking class TCustomSocket:

  Verifying word get put:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word get put:

    No occurrences


Run Time:
                                .buildTree       0.022s
                                    .onLCA       0.113s
                         analysis-behavior      31.779s
                          analysis-threads       0.023s
                       build-parsing-table       0.554s
                       check-word-instance       0.005s
                               grammar-opt       2.370s
                        grammar-rm-epsilon      28.772s
                                   parsing       0.226s
                                 soot-init     139.105s
                                     total     385.907s

Profiling Vars:
                                 cfg-nodes     185745
                       grammar-productions       6167
                            parse-branches      26351
                               parse-trees         73
                      parsing-table-states       7398
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Options:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommandLineParser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StressThread:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PosixParser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommandLine:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StressAction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Session:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSlicer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Stress:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlInserter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Inserter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterGetter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterAdder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StressAction$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StressAction$Producer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Reader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Uninterruptibles:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StressStatistics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RateLimiter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Stress$Operations:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Timer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiGetter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Snapshot:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SyntaxException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EncryptionOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ITransportFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraClient:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleClient:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnDef:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFMetaData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Metrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeParser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CfDef:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TTransport:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StringUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Joiner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConfigurationException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class InvalidRequestException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KsDef:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UTF8Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeUUIDType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AsciiType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Document:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Element:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Node:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NodeList:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Text:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyRange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceRange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimerContext:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnParent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SlicePredicate:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Option:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQLOperation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UUIDGen:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlRow:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Column:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FBUtilities:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Mutation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SuperColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexOperator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexExpression:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexClause:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeySlice:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Cassandra$Client:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MD5Digest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Hex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$Response:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class InvalidRequestException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Logger:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnDefinition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionParameters:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFDefinition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Descriptor$Version:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowMutation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Row:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TriggerDefinition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositeType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstone:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Iterables:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFMetaData$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQLStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SuperColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFMetaData$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestValidationException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeletedColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamily:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OnDiskAtom:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateTableStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryProcessor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterColumnType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Descriptor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Schema:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ICompressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MapDifference:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UntypedResultSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SystemKeyspace:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParsedStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ToStringBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LoggerFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MarshalException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EqualsBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LongType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LZ4Compressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Column:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CollectionType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileDataInput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TFramedTransport:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexHelper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSlice:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReversedType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractType$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnavailableException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Keyspace:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProtocolException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Connection$Tracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Connection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ClientBootstrap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Channel:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelFuture:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Connection$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame$Compressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame$Encoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$Request:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleClient$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FrameCompressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ErrorMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CredentialsMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StartupMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TransportException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExecuteMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExceptionCode:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UTF8Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimestampSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AsciiSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DOMException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Attr:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DocumentType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DOMImplementation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DOMConfiguration:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NamedNodeMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UserDataHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CharacterData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQLOperation$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQLOperation$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSpecification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlMetadata:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectMapper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Pair:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TDeserializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Range:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IPartitioner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IAllocator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IAuthorizer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IAuthenticator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class JsonFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RingPosition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FBUtilities$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FBUtilities$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FBUtilities$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Token:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteComparisons:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$Direction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CBCodec:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadyMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SupportedMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthChallenge:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RegisterMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EventMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthSuccess:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OptionsMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelBuffer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ImmutableList:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositeType$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Interval:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeletionTime:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeSizes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ISerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Relation$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Relation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExpiringColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DecoratedKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LocalToken:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService:

  Verifying word shutdown awaitTermination:

      Method: StorageService.drain()
      Calls Location: StorageService.java:3577 StorageService.java:3578
      Atomic: YES

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:3577 StorageService.java:3578
      Atomic: NO

Checking class SSTableReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeysIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ImmutableMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnauthorizedException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestExecutionException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ClientState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ImmutableSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$SetView:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeletionInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TriggerDef:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Objects:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Allocator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HeapAllocator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnStats:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamingHistogram:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Functions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnsortedColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memtable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionController:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataTracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ICompactionScanner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Component:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFPropDefs:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFName:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateTableStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Permission:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SemanticVersion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MemoryMeter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchQueryOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tracing:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CharStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftClientState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommonTokenStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class INotificationConsumer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledManifest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Multimap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OperationType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LongSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KSMetaData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class InetAddressType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Int32Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimestampType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UUIDType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ListType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DoubleType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MapType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BooleanType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SetType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Row$RowSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReplayPosition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SetMultimap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterId:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PaxosState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Commit:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RestorableMeter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractBounds:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Token$KeyBound:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HashMultimap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EmptyColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DefsTables:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SystemKeyspace$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class VariableSpecifications:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IMutation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessageOut:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStoreMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DefaultInteger:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndexManager$Updater:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataTracker$View:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataRange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExtendedFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowCacheKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamLockfile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CollationController:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyCacheKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableMetadata:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Histogram:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Counter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Futures:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FSReadError:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionMetadata:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataRange$Paging:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LocalPartitioner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIndexEntry:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LatencyMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowPosition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AutoSavingCache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLog:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Gauge:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SeedProvider:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IRequestScheduler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FSWriteError:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NoScheduler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Longs:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SeedProviderDef:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DateType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFDefinition$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFDefinition$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LZ4Compressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LZ4Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Column$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FSError:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileUtils$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileUtils$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3Type$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectSizes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCounter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenMetadata:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Keyspace$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryPagers:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WriteType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FrameCompressor$LZ4Compressor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelPipeline:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame$Decoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Channels:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ServerError:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame$Header:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CBUtil:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthenticationException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelBuffers:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StartupMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Snappy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PagingState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessageEvent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExceptionEvent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SslHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSLFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FloatType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DecimalType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntegerType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DateUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UUIDSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DOMStringList:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftConversion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IResource:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IAsyncCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessageIn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Bounds:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Range$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Restriction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Restriction$Slice:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Bound:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExcludingBounds:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ServerConnection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthResponse$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Attributes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ModificationStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchMessage$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EventMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Relation$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterContext:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IContext:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IMergeIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MergeIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesSearcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraDaemon:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$Mode:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EndpointState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ApplicationState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class VersionedValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairFuture:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamResultFuture:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableLoader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Iterators:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FailureDetector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$8:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamPlan:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ActiveRepairService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenRange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeStreamer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Gossiper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LoadBroadcaster:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Auth:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutputHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BiMultiValMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StageManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BootStrapper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Level:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IFailureDetector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Logger:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Collections2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LocalStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EndpointDetails:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Stage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchlogManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LogManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexSummary:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class InstrumentingCache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableScanner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RandomAccessReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CLibrary:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FilterFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ICompressedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThrottledReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Multiset:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Validator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairJobDesc:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$10:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Meter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionIterable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Throwables:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Scrubber:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$8:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$9:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeysSearcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LoadingCache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataResource:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheLoader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftValidation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryProcessor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ClientState$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Resources:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UUIDSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrecompactedRow:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataTracker$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memtable$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memtable$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memtable$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Component$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Component$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Multiset$Entry:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HashMultiset:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IMigrationListener:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationManager$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TraceState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OverloadedException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tracing$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tracing$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Parser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BitSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$Raw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$Literal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UseStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RawSelector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Attributes$Raw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterTableStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DropTableStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DropIndexStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncateStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GrantStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RevokeStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateUserStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterUserStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DropUserStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ListUsersStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UserOptions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Literal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term$Raw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$Literal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$Prepend:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MismatchedSetException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeleteStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$SetValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Token:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NoViableAltException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UpdateStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeCast:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DFA:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$Substraction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$Addition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KSPropDefs:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FunctionCall:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$SetElement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractMarker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Literal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$Literal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexPropDefs:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lexer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EarlyExitException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterMutation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UpdateParameters:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CASConditions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Ints:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Ordering:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ImmutableSortedSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Predicates:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Doubles:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleStrategy:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Int32Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ListSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DoubleSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MapSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BooleanSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SetSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EmptyType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryFilter$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryFilter$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Clock:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExpiringMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleCondition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CallbackInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StatusLogger:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SinkManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessagingService$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ICache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Files:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTable$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTable$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntervalTree:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Memory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WrappedRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MetricNameFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MetricsRegistry:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MetricName:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SequentialWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogSegment:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchCommitLogExecutorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLog$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLog$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLog$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLog$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories$FileAction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Directories$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PropertyUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TypeDescription:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constructor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Yaml:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NativeAllocator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CsvListReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BiMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HashBiMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NamesQueryPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceQueryPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryPagers$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FrameDecoder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncateException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FloatSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DecimalSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntegerSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LSResourceResolver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnavailableException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimedOutException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OptionCodec:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Restriction$IN:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$Selector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Functions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Function:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term$Terminal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$Value:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IReadCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowDataResolver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Marker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$8:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$9:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$6:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DigestMismatchException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IResponseResolver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowDigestResolver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProposeCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Truncation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TriggerExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ServerConnection$State:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ServerConnection$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelGroup:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExecutionHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ClientMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ServerBootstrap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$StatusChange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEventHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEvent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSession:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamManager$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MoreExecutors:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamManager$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EchoMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnapshotCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestAck:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrivalWindow:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HeartBeatState:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairSession:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SyncComplete:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ValidationComplete:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NodePair:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTransfer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ValidationRequest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SyncRequest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceReply:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncateResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossiperMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Gossiper$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Gossiper$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Mx4jTool:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReporterConfig:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MeteredFlusher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GCInspector:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Auth$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Multimaps:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StageManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WriteResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class VersionGenerator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractFuture:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProgressInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BooleanSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Stage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AtomicDouble:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CorruptBlockException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OpenBitSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IBitSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BloomFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BloomCalculations:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MemoryInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Scrubber$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnPath:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Deletion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PreExecutionHook:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PostPreparationHook:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQLStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExecutionContext:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UpdateStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Relation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DropIndexStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PreparationContext:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DeleteStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RelationType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RandomPartitioner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StatementType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractModification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterTableStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CliUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataResource$Level:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataResource$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnapTreeMap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MigrationTask$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Stopwatch:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FormattingTuple:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MessageFormatter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TraceState$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Prepender:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TupleType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$Marker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$Setter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$Value:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$Putter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$Marker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$Setter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Setter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Setter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AssignementTestable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Value:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Deleter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$Discarder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$Adder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$Value:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Sets$Marker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Marker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PermissionDetails:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Discarder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Substracter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$Adder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$InValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Appender:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$Value:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FunctionCall$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ITrigger:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class JsonNode:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CollectionSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EmptySerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IMessageSink:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IRequestSink:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SerializingCache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntervalTree$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IntervalTree$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RatioGauge:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IExecutorMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogAllocator$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Strings:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Property:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TreeMultimap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LSInput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class DataType$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UnsignedBytes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Function$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenFct:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UuidFcts:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractFunction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ListMultimap:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TruncationSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomClassLoader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamState$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamingMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSession$State:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileMessageHeader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamTransferTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSummary:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamRequest:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RetryMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSession$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSession$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReceivedMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompleteMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairJob:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Preconditions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class HistogramBuilder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TFramedTransport$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GCInspector$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfo$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileCacheService:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BitUtil:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BloomFilter$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MurmurHash:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RefCountedMemory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractDataInput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SelectExpression:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class WhereClause:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Attributes:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Optional:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CFPropDefs:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BigIntegerToken:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GuidGenerator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MissingTokenException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TermType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Operation$OperationType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Term$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommonToken:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ComparisonChain:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Constants$1$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnappyInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamInitMessage:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SerializingCache$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SerializingCache$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class QueryPath:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TokenFct$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class UuidFcts$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RetryMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionInfo:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestCoordinator:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairJob$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RepairJob$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TreeResponse:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Differencer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnapshotTask:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TServerFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class NotFoundException:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CASResult:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CfSplit:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraServer$3:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraServer$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraServer$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SettableFuture:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class Cache:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileCacheService$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileCacheService$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamWriter:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class StreamReader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class RemovalNotification:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LZFOutputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class BytesReadTracker:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class LZFInputStream:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TNonblockingServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TServerTransport:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TServerSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TDisruptorServer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TCustomSocket:

  Verifying word shutdown awaitTermination:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word shutdown awaitTermination:

    No occurrences


Run Time:
                                .buildTree       0.030s
                                    .onLCA       0.169s
                         analysis-behavior      30.740s
                          analysis-threads       0.022s
                       build-parsing-table       0.109s
                       check-word-instance       0.001s
                               grammar-opt       2.667s
                        grammar-rm-epsilon      27.457s
                                   parsing       0.542s
                                 soot-init     149.141s
                                     total     394.808s

Profiling Vars:
                                 cfg-nodes     185745
                       grammar-productions       1974
                            parse-branches      16391
                               parse-trees          2
                      parsing-table-states       3539
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word hasNext next:

    No occurrences

Checking class Options:

  Verifying word hasNext next:

    No occurrences

Checking class CommandLineParser:

  Verifying word hasNext next:

    No occurrences

Checking class StressThread:

  Verifying word hasNext next:

    No occurrences

Checking class PosixParser:

  Verifying word hasNext next:

    No occurrences

Checking class CommandLine:

  Verifying word hasNext next:

    No occurrences

Checking class StressAction:

  Verifying word hasNext next:

    No occurrences

Checking class Session:

  Verifying word hasNext next:

      Method: Session.configureTransportFactory()
      Calls Location: Session.java:517 Session.java:517
      Atomic: NO

Checking class Operation:

  Verifying word hasNext next:

      Method: Operation.formatCqlQuery()
      Calls Location: Operation.java:279 Operation.java:279
      Atomic: NO

Checking class RangeSlicer:

  Verifying word hasNext next:

    No occurrences

Checking class Stress:

  Verifying word hasNext next:

      Method: Stress.printHelpMessage()
      Calls Location: Stress.java:105 Stress.java:105
      Atomic: NO

Checking class CqlInserter:

  Verifying word hasNext next:

    No occurrences

Checking class CqlReader:

  Verifying word hasNext next:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word hasNext next:

      Method: CqlIndexedRangeSlicer.getMaxKey()
      Calls Location: CqlIndexedRangeSlicer.java:141 CqlIndexedRangeSlicer.java:141
      Atomic: NO

      Method: CqlIndexedRangeSlicer.getMaxKey()
      Calls Location: CqlIndexedRangeSlicer.java:155 CqlIndexedRangeSlicer.java:155
      Atomic: NO

Checking class Inserter:

  Verifying word hasNext next:

      Method: Inserter.getSuperColumnsMutationMap()
      Calls Location: Inserter.java:115 Inserter.java:115
      Atomic: NO

      Method: Inserter.getColumnsMutationMap()
      Calls Location: Inserter.java:127 Inserter.java:127
      Atomic: NO

Checking class IndexedRangeSlicer:

  Verifying word hasNext next:

      Method: IndexedRangeSlicer.getMaxKey()
      Calls Location: IndexedRangeSlicer.java:122 IndexedRangeSlicer.java:122
      Atomic: NO

      Method: IndexedRangeSlicer.run()
      Calls Location: IndexedRangeSlicer.java:122 IndexedRangeSlicer.java:122
      Atomic: NO

Checking class CounterGetter:

  Verifying word hasNext next:

    No occurrences

Checking class CounterAdder:

  Verifying word hasNext next:

      Method: CounterAdder.getColumnsMutationMap()
      Calls Location: CounterAdder.java:131 CounterAdder.java:131
      Atomic: NO

      Method: CounterAdder.getSuperColumnsMutationMap()
      Calls Location: CounterAdder.java:115 CounterAdder.java:115
      Atomic: NO

Checking class StressAction$Consumer:

  Verifying word hasNext next:

    No occurrences

Checking class StressAction$1:

  Verifying word hasNext next:

    No occurrences

Checking class StressAction$Producer:

  Verifying word hasNext next:

    No occurrences

Checking class Reader:

  Verifying word hasNext next:

    No occurrences

Checking class Uninterruptibles:

  Verifying word hasNext next:

    No occurrences

Checking class StressStatistics:

  Verifying word hasNext next:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word hasNext next:

    No occurrences

Checking class RateLimiter:

  Verifying word hasNext next:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word hasNext next:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word hasNext next:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word hasNext next:

    No occurrences

Checking class Stress$Operations:

  Verifying word hasNext next:

    No occurrences

Checking class Timer:

  Verifying word hasNext next:

    No occurrences

Checking class MultiGetter:

  Verifying word hasNext next:

    No occurrences

Checking class Snapshot:

  Verifying word hasNext next:

    No occurrences

Checking class SyntaxException:

  Verifying word hasNext next:

    No occurrences

Checking class IndexType:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word hasNext next:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word hasNext next:

    No occurrences

Checking class EncryptionOptions:

  Verifying word hasNext next:

    No occurrences

Checking class ITransportFactory:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraClient:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleClient:

  Verifying word hasNext next:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnDef:

  Verifying word hasNext next:

    No occurrences

Checking class CFMetaData:

  Verifying word hasNext next:

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1456 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1456 CFMetaData.java:1320
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1864
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1837
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1075
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1075
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.<clinit>()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.<clinit>()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1394
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1392
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1387
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1381
      Atomic: NO

      Method: CFMetaData.rebuildCQL3Metadata()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1864
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1837
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.fromSchema()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1075
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.fromSchemaNoColumnsNoTriggers()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1764
      Atomic: NO

      Method: CFMetaData.fromSchemaNoColumnsNoTriggers()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1772
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:1075
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1453 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1453 CFMetaData.java:1320
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1520
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1576
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1533
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1524
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1573
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1509
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1520
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1576
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1533
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1524
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1573
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1509
      Atomic: NO

      Method: CFMetaData.toSchemaNoColumnsNoTriggers()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1756
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1576 CFMetaData.java:1576
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1573 CFMetaData.java:1576
      Atomic: NO

      Method: CFMetaData.getColumnDefinitionFromColumnName()
      Calls Location: CFMetaData.java:1245 CFMetaData.java:1245
      Atomic: NO

      Method: CFMetaData.copyOpts()
      Calls Location: CFMetaData.java:572 CFMetaData.java:572
      Atomic: NO

      Method: CFMetaData.rebuildCQL3Metadata()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.addColumnDefinitionsFromSchema()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.fromThriftForUpdate()
      Calls Location: CFMetaData.java:918 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.copyOpts()
      Calls Location: CFMetaData.java:572 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1081 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1078 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1075 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.addColumnDefinitionsFromSchema()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:1837
      Atomic: NO

      Method: CFMetaData.addTriggerDefinitionsFromSchema()
      Calls Location: CFMetaData.java:1864 CFMetaData.java:1864
      Atomic: NO

      Method: CFMetaData.dropFromSchema()
      Calls Location: CFMetaData.java:1560 CFMetaData.java:1560
      Atomic: NO

      Method: CFMetaData.dropFromSchema()
      Calls Location: CFMetaData.java:1563 CFMetaData.java:1563
      Atomic: NO

      Method: CFMetaData.dropFromSchema()
      Calls Location: CFMetaData.java:1560 CFMetaData.java:1563
      Atomic: NO

      Method: CFMetaData.toSchema()
      Calls Location: CFMetaData.java:1573 CFMetaData.java:1573
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1520 CFMetaData.java:1520
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1509 CFMetaData.java:1520
      Atomic: NO

      Method: CFMetaData.isDense()
      Calls Location: CFMetaData.java:2079 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.addColumnDefinitionsFromSchema()
      Calls Location: CFMetaData.java:1837 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.fromThriftForUpdate()
      Calls Location: CFMetaData.java:918 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.copyOpts()
      Calls Location: CFMetaData.java:572 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1081 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1078 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1075 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1533 CFMetaData.java:1533
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1524 CFMetaData.java:1533
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1520 CFMetaData.java:1533
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1509 CFMetaData.java:1533
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1524 CFMetaData.java:1524
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1520 CFMetaData.java:1524
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1509 CFMetaData.java:1524
      Atomic: NO

      Method: CFMetaData.fromThriftCqlRow()
      Calls Location: CFMetaData.java:1005 CFMetaData.java:1005
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1537 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1533 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1524 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1520 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1509 CFMetaData.java:1537
      Atomic: NO

      Method: CFMetaData.toSchemaNoColumnsNoTriggers()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1626
      Atomic: NO

      Method: CFMetaData.existingIndexNames()
      Calls Location: CFMetaData.java:1453 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.existingIndexNames()
      Calls Location: CFMetaData.java:1456 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1394 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1392 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1381 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1387 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1300 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1394 CFMetaData.java:1394
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1392 CFMetaData.java:1394
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1381 CFMetaData.java:1394
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1387 CFMetaData.java:1394
      Atomic: NO

      Method: CFMetaData.convertDroppedColumns()
      Calls Location: CFMetaData.java:1772 CFMetaData.java:1772
      Atomic: NO

      Method: CFMetaData.fromThriftCqlRow()
      Calls Location: CFMetaData.java:1005 CFMetaData.java:1772
      Atomic: NO

      Method: CFMetaData.validateColumns()
      Calls Location: CFMetaData.java:2151 CFMetaData.java:2151
      Atomic: NO

      Method: CFMetaData.aliasesFromStrings()
      Calls Location: CFMetaData.java:1764 CFMetaData.java:1764
      Atomic: NO

      Method: CFMetaData.fromThriftCqlRow()
      Calls Location: CFMetaData.java:1005 CFMetaData.java:1764
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1401 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1394 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1392 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1381 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1387 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1392 CFMetaData.java:1392
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1381 CFMetaData.java:1392
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1387 CFMetaData.java:1392
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1387 CFMetaData.java:1387
      Atomic: NO

      Method: CFMetaData.existingIndexNames()
      Calls Location: CFMetaData.java:1456 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.existingIndexNames()
      Calls Location: CFMetaData.java:1453 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1394 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1392 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1381 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1387 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1300 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.getColumnDefinitionForIndex()
      Calls Location: CFMetaData.java:1281 CFMetaData.java:1281
      Atomic: NO

      Method: CFMetaData.aliasesToJson()
      Calls Location: CFMetaData.java:1756 CFMetaData.java:1756
      Atomic: NO

      Method: CFMetaData.toSchemaNoColumnsNoTriggers()
      Calls Location: CFMetaData.java:1626 CFMetaData.java:1756
      Atomic: NO

      Method: CFMetaData.fromThriftForUpdate()
      Calls Location: CFMetaData.java:918 CFMetaData.java:918
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1300 CFMetaData.java:1300
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1381 CFMetaData.java:1381
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1320 CFMetaData.java:1320
      Atomic: NO

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1300 CFMetaData.java:1320
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1509 CFMetaData.java:1509
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1078 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1075 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.isThriftCompatible()
      Calls Location: CFMetaData.java:2125 CFMetaData.java:2125
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1075 CFMetaData.java:1075
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1081 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1078 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1075 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1075
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1078
      Atomic: NO

      Method: CFMetaData.reload()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1081
      Atomic: NO

      Method: CFMetaData.<clinit>()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:2079
      Atomic: NO

      Method: CFMetaData.<clinit>()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1942
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1453
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1401
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1394
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1392
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1387
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1456
      Atomic: NO

      Method: CFMetaData.validate()
      Calls Location: CFMetaData.java:1942 CFMetaData.java:1381
      Atomic: NO

    *** Timeout ***

Checking class Metrics:

  Verifying word hasNext next:

    No occurrences

Checking class TypeParser:

  Verifying word hasNext next:

      Method: TypeParser.stringifyAliasesParameters()
      Calls Location: TypeParser.java:480 TypeParser.java:482
      Atomic: NO

      Method: TypeParser.stringifyAliasesParameters()
      Calls Location: TypeParser.java:475 TypeParser.java:482
      Atomic: NO

      Method: TypeParser.stringifyAliasesParameters()
      Calls Location: TypeParser.java:475 TypeParser.java:477
      Atomic: NO

      Method: TypeParser.stringifyCollectionsParameters()
      Calls Location: TypeParser.java:504 TypeParser.java:504
      Atomic: NO

Checking class CfDef:

  Verifying word hasNext next:

    No occurrences

Checking class TTransport:

  Verifying word hasNext next:

    No occurrences

Checking class StringUtils:

  Verifying word hasNext next:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word hasNext next:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word hasNext next:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType:

  Verifying word hasNext next:

      Method: AbstractType.getColumnsString()
      Calls Location: AbstractType.java:203 AbstractType.java:203
      Atomic: NO

      Method: AbstractType.getString()
      Calls Location: AbstractType.java:192 AbstractType.java:192
      Atomic: NO

Checking class Joiner:

  Verifying word hasNext next:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word hasNext next:

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:280 ConsistencyLevel.java:280
      Atomic: NO

      Method: ConsistencyLevel.isSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:234 ConsistencyLevel.java:234
      Atomic: NO

      Method: ConsistencyLevel.countPerDCEndpoints()
      Calls Location: ConsistencyLevel.java:170 ConsistencyLevel.java:170
      Atomic: NO

      Method: ConsistencyLevel.countPerDCEndpoints()
      Calls Location: ConsistencyLevel.java:167 ConsistencyLevel.java:170
      Atomic: NO

      Method: ConsistencyLevel.countLocalEndpoints()
      Calls Location: ConsistencyLevel.java:156 ConsistencyLevel.java:156
      Atomic: NO

      Method: ConsistencyLevel.filterForQuery()
      Calls Location: ConsistencyLevel.java:203 ConsistencyLevel.java:203
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:266 ConsistencyLevel.java:266
      Atomic: NO

      Method: ConsistencyLevel.blockFor()
      Calls Location: ConsistencyLevel.java:130 ConsistencyLevel.java:130
      Atomic: NO

      Method: ConsistencyLevel.filterForQuery()
      Calls Location: ConsistencyLevel.java:203 ConsistencyLevel.java:130
      Atomic: NO

      Method: ConsistencyLevel.countPerDCEndpoints()
      Calls Location: ConsistencyLevel.java:167 ConsistencyLevel.java:167
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:130 ConsistencyLevel.java:170
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:130 ConsistencyLevel.java:280
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:130 ConsistencyLevel.java:156
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:130 ConsistencyLevel.java:266
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:130 ConsistencyLevel.java:167
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:170 ConsistencyLevel.java:280
      Atomic: NO

      Method: ConsistencyLevel.isSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:170 ConsistencyLevel.java:234
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:156 ConsistencyLevel.java:266
      Atomic: NO

      Method: ConsistencyLevel.isSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:156 ConsistencyLevel.java:130
      Atomic: NO

      Method: ConsistencyLevel.assureSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:167 ConsistencyLevel.java:280
      Atomic: NO

      Method: ConsistencyLevel.isSufficientLiveNodes()
      Calls Location: ConsistencyLevel.java:167 ConsistencyLevel.java:234
      Atomic: NO

Checking class ConfigurationException:

  Verifying word hasNext next:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word hasNext next:

    No occurrences

Checking class InvalidRequestException:

  Verifying word hasNext next:

    No occurrences

Checking class KsDef:

  Verifying word hasNext next:

    No occurrences

Checking class UTF8Type:

  Verifying word hasNext next:

    No occurrences

Checking class TimeUUIDType:

  Verifying word hasNext next:

    No occurrences

Checking class AsciiType:

  Verifying word hasNext next:

    No occurrences

Checking class Document:

  Verifying word hasNext next:

    No occurrences

Checking class Element:

  Verifying word hasNext next:

    No occurrences

Checking class Node:

  Verifying word hasNext next:

    No occurrences

Checking class NodeList:

  Verifying word hasNext next:

    No occurrences

Checking class Text:

  Verifying word hasNext next:

    No occurrences

Checking class KeyRange:

  Verifying word hasNext next:

    No occurrences

Checking class SliceRange:

  Verifying word hasNext next:

    No occurrences

Checking class TimerContext:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnParent:

  Verifying word hasNext next:

    No occurrences

Checking class SlicePredicate:

  Verifying word hasNext next:

    No occurrences

Checking class Option:

  Verifying word hasNext next:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word hasNext next:

    No occurrences

Checking class CQLOperation:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class UUIDGen:

  Verifying word hasNext next:

      Method: UUIDGen.hash()
      Calls Location: UUIDGen.java:315 UUIDGen.java:315
      Atomic: NO

Checking class ResultSet:

  Verifying word hasNext next:

      Method: ResultSet.toThriftResult()
      Calls Location: ResultSet.java:126 ResultSet.java:126
      Atomic: NO

      Method: ResultSet.toString()
      Calls Location: ResultSet.java:160 ResultSet.java:160
      Atomic: NO

      Method: ResultSet.toThriftResult()
      Calls Location: ResultSet.java:136 ResultSet.java:136
      Atomic: NO

      Method: ResultSet.toThriftResult()
      Calls Location: ResultSet.java:126 ResultSet.java:136
      Atomic: NO

Checking class CqlRow:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word hasNext next:

    No occurrences

Checking class Column:

  Verifying word hasNext next:

    No occurrences

Checking class FBUtilities:

  Verifying word hasNext next:

      Method: FBUtilities.waitOnFutures()
      Calls Location: FBUtilities.java:401 FBUtilities.java:401
      Atomic: NO

      Method: FBUtilities.waitOnFutures()
      Calls Location: FBUtilities.java:423 FBUtilities.java:423
      Atomic: NO

Checking class Mutation:

  Verifying word hasNext next:

    No occurrences

Checking class SuperColumn:

  Verifying word hasNext next:

    No occurrences

Checking class IndexOperator:

  Verifying word hasNext next:

    No occurrences

Checking class IndexExpression:

  Verifying word hasNext next:

    No occurrences

Checking class IndexClause:

  Verifying word hasNext next:

    No occurrences

Checking class KeySlice:

  Verifying word hasNext next:

    No occurrences

Checking class Cassandra$Client:

  Verifying word hasNext next:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word hasNext next:

    No occurrences

Checking class CounterColumn:

  Verifying word hasNext next:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lists:

  Verifying word hasNext next:

    No occurrences

Checking class MD5Digest:

  Verifying word hasNext next:

    No occurrences

Checking class Hex:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word hasNext next:

      Method: ResultMessage$Prepared.toThriftPreparedResult()
      Calls Location: ResultMessage.java:322 ResultMessage.java:322
      Atomic: NO

Checking class Message$Response:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word hasNext next:

    No occurrences

Checking class Message$Type:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class Message:

  Verifying word hasNext next:

    No occurrences

Checking class InvalidRequestException:

  Verifying word hasNext next:

    No occurrences

Checking class Logger:

  Verifying word hasNext next:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word hasNext next:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnDefinition:

  Verifying word hasNext next:

      Method: ColumnDefinition.toThrift()
      Calls Location: ColumnDefinition.java:190 ColumnDefinition.java:190
      Atomic: NO

      Method: ColumnDefinition.fromThrift()
      Calls Location: ColumnDefinition.java:236 ColumnDefinition.java:236
      Atomic: NO

      Method: ColumnDefinition.fromSchema()
      Calls Location: ColumnDefinition.java:311 ColumnDefinition.java:311
      Atomic: NO

Checking class CompressionParameters:

  Verifying word hasNext next:

      Method: CompressionParameters.copyOptions()
      Calls Location: CompressionParameters.java:208 CompressionParameters.java:208
      Atomic: NO

      Method: CompressionParameters.createCompressor()
      Calls Location: CompressionParameters.java:171 CompressionParameters.java:171
      Atomic: NO

      Method: CompressionParameters.create()
      Calls Location: CompressionParameters.java:208 CompressionParameters.java:171
      Atomic: NO

Checking class CFDefinition:

  Verifying word hasNext next:

      Method: CFDefinition.<init>()
      Calls Location: CFDefinition.java:101 CFDefinition.java:101
      Atomic: NO

      Method: CFDefinition.<init>()
      Calls Location: CFDefinition.java:96 CFDefinition.java:101
      Atomic: NO

      Method: CFDefinition.<init>()
      Calls Location: CFDefinition.java:96 CFDefinition.java:96
      Atomic: NO

Checking class ReadRepairDecision:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word hasNext next:

      Method: AbstractCompactionStrategy.getScanners()
      Calls Location: AbstractCompactionStrategy.java:271 AbstractCompactionStrategy.java:271
      Atomic: NO

      Method: AbstractCompactionStrategy.worthDroppingTombstones()
      Calls Location: AbstractCompactionStrategy.java:326 AbstractCompactionStrategy.java:326
      Atomic: NO

Checking class ColumnFamilyStore:

  Verifying word hasNext next:

      Method: ColumnFamilyStore.snapshot()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:1813
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:2019
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.snapshot()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:1819
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.snapshot()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:1813
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:2019
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.snapshot()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:1819
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.switchMemtable()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:774
      Atomic: NO

      Method: ColumnFamilyStore.switchMemtable()
      Calls Location: ColumnFamilyStore.java:781 ColumnFamilyStore.java:781
      Atomic: NO

      Method: ColumnFamilyStore.switchMemtable()
      Calls Location: ColumnFamilyStore.java:774 ColumnFamilyStore.java:781
      Atomic: NO

      Method: ColumnFamilyStore.getTotalAllMemtablesLiveSize()
      Calls Location: ColumnFamilyStore.java:1170 ColumnFamilyStore.java:1182
      Atomic: NO

      Method: ColumnFamilyStore.getTotalAllMemtablesLiveSize()
      Calls Location: ColumnFamilyStore.java:1170 ColumnFamilyStore.java:1170
      Atomic: NO

      Method: ColumnFamilyStore.getTotalAllMemtablesLiveSize()
      Calls Location: ColumnFamilyStore.java:1182 ColumnFamilyStore.java:1182
      Atomic: NO

      Method: ColumnFamilyStore.getAllMemtablesLiveSize()
      Calls Location: ColumnFamilyStore.java:1170 ColumnFamilyStore.java:1170
      Atomic: NO

      Method: ColumnFamilyStore.getTotalAllMemtablesLiveSize()
      Calls Location: ColumnFamilyStore.java:1182 ColumnFamilyStore.java:1170
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:476 ColumnFamilyStore.java:458
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:476 ColumnFamilyStore.java:499
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:476 ColumnFamilyStore.java:440
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:476 ColumnFamilyStore.java:476
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:458 ColumnFamilyStore.java:458
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:440 ColumnFamilyStore.java:458
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:499 ColumnFamilyStore.java:458
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:499 ColumnFamilyStore.java:499
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:458 ColumnFamilyStore.java:499
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:440 ColumnFamilyStore.java:499
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:440 ColumnFamilyStore.java:440
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:499 ColumnFamilyStore.java:440
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:458 ColumnFamilyStore.java:440
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:458 ColumnFamilyStore.java:476
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:440 ColumnFamilyStore.java:476
      Atomic: NO

      Method: ColumnFamilyStore.scrubDataDirectories()
      Calls Location: ColumnFamilyStore.java:499 ColumnFamilyStore.java:476
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:1973
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.snapshotWithoutFlush()
      Calls Location: ColumnFamilyStore.java:1813 ColumnFamilyStore.java:1813
      Atomic: NO

      Method: ColumnFamilyStore.snapshotWithoutFlush()
      Calls Location: ColumnFamilyStore.java:1819 ColumnFamilyStore.java:1813
      Atomic: NO

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:2019 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:2019 ColumnFamilyStore.java:2019
      Atomic: NO

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:2097
      Atomic: YES

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2097
      Atomic: YES

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:2019 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.snapshotWithoutFlush()
      Calls Location: ColumnFamilyStore.java:1819 ColumnFamilyStore.java:1819
      Atomic: NO

      Method: ColumnFamilyStore.snapshotWithoutFlush()
      Calls Location: ColumnFamilyStore.java:1813 ColumnFamilyStore.java:1819
      Atomic: NO

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2070
      Atomic: YES

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:2019 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2118
      Atomic: YES

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:2118
      Atomic: YES

      Method: ColumnFamilyStore.runWithCompactionsDisabled()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2118
      Atomic: YES

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:2019 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:1973
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2097 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:1973
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2070 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:1973
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:2118 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:1973 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:1973 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:1973 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:1973 ColumnFamilyStore.java:1973
      Atomic: NO

      Method: ColumnFamilyStore.clearUnsafe()
      Calls Location: ColumnFamilyStore.java:1973 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.invalidate()
      Calls Location: ColumnFamilyStore.java:345 ColumnFamilyStore.java:345
      Atomic: NO

      Method: ColumnFamilyStore.invalidate()
      Calls Location: ColumnFamilyStore.java:340 ColumnFamilyStore.java:345
      Atomic: NO

      Method: ColumnFamilyStore.invalidate()
      Calls Location: ColumnFamilyStore.java:340 ColumnFamilyStore.java:340
      Atomic: NO

      Method: ColumnFamilyStore.filter()
      Calls Location: ColumnFamilyStore.java:994 ColumnFamilyStore.java:995
      Atomic: NO

      Method: ColumnFamilyStore.removeDroppedColumns()
      Calls Location: ColumnFamilyStore.java:994 ColumnFamilyStore.java:995
      Atomic: NO

      Method: ColumnFamilyStore.getAndReferenceOverlappingSSTables()
      Calls Location: ColumnFamilyStore.java:1016 ColumnFamilyStore.java:1016
      Atomic: NO

      Method: ColumnFamilyStore.getOverlappingSSTables()
      Calls Location: ColumnFamilyStore.java:1016 ColumnFamilyStore.java:1016
      Atomic: NO

      Method: ColumnFamilyStore.cleanupCache()
      Calls Location: ColumnFamilyStore.java:1556 ColumnFamilyStore.java:1556
      Atomic: NO

      Method: ColumnFamilyStore.getSSTablesForKey()
      Calls Location: ColumnFamilyStore.java:1529 ColumnFamilyStore.java:1529
      Atomic: NO

      Method: ColumnFamilyStore.snapshot()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:1813
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:2019
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:2097
      Atomic: NO

      Method: ColumnFamilyStore.snapshot()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:1819
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:2070
      Atomic: NO

      Method: ColumnFamilyStore.truncateBlocking()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:2118
      Atomic: NO

      Method: ColumnFamilyStore.forceFlush()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:774
      Atomic: NO

      Method: ColumnFamilyStore.forceFlush()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:781
      Atomic: NO

      Method: ColumnFamilyStore.getMaxSizeFile()
      Calls Location: ColumnFamilyStore.java:1099 ColumnFamilyStore.java:1099
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:537 ColumnFamilyStore.java:556
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:521 ColumnFamilyStore.java:556
      Atomic: NO

      Method: ColumnFamilyStore.getExpectedCompactedFileSize()
      Calls Location: ColumnFamilyStore.java:1083 ColumnFamilyStore.java:1083
      Atomic: NO

      Method: ColumnFamilyStore.getExpectedCompactedFileSize()
      Calls Location: ColumnFamilyStore.java:1086 ColumnFamilyStore.java:1083
      Atomic: NO

      Method: ColumnFamilyStore.<init>()
      Calls Location: ColumnFamilyStore.java:275 ColumnFamilyStore.java:275
      Atomic: NO

      Method: ColumnFamilyStore.createColumnFamilyStore()
      Calls Location: ColumnFamilyStore.java:410 ColumnFamilyStore.java:275
      Atomic: YES

      Method: ColumnFamilyStore.getExpectedCompactedFileSize()
      Calls Location: ColumnFamilyStore.java:1086 ColumnFamilyStore.java:1086
      Atomic: NO

      Method: ColumnFamilyStore.getExpectedCompactedFileSize()
      Calls Location: ColumnFamilyStore.java:1083 ColumnFamilyStore.java:1086
      Atomic: NO

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:120 ColumnFamilyStore.java:120
      Atomic: NO

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:117 ColumnFamilyStore.java:120
      Atomic: NO

      Method: ColumnFamilyStore.all()
      Calls Location: ColumnFamilyStore.java:1947 ColumnFamilyStore.java:1947
      Atomic: NO

      Method: ColumnFamilyStore.oldestUnflushedMemtable()
      Calls Location: ColumnFamilyStore.java:2382 ColumnFamilyStore.java:2382
      Atomic: NO

      Method: ColumnFamilyStore.removeDeletedColumnsOnly()
      Calls Location: ColumnFamilyStore.java:957 ColumnFamilyStore.java:959
      Atomic: NO

      Method: ColumnFamilyStore.loadNewSSTables()
      Calls Location: ColumnFamilyStore.java:627 ColumnFamilyStore.java:627
      Atomic: YES

      Method: ColumnFamilyStore.loadNewSSTables()
      Calls Location: ColumnFamilyStore.java:622 ColumnFamilyStore.java:627
      Atomic: YES

      Method: ColumnFamilyStore.setCrcCheckChance()
      Calls Location: ColumnFamilyStore.java:215 ColumnFamilyStore.java:215
      Atomic: NO

      Method: ColumnFamilyStore.discardSSTables()
      Calls Location: ColumnFamilyStore.java:2416 ColumnFamilyStore.java:2416
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:521 ColumnFamilyStore.java:521
      Atomic: NO

      Method: ColumnFamilyStore.createColumnFamilyStore()
      Calls Location: ColumnFamilyStore.java:410 ColumnFamilyStore.java:410
      Atomic: YES

      Method: ColumnFamilyStore.keySamples()
      Calls Location: ColumnFamilyStore.java:1959 ColumnFamilyStore.java:1959
      Atomic: NO

      Method: ColumnFamilyStore.isClean()
      Calls Location: ColumnFamilyStore.java:843 ColumnFamilyStore.java:843
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:569 ColumnFamilyStore.java:569
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:537 ColumnFamilyStore.java:569
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:521 ColumnFamilyStore.java:569
      Atomic: NO

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:117 ColumnFamilyStore.java:781
      Atomic: NO

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:120 ColumnFamilyStore.java:781
      Atomic: NO

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:117 ColumnFamilyStore.java:117
      Atomic: NO

      Method: ColumnFamilyStore.getSnapshotSSTableReader()
      Calls Location: ColumnFamilyStore.java:1842 ColumnFamilyStore.java:1842
      Atomic: NO

      Method: ColumnFamilyStore.loadNewSSTables()
      Calls Location: ColumnFamilyStore.java:622 ColumnFamilyStore.java:622
      Atomic: YES

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:117 ColumnFamilyStore.java:774
      Atomic: NO

      Method: ColumnFamilyStore.reload()
      Calls Location: ColumnFamilyStore.java:120 ColumnFamilyStore.java:774
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:537 ColumnFamilyStore.java:537
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:521 ColumnFamilyStore.java:537
      Atomic: NO

Checking class Descriptor$Version:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word hasNext next:

    No occurrences

Checking class RowMutation:

  Verifying word hasNext next:

      Method: RowMutation.without()
      Calls Location: RowMutation.java:258 RowMutation.java:258
      Atomic: NO

      Method: RowMutation.toString()
      Calls Location: RowMutation.java:243 RowMutation.java:243
      Atomic: NO

      Method: RowMutation.addAll()
      Calls Location: RowMutation.java:194 RowMutation.java:194
      Atomic: NO

Checking class UntypedResultSet$Row:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word hasNext next:

    No occurrences

Checking class Row:

  Verifying word hasNext next:

    No occurrences

Checking class TriggerDefinition:

  Verifying word hasNext next:

      Method: TriggerDefinition.toThrift()
      Calls Location: TriggerDefinition.java:135 TriggerDefinition.java:135
      Atomic: NO

      Method: TriggerDefinition.fromThrift()
      Calls Location: TriggerDefinition.java:127 TriggerDefinition.java:127
      Atomic: NO

      Method: TriggerDefinition.fromSchema()
      Calls Location: TriggerDefinition.java:67 TriggerDefinition.java:67
      Atomic: NO

Checking class ColumnNameBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeType:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTombstone:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndex:

  Verifying word hasNext next:

      Method: SecondaryIndex.indexes()
      Calls Location: SecondaryIndex.java:289 SecondaryIndex.java:289
      Atomic: NO

      Method: SecondaryIndex.setIndexRemoved()
      Calls Location: SecondaryIndex.java:126 SecondaryIndex.java:126
      Atomic: NO

      Method: SecondaryIndex.setIndexBuilt()
      Calls Location: SecondaryIndex.java:120 SecondaryIndex.java:120
      Atomic: NO

      Method: SecondaryIndex.buildIndexAsync()
      Calls Location: SecondaryIndex.java:211 SecondaryIndex.java:211
      Atomic: NO

      Method: SecondaryIndex.removeColumnDef()
      Calls Location: SecondaryIndex.java:262 SecondaryIndex.java:264
      Atomic: NO

Checking class Iterables:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word hasNext next:

      Method: ColumnToCollectionType.isCompatibleWith()
      Calls Location: ColumnToCollectionType.java:122 ColumnToCollectionType.java:122
      Atomic: NO

Checking class CFMetaData$2:

  Verifying word hasNext next:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class CQLStatement:

  Verifying word hasNext next:

    No occurrences

Checking class SuperColumns:

  Verifying word hasNext next:

      Method: SuperColumns.serializedSize()
      Calls Location: SuperColumns.java:122 SuperColumns.java:122
      Atomic: NO

      Method: SuperColumns.serializedSize()
      Calls Location: SuperColumns.java:132 SuperColumns.java:122
      Atomic: NO

      Method: SuperColumns.deserializerSuperColumnFamily()
      Calls Location: SuperColumns.java:111 SuperColumns.java:112
      Atomic: NO

      Method: SuperColumns.serializeSuperColumnFamily()
      Calls Location: SuperColumns.java:64 SuperColumns.java:64
      Atomic: NO

      Method: SuperColumns.serializeSuperColumnFamily()
      Calls Location: SuperColumns.java:73 SuperColumns.java:64
      Atomic: NO

      Method: SuperColumns.fromSCNamesFilter()
      Calls Location: SuperColumns.java:370 SuperColumns.java:370
      Atomic: NO

      Method: SuperColumns.serializedSize()
      Calls Location: SuperColumns.java:132 SuperColumns.java:132
      Atomic: NO

      Method: SuperColumns.serializedSize()
      Calls Location: SuperColumns.java:122 SuperColumns.java:132
      Atomic: NO

      Method: SuperColumns.fromSCNamesFilter()
      Calls Location: SuperColumns.java:380 SuperColumns.java:380
      Atomic: NO

      Method: SuperColumns.namesFilterToSC()
      Calls Location: SuperColumns.java:265 SuperColumns.java:265
      Atomic: NO

      Method: SuperColumns.groupSuperColumns()
      Calls Location: SuperColumns.java:86 SuperColumns.java:86
      Atomic: NO

      Method: SuperColumns.serializeSuperColumnFamily()
      Calls Location: SuperColumns.java:73 SuperColumns.java:73
      Atomic: NO

      Method: SuperColumns.serializeSuperColumnFamily()
      Calls Location: SuperColumns.java:64 SuperColumns.java:73
      Atomic: NO

      Method: SuperColumns.serializedSize()
      Calls Location: SuperColumns.java:86 SuperColumns.java:122
      Atomic: NO

      Method: SuperColumns.serializeSuperColumnFamily()
      Calls Location: SuperColumns.java:86 SuperColumns.java:73
      Atomic: NO

      Method: SuperColumns.serializeSuperColumnFamily()
      Calls Location: SuperColumns.java:86 SuperColumns.java:64
      Atomic: NO

      Method: SuperColumns.serializedSize()
      Calls Location: SuperColumns.java:86 SuperColumns.java:132
      Atomic: NO

      Method: SuperColumns.deserializerSuperColumnFamily()
      Calls Location: SuperColumns.java:108 SuperColumns.java:112
      Atomic: NO

Checking class ArrayUtils:

  Verifying word hasNext next:

    No occurrences

Checking class CFMetaData$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class RequestValidationException:

  Verifying word hasNext next:

    No occurrences

Checking class DeletedColumn:

  Verifying word hasNext next:

    No occurrences

Checking class BytesType:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamily:

  Verifying word hasNext next:

      Method: ColumnFamily.equals()
      Calls Location: ColumnFamily.java:389 ColumnFamily.java:389
      Atomic: NO

      Method: ColumnFamily.hashCode()
      Calls Location: ColumnFamily.java:346 ColumnFamily.java:346
      Atomic: NO

      Method: ColumnFamily.maxTimestamp()
      Calls Location: ColumnFamily.java:335 ColumnFamily.java:335
      Atomic: NO

      Method: ColumnFamily.hasOnlyTombstones()
      Calls Location: ColumnFamily.java:463 ColumnFamily.java:463
      Atomic: NO

      Method: ColumnFamily.dataSize()
      Calls Location: ColumnFamily.java:327 ColumnFamily.java:327
      Atomic: NO

      Method: ColumnFamily.asMap()
      Calls Location: ColumnFamily.java:497 ColumnFamily.java:497
      Atomic: NO

      Method: ColumnFamily.getColumnStats()
      Calls Location: ColumnFamily.java:425 ColumnFamily.java:427
      Atomic: NO

      Method: ColumnFamily.diff()
      Calls Location: ColumnFamily.java:301 ColumnFamily.java:301
      Atomic: NO

      Method: ColumnFamily.hasIrrelevantData()
      Calls Location: ColumnFamily.java:487 ColumnFamily.java:487
      Atomic: NO

      Method: ColumnFamily.updateDigest()
      Calls Location: ColumnFamily.java:389 ColumnFamily.java:389
      Atomic: NO

      Method: ColumnFamily.getColumnStats()
      Calls Location: ColumnFamily.java:434 ColumnFamily.java:434
      Atomic: NO

      Method: ColumnFamily.getColumnStats()
      Calls Location: ColumnFamily.java:425 ColumnFamily.java:434
      Atomic: NO

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word hasNext next:

    No occurrences

Checking class OnDiskAtom:

  Verifying word hasNext next:

    No occurrences

Checking class CreateTableStatement:

  Verifying word hasNext next:

      Method: CreateTableStatement.getColumns()
      Calls Location: CreateTableStatement.java:104 CreateTableStatement.java:104
      Atomic: NO

Checking class QueryProcessor:

  Verifying word hasNext next:

      Method: QueryProcessor.validateCellNames()
      Calls Location: QueryProcessor.java:133 QueryProcessor.java:133
      Atomic: NO

Checking class LeveledCompactionStrategy:

  Verifying word hasNext next:

      Method: LeveledCompactionStrategy.getMaximalTask()
      Calls Location: LeveledCompactionStrategy.java:350 LeveledCompactionStrategy.java:350
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:202 LeveledCompactionStrategy.java:202
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:209 LeveledCompactionStrategy.java:202
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:198 LeveledCompactionStrategy.java:202
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:209 LeveledCompactionStrategy.java:209
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:202 LeveledCompactionStrategy.java:209
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:198 LeveledCompactionStrategy.java:209
      Atomic: NO

      Method: LeveledCompactionStrategy.findDroppableSSTable()
      Calls Location: LeveledCompactionStrategy.java:350 LeveledCompactionStrategy.java:350
      Atomic: NO

      Method: LeveledCompactionStrategy.getCompactionTask()
      Calls Location: LeveledCompactionStrategy.java:161 LeveledCompactionStrategy.java:161
      Atomic: NO

      Method: LeveledCompactionStrategy.getScanners()
      Calls Location: LeveledCompactionStrategy.java:198 LeveledCompactionStrategy.java:198
      Atomic: NO

Checking class CounterColumnType:

  Verifying word hasNext next:

    No occurrences

Checking class Descriptor:

  Verifying word hasNext next:

    No occurrences

Checking class Schema:

  Verifying word hasNext next:

      Method: Schema.load()
      Calls Location: Schema.java:113 Schema.java:98
      Atomic: NO

      Method: Schema.load()
      Calls Location: Schema.java:113 Schema.java:113
      Atomic: NO

      Method: Schema.clear()
      Calls Location: Schema.java:409 Schema.java:409
      Atomic: YES

      Method: Schema.clear()
      Calls Location: Schema.java:406 Schema.java:409
      Atomic: YES

      Method: Schema.clear()
      Calls Location: Schema.java:406 Schema.java:406
      Atomic: YES

      Method: Schema.clear()
      Calls Location: Schema.java:409 Schema.java:406
      Atomic: YES

      Method: Schema.load()
      Calls Location: Schema.java:113 Schema.java:113
      Atomic: NO

      Method: Schema.load()
      Calls Location: Schema.java:98 Schema.java:113
      Atomic: NO

      Method: Schema.load()
      Calls Location: Schema.java:98 Schema.java:98
      Atomic: NO

      Method: Schema.updateVersion()
      Calls Location: Schema.java:371 Schema.java:371
      Atomic: NO

      Method: Schema.clear()
      Calls Location: Schema.java:406 Schema.java:371
      Atomic: YES

      Method: Schema.clear()
      Calls Location: Schema.java:409 Schema.java:371
      Atomic: YES

Checking class ICompressor:

  Verifying word hasNext next:

    No occurrences

Checking class MapDifference:

  Verifying word hasNext next:

    No occurrences

Checking class UntypedResultSet:

  Verifying word hasNext next:

    No occurrences

Checking class SystemKeyspace:

  Verifying word hasNext next:

      Method: SystemKeyspace.readTruncationRecords()
      Calls Location: SystemKeyspace.java:329 SystemKeyspace.java:329
      Atomic: NO

      Method: SystemKeyspace.finishStartup()
      Calls Location: SystemKeyspace.java:110 SystemKeyspace.java:110
      Atomic: NO

      Method: SystemKeyspace.finishStartup()
      Calls Location: SystemKeyspace.java:115 SystemKeyspace.java:110
      Atomic: NO

      Method: SystemKeyspace.deserializeTokens()
      Calls Location: SystemKeyspace.java:413 SystemKeyspace.java:413
      Atomic: NO

      Method: SystemKeyspace.loadTokens()
      Calls Location: SystemKeyspace.java:467 SystemKeyspace.java:413
      Atomic: NO

      Method: SystemKeyspace.getOldLocalCounterIds()
      Calls Location: SystemKeyspace.java:748 SystemKeyspace.java:748
      Atomic: NO

      Method: SystemKeyspace.tokensAsSet()
      Calls Location: SystemKeyspace.java:399 SystemKeyspace.java:401
      Atomic: NO

      Method: SystemKeyspace.tokensAsSet()
      Calls Location: SystemKeyspace.java:402 SystemKeyspace.java:401
      Atomic: NO

      Method: SystemKeyspace.finishStartup()
      Calls Location: SystemKeyspace.java:115 SystemKeyspace.java:115
      Atomic: NO

      Method: SystemKeyspace.finishStartup()
      Calls Location: SystemKeyspace.java:110 SystemKeyspace.java:115
      Atomic: NO

      Method: SystemKeyspace.copyAllAliasesToColumnsProper()
      Calls Location: SystemKeyspace.java:130 SystemKeyspace.java:130
      Atomic: NO

      Method: SystemKeyspace.getUnfinishedCompactions()
      Calls Location: SystemKeyspace.java:216 SystemKeyspace.java:216
      Atomic: NO

      Method: SystemKeyspace.getUnfinishedCompactions()
      Calls Location: SystemKeyspace.java:228 SystemKeyspace.java:216
      Atomic: NO

      Method: SystemKeyspace.loadTokens()
      Calls Location: SystemKeyspace.java:467 SystemKeyspace.java:467
      Atomic: NO

      Method: SystemKeyspace.serializeSchema()
      Calls Location: SystemKeyspace.java:810 SystemKeyspace.java:810
      Atomic: NO

      Method: SystemKeyspace.loadHostIds()
      Calls Location: SystemKeyspace.java:484 SystemKeyspace.java:484
      Atomic: NO

      Method: SystemKeyspace.getUnfinishedCompactions()
      Calls Location: SystemKeyspace.java:228 SystemKeyspace.java:228
      Atomic: NO

      Method: SystemKeyspace.getUnfinishedCompactions()
      Calls Location: SystemKeyspace.java:216 SystemKeyspace.java:228
      Atomic: NO

      Method: SystemKeyspace.loadDcRackInfo()
      Calls Location: SystemKeyspace.java:510 SystemKeyspace.java:510
      Atomic: NO

      Method: SystemKeyspace.getSchema()
      Calls Location: SystemKeyspace.java:830 SystemKeyspace.java:830
      Atomic: NO

      Method: SystemKeyspace.finishStartup()
      Calls Location: SystemKeyspace.java:130 SystemKeyspace.java:115
      Atomic: NO

      Method: SystemKeyspace.finishStartup()
      Calls Location: SystemKeyspace.java:130 SystemKeyspace.java:110
      Atomic: NO

      Method: SystemKeyspace.loadTokens()
      Calls Location: SystemKeyspace.java:413 SystemKeyspace.java:467
      Atomic: NO

      Method: SystemKeyspace.loadTokens()
      Calls Location: SystemKeyspace.java:413 SystemKeyspace.java:413
      Atomic: NO

      Method: SystemKeyspace.updateLocalTokens()
      Calls Location: SystemKeyspace.java:413 SystemKeyspace.java:401
      Atomic: YES

      Method: SystemKeyspace.serializeSchema()
      Calls Location: SystemKeyspace.java:810 SystemKeyspace.java:810
      Atomic: NO

Checking class ParsedStatement:

  Verifying word hasNext next:

    No occurrences

Checking class ToStringBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word hasNext next:

    No occurrences

Checking class Maps:

  Verifying word hasNext next:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word hasNext next:

      Method: DatabaseDescriptor.applyConfig()
      Calls Location: DatabaseDescriptor.java:439 DatabaseDescriptor.java:439
      Atomic: NO

      Method: DatabaseDescriptor.applyConfig()
      Calls Location: DatabaseDescriptor.java:480 DatabaseDescriptor.java:480
      Atomic: NO

      Method: DatabaseDescriptor.applyConfig()
      Calls Location: DatabaseDescriptor.java:439 DatabaseDescriptor.java:480
      Atomic: NO

Checking class LoggerFactory:

  Verifying word hasNext next:

    No occurrences

Checking class MarshalException:

  Verifying word hasNext next:

    No occurrences

Checking class EqualsBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class LongType:

  Verifying word hasNext next:

    No occurrences

Checking class LZ4Compressor:

  Verifying word hasNext next:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word hasNext next:

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.trimToThresholdWithHotness()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:71 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getHotnessMap()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:155 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:212 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.filterColdSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:119
      Atomic: NO

      Method: SizeTieredCompactionStrategy.trimToThresholdWithHotness()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.mostInterestingBucket()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:305
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:312
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:341
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:282
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:221 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:341
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:305
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:312
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:341
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:341
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getBuckets()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:305
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getBuckets()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:305
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getBuckets()
      Calls Location: SizeTieredCompactionStrategy.java:312 SizeTieredCompactionStrategy.java:312
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getBuckets()
      Calls Location: SizeTieredCompactionStrategy.java:305 SizeTieredCompactionStrategy.java:312
      Atomic: NO

      Method: SizeTieredCompactionStrategy.updateEstimatedCompactionsByTasks()
      Calls Location: SizeTieredCompactionStrategy.java:341 SizeTieredCompactionStrategy.java:341
      Atomic: NO

      Method: SizeTieredCompactionStrategy.createSSTableAndLengthPairs()
      Calls Location: SizeTieredCompactionStrategy.java:282 SizeTieredCompactionStrategy.java:282
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:71
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:155
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:221
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:305
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:312
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:341
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:282
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:212
      Atomic: NO

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:71
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:155
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:119
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:305
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:221
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:312
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:341
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:282
      Atomic: YES

      Method: SizeTieredCompactionStrategy.getNextBackgroundTask()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:212
      Atomic: YES

      Method: SizeTieredCompactionStrategy.filterColdSSTables()
      Calls Location: SizeTieredCompactionStrategy.java:119 SizeTieredCompactionStrategy.java:119
      Atomic: NO

Checking class Column:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionType:

  Verifying word hasNext next:

      Method: CollectionType.pack()
      Calls Location: CollectionType.java:124 CollectionType.java:124
      Atomic: NO

      Method: CollectionType.pack()
      Calls Location: CollectionType.java:103 CollectionType.java:103
      Atomic: NO

      Method: CollectionType.pack()
      Calls Location: CollectionType.java:124 CollectionType.java:103
      Atomic: NO

Checking class ByteBufferUtil$1:

  Verifying word hasNext next:

    No occurrences

Checking class FileUtils:

  Verifying word hasNext next:

      Method: FileUtils.close()
      Calls Location: FileUtils.java:228 FileUtils.java:228
      Atomic: NO

Checking class FileDataInput:

  Verifying word hasNext next:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word hasNext next:

    No occurrences

Checking class TFramedTransport:

  Verifying word hasNext next:

    No occurrences

Checking class TSocket:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3Type:

  Verifying word hasNext next:

    No occurrences

Checking class TypeSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word hasNext next:

      Method: SliceQueryFilter.trim()
      Calls Location: SliceQueryFilter.java:260 SliceQueryFilter.java:262
      Atomic: NO

      Method: SliceQueryFilter.trim()
      Calls Location: SliceQueryFilter.java:268 SliceQueryFilter.java:262
      Atomic: NO

      Method: SliceQueryFilter.trim()
      Calls Location: SliceQueryFilter.java:268 SliceQueryFilter.java:270
      Atomic: NO

      Method: SliceQueryFilter.trim()
      Calls Location: SliceQueryFilter.java:260 SliceQueryFilter.java:270
      Atomic: NO

      Method: SliceQueryFilter.collectReducedColumns()
      Calls Location: SliceQueryFilter.java:185 SliceQueryFilter.java:187
      Atomic: NO

Checking class IndexHelper:

  Verifying word hasNext next:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnSlice:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType$6:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType$4:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType$5:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType$3:

  Verifying word hasNext next:

    No occurrences

Checking class ReversedType:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType$2:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractType$1:

  Verifying word hasNext next:

    No occurrences

Checking class UnavailableException:

  Verifying word hasNext next:

    No occurrences

Checking class Keyspace:

  Verifying word hasNext next:

      Method: Keyspace.getAllSSTables()
      Calls Location: Keyspace.java:257 Keyspace.java:257
      Atomic: NO

      Method: Keyspace.snapshotExists()
      Calls Location: Keyspace.java:231 Keyspace.java:231
      Atomic: NO

      Method: Keyspace.clear()
      Calls Location: Keyspace.java:138 Keyspace.java:138
      Atomic: YES

      Method: Keyspace.indexRow()
      Calls Location: Keyspace.java:404 Keyspace.java:406
      Atomic: NO

      Method: Keyspace.indexRow()
      Calls Location: Keyspace.java:408 Keyspace.java:406
      Atomic: NO

      Method: Keyspace.<init>()
      Calls Location: Keyspace.java:269 Keyspace.java:269
      Atomic: NO

      Method: Keyspace.flush()
      Calls Location: Keyspace.java:425 Keyspace.java:425
      Atomic: NO

      Method: Keyspace.indexRow()
      Calls Location: Keyspace.java:408 Keyspace.java:408
      Atomic: NO

      Method: Keyspace.indexRow()
      Calls Location: Keyspace.java:404 Keyspace.java:408
      Atomic: NO

      Method: Keyspace.open()
      Calls Location: Keyspace.java:118 Keyspace.java:118
      Atomic: YES

      Method: Keyspace.apply()
      Calls Location: Keyspace.java:364 Keyspace.java:364
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:152 Keyspace.java:152
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:154 Keyspace.java:152
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:156 Keyspace.java:152
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:154 Keyspace.java:154
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:156 Keyspace.java:154
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:152 Keyspace.java:154
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:156 Keyspace.java:156
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:154 Keyspace.java:156
      Atomic: NO

      Method: Keyspace.removeUnreadableSSTables()
      Calls Location: Keyspace.java:152 Keyspace.java:156
      Atomic: NO

      Method: Keyspace.snapshot()
      Calls Location: Keyspace.java:195 Keyspace.java:195
      Atomic: NO

      Method: Keyspace.open()
      Calls Location: Keyspace.java:269 Keyspace.java:118
      Atomic: YES

Checking class IEndpointSnitch:

  Verifying word hasNext next:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word hasNext next:

    No occurrences

Checking class ProtocolException:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word hasNext next:

      Method: AbstractReplicationStrategy.validateExpectedOptions()
      Calls Location: AbstractReplicationStrategy.java:321 AbstractReplicationStrategy.java:321
      Atomic: NO

      Method: AbstractReplicationStrategy.getAddressRanges()
      Calls Location: AbstractReplicationStrategy.java:169 AbstractReplicationStrategy.java:169
      Atomic: NO

      Method: AbstractReplicationStrategy.getAddressRanges()
      Calls Location: AbstractReplicationStrategy.java:172 AbstractReplicationStrategy.java:169
      Atomic: NO

      Method: AbstractReplicationStrategy.getRangeAddresses()
      Calls Location: AbstractReplicationStrategy.java:188 AbstractReplicationStrategy.java:188
      Atomic: NO

      Method: AbstractReplicationStrategy.getRangeAddresses()
      Calls Location: AbstractReplicationStrategy.java:185 AbstractReplicationStrategy.java:188
      Atomic: NO

      Method: AbstractReplicationStrategy.getAddressRanges()
      Calls Location: AbstractReplicationStrategy.java:172 AbstractReplicationStrategy.java:172
      Atomic: NO

      Method: AbstractReplicationStrategy.getAddressRanges()
      Calls Location: AbstractReplicationStrategy.java:169 AbstractReplicationStrategy.java:172
      Atomic: NO

      Method: AbstractReplicationStrategy.getRangeAddresses()
      Calls Location: AbstractReplicationStrategy.java:185 AbstractReplicationStrategy.java:185
      Atomic: NO

      Method: AbstractReplicationStrategy.getRangeAddresses()
      Calls Location: AbstractReplicationStrategy.java:188 AbstractReplicationStrategy.java:185
      Atomic: NO

Checking class NetworkTopologyStrategy:

  Verifying word hasNext next:

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:141 NetworkTopologyStrategy.java:143
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:110 NetworkTopologyStrategy.java:143
      Atomic: NO

      Method: NetworkTopologyStrategy.hasSufficientReplicas()
      Calls Location: NetworkTopologyStrategy.java:162 NetworkTopologyStrategy.java:162
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:110 NetworkTopologyStrategy.java:162
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:141 NetworkTopologyStrategy.java:162
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:110 NetworkTopologyStrategy.java:112
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:141 NetworkTopologyStrategy.java:112
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:162 NetworkTopologyStrategy.java:143
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:162 NetworkTopologyStrategy.java:162
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:162 NetworkTopologyStrategy.java:112
      Atomic: NO

      Method: NetworkTopologyStrategy.validateOptions()
      Calls Location: NetworkTopologyStrategy.java:189 NetworkTopologyStrategy.java:189
      Atomic: NO

      Method: NetworkTopologyStrategy.<init>()
      Calls Location: NetworkTopologyStrategy.java:61 NetworkTopologyStrategy.java:61
      Atomic: NO

      Method: NetworkTopologyStrategy.getReplicationFactor()
      Calls Location: NetworkTopologyStrategy.java:171 NetworkTopologyStrategy.java:171
      Atomic: NO

Checking class SimpleClient$ResponseHandler:

  Verifying word hasNext next:

    No occurrences

Checking class Connection$Tracker:

  Verifying word hasNext next:

    No occurrences

Checking class Connection:

  Verifying word hasNext next:

    No occurrences

Checking class ClientBootstrap:

  Verifying word hasNext next:

    No occurrences

Checking class Channel:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelFuture:

  Verifying word hasNext next:

    No occurrences

Checking class Connection$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word hasNext next:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word hasNext next:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word hasNext next:

    No occurrences

Checking class Frame$Compressor:

  Verifying word hasNext next:

    No occurrences

Checking class Frame$Encoder:

  Verifying word hasNext next:

    No occurrences

Checking class Message$Request:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleClient$1:

  Verifying word hasNext next:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word hasNext next:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word hasNext next:

    No occurrences

Checking class FrameCompressor:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ErrorMessage:

  Verifying word hasNext next:

    No occurrences

Checking class CredentialsMessage:

  Verifying word hasNext next:

    No occurrences

Checking class StartupMessage:

  Verifying word hasNext next:

      Method: StartupMessage.upperCaseKeys()
      Calls Location: StartupMessage.java:115 StartupMessage.java:115
      Atomic: NO

Checking class PrepareMessage:

  Verifying word hasNext next:

    No occurrences

Checking class QueryMessage:

  Verifying word hasNext next:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word hasNext next:

    No occurrences

Checking class Frame:

  Verifying word hasNext next:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word hasNext next:

    No occurrences

Checking class TransportException:

  Verifying word hasNext next:

    No occurrences

Checking class QueryOptions:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ExecuteMessage:

  Verifying word hasNext next:

    No occurrences

Checking class ExceptionCode:

  Verifying word hasNext next:

    No occurrences

Checking class UTF8Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word hasNext next:

    No occurrences

Checking class TimestampSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class AsciiSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class DOMException:

  Verifying word hasNext next:

    No occurrences

Checking class Attr:

  Verifying word hasNext next:

    No occurrences

Checking class TypeInfo:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentType:

  Verifying word hasNext next:

    No occurrences

Checking class DOMImplementation:

  Verifying word hasNext next:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word hasNext next:

    No occurrences

Checking class DOMConfiguration:

  Verifying word hasNext next:

    No occurrences

Checking class NamedNodeMap:

  Verifying word hasNext next:

    No occurrences

Checking class UserDataHandler:

  Verifying word hasNext next:

    No occurrences

Checking class CharacterData:

  Verifying word hasNext next:

    No occurrences

Checking class CQLOperation$1:

  Verifying word hasNext next:

    No occurrences

Checking class CQLOperation$2:

  Verifying word hasNext next:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word hasNext next:

      Method: ResultSet$Codec.encodedSize()
      Calls Location: ResultSet.java:225 ResultSet.java:225
      Atomic: NO

      Method: ResultSet$Codec.encodedSize()
      Calls Location: ResultSet.java:227 ResultSet.java:225
      Atomic: NO

      Method: ResultSet$Codec.encodedSize()
      Calls Location: ResultSet.java:227 ResultSet.java:227
      Atomic: NO

      Method: ResultSet$Codec.encodedSize()
      Calls Location: ResultSet.java:225 ResultSet.java:227
      Atomic: NO

      Method: ResultSet$Codec.encode()
      Calls Location: ResultSet.java:215 ResultSet.java:215
      Atomic: NO

      Method: ResultSet$Codec.encode()
      Calls Location: ResultSet.java:217 ResultSet.java:215
      Atomic: NO

      Method: ResultSet$Codec.encode()
      Calls Location: ResultSet.java:217 ResultSet.java:217
      Atomic: NO

      Method: ResultSet$Codec.encode()
      Calls Location: ResultSet.java:215 ResultSet.java:217
      Atomic: NO

Checking class ColumnIdentifier:

  Verifying word hasNext next:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word hasNext next:

      Method: ResultSet$Metadata.allInSameCF()
      Calls Location: ResultSet.java:275 ResultSet.java:277
      Atomic: NO

      Method: ResultSet$Metadata.toString()
      Calls Location: ResultSet.java:310 ResultSet.java:310
      Atomic: NO

Checking class ColumnSpecification:

  Verifying word hasNext next:

    No occurrences

Checking class CqlMetadata:

  Verifying word hasNext next:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word hasNext next:

      Method: ResultSet$Flag.serialize()
      Calls Location: ResultSet.java:453 ResultSet.java:453
      Atomic: NO

Checking class ResultMessage$Rows$1:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectMapper:

  Verifying word hasNext next:

    No occurrences

Checking class Pair:

  Verifying word hasNext next:

    No occurrences

Checking class TSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class TDeserializer:

  Verifying word hasNext next:

    No occurrences

Checking class Range:

  Verifying word hasNext next:

      Method: Range.isInRanges()
      Calls Location: Range.java:336 Range.java:336
      Atomic: NO

      Method: Range.normalize()
      Calls Location: Range.java:391 Range.java:419
      Atomic: NO

      Method: Range.deoverlap()
      Calls Location: Range.java:422 Range.java:435
      Atomic: NO

      Method: Range.normalize()
      Calls Location: Range.java:391 Range.java:435
      Atomic: NO

      Method: Range.normalize()
      Calls Location: Range.java:391 Range.java:391
      Atomic: NO

Checking class IPartitioner:

  Verifying word hasNext next:

    No occurrences

Checking class IAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class IAuthorizer:

  Verifying word hasNext next:

    No occurrences

Checking class IAuthenticator:

  Verifying word hasNext next:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word hasNext next:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class JsonFactory:

  Verifying word hasNext next:

    No occurrences

Checking class RingPosition:

  Verifying word hasNext next:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word hasNext next:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word hasNext next:

      Method: FBUtilities$WrappedCloseableIterator.computeNext()
      Calls Location: FBUtilities.java:640 FBUtilities.java:642
      Atomic: NO

Checking class FBUtilities$2:

  Verifying word hasNext next:

    No occurrences

Checking class FBUtilities$1:

  Verifying word hasNext next:

    No occurrences

Checking class FBUtilities$3:

  Verifying word hasNext next:

    No occurrences

Checking class Token:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteComparisons:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement:

  Verifying word hasNext next:

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1195
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1195
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1062
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1062
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1160
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1160
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1185
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1185
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1270
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1270
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1241
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1241
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1207
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1207
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1127
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1127
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1105
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1105
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1253
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1253
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1098
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:1098
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:935
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:828
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:860
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:913
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:949
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:938
      Atomic: NO

      Method: SelectStatement.getKeyBounds()
      Calls Location: SelectStatement.java:826 SelectStatement.java:896
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:826 SelectStatement.java:290
      Atomic: NO

      Method: SelectStatement.getSliceCommands()
      Calls Location: SelectStatement.java:826 SelectStatement.java:346
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:935
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:828
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:985
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:860
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:913
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:949
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:938
      Atomic: NO

      Method: SelectStatement.getRangeCommand()
      Calls Location: SelectStatement.java:826 SelectStatement.java:896
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:935
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:828
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:860
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:913
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:949
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:938
      Atomic: NO

      Method: SelectStatement.makeFilter()
      Calls Location: SelectStatement.java:826 SelectStatement.java:896
      Atomic: NO

    *** Timeout ***

Checking class Message$Direction:

  Verifying word hasNext next:

    No occurrences

Checking class CBCodec:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word hasNext next:

    No occurrences

Checking class ReadyMessage:

  Verifying word hasNext next:

    No occurrences

Checking class SupportedMessage:

  Verifying word hasNext next:

    No occurrences

Checking class AuthResponse:

  Verifying word hasNext next:

    No occurrences

Checking class BatchMessage:

  Verifying word hasNext next:

    No occurrences

Checking class AuthChallenge:

  Verifying word hasNext next:

    No occurrences

Checking class RegisterMessage:

  Verifying word hasNext next:

      Method: RegisterMessage.execute()
      Calls Location: RegisterMessage.java:71 RegisterMessage.java:71
      Atomic: NO

Checking class EventMessage:

  Verifying word hasNext next:

    No occurrences

Checking class AuthSuccess:

  Verifying word hasNext next:

    No occurrences

Checking class OptionsMessage:

  Verifying word hasNext next:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word hasNext next:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word hasNext next:

      Method: AbstractCompositeType.fromString()
      Calls Location: AbstractCompositeType.java:247 AbstractCompositeType.java:247
      Atomic: NO

      Method: AbstractCompositeType.fromString()
      Calls Location: AbstractCompositeType.java:226 AbstractCompositeType.java:247
      Atomic: NO

      Method: AbstractCompositeType.fromString()
      Calls Location: AbstractCompositeType.java:226 AbstractCompositeType.java:226
      Atomic: NO

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word hasNext next:

    No occurrences

Checking class ImmutableList:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeType$1:

  Verifying word hasNext next:

    No occurrences

Checking class Interval:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class DeletionTime:

  Verifying word hasNext next:

    No occurrences

Checking class TypeSizes:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word hasNext next:

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:164 RangeTombstone.java:166
      Atomic: NO

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:154 RangeTombstone.java:166
      Atomic: NO

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:175 RangeTombstone.java:175
      Atomic: NO

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:154 RangeTombstone.java:175
      Atomic: NO

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:164 RangeTombstone.java:175
      Atomic: NO

      Method: RangeTombstone$Tracker.update()
      Calls Location: RangeTombstone.java:221 RangeTombstone.java:223
      Atomic: NO

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:154 RangeTombstone.java:154
      Atomic: NO

      Method: RangeTombstone$Tracker.writeOpenedMarker()
      Calls Location: RangeTombstone.java:164 RangeTombstone.java:154
      Atomic: NO

      Method: RangeTombstone$Tracker.update()
      Calls Location: RangeTombstone.java:203 RangeTombstone.java:203
      Atomic: NO

      Method: RangeTombstone$Tracker.isDeleted()
      Calls Location: RangeTombstone.java:242 RangeTombstone.java:242
      Atomic: NO

Checking class ISerializer:

  Verifying word hasNext next:

    No occurrences

Checking class Relation$Type:

  Verifying word hasNext next:

    No occurrences

Checking class Relation:

  Verifying word hasNext next:

    No occurrences

Checking class ExpiringColumn:

  Verifying word hasNext next:

    No occurrences

Checking class CounterColumn:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word hasNext next:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word hasNext next:

      Method: SecondaryIndexSearcher.highestSelectivityPredicate()
      Calls Location: SecondaryIndexSearcher.java:59 SecondaryIndexSearcher.java:59
      Atomic: NO

Checking class DecoratedKey:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word hasNext next:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word hasNext next:

      Method: ReducingKeyIterator.getBytesRead()
      Calls Location: ReducingKeyIterator.java:82 ReducingKeyIterator.java:82
      Atomic: NO

      Method: ReducingKeyIterator.getTotalBytes()
      Calls Location: ReducingKeyIterator.java:72 ReducingKeyIterator.java:72
      Atomic: NO

      Method: ReducingKeyIterator.<init>()
      Calls Location: ReducingKeyIterator.java:40 ReducingKeyIterator.java:40
      Atomic: NO

Checking class CompositesIndex:

  Verifying word hasNext next:

    No occurrences

Checking class LocalToken:

  Verifying word hasNext next:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService:

  Verifying word hasNext next:

      Method: StorageService.relocateTokens()
      Calls Location: StorageService.java:3296 StorageService.java:3298
      Atomic: NO

      Method: StorageService.streamHints()
      Calls Location: StorageService.java:3066 StorageService.java:3068
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:3567
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:3569
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:3551
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:3559
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:3553
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:3546
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:2023
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:2040
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1597
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1903
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1855
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:2057
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1676
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1911
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1970
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1966
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1985
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1689
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1983
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1976
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1903 StorageService.java:1433
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:1903 StorageService.java:1855
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1911
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1966
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1983
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1985
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1976
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:2023
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:2040
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1970
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1903 StorageService.java:1903
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:3761 StorageService.java:3068
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:3779 StorageService.java:3068
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:3567
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:3569
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:3551
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:3559
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:3553
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:3546
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:2023
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:2040
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1597
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1903
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1855
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:2057
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1676
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1911
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1970
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1966
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1985
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1689
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1983
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1976
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1976 StorageService.java:1433
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:1976 StorageService.java:1855
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:3567
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:3569
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:3551
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:3559
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:3553
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:3546
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:2023
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:2040
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1597
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1903
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1855
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:2057
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1676
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1911
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1970
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1966
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1985
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1689
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1983
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1976
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:2023 StorageService.java:1433
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1855
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:3752
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:3761
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:2023
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:2023
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:2023
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:2040
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:2040
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:2040
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:3779
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1903
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1903
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:3784
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1911
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1911
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:3068
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:3429
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1970
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1970
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1966
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1966
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1985
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1985
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1983
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1983
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:2023 StorageService.java:1976
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:1976
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:2023 StorageService.java:3419
      Atomic: NO

      Method: StorageService.unbootstrap()
      Calls Location: StorageService.java:2023 StorageService.java:3026
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:3567
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:3569
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:3551
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:3559
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:3553
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:3546
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:2023
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:2040
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1597
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1903
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1855
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:2057
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1676
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1911
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1970
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1966
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1985
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1689
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1983
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1976
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1911 StorageService.java:1433
      Atomic: NO

      Method: StorageService.removeNode()
      Calls Location: StorageService.java:1911 StorageService.java:1855
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1911
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1966
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1983
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1985
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1976
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:2023
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:2040
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1970
      Atomic: NO

      Method: StorageService.restoreReplicaCount()
      Calls Location: StorageService.java:1911 StorageService.java:1903
      Atomic: NO

    *** Timeout ***

Checking class SSTableReader:

  Verifying word hasNext next:

      Method: SSTableReader.estimatedKeysForRanges()
      Calls Location: SSTableReader.java:687 SSTableReader.java:664
      Atomic: NO

      Method: SSTableReader.getPositionsForRanges()
      Calls Location: SSTableReader.java:934 SSTableReader.java:780
      Atomic: NO

      Method: SSTableReader.getPositionsForRanges()
      Calls Location: SSTableReader.java:934 SSTableReader.java:936
      Atomic: NO

      Method: SSTableReader.acquireReferences()
      Calls Location: SSTableReader.java:1404 SSTableReader.java:1404
      Atomic: NO

      Method: SSTableReader.firstKeyBeyond()
      Calls Location: SSTableReader.java:1025 SSTableReader.java:1027
      Atomic: NO

      Method: SSTableReader.acquireReferences()
      Calls Location: SSTableReader.java:1416 SSTableReader.java:1416
      Atomic: NO

      Method: SSTableReader.acquireReferences()
      Calls Location: SSTableReader.java:1404 SSTableReader.java:1416
      Atomic: NO

      Method: SSTableReader.getSampleIndexesForRanges()
      Calls Location: SSTableReader.java:687 SSTableReader.java:687
      Atomic: NO

      Method: SSTableReader.getPositionsForRanges()
      Calls Location: SSTableReader.java:780 SSTableReader.java:780
      Atomic: NO

      Method: SSTableReader.getPosition()
      Calls Location: SSTableReader.java:934 SSTableReader.java:936
      Atomic: NO

      Method: SSTableReader.getPositionsForRanges()
      Calls Location: SSTableReader.java:780 SSTableReader.java:936
      Atomic: NO

      Method: SSTableReader.openAll()
      Calls Location: SSTableReader.java:255 SSTableReader.java:255
      Atomic: NO

      Method: SSTableReader.preheat()
      Calls Location: SSTableReader.java:826 SSTableReader.java:826
      Atomic: NO

      Method: SSTableReader.getApproximateKeyCount()
      Calls Location: SSTableReader.java:116 SSTableReader.java:116
      Atomic: NO

      Method: SSTableReader.estimatedKeysForRanges()
      Calls Location: SSTableReader.java:664 SSTableReader.java:664
      Atomic: NO

      Method: SSTableReader.createLinks()
      Calls Location: SSTableReader.java:1211 SSTableReader.java:1211
      Atomic: NO

      Method: SSTableReader.releaseReferences()
      Calls Location: SSTableReader.java:1427 SSTableReader.java:1427
      Atomic: NO

Checking class CompactionManager:

  Verifying word hasNext next:

      Method: CompactionManager.forceUserDefinedCompaction()
      Calls Location: CompactionManager.java:325 CompactionManager.java:325
      Atomic: NO

      Method: CompactionManager.stopCompaction()
      Calls Location: CompactionManager.java:1082 CompactionManager.java:1082
      Atomic: NO

      Method: CompactionManager.doCleanupCompaction()
      Calls Location: CompactionManager.java:534 CompactionManager.java:534
      Atomic: NO

      Method: CompactionManager.doValidationCompaction()
      Calls Location: CompactionManager.java:809 CompactionManager.java:809
      Atomic: NO

      Method: CompactionManager.disableAutoCompaction()
      Calls Location: CompactionManager.java:417 CompactionManager.java:417
      Atomic: NO

      Method: CompactionManager.disableAutoCompaction()
      Calls Location: CompactionManager.java:415 CompactionManager.java:417
      Atomic: NO

      Method: CompactionManager.doValidationCompaction()
      Calls Location: CompactionManager.java:809 CompactionManager.java:809
      Atomic: NO

      Method: CompactionManager.disableAutoCompaction()
      Calls Location: CompactionManager.java:415 CompactionManager.java:415
      Atomic: NO

      Method: CompactionManager.disableAutoCompaction()
      Calls Location: CompactionManager.java:417 CompactionManager.java:415
      Atomic: NO

      Method: CompactionManager.lookupSSTable()
      Calls Location: CompactionManager.java:375 CompactionManager.java:375
      Atomic: NO

      Method: CompactionManager.interruptCompactionFor()
      Calls Location: CompactionManager.java:1144 CompactionManager.java:1144
      Atomic: NO

      Method: CompactionManager.isCompacting()
      Calls Location: CompactionManager.java:163 CompactionManager.java:163
      Atomic: NO

      Method: CompactionManager.getCompactions()
      Calls Location: CompactionManager.java:1006 CompactionManager.java:1006
      Atomic: NO

      Method: CompactionManager.doScrub()
      Calls Location: CompactionManager.java:432 CompactionManager.java:432
      Atomic: NO

      Method: CompactionManager.getCompactionSummary()
      Calls Location: CompactionManager.java:1015 CompactionManager.java:1015
      Atomic: NO

Checking class KeysIndex:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class BytesSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ImmutableMap:

  Verifying word hasNext next:

    No occurrences

Checking class UnauthorizedException:

  Verifying word hasNext next:

    No occurrences

Checking class RequestExecutionException:

  Verifying word hasNext next:

    No occurrences

Checking class ClientState:

  Verifying word hasNext next:

      Method: ClientState.ensureHasPermission()
      Calls Location: ClientState.java:223 ClientState.java:223
      Atomic: NO

Checking class QueryState:

  Verifying word hasNext next:

    No occurrences

Checking class ImmutableSet:

  Verifying word hasNext next:

    No occurrences

Checking class Sets$SetView:

  Verifying word hasNext next:

    No occurrences

Checking class Sets:

  Verifying word hasNext next:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word hasNext next:

      Method: CompressionParameters$Serializer.serializedSize()
      Calls Location: CompressionParameters.java:354 CompressionParameters.java:354
      Atomic: NO

      Method: CompressionParameters$Serializer.serialize()
      Calls Location: CompressionParameters.java:318 CompressionParameters.java:318
      Atomic: NO

Checking class SuperColumns$SCFilter:

  Verifying word hasNext next:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word hasNext next:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word hasNext next:

      Method: NamesQueryFilter.collectReducedColumns()
      Calls Location: NamesQueryFilter.java:98 NamesQueryFilter.java:99
      Atomic: NO

      Method: NamesQueryFilter.getLiveCount()
      Calls Location: NamesQueryFilter.java:132 NamesQueryFilter.java:132
      Atomic: NO

      Method: NamesQueryFilter.maySelectPrefix()
      Calls Location: NamesQueryFilter.java:142 NamesQueryFilter.java:142
      Atomic: NO

Checking class DeletionInfo:

  Verifying word hasNext next:

      Method: DeletionInfo.rangesAsString()
      Calls Location: DeletionInfo.java:304 DeletionInfo.java:306
      Atomic: NO

Checking class SuperColumns$SCIterator:

  Verifying word hasNext next:

      Method: SuperColumns$SCIterator.next()
      Calls Location: SuperColumns.java:167 SuperColumns.java:169
      Atomic: NO

      Method: SuperColumns$SCIterator.next()
      Calls Location: SuperColumns.java:178 SuperColumns.java:169
      Atomic: NO

Checking class DeletionInfo$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class TriggerDef:

  Verifying word hasNext next:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word hasNext next:

    No occurrences

Checking class Objects:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraException:

  Verifying word hasNext next:

    No occurrences

Checking class Allocator:

  Verifying word hasNext next:

    No occurrences

Checking class HeapAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word hasNext next:

      Method: ColumnFamilySerializer.contentSerializedSize()
      Calls Location: ColumnFamilySerializer.java:133 ColumnFamilySerializer.java:133
      Atomic: NO

      Method: ColumnFamilySerializer.serialize()
      Calls Location: ColumnFamilySerializer.java:75 ColumnFamilySerializer.java:75
      Atomic: NO

Checking class ColumnFamily$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnStats:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word hasNext next:

      Method: ColumnNameHelper.minimalBuffersFor()
      Calls Location: ColumnNameHelper.java:210 ColumnNameHelper.java:210
      Atomic: NO

Checking class StreamingHistogram:

  Verifying word hasNext next:

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:92
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:126
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:93
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:99
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:126 StreamingHistogram.java:92
      Atomic: NO

      Method: StreamingHistogram.update()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:92
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:126 StreamingHistogram.java:126
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:126 StreamingHistogram.java:93
      Atomic: NO

      Method: StreamingHistogram.update()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:93
      Atomic: NO

      Method: StreamingHistogram.update()
      Calls Location: StreamingHistogram.java:96 StreamingHistogram.java:99
      Atomic: NO

      Method: StreamingHistogram.merge()
      Calls Location: StreamingHistogram.java:126 StreamingHistogram.java:99
      Atomic: NO

      Method: StreamingHistogram.sum()
      Calls Location: StreamingHistogram.java:145 StreamingHistogram.java:145
      Atomic: NO

      Method: StreamingHistogram.sum()
      Calls Location: StreamingHistogram.java:159 StreamingHistogram.java:159
      Atomic: NO

Checking class TreeMapBackedSortedColumns:

  Verifying word hasNext next:

      Method: TreeMapBackedSortedColumns.addAll()
      Calls Location: TreeMapBackedSortedColumns.java:104 TreeMapBackedSortedColumns.java:104
      Atomic: NO

Checking class ImmutableMap$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class Functions:

  Verifying word hasNext next:

    No occurrences

Checking class UnsortedColumns:

  Verifying word hasNext next:

      Method: UnsortedColumns.addAll()
      Calls Location: UnsortedColumns.java:90 UnsortedColumns.java:90
      Atomic: NO

Checking class AbstractCompactionTask:

  Verifying word hasNext next:

      Method: AbstractCompactionTask.<init>()
      Calls Location: AbstractCompactionTask.java:48 AbstractCompactionTask.java:48
      Atomic: NO

Checking class Memtable:

  Verifying word hasNext next:

      Method: Memtable.contents()
      Calls Location: Memtable.java:236 Memtable.java:236
      Atomic: NO

Checking class CompactionController:

  Verifying word hasNext next:

      Method: CompactionController.shouldPurge()
      Calls Location: CompactionController.java:156 CompactionController.java:156
      Atomic: NO

      Method: CompactionController.getCompactedRow()
      Calls Location: CompactionController.java:186 CompactionController.java:186
      Atomic: NO

      Method: CompactionController.getFullyExpiredSSTables()
      Calls Location: CompactionController.java:105 CompactionController.java:105
      Atomic: NO

      Method: CompactionController.getFullyExpiredSSTables()
      Calls Location: CompactionController.java:108 CompactionController.java:108
      Atomic: NO

      Method: CompactionController.getFullyExpiredSSTables()
      Calls Location: CompactionController.java:105 CompactionController.java:108
      Atomic: NO

      Method: CompactionController.getFullyExpiredSSTables()
      Calls Location: CompactionController.java:122 CompactionController.java:124
      Atomic: NO

      Method: CompactionController.getFullyExpiredSSTables()
      Calls Location: CompactionController.java:108 CompactionController.java:124
      Atomic: NO

      Method: CompactionController.getFullyExpiredSSTables()
      Calls Location: CompactionController.java:105 CompactionController.java:124
      Atomic: NO

Checking class DataTracker:

  Verifying word hasNext next:

      Method: DataTracker.notifyAdded()
      Calls Location: DataTracker.java:446 DataTracker.java:446
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:265 DataTracker.java:446
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:265 DataTracker.java:265
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:446 DataTracker.java:446
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:446 DataTracker.java:265
      Atomic: NO

      Method: DataTracker.notifySSTablesChanged()
      Calls Location: DataTracker.java:439 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.unreferenceSSTables()
      Calls Location: DataTracker.java:439 DataTracker.java:373
      Atomic: NO

      Method: DataTracker.unreferenceSSTables()
      Calls Location: DataTracker.java:439 DataTracker.java:358
      Atomic: NO

      Method: DataTracker.removeOldSSTablesSize()
      Calls Location: DataTracker.java:373 DataTracker.java:373
      Atomic: NO

      Method: DataTracker.markObsolete()
      Calls Location: DataTracker.java:373 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.replaceCompactedSSTables()
      Calls Location: DataTracker.java:373 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:373 DataTracker.java:446
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:373 DataTracker.java:265
      Atomic: NO

      Method: DataTracker.replace()
      Calls Location: DataTracker.java:373 DataTracker.java:373
      Atomic: NO

      Method: DataTracker.replace()
      Calls Location: DataTracker.java:373 DataTracker.java:358
      Atomic: NO

      Method: DataTracker.unmarkCompacting()
      Calls Location: DataTracker.java:223 DataTracker.java:223
      Atomic: NO

      Method: DataTracker.removeUnreadableSSTables()
      Calls Location: DataTracker.java:308 DataTracker.java:308
      Atomic: NO

      Method: DataTracker.estimatedKeys()
      Calls Location: DataTracker.java:400 DataTracker.java:400
      Atomic: NO

      Method: DataTracker.getMeanColumns()
      Calls Location: DataTracker.java:409 DataTracker.java:409
      Atomic: NO

      Method: DataTracker.getDroppableTombstoneRatio()
      Calls Location: DataTracker.java:424 DataTracker.java:424
      Atomic: NO

      Method: DataTracker.removeUnreadableSSTables()
      Calls Location: DataTracker.java:308 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.unmarkCompacting()
      Calls Location: DataTracker.java:223 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.notifyDeleting()
      Calls Location: DataTracker.java:453 DataTracker.java:453
      Atomic: NO

      Method: DataTracker.buildIntervalTree()
      Calls Location: DataTracker.java:477 DataTracker.java:477
      Atomic: NO

      Method: DataTracker.addNewSSTablesSize()
      Calls Location: DataTracker.java:358 DataTracker.java:358
      Atomic: NO

      Method: DataTracker.unmarkCompacting()
      Calls Location: DataTracker.java:223 DataTracker.java:358
      Atomic: NO

      Method: DataTracker.unmarkCompacting()
      Calls Location: DataTracker.java:223 DataTracker.java:373
      Atomic: NO

      Method: DataTracker.notifyRenewed()
      Calls Location: DataTracker.java:460 DataTracker.java:460
      Atomic: NO

      Method: DataTracker.markObsolete()
      Calls Location: DataTracker.java:358 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.replaceCompactedSSTables()
      Calls Location: DataTracker.java:358 DataTracker.java:439
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:358 DataTracker.java:446
      Atomic: NO

      Method: DataTracker.addSSTables()
      Calls Location: DataTracker.java:358 DataTracker.java:265
      Atomic: NO

      Method: DataTracker.postReplace()
      Calls Location: DataTracker.java:358 DataTracker.java:373
      Atomic: NO

      Method: DataTracker.replaceFlushed()
      Calls Location: DataTracker.java:358 DataTracker.java:446
      Atomic: NO

Checking class ICompactionScanner:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word hasNext next:

    No occurrences

Checking class Component:

  Verifying word hasNext next:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionTask:

  Verifying word hasNext next:

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:244 CompactionTask.java:244
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:203 CompactionTask.java:244
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:266 CompactionTask.java:266
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:244 CompactionTask.java:266
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:203 CompactionTask.java:266
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:203 CompactionTask.java:203
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:330 CompactionTask.java:244
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:330 CompactionTask.java:266
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:330 CompactionTask.java:203
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:211 CompactionTask.java:211
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:208 CompactionTask.java:211
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:208 CompactionTask.java:208
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:172 CompactionTask.java:172
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:104 CompactionTask.java:172
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:104 CompactionTask.java:104
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:104 CompactionTask.java:266
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:172 CompactionTask.java:266
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:104 CompactionTask.java:203
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:172 CompactionTask.java:203
      Atomic: NO

      Method: CompactionTask.getMaxDataAge()
      Calls Location: CompactionTask.java:330 CompactionTask.java:330
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:104 CompactionTask.java:330
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:172 CompactionTask.java:330
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:104 CompactionTask.java:244
      Atomic: NO

      Method: CompactionTask.runWith()
      Calls Location: CompactionTask.java:172 CompactionTask.java:244
      Atomic: NO

Checking class OnDiskAtom$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word hasNext next:

    No occurrences

Checking class CFPropDefs:

  Verifying word hasNext next:

    No occurrences

Checking class CFName:

  Verifying word hasNext next:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word hasNext next:

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:369 CreateTableStatement.java:369
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:228 CreateTableStatement.java:369
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:207 CreateTableStatement.java:369
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:369
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:282 CreateTableStatement.java:369
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:228 CreateTableStatement.java:228
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:207 CreateTableStatement.java:228
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:228
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:228 CreateTableStatement.java:356
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:207 CreateTableStatement.java:356
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:356
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:282 CreateTableStatement.java:356
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:207 CreateTableStatement.java:207
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:207
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:282 CreateTableStatement.java:282
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:228 CreateTableStatement.java:282
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:207 CreateTableStatement.java:282
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:282
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:198
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:228 CreateTableStatement.java:341
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:207 CreateTableStatement.java:341
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:198 CreateTableStatement.java:341
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:282 CreateTableStatement.java:341
      Atomic: NO

Checking class CreateTableStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class Permission:

  Verifying word hasNext next:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word hasNext next:

    No occurrences

Checking class MigrationManager:

  Verifying word hasNext next:

      Method: MigrationManager.notifyCreateKeyspace()
      Calls Location: MigrationManager.java:162 MigrationManager.java:162
      Atomic: NO

      Method: MigrationManager.notifyCreateColumnFamily()
      Calls Location: MigrationManager.java:168 MigrationManager.java:168
      Atomic: NO

      Method: MigrationManager.resetLocalSchema()
      Calls Location: MigrationManager.java:357 MigrationManager.java:357
      Atomic: NO

      Method: MigrationManager.notifyUpdateColumnFamily()
      Calls Location: MigrationManager.java:180 MigrationManager.java:180
      Atomic: NO

      Method: MigrationManager.notifyDropColumnFamily()
      Calls Location: MigrationManager.java:192 MigrationManager.java:192
      Atomic: NO

      Method: MigrationManager.announce()
      Calls Location: MigrationManager.java:307 MigrationManager.java:307
      Atomic: NO

      Method: MigrationManager.notifyDropKeyspace()
      Calls Location: MigrationManager.java:186 MigrationManager.java:186
      Atomic: NO

      Method: MigrationManager.notifyUpdateKeyspace()
      Calls Location: MigrationManager.java:174 MigrationManager.java:174
      Atomic: NO

Checking class QueryHandler:

  Verifying word hasNext next:

    No occurrences

Checking class SemanticVersion:

  Verifying word hasNext next:

    No occurrences

Checking class MemoryMeter:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word hasNext next:

    No occurrences

Checking class BatchStatement:

  Verifying word hasNext next:

      Method: BatchStatement.execute()
      Calls Location: BatchStatement.java:157 BatchStatement.java:219
      Atomic: NO

      Method: BatchStatement.execute()
      Calls Location: BatchStatement.java:157 BatchStatement.java:213
      Atomic: NO

      Method: BatchStatement.executeInternal()
      Calls Location: BatchStatement.java:157 BatchStatement.java:329
      Atomic: NO

      Method: BatchStatement.execute()
      Calls Location: BatchStatement.java:185 BatchStatement.java:219
      Atomic: NO

      Method: BatchStatement.execute()
      Calls Location: BatchStatement.java:185 BatchStatement.java:213
      Atomic: NO

      Method: BatchStatement.executeInternal()
      Calls Location: BatchStatement.java:185 BatchStatement.java:329
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:185 BatchStatement.java:185
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:185 BatchStatement.java:157
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:185 BatchStatement.java:154
      Atomic: NO

      Method: BatchStatement.addStatementMutations()
      Calls Location: BatchStatement.java:185 BatchStatement.java:185
      Atomic: NO

      Method: BatchStatement.unzipMutations()
      Calls Location: BatchStatement.java:157 BatchStatement.java:157
      Atomic: NO

      Method: BatchStatement.verifyBatchSize()
      Calls Location: BatchStatement.java:219 BatchStatement.java:219
      Atomic: NO

      Method: BatchStatement.verifyBatchSize()
      Calls Location: BatchStatement.java:213 BatchStatement.java:219
      Atomic: NO

      Method: BatchStatement.verifyBatchSize()
      Calls Location: BatchStatement.java:213 BatchStatement.java:213
      Atomic: NO

      Method: BatchStatement.executeInternal()
      Calls Location: BatchStatement.java:329 BatchStatement.java:329
      Atomic: NO

      Method: BatchStatement.validate()
      Calls Location: BatchStatement.java:122 BatchStatement.java:122
      Atomic: NO

      Method: BatchStatement.checkAccess()
      Calls Location: BatchStatement.java:94 BatchStatement.java:94
      Atomic: NO

      Method: BatchStatement.measureForPreparedCache()
      Calls Location: BatchStatement.java:82 BatchStatement.java:82
      Atomic: NO

Checking class BatchQueryOptions:

  Verifying word hasNext next:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word hasNext next:

    No occurrences

Checking class Tracing:

  Verifying word hasNext next:

      Method: Tracing.addParameterColumns()
      Calls Location: Tracing.java:101 Tracing.java:101
      Atomic: NO

Checking class CFStatement:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser:

  Verifying word hasNext next:

      Method: CqlParser.addRawUpdate()
      Calls Location: CqlParser.java:300 CqlParser.java:300
      Atomic: NO

      Method: CqlParser.relation()
      Calls Location: CqlParser.java:7089 CqlParser.java:7089
      Atomic: NO

      Method: CqlParser.updateStatement()
      Calls Location: CqlParser.java:300 CqlParser.java:300
      Atomic: NO

      Method: CqlParser.updateStatement()
      Calls Location: CqlParser.java:300 CqlParser.java:7089
      Atomic: NO

      Method: CqlParser.batchStatement()
      Calls Location: CqlParser.java:300 CqlParser.java:300
      Atomic: NO

      Method: CqlParser.batchStatement()
      Calls Location: CqlParser.java:300 CqlParser.java:7089
      Atomic: NO

    *** Timeout ***

Checking class TokenStream:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer:

  Verifying word hasNext next:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word hasNext next:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word hasNext next:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word hasNext next:

    No occurrences

Checking class CharStream:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftClientState:

  Verifying word hasNext next:

    No occurrences

Checking class CommonTokenStream:

  Verifying word hasNext next:

    No occurrences

Checking class INotificationConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class LeveledManifest:

  Verifying word hasNext next:

      Method: LeveledManifest.toString()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:191
      Atomic: NO

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:127 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:127 LeveledManifest.java:127
      Atomic: YES

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:140 LeveledManifest.java:140
      Atomic: YES

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:127 LeveledManifest.java:140
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:424
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:375
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:354
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:349
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:433
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:547
      Atomic: YES

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:127
      Atomic: YES

      Method: LeveledManifest.replace()
      Calls Location: LeveledManifest.java:191 LeveledManifest.java:140
      Atomic: YES

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:424
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:424
      Atomic: NO

      Method: LeveledManifest.overlapping()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:375
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:375
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:375
      Atomic: NO

      Method: LeveledManifest.overlapping()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:375
      Atomic: NO

      Method: LeveledManifest.overlapping()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:354
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:354
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:354
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:349
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:349
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:433
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:433
      Atomic: NO

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:424
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:375
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:354
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:349
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:433
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:424 LeveledManifest.java:547
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:424
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:375
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:354
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:349
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:433
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:352 LeveledManifest.java:547
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:424
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:375
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:354
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:349
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:433
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:547
      Atomic: YES

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:424
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:375
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:354
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:349
      Atomic: NO

      Method: LeveledManifest.getCandidatesFor()
      Calls Location: LeveledManifest.java:375 LeveledManifest.java:433
      Atomic: NO

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:424
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:191
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:375
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:354
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:349
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:433
      Atomic: YES

      Method: LeveledManifest.getCompactionCandidates()
      Calls Location: LeveledManifest.java:433 LeveledManifest.java:547
      Atomic: YES

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:167 LeveledManifest.java:167
      Atomic: NO

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:167 LeveledManifest.java:150
      Atomic: NO

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:150 LeveledManifest.java:167
      Atomic: NO

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:150 LeveledManifest.java:150
      Atomic: NO

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:95 LeveledManifest.java:95
      Atomic: NO

      Method: LeveledManifest.repairOverlappingSSTables()
      Calls Location: LeveledManifest.java:150 LeveledManifest.java:150
      Atomic: YES

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:95 LeveledManifest.java:150
      Atomic: NO

      Method: LeveledManifest.repairOverlappingSSTables()
      Calls Location: LeveledManifest.java:167 LeveledManifest.java:167
      Atomic: YES

      Method: LeveledManifest.repairOverlappingSSTables()
      Calls Location: LeveledManifest.java:150 LeveledManifest.java:167
      Atomic: YES

      Method: LeveledManifest.create()
      Calls Location: LeveledManifest.java:95 LeveledManifest.java:167
      Atomic: NO

      Method: LeveledManifest.getNextLevel()
      Calls Location: LeveledManifest.java:547 LeveledManifest.java:547
      Atomic: NO

    *** Timeout ***

Checking class LeveledManifest$CompactionCandidate:

  Verifying word hasNext next:

    No occurrences

Checking class Multimap:

  Verifying word hasNext next:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word hasNext next:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word hasNext next:

    No occurrences

Checking class OperationType:

  Verifying word hasNext next:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word hasNext next:

      Method: LeveledCompactionStrategy$LeveledScanner.<init>()
      Calls Location: LeveledCompactionStrategy.java:258 LeveledCompactionStrategy.java:259
      Atomic: NO

      Method: LeveledCompactionStrategy$LeveledScanner.computeNext()
      Calls Location: LeveledCompactionStrategy.java:288 LeveledCompactionStrategy.java:294
      Atomic: NO

      Method: LeveledCompactionStrategy$LeveledScanner.intersecting()
      Calls Location: LeveledCompactionStrategy.java:265 LeveledCompactionStrategy.java:265
      Atomic: NO

      Method: LeveledCompactionStrategy$LeveledScanner.<init>()
      Calls Location: LeveledCompactionStrategy.java:243 LeveledCompactionStrategy.java:243
      Atomic: NO

      Method: LeveledCompactionStrategy$LeveledScanner.<init>()
      Calls Location: LeveledCompactionStrategy.java:243 LeveledCompactionStrategy.java:259
      Atomic: NO

Checking class LeveledCompactionTask:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word hasNext next:

    No occurrences

Checking class LongSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CounterSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word hasNext next:

      Method: ConcurrentBiMap.putAll()
      Calls Location: ConcurrentBiMap.java:107 ConcurrentBiMap.java:107
      Atomic: YES

Checking class KSMetaData:

  Verifying word hasNext next:

      Method: KSMetaData.fromSchema()
      Calls Location: KSMetaData.java:305 KSMetaData.java:52
      Atomic: NO

      Method: KSMetaData.fromSchema()
      Calls Location: KSMetaData.java:316 KSMetaData.java:52
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:305 KSMetaData.java:305
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:316 KSMetaData.java:316
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:311 KSMetaData.java:316
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:305 KSMetaData.java:316
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:311 KSMetaData.java:311
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:305 KSMetaData.java:311
      Atomic: NO

      Method: KSMetaData.deserializeColumnFamilies()
      Calls Location: KSMetaData.java:316 KSMetaData.java:311
      Atomic: NO

      Method: KSMetaData.toSchema()
      Calls Location: KSMetaData.java:248 KSMetaData.java:248
      Atomic: NO

      Method: KSMetaData.validate()
      Calls Location: KSMetaData.java:211 KSMetaData.java:211
      Atomic: NO

      Method: KSMetaData.toThrift()
      Calls Location: KSMetaData.java:183 KSMetaData.java:183
      Atomic: NO

      Method: KSMetaData.<init>()
      Calls Location: KSMetaData.java:52 KSMetaData.java:52
      Atomic: NO

      Method: KSMetaData.fromSchema()
      Calls Location: KSMetaData.java:311 KSMetaData.java:52
      Atomic: NO

Checking class NonBlockingHashMap:

  Verifying word hasNext next:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word hasNext next:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word hasNext next:

      Method: UntypedResultSet$1.computeNext()
      Calls Location: UntypedResultSet.java:65 UntypedResultSet.java:67
      Atomic: NO

Checking class InetAddressType:

  Verifying word hasNext next:

    No occurrences

Checking class Int32Type:

  Verifying word hasNext next:

    No occurrences

Checking class TimestampType:

  Verifying word hasNext next:

    No occurrences

Checking class UUIDType:

  Verifying word hasNext next:

    No occurrences

Checking class ListType:

  Verifying word hasNext next:

      Method: ListType.serialize()
      Calls Location: ListType.java:124 ListType.java:124
      Atomic: NO

Checking class DoubleType:

  Verifying word hasNext next:

    No occurrences

Checking class MapType:

  Verifying word hasNext next:

      Method: MapType.serialize()
      Calls Location: MapType.java:132 MapType.java:132
      Atomic: NO

Checking class BooleanType:

  Verifying word hasNext next:

    No occurrences

Checking class SetType:

  Verifying word hasNext next:

      Method: SetType.serialize()
      Calls Location: SetType.java:97 SetType.java:97
      Atomic: NO

Checking class Row$RowSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ReplayPosition:

  Verifying word hasNext next:

    No occurrences

Checking class SetMultimap:

  Verifying word hasNext next:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word hasNext next:

    No occurrences

Checking class CounterId:

  Verifying word hasNext next:

    No occurrences

Checking class PaxosState:

  Verifying word hasNext next:

    No occurrences

Checking class Commit:

  Verifying word hasNext next:

      Method: Commit.updatesWithPaxosTime()
      Calls Location: Commit.java:123 Commit.java:123
      Atomic: NO

Checking class RestorableMeter:

  Verifying word hasNext next:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word hasNext next:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractBounds:

  Verifying word hasNext next:

      Method: AbstractBounds.intersects()
      Calls Location: AbstractBounds.java:81 AbstractBounds.java:81
      Atomic: NO

Checking class CounterId$CounterIdRecord:

  Verifying word hasNext next:

    No occurrences

Checking class QueryFilter:

  Verifying word hasNext next:

      Method: QueryFilter.collateOnDiskAtom()
      Calls Location: QueryFilter.java:78 QueryFilter.java:78
      Atomic: NO

Checking class Token$KeyBound:

  Verifying word hasNext next:

    No occurrences

Checking class HashMultimap:

  Verifying word hasNext next:

    No occurrences

Checking class EmptyColumns:

  Verifying word hasNext next:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word hasNext next:

      Method: CompactionHistoryTabularData.from()
      Calls Location: CompactionHistoryTabularData.java:68 CompactionHistoryTabularData.java:68
      Atomic: NO

Checking class DefsTables:

  Verifying word hasNext next:

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:200 DefsTables.java:200
      Atomic: NO

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:243 DefsTables.java:243
      Atomic: NO

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:220 DefsTables.java:243
      Atomic: NO

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:200 DefsTables.java:243
      Atomic: NO

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:220 DefsTables.java:220
      Atomic: NO

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:200 DefsTables.java:220
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:280
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:272
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:264
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:311
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:304
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:296
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:291
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:317
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:200 DefsTables.java:314
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:280
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:272
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:264
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:311
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:304
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:296
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:291
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:317
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:243 DefsTables.java:314
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:280
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:272
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:264
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:311
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:304
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:296
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:291
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:317
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:220 DefsTables.java:314
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:296 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:296 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:314 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:314 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:304 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:304 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:264 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:264 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:317 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:317 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:280 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:280 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:311 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:311 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:395 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:395 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:272 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:272 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:291 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:291 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:280
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:280
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:272
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:272
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:272
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:264
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:264
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:264
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:311
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:311
      Atomic: NO

      Method: DefsTables.dropKeyspace()
      Calls Location: DefsTables.java:395 DefsTables.java:395
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:186 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:395
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:304
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:304
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:172
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:296
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:296
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:291
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:291
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:200
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:317
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:317
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:186 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:186
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:243
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:314 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:311 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:304 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:280 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:296 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:264 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:272 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:314
      Atomic: YES

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:291 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:317 DefsTables.java:314
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:172 DefsTables.java:220
      Atomic: YES

      Method: DefsTables.loadFromKeyspace()
      Calls Location: DefsTables.java:125 DefsTables.java:125
      Atomic: NO

Checking class SystemKeyspace$1:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word hasNext next:

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:210 ArrayBackedSortedColumns.java:210
      Atomic: NO

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:217 ArrayBackedSortedColumns.java:210
      Atomic: NO

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:227 ArrayBackedSortedColumns.java:227
      Atomic: NO

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:217 ArrayBackedSortedColumns.java:227
      Atomic: NO

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:210 ArrayBackedSortedColumns.java:227
      Atomic: NO

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:217 ArrayBackedSortedColumns.java:217
      Atomic: NO

      Method: ArrayBackedSortedColumns.addAll()
      Calls Location: ArrayBackedSortedColumns.java:210 ArrayBackedSortedColumns.java:217
      Atomic: NO

Checking class VariableSpecifications:

  Verifying word hasNext next:

    No occurrences

Checking class IMutation:

  Verifying word hasNext next:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word hasNext next:

      Method: RowMutation$RowMutationSerializer.serialize()
      Calls Location: RowMutation.java:277 RowMutation.java:277
      Atomic: NO

      Method: RowMutation$RowMutationSerializer.serializedSize()
      Calls Location: RowMutation.java:337 RowMutation.java:337
      Atomic: NO

Checking class MessageOut:

  Verifying word hasNext next:

      Method: MessageOut.serialize()
      Calls Location: MessageOut.java:109 MessageOut.java:109
      Atomic: NO

      Method: MessageOut.serializedSize()
      Calls Location: MessageOut.java:129 MessageOut.java:129
      Atomic: NO

Checking class MessagingService$Verb:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService:

  Verifying word hasNext next:

      Method: MessagingService.getResponsePendingTasks()
      Calls Location: MessagingService.java:971 MessagingService.java:971
      Atomic: NO

      Method: MessagingService.refreshAllNodesAtLeast20()
      Calls Location: MessagingService.java:784 MessagingService.java:784
      Atomic: NO

      Method: MessagingService.getCommandDroppedTasks()
      Calls Location: MessagingService.java:963 MessagingService.java:963
      Atomic: NO

      Method: MessagingService.getDroppedMessages()
      Calls Location: MessagingService.java:987 MessagingService.java:987
      Atomic: NO

      Method: MessagingService.shutdown()
      Calls Location: MessagingService.java:693 MessagingService.java:693
      Atomic: NO

      Method: MessagingService.<init>()
      Calls Location: MessagingService.java:311 MessagingService.java:311
      Atomic: NO

      Method: MessagingService.getResponseCompletedTasks()
      Calls Location: MessagingService.java:979 MessagingService.java:979
      Atomic: NO

      Method: MessagingService.listen()
      Calls Location: MessagingService.java:396 MessagingService.java:396
      Atomic: NO

      Method: MessagingService.getTimeoutsPerHost()
      Calls Location: MessagingService.java:1013 MessagingService.java:1013
      Atomic: NO

      Method: MessagingService.addLatency()
      Calls Location: MessagingService.java:375 MessagingService.java:375
      Atomic: NO

      Method: MessagingService.logDroppedMessages()
      Calls Location: MessagingService.java:849 MessagingService.java:849
      Atomic: NO

      Method: MessagingService.getRecentlyDroppedMessages()
      Calls Location: MessagingService.java:995 MessagingService.java:995
      Atomic: NO

      Method: MessagingService.getCommandCompletedTasks()
      Calls Location: MessagingService.java:955 MessagingService.java:955
      Atomic: NO

      Method: MessagingService.getRecentTimeoutsPerHost()
      Calls Location: MessagingService.java:1025 MessagingService.java:1025
      Atomic: NO

      Method: MessagingService.getCommandPendingTasks()
      Calls Location: MessagingService.java:941 MessagingService.java:941
      Atomic: NO

Checking class ColumnFamilyStoreMBean:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word hasNext next:

      Method: SecondaryIndexManager.reload()
      Calls Location: SecondaryIndexManager.java:111 SecondaryIndexManager.java:111
      Atomic: NO

      Method: SecondaryIndexManager.reload()
      Calls Location: SecondaryIndexManager.java:107 SecondaryIndexManager.java:111
      Atomic: NO

      Method: SecondaryIndexManager.reload()
      Calls Location: SecondaryIndexManager.java:99 SecondaryIndexManager.java:111
      Atomic: NO

      Method: SecondaryIndexManager.reload()
      Calls Location: SecondaryIndexManager.java:107 SecondaryIndexManager.java:107
      Atomic: NO

      Method: SecondaryIndexManager.reload()
      Calls Location: SecondaryIndexManager.java:99 SecondaryIndexManager.java:107
      Atomic: NO

      Method: SecondaryIndexManager.reload()
      Calls Location: SecondaryIndexManager.java:99 SecondaryIndexManager.java:99
      Atomic: NO

      Method: SecondaryIndexManager.setIndexRemoved()
      Calls Location: SecondaryIndexManager.java:576 SecondaryIndexManager.java:576
      Atomic: NO

      Method: SecondaryIndexManager.setIndexBuilt()
      Calls Location: SecondaryIndexManager.java:570 SecondaryIndexManager.java:570
      Atomic: NO

      Method: SecondaryIndexManager.invalidate()
      Calls Location: SecondaryIndexManager.java:328 SecondaryIndexManager.java:328
      Atomic: NO

      Method: SecondaryIndexManager.getIndexesBackedByCfs()
      Calls Location: SecondaryIndexManager.java:366 SecondaryIndexManager.java:366
      Atomic: NO

      Method: SecondaryIndexManager.getBuiltIndexes()
      Calls Location: SecondaryIndexManager.java:348 SecondaryIndexManager.java:348
      Atomic: NO

      Method: SecondaryIndexManager.flushIndexesBlocking()
      Calls Location: SecondaryIndexManager.java:337 SecondaryIndexManager.java:337
      Atomic: NO

      Method: SecondaryIndexManager.getTotalLiveSize()
      Calls Location: SecondaryIndexManager.java:411 SecondaryIndexManager.java:411
      Atomic: NO

      Method: SecondaryIndexManager.getIndexesNotBackedByCfs()
      Calls Location: SecondaryIndexManager.java:383 SecondaryIndexManager.java:383
      Atomic: NO

      Method: SecondaryIndexManager.indexRow()
      Calls Location: SecondaryIndexManager.java:427 SecondaryIndexManager.java:427
      Atomic: NO

      Method: SecondaryIndexManager.indexRow()
      Calls Location: SecondaryIndexManager.java:439 SecondaryIndexManager.java:427
      Atomic: NO

      Method: SecondaryIndexManager.indexRow()
      Calls Location: SecondaryIndexManager.java:439 SecondaryIndexManager.java:439
      Atomic: NO

      Method: SecondaryIndexManager.indexRow()
      Calls Location: SecondaryIndexManager.java:427 SecondaryIndexManager.java:439
      Atomic: NO

      Method: SecondaryIndexManager.allIndexesNames()
      Calls Location: SecondaryIndexManager.java:118 SecondaryIndexManager.java:118
      Atomic: NO

      Method: SecondaryIndexManager.deleteFromIndexes()
      Calls Location: SecondaryIndexManager.java:457 SecondaryIndexManager.java:457
      Atomic: NO

      Method: SecondaryIndexManager.getIndexSearchersForQuery()
      Calls Location: SecondaryIndexManager.java:511 SecondaryIndexManager.java:511
      Atomic: NO

      Method: SecondaryIndexManager.indexes()
      Calls Location: SecondaryIndexManager.java:152 SecondaryIndexManager.java:152
      Atomic: NO

      Method: SecondaryIndexManager.getIndexSearchersForQuery()
      Calls Location: SecondaryIndexManager.java:532 SecondaryIndexManager.java:533
      Atomic: NO

      Method: SecondaryIndexManager.getIndexSearchersForQuery()
      Calls Location: SecondaryIndexManager.java:511 SecondaryIndexManager.java:533
      Atomic: NO

      Method: SecondaryIndexManager.getIndexSearchersForQuery()
      Calls Location: SecondaryIndexManager.java:532 SecondaryIndexManager.java:532
      Atomic: NO

      Method: SecondaryIndexManager.getIndexSearchersForQuery()
      Calls Location: SecondaryIndexManager.java:511 SecondaryIndexManager.java:532
      Atomic: NO

      Method: SecondaryIndexManager.hasIndexFor()
      Calls Location: SecondaryIndexManager.java:207 SecondaryIndexManager.java:207
      Atomic: NO

      Method: SecondaryIndexManager.getIndexesByNames()
      Calls Location: SecondaryIndexManager.java:562 SecondaryIndexManager.java:562
      Atomic: NO

      Method: SecondaryIndexManager.indexFor()
      Calls Location: SecondaryIndexManager.java:166 SecondaryIndexManager.java:166
      Atomic: NO

      Method: SecondaryIndexManager.setIndexRemoved()
      Calls Location: SecondaryIndexManager.java:562 SecondaryIndexManager.java:576
      Atomic: NO

      Method: SecondaryIndexManager.setIndexBuilt()
      Calls Location: SecondaryIndexManager.java:562 SecondaryIndexManager.java:570
      Atomic: NO

      Method: SecondaryIndexManager.hasIndexFor()
      Calls Location: SecondaryIndexManager.java:532 SecondaryIndexManager.java:207
      Atomic: NO

      Method: SecondaryIndexManager.hasIndexFor()
      Calls Location: SecondaryIndexManager.java:511 SecondaryIndexManager.java:207
      Atomic: NO

Checking class DefaultInteger:

  Verifying word hasNext next:

    No occurrences

Checking class Directories:

  Verifying word hasNext next:

      Method: Directories.clearSnapshot()
      Calls Location: Directories.java:481 Directories.java:481
      Atomic: NO

Checking class ColumnFamilyMetrics:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics.release()
      Calls Location: ColumnFamilyMetrics.java:461 ColumnFamilyMetrics.java:461
      Atomic: NO

Checking class SecondaryIndexManager$Updater:

  Verifying word hasNext next:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word hasNext next:

    No occurrences

Checking class DataTracker$View:

  Verifying word hasNext next:

      Method: DataTracker$View.newSSTables()
      Calls Location: DataTracker.java:589 DataTracker.java:589
      Atomic: NO

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word hasNext next:

    No occurrences

Checking class DataRange:

  Verifying word hasNext next:

    No occurrences

Checking class ExtendedFilter:

  Verifying word hasNext next:

    No occurrences

Checking class RowCacheKey:

  Verifying word hasNext next:

    No occurrences

Checking class CacheService:

  Verifying word hasNext next:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word hasNext next:

      Method: Directories$SSTableLister.listFiles()
      Calls Location: Directories.java:369 Directories.java:369
      Atomic: NO

      Method: Directories$SSTableLister.listFiles()
      Calls Location: Directories.java:371 Directories.java:369
      Atomic: NO

      Method: Directories$SSTableLister.listFiles()
      Calls Location: Directories.java:371 Directories.java:371
      Atomic: NO

      Method: Directories$SSTableLister.listFiles()
      Calls Location: Directories.java:369 Directories.java:371
      Atomic: NO

Checking class StreamLockfile:

  Verifying word hasNext next:

      Method: StreamLockfile.create()
      Calls Location: StreamLockfile.java:67 StreamLockfile.java:67
      Atomic: NO

      Method: StreamLockfile.cleanup()
      Calls Location: StreamLockfile.java:94 StreamLockfile.java:94
      Atomic: NO

Checking class CollationController:

  Verifying word hasNext next:

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:304 CollationController.java:304
      Atomic: NO

      Method: CollationController.reduceNameFilter()
      Calls Location: CollationController.java:177 CollationController.java:179
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:107 CollationController.java:179
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:81 CollationController.java:179
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:163 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:81 CollationController.java:81
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:228 CollationController.java:228
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:200 CollationController.java:228
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:200 CollationController.java:200
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:107 CollationController.java:107
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:81 CollationController.java:107
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:163 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:107 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:81 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:304 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:267 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:228 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:200 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:304 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:267 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:228 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:200 CollationController.java:304
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:267 CollationController.java:267
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:228 CollationController.java:267
      Atomic: NO

      Method: CollationController.collectAllData()
      Calls Location: CollationController.java:200 CollationController.java:267
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:163 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:107 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:81 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:177 CollationController.java:107
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:177 CollationController.java:163
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:177 CollationController.java:179
      Atomic: NO

      Method: CollationController.collectTimeOrderedData()
      Calls Location: CollationController.java:177 CollationController.java:163
      Atomic: NO

Checking class SSTable:

  Verifying word hasNext next:

      Method: SSTable.appendTOC()
      Calls Location: SSTable.java:323 SSTable.java:323
      Atomic: NO

      Method: SSTable.bytesOnDisk()
      Calls Location: SSTable.java:278 SSTable.java:278
      Atomic: NO

      Method: SSTable.readTOC()
      Calls Location: SSTable.java:302 SSTable.java:302
      Atomic: NO

      Method: SSTable.discoverComponentsFor()
      Calls Location: SSTable.java:238 SSTable.java:238
      Atomic: NO

      Method: SSTable.getTotalBytes()
      Calls Location: SSTable.java:268 SSTable.java:268
      Atomic: NO

      Method: SSTable.<init>()
      Calls Location: SSTable.java:105 SSTable.java:105
      Atomic: NO

      Method: SSTable.delete()
      Calls Location: SSTable.java:140 SSTable.java:140
      Atomic: NO

      Method: SSTable.componentsFor()
      Calls Location: SSTable.java:238 SSTable.java:323
      Atomic: NO

Checking class KeyCacheKey:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableMetadata:

  Verifying word hasNext next:

      Method: SSTableMetadata.createCollector()
      Calls Location: SSTableMetadata.java:131 SSTableMetadata.java:131
      Atomic: NO

      Method: SSTableMetadata.createCollector()
      Calls Location: SSTableMetadata.java:134 SSTableMetadata.java:131
      Atomic: NO

      Method: SSTableMetadata.createCollector()
      Calls Location: SSTableMetadata.java:134 SSTableMetadata.java:134
      Atomic: NO

      Method: SSTableMetadata.createCollector()
      Calls Location: SSTableMetadata.java:131 SSTableMetadata.java:134
      Atomic: NO

Checking class RowIteratorFactory:

  Verifying word hasNext next:

      Method: RowIteratorFactory.getIterator()
      Calls Location: RowIteratorFactory.java:67 RowIteratorFactory.java:67
      Atomic: NO

      Method: RowIteratorFactory.getIterator()
      Calls Location: RowIteratorFactory.java:62 RowIteratorFactory.java:67
      Atomic: NO

      Method: RowIteratorFactory.getIterator()
      Calls Location: RowIteratorFactory.java:62 RowIteratorFactory.java:62
      Atomic: NO

Checking class ColumnFamilyStore$12:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word hasNext next:

      Method: ColumnFamilyStore$11.run()
      Calls Location: ColumnFamilyStore.java:2049 ColumnFamilyStore.java:2049
      Atomic: NO

      Method: ColumnFamilyStore$11.run()
      Calls Location: ColumnFamilyStore.java:2043 ColumnFamilyStore.java:2049
      Atomic: NO

      Method: ColumnFamilyStore$11.run()
      Calls Location: ColumnFamilyStore.java:2043 ColumnFamilyStore.java:2043
      Atomic: NO

Checking class ColumnFamilyStore$14:

  Verifying word hasNext next:

    No occurrences

Checking class Histogram:

  Verifying word hasNext next:

    No occurrences

Checking class Counter:

  Verifying word hasNext next:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word hasNext next:

      Method: SSTableMetadata$SSTableMetadataSerializer.serializeMinMaxColumnNames()
      Calls Location: SSTableMetadata.java:379 SSTableMetadata.java:379
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.serialize()
      Calls Location: SSTableMetadata.java:369 SSTableMetadata.java:379
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.legacySerialize()
      Calls Location: SSTableMetadata.java:411 SSTableMetadata.java:379
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.legacySerialize()
      Calls Location: SSTableMetadata.java:411 SSTableMetadata.java:411
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.serializeMinMaxColumnNames()
      Calls Location: SSTableMetadata.java:382 SSTableMetadata.java:382
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.serializeMinMaxColumnNames()
      Calls Location: SSTableMetadata.java:379 SSTableMetadata.java:382
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.serialize()
      Calls Location: SSTableMetadata.java:369 SSTableMetadata.java:382
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.legacySerialize()
      Calls Location: SSTableMetadata.java:411 SSTableMetadata.java:382
      Atomic: NO

      Method: SSTableMetadata$SSTableMetadataSerializer.serialize()
      Calls Location: SSTableMetadata.java:369 SSTableMetadata.java:369
      Atomic: NO

Checking class DataTracker$SSTableIntervalTree:

  Verifying word hasNext next:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word hasNext next:

    No occurrences

Checking class Futures:

  Verifying word hasNext next:

    No occurrences

Checking class FSReadError:

  Verifying word hasNext next:

    No occurrences

Checking class CompressionMetadata:

  Verifying word hasNext next:

      Method: CompressionMetadata.getChunksForSections()
      Calls Location: CompressionMetadata.java:200 CompressionMetadata.java:200
      Atomic: NO

Checking class ColumnFamilyStore$7:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word hasNext next:

      Method: ColumnFamilyStore$8.apply()
      Calls Location: ColumnFamilyStore.java:1514 ColumnFamilyStore.java:1514
      Atomic: NO

Checking class ColumnFamilyStore$5:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word hasNext next:

    No occurrences

Checking class DataRange$Paging:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word hasNext next:

      Method: ColumnFamilyStore$4.runMayThrow()
      Calls Location: ColumnFamilyStore.java:816 ColumnFamilyStore.java:816
      Atomic: NO

Checking class ColumnFamilyStore$1:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word hasNext next:

    No occurrences

Checking class LocalPartitioner:

  Verifying word hasNext next:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word hasNext next:

    No occurrences

Checking class RowIndexEntry:

  Verifying word hasNext next:

    No occurrences

Checking class LatencyMetrics:

  Verifying word hasNext next:

      Method: LatencyMetrics.addNano()
      Calls Location: LatencyMetrics.java:112 LatencyMetrics.java:112
      Atomic: NO

Checking class RowPosition:

  Verifying word hasNext next:

    No occurrences

Checking class AutoSavingCache:

  Verifying word hasNext next:

      Method: AutoSavingCache.loadSaved()
      Calls Location: AutoSavingCache.java:127 AutoSavingCache.java:127
      Atomic: NO

Checking class SSTableWriter:

  Verifying word hasNext next:

      Method: SSTableWriter.appendFromStream()
      Calls Location: SSTableWriter.java:242 SSTableWriter.java:244
      Atomic: NO

      Method: SSTableWriter.appendFromStream()
      Calls Location: SSTableWriter.java:254 SSTableWriter.java:258
      Atomic: NO

      Method: SSTableWriter.appendFromStream()
      Calls Location: SSTableWriter.java:242 SSTableWriter.java:258
      Atomic: NO

      Method: SSTableWriter.rename()
      Calls Location: SSTableWriter.java:395 SSTableWriter.java:395
      Atomic: NO

Checking class CommitLog:

  Verifying word hasNext next:

      Method: CommitLog.sync()
      Calls Location: CommitLog.java:262 CommitLog.java:262
      Atomic: NO

      Method: CommitLog.getActiveSegmentNames()
      Calls Location: CommitLog.java:306 CommitLog.java:306
      Atomic: NO

Checking class Gauge:

  Verifying word hasNext next:

    No occurrences

Checking class SeedProvider:

  Verifying word hasNext next:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word hasNext next:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word hasNext next:

    No occurrences

Checking class Config:

  Verifying word hasNext next:

    No occurrences

Checking class IRequestScheduler:

  Verifying word hasNext next:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word hasNext next:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word hasNext next:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word hasNext next:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word hasNext next:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word hasNext next:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word hasNext next:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word hasNext next:

    No occurrences

Checking class FSWriteError:

  Verifying word hasNext next:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word hasNext next:

    No occurrences

Checking class NoScheduler:

  Verifying word hasNext next:

    No occurrences

Checking class Longs:

  Verifying word hasNext next:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word hasNext next:

      Method: DynamicEndpointSnitch.maxScore()
      Calls Location: DynamicEndpointSnitch.java:330 DynamicEndpointSnitch.java:330
      Atomic: NO

      Method: DynamicEndpointSnitch.sortByProximityWithBadness()
      Calls Location: DynamicEndpointSnitch.java:162 DynamicEndpointSnitch.java:162
      Atomic: NO

      Method: DynamicEndpointSnitch.sortByProximityWithBadness()
      Calls Location: DynamicEndpointSnitch.java:177 DynamicEndpointSnitch.java:177
      Atomic: NO

      Method: DynamicEndpointSnitch.sortByProximityWithBadness()
      Calls Location: DynamicEndpointSnitch.java:162 DynamicEndpointSnitch.java:177
      Atomic: NO

      Method: DynamicEndpointSnitch.updateScores()
      Calls Location: DynamicEndpointSnitch.java:241 DynamicEndpointSnitch.java:241
      Atomic: NO

      Method: DynamicEndpointSnitch.sortByProximityWithBadness()
      Calls Location: DynamicEndpointSnitch.java:177 DynamicEndpointSnitch.java:179
      Atomic: NO

      Method: DynamicEndpointSnitch.sortByProximityWithBadness()
      Calls Location: DynamicEndpointSnitch.java:162 DynamicEndpointSnitch.java:179
      Atomic: NO

      Method: DynamicEndpointSnitch.updateScores()
      Calls Location: DynamicEndpointSnitch.java:248 DynamicEndpointSnitch.java:248
      Atomic: NO

      Method: DynamicEndpointSnitch.updateScores()
      Calls Location: DynamicEndpointSnitch.java:241 DynamicEndpointSnitch.java:248
      Atomic: NO

      Method: DynamicEndpointSnitch.reset()
      Calls Location: DynamicEndpointSnitch.java:262 DynamicEndpointSnitch.java:262
      Atomic: NO

      Method: DynamicEndpointSnitch.isWorthMergingForRangeQuery()
      Calls Location: DynamicEndpointSnitch.java:330 DynamicEndpointSnitch.java:330
      Atomic: NO

Checking class SeedProviderDef:

  Verifying word hasNext next:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word hasNext next:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word hasNext next:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word hasNext next:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word hasNext next:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word hasNext next:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word hasNext next:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word hasNext next:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word hasNext next:

    No occurrences

Checking class DateType:

  Verifying word hasNext next:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word hasNext next:

    No occurrences

Checking class CFDefinition$2:

  Verifying word hasNext next:

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:206 CFDefinition.java:207
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:203 CFDefinition.java:204
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:194 CFDefinition.java:204
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:194 CFDefinition.java:195
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:203 CFDefinition.java:207
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:194 CFDefinition.java:207
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:191 CFDefinition.java:204
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:191 CFDefinition.java:195
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:191 CFDefinition.java:207
      Atomic: NO

      Method: CFDefinition$2.computeNext()
      Calls Location: CFDefinition.java:191 CFDefinition.java:192
      Atomic: NO

Checking class CFDefinition$1:

  Verifying word hasNext next:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word hasNext next:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class LZ4Compressor:

  Verifying word hasNext next:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word hasNext next:

    No occurrences

Checking class LZ4Factory:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word hasNext next:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word hasNext next:

      Method: SizeTieredCompactionStrategy$2.compare()
      Calls Location: SizeTieredCompactionStrategy.java:181 SizeTieredCompactionStrategy.java:181
      Atomic: NO

      Method: SizeTieredCompactionStrategy$2.avgSize()
      Calls Location: SizeTieredCompactionStrategy.java:181 SizeTieredCompactionStrategy.java:181
      Atomic: NO

Checking class SizeTieredCompactionStrategy$1:

  Verifying word hasNext next:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word hasNext next:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word hasNext next:

    No occurrences

Checking class Column$1:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word hasNext next:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word hasNext next:

    No occurrences

Checking class FSError:

  Verifying word hasNext next:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word hasNext next:

    No occurrences

Checking class FileUtils$2:

  Verifying word hasNext next:

    No occurrences

Checking class FileUtils$1:

  Verifying word hasNext next:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3Type$1:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectSizes:

  Verifying word hasNext next:

      Method: ObjectSizes.getEffectiveMemoryLayoutSpecification()
      Calls Location: ObjectSizes.java:175 ObjectSizes.java:175
      Atomic: NO

Checking class SliceQueryFilter$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCounter:

  Verifying word hasNext next:

      Method: ColumnCounter.countAll()
      Calls Location: ColumnCounter.java:71 ColumnCounter.java:71
      Atomic: NO

Checking class TombstoneOverwhelmingException:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word hasNext next:

      Method: ColumnSlice$NavigableMapIterator.computeNext()
      Calls Location: ColumnSlice.java:158 ColumnSlice.java:159
      Atomic: NO

Checking class KeyspaceMetrics:

  Verifying word hasNext next:

      Method: KeyspaceMetrics.release()
      Calls Location: KeyspaceMetrics.java:161 KeyspaceMetrics.java:161
      Atomic: NO

Checking class TokenMetadata:

  Verifying word hasNext next:

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:677
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:677
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.pendingRangeChanges()
      Calls Location: TokenMetadata.java:707 TokenMetadata.java:138
      Atomic: NO

      Method: TokenMetadata.pendingRangeChanges()
      Calls Location: TokenMetadata.java:707 TokenMetadata.java:139
      Atomic: NO

      Method: TokenMetadata.getPrimaryRangeFor()
      Calls Location: TokenMetadata.java:707 TokenMetadata.java:715
      Atomic: NO

      Method: TokenMetadata.printPendingRanges()
      Calls Location: TokenMetadata.java:985 TokenMetadata.java:985
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:959 TokenMetadata.java:985
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:935 TokenMetadata.java:985
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:948 TokenMetadata.java:985
      Atomic: NO

      Method: TokenMetadata.printPendingRanges()
      Calls Location: TokenMetadata.java:987 TokenMetadata.java:985
      Atomic: NO

      Method: TokenMetadata.getPendingRanges()
      Calls Location: TokenMetadata.java:745 TokenMetadata.java:745
      Atomic: NO

      Method: TokenMetadata.printRelocatingRanges()
      Calls Location: TokenMetadata.java:1001 TokenMetadata.java:1001
      Atomic: NO

      Method: TokenMetadata.printPendingRanges()
      Calls Location: TokenMetadata.java:987 TokenMetadata.java:987
      Atomic: NO

      Method: TokenMetadata.printPendingRanges()
      Calls Location: TokenMetadata.java:985 TokenMetadata.java:987
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:959 TokenMetadata.java:987
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:935 TokenMetadata.java:987
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:948 TokenMetadata.java:987
      Atomic: NO

      Method: TokenMetadata.pendingEndpointsFor()
      Calls Location: TokenMetadata.java:1014 TokenMetadata.java:1014
      Atomic: NO

      Method: TokenMetadata.getPrimaryRangesFor()
      Calls Location: TokenMetadata.java:707 TokenMetadata.java:707
      Atomic: NO

      Method: TokenMetadata.addBootstrapTokens()
      Calls Location: TokenMetadata.java:317 TokenMetadata.java:317
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:680 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:677 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.addBootstrapTokens()
      Calls Location: TokenMetadata.java:330 TokenMetadata.java:330
      Atomic: NO

      Method: TokenMetadata.addBootstrapTokens()
      Calls Location: TokenMetadata.java:317 TokenMetadata.java:330
      Atomic: NO

      Method: TokenMetadata.removeBootstrapTokens()
      Calls Location: TokenMetadata.java:346 TokenMetadata.java:346
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:935 TokenMetadata.java:935
      Atomic: NO

      Method: TokenMetadata.pendingRangeChanges()
      Calls Location: TokenMetadata.java:138 TokenMetadata.java:138
      Atomic: NO

      Method: TokenMetadata.pendingRangeChanges()
      Calls Location: TokenMetadata.java:139 TokenMetadata.java:138
      Atomic: NO

      Method: TokenMetadata.addRelocatingTokens()
      Calls Location: TokenMetadata.java:405 TokenMetadata.java:405
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:673
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:677 TokenMetadata.java:677
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:677
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:948 TokenMetadata.java:948
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:935 TokenMetadata.java:948
      Atomic: NO

      Method: TokenMetadata.pendingRangeChanges()
      Calls Location: TokenMetadata.java:139 TokenMetadata.java:139
      Atomic: NO

      Method: TokenMetadata.pendingRangeChanges()
      Calls Location: TokenMetadata.java:138 TokenMetadata.java:139
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllLeft()
      Calls Location: TokenMetadata.java:648 TokenMetadata.java:648
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:959 TokenMetadata.java:959
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:935 TokenMetadata.java:959
      Atomic: NO

      Method: TokenMetadata.toString()
      Calls Location: TokenMetadata.java:948 TokenMetadata.java:959
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:677 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:680 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:677 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:680 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.isMoving()
      Calls Location: TokenMetadata.java:559 TokenMetadata.java:559
      Atomic: NO

      Method: TokenMetadata.removeFromMoving()
      Calls Location: TokenMetadata.java:450 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:677 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:680 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:183 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.updateNormalTokens()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:677 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:673 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:680 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.getEndpointToTokenMapForReading()
      Calls Location: TokenMetadata.java:1038 TokenMetadata.java:1038
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:677
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:195 TokenMetadata.java:195
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:161
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:183
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:677
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:680
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:450
      Atomic: NO

      Method: TokenMetadata.cloneAfterAllSettled()
      Calls Location: TokenMetadata.java:161 TokenMetadata.java:195
      Atomic: NO

Checking class Keyspace$1:

  Verifying word hasNext next:

    No occurrences

Checking class QueryPagers:

  Verifying word hasNext next:

      Method: QueryPagers.mayNeedPaging()
      Calls Location: QueryPagers.java:62 QueryPagers.java:62
      Atomic: NO

Checking class AbstractWriteResponseHandler:

  Verifying word hasNext next:

    No occurrences

Checking class WriteType:

  Verifying word hasNext next:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word hasNext next:

      Method: DatacenterSyncWriteResponseHandler.response()
      Calls Location: DatacenterSyncWriteResponseHandler.java:80 DatacenterSyncWriteResponseHandler.java:80
      Atomic: NO

      Method: DatacenterSyncWriteResponseHandler.<init>()
      Calls Location: DatacenterSyncWriteResponseHandler.java:65 DatacenterSyncWriteResponseHandler.java:65
      Atomic: NO

      Method: DatacenterSyncWriteResponseHandler.<init>()
      Calls Location: DatacenterSyncWriteResponseHandler.java:57 DatacenterSyncWriteResponseHandler.java:65
      Atomic: NO

      Method: DatacenterSyncWriteResponseHandler.<init>()
      Calls Location: DatacenterSyncWriteResponseHandler.java:57 DatacenterSyncWriteResponseHandler.java:57
      Atomic: NO

Checking class WriteResponseHandler:

  Verifying word hasNext next:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word hasNext next:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word hasNext next:

      Method: NetworkTopologyStrategy$1.<init>()
      Calls Location: NetworkTopologyStrategy.java:86 NetworkTopologyStrategy.java:86
      Atomic: NO

Checking class NetworkTopologyStrategy$3:

  Verifying word hasNext next:

      Method: NetworkTopologyStrategy$3.<init>()
      Calls Location: NetworkTopologyStrategy.java:106 NetworkTopologyStrategy.java:106
      Atomic: NO

Checking class NetworkTopologyStrategy$2:

  Verifying word hasNext next:

      Method: NetworkTopologyStrategy$2.<init>()
      Calls Location: NetworkTopologyStrategy.java:99 NetworkTopologyStrategy.java:99
      Atomic: NO

Checking class TokenMetadata$Topology:

  Verifying word hasNext next:

      Method: TokenMetadata$Topology.<init>()
      Calls Location: TokenMetadata.java:1125 TokenMetadata.java:1125
      Atomic: NO

Checking class FrameCompressor$LZ4Compressor:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelPipeline:

  Verifying word hasNext next:

    No occurrences

Checking class Frame$Decoder:

  Verifying word hasNext next:

    No occurrences

Checking class Channels:

  Verifying word hasNext next:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class ServerError:

  Verifying word hasNext next:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word hasNext next:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word hasNext next:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word hasNext next:

    No occurrences

Checking class Frame$Header:

  Verifying word hasNext next:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word hasNext next:

      Method: Frame$Header$Flag.serialize()
      Calls Location: Frame.java:110 Frame.java:110
      Atomic: NO

Checking class OneToOneDecoder:

  Verifying word hasNext next:

    No occurrences

Checking class CBUtil:

  Verifying word hasNext next:

      Method: CBUtil.sizeOfValueList()
      Calls Location: CBUtil.java:354 CBUtil.java:354
      Atomic: NO

      Method: CBUtil.writeValueList()
      Calls Location: CBUtil.java:347 CBUtil.java:347
      Atomic: NO

      Method: CBUtil.sizeOfStringToStringListMap()
      Calls Location: CBUtil.java:219 CBUtil.java:284
      Atomic: NO

      Method: CBUtil.sizeOfStringToStringListMap()
      Calls Location: CBUtil.java:219 CBUtil.java:219
      Atomic: NO

      Method: CBUtil.sizeOfStringToStringListMap()
      Calls Location: CBUtil.java:284 CBUtil.java:284
      Atomic: NO

      Method: CBUtil.sizeOfStringList()
      Calls Location: CBUtil.java:219 CBUtil.java:219
      Atomic: NO

      Method: CBUtil.sizeOfStringToStringListMap()
      Calls Location: CBUtil.java:284 CBUtil.java:219
      Atomic: NO

      Method: CBUtil.sizeOfStringMap()
      Calls Location: CBUtil.java:250 CBUtil.java:250
      Atomic: NO

      Method: CBUtil.writeStringMap()
      Calls Location: CBUtil.java:240 CBUtil.java:240
      Atomic: NO

      Method: CBUtil.writeStringToStringListMap()
      Calls Location: CBUtil.java:274 CBUtil.java:274
      Atomic: NO

      Method: CBUtil.writeStringList()
      Calls Location: CBUtil.java:212 CBUtil.java:212
      Atomic: NO

      Method: CBUtil.writeStringToStringListMap()
      Calls Location: CBUtil.java:274 CBUtil.java:212
      Atomic: NO

      Method: CBUtil.writeStringToStringListMap()
      Calls Location: CBUtil.java:212 CBUtil.java:212
      Atomic: NO

      Method: CBUtil.writeStringToStringListMap()
      Calls Location: CBUtil.java:212 CBUtil.java:274
      Atomic: NO

Checking class CredentialsMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word hasNext next:

    No occurrences

Checking class AuthenticationException:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelBuffers:

  Verifying word hasNext next:

    No occurrences

Checking class StartupMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class QueryMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class Snappy:

  Verifying word hasNext next:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word hasNext next:

    No occurrences

Checking class PagingState:

  Verifying word hasNext next:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word hasNext next:

    No occurrences

Checking class MessageEvent:

  Verifying word hasNext next:

    No occurrences

Checking class ExceptionEvent:

  Verifying word hasNext next:

    No occurrences

Checking class SslHandler:

  Verifying word hasNext next:

    No occurrences

Checking class SSLFactory:

  Verifying word hasNext next:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word hasNext next:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word hasNext next:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word hasNext next:

    No occurrences

Checking class FloatType:

  Verifying word hasNext next:

    No occurrences

Checking class DecimalType:

  Verifying word hasNext next:

    No occurrences

Checking class IntegerType:

  Verifying word hasNext next:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word hasNext next:

    No occurrences

Checking class DateUtils:

  Verifying word hasNext next:

    No occurrences

Checking class UUIDSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class DOMStringList:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftConversion:

  Verifying word hasNext next:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word hasNext next:

      Method: ResultSet$Metadata$Codec.encode()
      Calls Location: ResultSet.java:384 ResultSet.java:384
      Atomic: NO

      Method: ResultSet$Metadata$Codec.encodedSize()
      Calls Location: ResultSet.java:415 ResultSet.java:415
      Atomic: NO

Checking class FastByteArrayOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class IResource:

  Verifying word hasNext next:

    No occurrences

Checking class IAsyncCallback:

  Verifying word hasNext next:

    No occurrences

Checking class MessageIn:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractIterator:

  Verifying word hasNext next:

    No occurrences

Checking class Bounds:

  Verifying word hasNext next:

    No occurrences

Checking class Range$1:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectUtils:

  Verifying word hasNext next:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word hasNext next:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word hasNext next:

    No occurrences

Checking class Selection:

  Verifying word hasNext next:

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:128 Selection.java:180
      Atomic: NO

      Method: Selection.makeSelector()
      Calls Location: Selection.java:128 Selection.java:128
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:128 Selection.java:128
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:180 Selection.java:180
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:180 Selection.java:128
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:196 Selection.java:196
      Atomic: NO

      Method: Selection.isUsingFunction()
      Calls Location: Selection.java:79 Selection.java:79
      Atomic: NO

      Method: Selection.regularAndStaticColumnsToFetch()
      Calls Location: Selection.java:217 Selection.java:217
      Atomic: NO

      Method: Selection.wildcard()
      Calls Location: Selection.java:67 Selection.java:67
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:79 Selection.java:128
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:79 Selection.java:180
      Atomic: NO

      Method: Selection.fromSelectors()
      Calls Location: Selection.java:79 Selection.java:196
      Atomic: NO

Checking class Term:

  Verifying word hasNext next:

    No occurrences

Checking class Restriction:

  Verifying word hasNext next:

    No occurrences

Checking class Restriction$Slice:

  Verifying word hasNext next:

    No occurrences

Checking class QueryPager:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word hasNext next:

    No occurrences

Checking class Bound:

  Verifying word hasNext next:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word hasNext next:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word hasNext next:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word hasNext next:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word hasNext next:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word hasNext next:

    No occurrences

Checking class ReadCommand:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word hasNext next:

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1886 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1928 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.processOrderingClause()
      Calls Location: SelectStatement.java:1886 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.isReversed()
      Calls Location: SelectStatement.java:1928 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.processOrderingClause()
      Calls Location: SelectStatement.java:1886 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1560 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.updateSingleColumnRestriction()
      Calls Location: SelectStatement.java:1680 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.findInclusiveClusteringRelationForCompact()
      Calls Location: SelectStatement.java:2002 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1402 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1396 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1575 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1587 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1547 SelectStatement.java:1587
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1503
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1886
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1800
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1396
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1402
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1928
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1575
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1560
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1547
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1680
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:2002
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1723
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1503 SelectStatement.java:1587
      Atomic: NO

Checking class ExcludingBounds:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$2:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy:

  Verifying word hasNext next:

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:389 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:389 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:389 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:389 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:389 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:389 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:389 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:400 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:400 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:400 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:400 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:400 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:400 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:400 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:656 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:650 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.sendCommit()
      Calls Location: StorageProxy.java:380 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:650 StorageProxy.java:650
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:650
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1656 StorageProxy.java:1656
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1651 StorageProxy.java:1656
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1635 StorageProxy.java:1656
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1619 StorageProxy.java:1656
      Atomic: NO

      Method: StorageProxy.systemKeyspaceQuery()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.getRestrictedRanges()
      Calls Location: StorageProxy.java:1683 StorageProxy.java:1695
      Atomic: NO

      Method: StorageProxy.proposePaxos()
      Calls Location: StorageProxy.java:400 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.fetchRows()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.truncateBlocking()
      Calls Location: StorageProxy.java:1875 StorageProxy.java:1875
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1651 StorageProxy.java:1651
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1635 StorageProxy.java:1651
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1619 StorageProxy.java:1651
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1656 StorageProxy.java:1651
      Atomic: NO

      Method: StorageProxy.preparePaxos()
      Calls Location: StorageProxy.java:389 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1635 StorageProxy.java:1635
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1619 StorageProxy.java:1635
      Atomic: NO

      Method: StorageProxy.describeSchemaVersions()
      Calls Location: StorageProxy.java:1619 StorageProxy.java:1619
      Atomic: NO

      Method: StorageProxy.commitPaxos()
      Calls Location: StorageProxy.java:426 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:481 StorageProxy.java:481
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:489 StorageProxy.java:481
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:469 StorageProxy.java:469
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:455 StorageProxy.java:469
      Atomic: NO

      Method: StorageProxy.findSuitableEndpoint()
      Calls Location: StorageProxy.java:1021 StorageProxy.java:1021
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:455 StorageProxy.java:1021
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:455 StorageProxy.java:455
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:489 StorageProxy.java:489
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:481 StorageProxy.java:489
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:842 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:781 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:650 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:842 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:781 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:650 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.sendMessagesToNonlocalDC()
      Calls Location: StorageProxy.java:918 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:842 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:781 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:650 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.getRangeSlice()
      Calls Location: StorageProxy.java:1509 StorageProxy.java:1509
      Atomic: NO

      Method: StorageProxy.getRangeSlice()
      Calls Location: StorageProxy.java:1518 StorageProxy.java:1509
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:563
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:781 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:650 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.getRangeSlice()
      Calls Location: StorageProxy.java:1518 StorageProxy.java:1518
      Atomic: NO

      Method: StorageProxy.getRangeSlice()
      Calls Location: StorageProxy.java:1509 StorageProxy.java:1518
      Atomic: NO

      Method: StorageProxy.updateBatchlog()
      Calls Location: StorageProxy.java:640 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:563 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:426 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:426 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:426 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:426 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:426 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:426 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:426 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:380 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:380 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:380 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.beginAndRepairPaxos()
      Calls Location: StorageProxy.java:380 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:380 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:380 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:380 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:650 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.getRangeSlice()
      Calls Location: StorageProxy.java:1683 StorageProxy.java:1509
      Atomic: NO

      Method: StorageProxy.getRangeSlice()
      Calls Location: StorageProxy.java:1683 StorageProxy.java:1518
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:650
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:640 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:842 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:842 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:842 StorageProxy.java:650
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:842 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:842 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:842 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:842 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1106 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:1021 StorageProxy.java:469
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:1021 StorageProxy.java:1021
      Atomic: NO

      Method: StorageProxy.mutate()
      Calls Location: StorageProxy.java:1021 StorageProxy.java:455
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.read()
      Calls Location: StorageProxy.java:1282 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:656 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:380
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:426
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:400
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1106
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:389
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1176
      Atomic: NO

      Method: StorageProxy.cas()
      Calls Location: StorageProxy.java:1176 StorageProxy.java:1282
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:918 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:918 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:918 StorageProxy.java:650
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:918 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:918 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:918 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:918 StorageProxy.java:640
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:918 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:918 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.sendToHintedEndpoints()
      Calls Location: StorageProxy.java:918 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:781 StorageProxy.java:656
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:781 StorageProxy.java:781
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:781 StorageProxy.java:650
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:781 StorageProxy.java:842
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:781 StorageProxy.java:911
      Atomic: NO

      Method: StorageProxy.syncWriteBatchedMutations()
      Calls Location: StorageProxy.java:781 StorageProxy.java:920
      Atomic: NO

      Method: StorageProxy.mutateAtomically()
      Calls Location: StorageProxy.java:781 StorageProxy.java:640
      Atomic: NO

Checking class ReadyMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word hasNext next:

    No occurrences

Checking class ServerConnection:

  Verifying word hasNext next:

    No occurrences

Checking class AuthResponse$1:

  Verifying word hasNext next:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word hasNext next:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word hasNext next:

    No occurrences

Checking class Attributes:

  Verifying word hasNext next:

    No occurrences

Checking class ModificationStatement:

  Verifying word hasNext next:

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:496 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:496 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:502 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:502 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:709 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:474 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:474 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.buildCasFailureResultSet()
      Calls Location: ModificationStatement.java:666 ModificationStatement.java:666
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:484 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:474 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.readRequiredRows()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:502 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:496 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:484 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:474 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.readRequiredRows()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:496 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:484 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:474 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.readRequiredRows()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:502 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.readRows()
      Calls Location: ModificationStatement.java:474 ModificationStatement.java:474
      Atomic: NO

      Method: ModificationStatement.readRequiredRows()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:474
      Atomic: NO

      Method: ModificationStatement.readRequiredRows()
      Calls Location: ModificationStatement.java:447 ModificationStatement.java:447
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:709 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:484 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:484 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:684 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.processWhereClause()
      Calls Location: ModificationStatement.java:292 ModificationStatement.java:292
      Atomic: NO

      Method: ModificationStatement.processWhereClause()
      Calls Location: ModificationStatement.java:256 ModificationStatement.java:292
      Atomic: NO

      Method: ModificationStatement.processWhereClause()
      Calls Location: ModificationStatement.java:256 ModificationStatement.java:256
      Atomic: NO

      Method: ModificationStatement.processWhereClause()
      Calls Location: ModificationStatement.java:292 ModificationStatement.java:256
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:666
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:474
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:447
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.createClusteringPrefixBuilder()
      Calls Location: ModificationStatement.java:378 ModificationStatement.java:378
      Atomic: NO

      Method: ModificationStatement.createClusteringPrefixBuilderInternal()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:406
      Atomic: NO

      Method: ModificationStatement.buildPartitionKeyNames()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:332
      Atomic: NO

      Method: ModificationStatement.buildPartitionKeyNames()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:332
      Atomic: NO

      Method: ModificationStatement.buildPartitionKeyNames()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:322
      Atomic: NO

      Method: ModificationStatement.buildPartitionKeyNames()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:322
      Atomic: NO

      Method: ModificationStatement.getFirstEmptyKey()
      Calls Location: ModificationStatement.java:434 ModificationStatement.java:434
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:378
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:378
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:666
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:474
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:447
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:406
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:406
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:322 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:378
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:378
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:666
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:474
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:447
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:709
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:406
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:406
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:332 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.executeInternal()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:684
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:666
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:484
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:502
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:496
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:474
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:447
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:406 ModificationStatement.java:709
      Atomic: NO

Checking class BatchMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class BatchMessage$2:

  Verifying word hasNext next:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word hasNext next:

    No occurrences

Checking class Event$Type:

  Verifying word hasNext next:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word hasNext next:

      Method: Server$ConnectionTracker.unregister()
      Calls Location: Server.java:209 Server.java:209
      Atomic: NO

Checking class RegisterMessage$1:

  Verifying word hasNext next:

      Method: RegisterMessage$1.encode()
      Calls Location: RegisterMessage.java:45 RegisterMessage.java:45
      Atomic: NO

      Method: RegisterMessage$1.encodedSize()
      Calls Location: RegisterMessage.java:52 RegisterMessage.java:52
      Atomic: NO

Checking class Server:

  Verifying word hasNext next:

    No occurrences

Checking class Event:

  Verifying word hasNext next:

    No occurrences

Checking class EventMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word hasNext next:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word hasNext next:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word hasNext next:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word hasNext next:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class Relation$1:

  Verifying word hasNext next:

    No occurrences

Checking class CounterContext:

  Verifying word hasNext next:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word hasNext next:

    No occurrences

Checking class IContext:

  Verifying word hasNext next:

    No occurrences

Checking class IMergeIterator:

  Verifying word hasNext next:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word hasNext next:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word hasNext next:

    No occurrences

Checking class KeyIterator:

  Verifying word hasNext next:

    No occurrences

Checking class MergeIterator:

  Verifying word hasNext next:

      Method: MergeIterator.close()
      Calls Location: MergeIterator.java:56 MergeIterator.java:56
      Atomic: NO

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word hasNext next:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word hasNext next:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompositesSearcher:

  Verifying word hasNext next:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word hasNext next:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word hasNext next:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word hasNext next:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word hasNext next:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word hasNext next:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraDaemon:

  Verifying word hasNext next:

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:307 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:305 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:300 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:307
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:305 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:300 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:307 CassandraDaemon.java:305
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:300 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:305 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:307 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:300
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:189
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:348 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:346 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:344 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:300 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:305 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:307 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:348
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:346 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:348 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:344 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:300 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:305 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:307 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:346
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:344 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:300 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:305 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:307 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:346 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:348 CassandraDaemon.java:344
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:228
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:228
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:284
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:284
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:284
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:284
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:257
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:257
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:257
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:295
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:295
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:295
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:295
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:295
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:295
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:289 CassandraDaemon.java:289
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:284 CassandraDaemon.java:289
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:257 CassandraDaemon.java:289
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:228 CassandraDaemon.java:289
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:189 CassandraDaemon.java:289
      Atomic: NO

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:295 CassandraDaemon.java:289
      Atomic: NO

Checking class StorageService$Mode:

  Verifying word hasNext next:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word hasNext next:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word hasNext next:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word hasNext next:

    No occurrences

Checking class EndpointState:

  Verifying word hasNext next:

    No occurrences

Checking class ApplicationState:

  Verifying word hasNext next:

    No occurrences

Checking class VersionedValue:

  Verifying word hasNext next:

    No occurrences

Checking class RepairFuture:

  Verifying word hasNext next:

    No occurrences

Checking class StreamResultFuture:

  Verifying word hasNext next:

      Method: StreamResultFuture.init()
      Calls Location: StreamResultFuture.java:89 StreamResultFuture.java:89
      Atomic: NO

      Method: StreamResultFuture.init()
      Calls Location: StreamResultFuture.java:83 StreamResultFuture.java:89
      Atomic: NO

      Method: StreamResultFuture.init()
      Calls Location: StreamResultFuture.java:83 StreamResultFuture.java:83
      Atomic: NO

      Method: StreamResultFuture.init()
      Calls Location: StreamResultFuture.java:70 StreamResultFuture.java:89
      Atomic: NO

      Method: StreamResultFuture.init()
      Calls Location: StreamResultFuture.java:70 StreamResultFuture.java:83
      Atomic: NO

      Method: StreamResultFuture.fireStreamEvent()
      Calls Location: StreamResultFuture.java:203 StreamResultFuture.java:203
      Atomic: NO

      Method: StreamResultFuture.<init>()
      Calls Location: StreamResultFuture.java:70 StreamResultFuture.java:70
      Atomic: NO

Checking class SSTableLoader:

  Verifying word hasNext next:

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:164 SSTableLoader.java:164
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:187 SSTableLoader.java:164
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:175 SSTableLoader.java:164
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:175 SSTableLoader.java:175
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:164 SSTableLoader.java:175
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:187 SSTableLoader.java:175
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:187 SSTableLoader.java:187
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:175 SSTableLoader.java:187
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:164 SSTableLoader.java:187
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:211 SSTableLoader.java:164
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:211 SSTableLoader.java:175
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:211 SSTableLoader.java:187
      Atomic: NO

      Method: SSTableLoader.stream()
      Calls Location: SSTableLoader.java:187 SSTableLoader.java:187
      Atomic: NO

      Method: SSTableLoader.names()
      Calls Location: SSTableLoader.java:211 SSTableLoader.java:211
      Atomic: NO

Checking class GossipShutdownVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class StreamManager:

  Verifying word hasNext next:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word hasNext next:

      Method: SSTableDeletingTask.rescheduleFailedTasks()
      Calls Location: SSTableDeletingTask.java:97 SSTableDeletingTask.java:97
      Atomic: NO

Checking class TokenSerializer:

  Verifying word hasNext next:

      Method: TokenSerializer.serialize()
      Calls Location: TokenSerializer.java:39 TokenSerializer.java:39
      Atomic: NO

Checking class SnapshotVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word hasNext next:

      Method: GossipDigestSynVerbHandler.doSort()
      Calls Location: GossipDigestSynVerbHandler.java:99 GossipDigestSynVerbHandler.java:99
      Atomic: NO

      Method: GossipDigestSynVerbHandler.doVerb()
      Calls Location: GossipDigestSynVerbHandler.java:66 GossipDigestSynVerbHandler.java:99
      Atomic: NO

      Method: GossipDigestSynVerbHandler.doVerb()
      Calls Location: GossipDigestSynVerbHandler.java:66 GossipDigestSynVerbHandler.java:66
      Atomic: NO

      Method: GossipDigestSynVerbHandler.doSort()
      Calls Location: GossipDigestSynVerbHandler.java:109 GossipDigestSynVerbHandler.java:109
      Atomic: NO

      Method: GossipDigestSynVerbHandler.doSort()
      Calls Location: GossipDigestSynVerbHandler.java:99 GossipDigestSynVerbHandler.java:109
      Atomic: NO

      Method: GossipDigestSynVerbHandler.doVerb()
      Calls Location: GossipDigestSynVerbHandler.java:66 GossipDigestSynVerbHandler.java:109
      Atomic: NO

Checking class ReplicationFinishedVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class Iterators:

  Verifying word hasNext next:

    No occurrences

Checking class FailureDetector:

  Verifying word hasNext next:

      Method: FailureDetector.toString()
      Calls Location: FailureDetector.java:276 FailureDetector.java:276
      Atomic: NO

      Method: FailureDetector.getUpEndpointCount()
      Calls Location: FailureDetector.java:129 FailureDetector.java:129
      Atomic: NO

      Method: FailureDetector.getSimpleStates()
      Calls Location: FailureDetector.java:105 FailureDetector.java:105
      Atomic: NO

      Method: FailureDetector.getDownEndpointCount()
      Calls Location: FailureDetector.java:118 FailureDetector.java:118
      Atomic: NO

      Method: FailureDetector.getAllEndpointStates()
      Calls Location: FailureDetector.java:94 FailureDetector.java:94
      Atomic: NO

      Method: FailureDetector.appendEndpointState()
      Calls Location: FailureDetector.java:149 FailureDetector.java:149
      Atomic: NO

      Method: FailureDetector.getAllEndpointStates()
      Calls Location: FailureDetector.java:94 FailureDetector.java:149
      Atomic: NO

      Method: FailureDetector.forceConviction()
      Calls Location: FailureDetector.java:249 FailureDetector.java:249
      Atomic: NO

      Method: FailureDetector.interpret()
      Calls Location: FailureDetector.java:239 FailureDetector.java:239
      Atomic: NO

      Method: FailureDetector.getAllEndpointStates()
      Calls Location: FailureDetector.java:149 FailureDetector.java:94
      Atomic: NO

      Method: FailureDetector.getAllEndpointStates()
      Calls Location: FailureDetector.java:149 FailureDetector.java:149
      Atomic: NO

Checking class StorageService$2:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService$1:

  Verifying word hasNext next:

      Method: StorageService$1.runMayThrow()
      Calls Location: StorageService.java:582 StorageService.java:582
      Atomic: NO

      Method: StorageService$1.runMayThrow()
      Calls Location: StorageService.java:587 StorageService.java:582
      Atomic: NO

      Method: StorageService$1.runMayThrow()
      Calls Location: StorageService.java:587 StorageService.java:587
      Atomic: NO

      Method: StorageService$1.runMayThrow()
      Calls Location: StorageService.java:582 StorageService.java:587
      Atomic: NO

Checking class StorageService$4:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService$3:

  Verifying word hasNext next:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService$8:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService$7:

  Verifying word hasNext next:

      Method: StorageService$7.init()
      Calls Location: StorageService.java:3883 StorageService.java:3883
      Atomic: NO

      Method: StorageService$7.init()
      Calls Location: StorageService.java:3880 StorageService.java:3883
      Atomic: NO

      Method: StorageService$7.init()
      Calls Location: StorageService.java:3880 StorageService.java:3880
      Atomic: NO

      Method: StorageService$7.init()
      Calls Location: StorageService.java:3883 StorageService.java:3880
      Atomic: NO

Checking class StorageService$6:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService$5:

  Verifying word hasNext next:

      Method: StorageService$5.runMayThrow()
      Calls Location: StorageService.java:2650 StorageService.java:2650
      Atomic: NO

      Method: StorageService$5.runMayThrow()
      Calls Location: StorageService.java:2678 StorageService.java:2678
      Atomic: NO

      Method: StorageService$5.runMayThrow()
      Calls Location: StorageService.java:2650 StorageService.java:2678
      Atomic: NO

Checking class StreamPlan:

  Verifying word hasNext next:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class ActiveRepairService:

  Verifying word hasNext next:

      Method: ActiveRepairService.terminateSessions()
      Calls Location: ActiveRepairService.java:121 ActiveRepairService.java:121
      Atomic: NO

      Method: ActiveRepairService.getNeighbors()
      Calls Location: ActiveRepairService.java:175 ActiveRepairService.java:175
      Atomic: NO

      Method: ActiveRepairService.getNeighbors()
      Calls Location: ActiveRepairService.java:152 ActiveRepairService.java:175
      Atomic: NO

      Method: ActiveRepairService.getNeighbors()
      Calls Location: ActiveRepairService.java:186 ActiveRepairService.java:186
      Atomic: NO

      Method: ActiveRepairService.getNeighbors()
      Calls Location: ActiveRepairService.java:152 ActiveRepairService.java:186
      Atomic: NO

      Method: ActiveRepairService.getNeighbors()
      Calls Location: ActiveRepairService.java:152 ActiveRepairService.java:152
      Atomic: NO

Checking class RepairMessageVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class TokenRange:

  Verifying word hasNext next:

    No occurrences

Checking class StorageMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class RangeStreamer:

  Verifying word hasNext next:

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:129 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:125 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:125 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:129 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:180 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:180 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.getAllRangesWithSourcesFor()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:148
      Atomic: NO

      Method: RangeStreamer.getAllRangesWithSourcesFor()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:148
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:175 RangeStreamer.java:175
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:121 RangeStreamer.java:175
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:180 RangeStreamer.java:175
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:189 RangeStreamer.java:175
      Atomic: NO

      Method: RangeStreamer.getAllRangesWithSourcesFor()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:146
      Atomic: NO

      Method: RangeStreamer.getAllRangesWithSourcesFor()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:146
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:121 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:189 RangeStreamer.java:189
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:180 RangeStreamer.java:189
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:175 RangeStreamer.java:189
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:121 RangeStreamer.java:189
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:121 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.fetchAsync()
      Calls Location: RangeStreamer.java:220 RangeStreamer.java:220
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:121 RangeStreamer.java:121
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:180 RangeStreamer.java:180
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:175 RangeStreamer.java:180
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:121 RangeStreamer.java:180
      Atomic: NO

      Method: RangeStreamer.getRangeFetchMap()
      Calls Location: RangeStreamer.java:189 RangeStreamer.java:180
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:189 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:189 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:175
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:189
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:121
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:148 RangeStreamer.java:180
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:175 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:175 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:175
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:125
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:189
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:129
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:121
      Atomic: NO

      Method: RangeStreamer.addRanges()
      Calls Location: RangeStreamer.java:146 RangeStreamer.java:180
      Atomic: NO

Checking class Gossiper:

  Verifying word hasNext next:

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1047 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1047 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1047 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:318 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:318 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:318 Gossiper.java:416
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:318 Gossiper.java:402
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:318 Gossiper.java:760
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:318 Gossiper.java:1087
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:318 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.notifyFailureDetector()
      Calls Location: Gossiper.java:318 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.notifyFailureDetector()
      Calls Location: Gossiper.java:318 Gossiper.java:792
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1029 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.realMarkAlive()
      Calls Location: Gossiper.java:877 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:917 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.getMaxEndpointStateVersion()
      Calls Location: Gossiper.java:318 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1087 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:402 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1029 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1021 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:917 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:927 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:917 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1021 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.markDead()
      Calls Location: Gossiper.java:891 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:917 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.doOnChangeNotifications()
      Calls Location: Gossiper.java:1047 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1029 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyNewStates()
      Calls Location: Gossiper.java:1021 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:416 Gossiper.java:416
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:402 Gossiper.java:416
      Atomic: NO

      Method: Gossiper.makeRandomGossipDigest()
      Calls Location: Gossiper.java:402 Gossiper.java:402
      Atomic: NO

      Method: Gossiper.getStateForVersionBiggerThan()
      Calls Location: Gossiper.java:760 Gossiper.java:760
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1087 Gossiper.java:760
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1087 Gossiper.java:1087
      Atomic: NO

      Method: Gossiper.isDeadState()
      Calls Location: Gossiper.java:939 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:949 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:917 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:917 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:927 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:877 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:877 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:760 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:760 Gossiper.java:1087
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:760 Gossiper.java:760
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:1021 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:939 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:939 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:939 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:939 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:939 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:939 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.getLiveTokenOwners()
      Calls Location: Gossiper.java:939 Gossiper.java:251
      Atomic: NO

      Method: Gossiper.getLiveTokenOwners()
      Calls Location: Gossiper.java:939 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:939 Gossiper.java:1211
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:939 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:939 Gossiper.java:344
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:939 Gossiper.java:679
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:939 Gossiper.java:643
      Atomic: NO

      Method: Gossiper.convict()
      Calls Location: Gossiper.java:939 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.handleMajorStateChange()
      Calls Location: Gossiper.java:891 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:877
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:1029
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:917
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:927
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:1021
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:891
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:949
      Atomic: NO

      Method: Gossiper.applyStateLocally()
      Calls Location: Gossiper.java:891 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.addLocalApplicationState()
      Calls Location: Gossiper.java:1038 Gossiper.java:1047
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:344 Gossiper.java:1211
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:344 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:344 Gossiper.java:344
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:344 Gossiper.java:679
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:344 Gossiper.java:643
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1082 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.notifyFailureDetector()
      Calls Location: Gossiper.java:792 Gossiper.java:318
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:643 Gossiper.java:643
      Atomic: NO

      Method: Gossiper.doBeforeChangeNotifications()
      Calls Location: Gossiper.java:1038 Gossiper.java:1038
      Atomic: NO

      Method: Gossiper.removeEndpoint()
      Calls Location: Gossiper.java:344 Gossiper.java:344
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:643 Gossiper.java:344
      Atomic: NO

      Method: Gossiper.notifyFailureDetector()
      Calls Location: Gossiper.java:792 Gossiper.java:792
      Atomic: NO

      Method: Gossiper.stop()
      Calls Location: Gossiper.java:1282 Gossiper.java:1282
      Atomic: NO

      Method: Gossiper.buildSeedsList()
      Calls Location: Gossiper.java:1211 Gossiper.java:1211
      Atomic: NO

      Method: Gossiper.removeEndpoint()
      Calls Location: Gossiper.java:344 Gossiper.java:1211
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:643 Gossiper.java:1211
      Atomic: NO

      Method: Gossiper.doShadowRound()
      Calls Location: Gossiper.java:1188 Gossiper.java:1188
      Atomic: NO

      Method: Gossiper.seenAnySeed()
      Calls Location: Gossiper.java:203 Gossiper.java:203
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1082 Gossiper.java:760
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1082 Gossiper.java:1082
      Atomic: NO

      Method: Gossiper.start()
      Calls Location: Gossiper.java:1158 Gossiper.java:1158
      Atomic: NO

      Method: Gossiper.getLiveTokenOwners()
      Calls Location: Gossiper.java:251 Gossiper.java:251
      Atomic: NO

      Method: Gossiper.examineGossiper()
      Calls Location: Gossiper.java:1082 Gossiper.java:1087
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:643 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.getLiveTokenOwners()
      Calls Location: Gossiper.java:251 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.getUnreachableTokenOwners()
      Calls Location: Gossiper.java:274 Gossiper.java:274
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:679 Gossiper.java:679
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:643 Gossiper.java:679
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:1211 Gossiper.java:1211
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:1211 Gossiper.java:939
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:1211 Gossiper.java:344
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:1211 Gossiper.java:679
      Atomic: NO

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:1211 Gossiper.java:643
      Atomic: NO

      Method: Gossiper.doShadowRound()
      Calls Location: Gossiper.java:1211 Gossiper.java:1188
      Atomic: NO

      Method: Gossiper.start()
      Calls Location: Gossiper.java:1211 Gossiper.java:1158
      Atomic: NO

Checking class LoadBroadcaster:

  Verifying word hasNext next:

    No occurrences

Checking class Auth:

  Verifying word hasNext next:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class OutputHandler:

  Verifying word hasNext next:

    No occurrences

Checking class BiMultiValMap:

  Verifying word hasNext next:

      Method: BiMultiValMap.removeValue()
      Calls Location: BiMultiValMap.java:127 BiMultiValMap.java:127
      Atomic: NO

      Method: BiMultiValMap.putAll()
      Calls Location: BiMultiValMap.java:113 BiMultiValMap.java:113
      Atomic: NO

Checking class StageManager:

  Verifying word hasNext next:

    No occurrences

Checking class IVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class BootStrapper:

  Verifying word hasNext next:

      Method: BootStrapper.getBootstrapTokens()
      Calls Location: BootStrapper.java:103 BootStrapper.java:103
      Atomic: NO

      Method: BootStrapper.bootstrap()
      Calls Location: BootStrapper.java:69 BootStrapper.java:69
      Atomic: NO

Checking class SSTableLoader$Client:

  Verifying word hasNext next:

    No occurrences

Checking class Level:

  Verifying word hasNext next:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word hasNext next:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word hasNext next:

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:158 PendingRangeCalculatorService.java:158
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:158
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:158
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:163 PendingRangeCalculatorService.java:158
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:163 PendingRangeCalculatorService.java:163
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:158 PendingRangeCalculatorService.java:163
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:163
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:163
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:173 PendingRangeCalculatorService.java:173
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:180 PendingRangeCalculatorService.java:173
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:158 PendingRangeCalculatorService.java:173
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:173
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:173
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:163 PendingRangeCalculatorService.java:173
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:145
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:145
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:189 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:196 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:173 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:180 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:158 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:163 PendingRangeCalculatorService.java:189
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:180 PendingRangeCalculatorService.java:180
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:173 PendingRangeCalculatorService.java:180
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:158 PendingRangeCalculatorService.java:180
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:180
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:180
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:163 PendingRangeCalculatorService.java:180
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:196 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:189 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:173 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:180 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:158 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:145 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:163 PendingRangeCalculatorService.java:196
      Atomic: NO

      Method: PendingRangeCalculatorService.calculatePendingRanges()
      Calls Location: PendingRangeCalculatorService.java:140 PendingRangeCalculatorService.java:140
      Atomic: NO

Checking class ReadRepairVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class IFailureDetector:

  Verifying word hasNext next:

    No occurrences

Checking class Logger:

  Verifying word hasNext next:

    No occurrences

Checking class Collections2:

  Verifying word hasNext next:

    No occurrences

Checking class LocalStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word hasNext next:

    No occurrences

Checking class EndpointDetails:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word hasNext next:

      Method: GossipDigestAckVerbHandler.doVerb()
      Calls Location: GossipDigestAckVerbHandler.java:71 GossipDigestAckVerbHandler.java:71
      Atomic: NO

Checking class CommitVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word hasNext next:

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:428 HintedHandOffManager.java:428
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:390 HintedHandOffManager.java:428
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:458 HintedHandOffManager.java:428
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:390 HintedHandOffManager.java:390
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:428 HintedHandOffManager.java:390
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:458 HintedHandOffManager.java:390
      Atomic: NO

      Method: HintedHandOffManager.compact()
      Calls Location: HintedHandOffManager.java:257 HintedHandOffManager.java:257
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:458 HintedHandOffManager.java:257
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:390 HintedHandOffManager.java:257
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:428 HintedHandOffManager.java:257
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:458 HintedHandOffManager.java:458
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:390 HintedHandOffManager.java:458
      Atomic: NO

      Method: HintedHandOffManager.doDeliverHintsToEndpoint()
      Calls Location: HintedHandOffManager.java:428 HintedHandOffManager.java:458
      Atomic: NO

      Method: HintedHandOffManager.scheduleAllDeliveries()
      Calls Location: HintedHandOffManager.java:514 HintedHandOffManager.java:514
      Atomic: NO

      Method: HintedHandOffManager.calculateHintTTL()
      Calls Location: HintedHandOffManager.java:150 HintedHandOffManager.java:150
      Atomic: NO

      Method: HintedHandOffManager.listEndpointsPendingHints()
      Calls Location: HintedHandOffManager.java:572 HintedHandOffManager.java:572
      Atomic: NO

Checking class ReadVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class Stage:

  Verifying word hasNext next:

    No occurrences

Checking class BatchlogManager:

  Verifying word hasNext next:

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:372
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:284 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:372
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:319 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:372
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:207 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:372
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.replayMutations()
      Calls Location: BatchlogManager.java:356 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:372
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:290 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:334
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.processBatchlogPage()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:372
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:284
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:207
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:259
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:305
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:290
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:319
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:356
      Atomic: NO

      Method: BatchlogManager.replayAllFailedBatches()
      Calls Location: BatchlogManager.java:305 BatchlogManager.java:334
      Atomic: NO

    *** Timeout ***

Checking class LogManager:

  Verifying word hasNext next:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word hasNext next:

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3242
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3216
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3247
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3194
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3237
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3192
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3218
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3232 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3237 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3216 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3194 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3192 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3247 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3242 StorageService.java:3232
      Atomic: NO

      Method: StorageService$RangeRelocator.calculateToFromStreams()
      Calls Location: StorageService.java:3218 StorageService.java:3232
      Atomic: NO

Checking class ResponseVerbHandler:

  Verifying word hasNext next:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word hasNext next:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word hasNext next:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSummary:

  Verifying word hasNext next:

    No occurrences

Checking class IFilter:

  Verifying word hasNext next:

    No occurrences

Checking class InstrumentingCache:

  Verifying word hasNext next:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableScanner:

  Verifying word hasNext next:

      Method: SSTableScanner.<init>()
      Calls Location: SSTableScanner.java:103 SSTableScanner.java:103
      Atomic: NO

Checking class RandomAccessReader:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class CLibrary:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word hasNext next:

    No occurrences

Checking class FilterFactory:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word hasNext next:

    No occurrences

Checking class ICompressedFile:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$2:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$1:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$3:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class ThrottledReader:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word hasNext next:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word hasNext next:

      Method: RowIndexEntry$Serializer.serialize()
      Calls Location: RowIndexEntry.java:105 RowIndexEntry.java:105
      Atomic: NO

Checking class CompactionManagerMBean:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class Multiset:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word hasNext next:

    No occurrences

Checking class Validator:

  Verifying word hasNext next:

      Method: Validator.prepare()
      Calls Location: Validator.java:98 Validator.java:98
      Atomic: NO

Checking class AutoSavingCache$Writer:

  Verifying word hasNext next:

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:237 AutoSavingCache.java:237
      Atomic: NO

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:233 AutoSavingCache.java:237
      Atomic: NO

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:209 AutoSavingCache.java:237
      Atomic: NO

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:209 AutoSavingCache.java:209
      Atomic: NO

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:233 AutoSavingCache.java:233
      Atomic: NO

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:209 AutoSavingCache.java:233
      Atomic: NO

      Method: AutoSavingCache$Writer.saveCache()
      Calls Location: AutoSavingCache.java:233 AutoSavingCache.java:233
      Atomic: NO

Checking class SSTableIdentityIterator:

  Verifying word hasNext next:

      Method: SSTableIdentityIterator.getColumnFamilyWithColumns()
      Calls Location: SSTableIdentityIterator.java:185 SSTableIdentityIterator.java:186
      Atomic: NO

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionInfo:

  Verifying word hasNext next:

    No occurrences

Checking class RepairJobDesc:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$10:

  Verifying word hasNext next:

    No occurrences

Checking class Meter:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionIterable:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word hasNext next:

    No occurrences

Checking class Throwables:

  Verifying word hasNext next:

    No occurrences

Checking class Scrubber:

  Verifying word hasNext next:

      Method: Scrubber.scrub()
      Calls Location: Scrubber.java:275 Scrubber.java:275
      Atomic: NO

Checking class CompactionManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$2:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$3:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$4:

  Verifying word hasNext next:

      Method: CompactionManager$4.perform()
      Calls Location: CompactionManager.java:248 CompactionManager.java:248
      Atomic: NO

Checking class CompactionManager$5:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$6:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$7:

  Verifying word hasNext next:

      Method: CompactionManager$7.runMayThrow()
      Calls Location: CompactionManager.java:342 CompactionManager.java:342
      Atomic: NO

Checking class CompactionManager$8:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$9:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word hasNext next:

    No occurrences

Checking class KeysSearcher:

  Verifying word hasNext next:

    No occurrences

Checking class LoadingCache:

  Verifying word hasNext next:

    No occurrences

Checking class DataResource:

  Verifying word hasNext next:

    No occurrences

Checking class CacheBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class CacheLoader:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftValidation:

  Verifying word hasNext next:

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:330
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:350
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateColumnPathOrParent()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateColumnPath()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateDeletion()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:330 ThriftValidation.java:330
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:350 ThriftValidation.java:350
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:330 ThriftValidation.java:350
      Atomic: NO

      Method: ThriftValidation.validateKeyspaceNotYetExisting()
      Calls Location: ThriftValidation.java:623 ThriftValidation.java:623
      Atomic: NO

      Method: ThriftValidation.validateColumnNames()
      Calls Location: ThriftValidation.java:216 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:350 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateColumnOrSuperColumn()
      Calls Location: ThriftValidation.java:330 ThriftValidation.java:216
      Atomic: NO

      Method: ThriftValidation.validateFilterClauses()
      Calls Location: ThriftValidation.java:582 ThriftValidation.java:582
      Atomic: NO

Checking class QueryProcessor:

  Verifying word hasNext next:

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:127 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:127 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:127 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:112 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:112 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:112 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:542 QueryProcessor.java:542
      Atomic: NO

      Method: QueryProcessor.getSlice()
      Calls Location: QueryProcessor.java:127 QueryProcessor.java:127
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:571 QueryProcessor.java:571
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:617 QueryProcessor.java:617
      Atomic: NO

      Method: QueryProcessor.getSlice()
      Calls Location: QueryProcessor.java:112 QueryProcessor.java:112
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:189 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:189 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:189 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.multiRangeSlice()
      Calls Location: QueryProcessor.java:189 QueryProcessor.java:189
      Atomic: NO

      Method: QueryProcessor.getSlice()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:308
      Atomic: NO

      Method: QueryProcessor.getSlice()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:112
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.multiRangeSlice()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:189
      Atomic: NO

      Method: QueryProcessor.multiRangeSlice()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:308
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:450 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:467 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:485 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:467 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:450 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:485 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:485 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:450 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:467 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.getColumnNames()
      Calls Location: QueryProcessor.java:150 QueryProcessor.java:150
      Atomic: NO

      Method: QueryProcessor.validateColumnNames()
      Calls Location: QueryProcessor.java:308 QueryProcessor.java:308
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:308 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:308 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:308 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.getSlice()
      Calls Location: QueryProcessor.java:308 QueryProcessor.java:112
      Atomic: NO

      Method: QueryProcessor.multiRangeSlice()
      Calls Location: QueryProcessor.java:308 QueryProcessor.java:189
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:127
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:150
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:308
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:112
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:189
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:467
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:485
      Atomic: NO

      Method: QueryProcessor.prepare()
      Calls Location: QueryProcessor.java:819 QueryProcessor.java:819
      Atomic: NO

      Method: QueryProcessor.validateSelect()
      Calls Location: QueryProcessor.java:272 QueryProcessor.java:272
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:272
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:308
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:617
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:127
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:681 QueryProcessor.java:681
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:681
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:382
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:112
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:542
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:450
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:559 QueryProcessor.java:571
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:571
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:150
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:559 QueryProcessor.java:559
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:559
      Atomic: NO

      Method: QueryProcessor.processStatement()
      Calls Location: QueryProcessor.java:382 QueryProcessor.java:189
      Atomic: NO

Checking class ClientState$1:

  Verifying word hasNext next:

    No occurrences

Checking class Resources:

  Verifying word hasNext next:

      Method: Resources.toString()
      Calls Location: Resources.java:55 Resources.java:55
      Atomic: NO

Checking class RangeTombstoneList:

  Verifying word hasNext next:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word hasNext next:

      Method: NamesQueryFilter$Serializer.serialize()
      Calls Location: NamesQueryFilter.java:210 NamesQueryFilter.java:210
      Atomic: NO

      Method: NamesQueryFilter$Serializer.serializedSize()
      Calls Location: NamesQueryFilter.java:236 NamesQueryFilter.java:236
      Atomic: NO

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word hasNext next:

      Method: NamesQueryFilter$ByNameColumnIterator.computeNext()
      Calls Location: NamesQueryFilter.java:192 NamesQueryFilter.java:194
      Atomic: NO

Checking class SSTableNamesIterator:

  Verifying word hasNext next:

      Method: SSTableNamesIterator.readIndexedColumns()
      Calls Location: SSTableNamesIterator.java:208 SSTableNamesIterator.java:208
      Atomic: NO

      Method: SSTableNamesIterator.readIndexedColumns()
      Calls Location: SSTableNamesIterator.java:190 SSTableNamesIterator.java:208
      Atomic: NO

      Method: SSTableNamesIterator.readIndexedColumns()
      Calls Location: SSTableNamesIterator.java:190 SSTableNamesIterator.java:190
      Atomic: NO

      Method: SSTableNamesIterator.readIndexedColumns()
      Calls Location: SSTableNamesIterator.java:208 SSTableNamesIterator.java:223
      Atomic: NO

      Method: SSTableNamesIterator.readIndexedColumns()
      Calls Location: SSTableNamesIterator.java:190 SSTableNamesIterator.java:223
      Atomic: NO

      Method: SSTableNamesIterator.readSimpleColumns()
      Calls Location: SSTableNamesIterator.java:159 SSTableNamesIterator.java:161
      Atomic: NO

      Method: SSTableNamesIterator.computeNext()
      Calls Location: SSTableNamesIterator.java:243 SSTableNamesIterator.java:245
      Atomic: NO

Checking class IDiskAtomFilter$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word hasNext next:

      Method: StreamingHistogram$StreamingHistogramSerializer.serialize()
      Calls Location: StreamingHistogram.java:177 StreamingHistogram.java:177
      Atomic: NO

Checking class RangeTombstoneList$InOrderTester:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word hasNext next:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word hasNext next:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word hasNext next:

    No occurrences

Checking class UUIDSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word hasNext next:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word hasNext next:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word hasNext next:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word hasNext next:

      Method: LazilyCompactedRow.update()
      Calls Location: LazilyCompactedRow.java:154 LazilyCompactedRow.java:155
      Atomic: NO

      Method: LazilyCompactedRow.close()
      Calls Location: LazilyCompactedRow.java:178 LazilyCompactedRow.java:178
      Atomic: NO

      Method: LazilyCompactedRow.update()
      Calls Location: LazilyCompactedRow.java:154 LazilyCompactedRow.java:178
      Atomic: NO

      Method: LazilyCompactedRow.<init>()
      Calls Location: LazilyCompactedRow.java:73 LazilyCompactedRow.java:73
      Atomic: NO

Checking class PrecompactedRow:

  Verifying word hasNext next:

      Method: PrecompactedRow.merge()
      Calls Location: PrecompactedRow.java:96 PrecompactedRow.java:96
      Atomic: NO

Checking class SSTableDeletingNotification:

  Verifying word hasNext next:

    No occurrences

Checking class DataTracker$1:

  Verifying word hasNext next:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word hasNext next:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word hasNext next:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word hasNext next:

      Method: Memtable$FlushRunnable.<init>()
      Calls Location: Memtable.java:329 Memtable.java:329
      Atomic: NO

      Method: Memtable$FlushRunnable.writeSortedContents()
      Calls Location: Memtable.java:372 Memtable.java:372
      Atomic: NO

Checking class Memtable$MeteringRunnable:

  Verifying word hasNext next:

      Method: Memtable$MeteringRunnable.run()
      Calls Location: Memtable.java:456 Memtable.java:456
      Atomic: NO

Checking class Memtable$2:

  Verifying word hasNext next:

    No occurrences

Checking class Memtable$1:

  Verifying word hasNext next:

    No occurrences

Checking class Memtable$3:

  Verifying word hasNext next:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word hasNext next:

      Method: AtomicSortedColumns.addAllWithSizeDelta()
      Calls Location: AtomicSortedColumns.java:189 AtomicSortedColumns.java:189
      Atomic: NO

Checking class NamedThreadFactory:

  Verifying word hasNext next:

    No occurrences

Checking class Component$Type:

  Verifying word hasNext next:

      Method: Component$Type.fromRepresentation()
      Calls Location: Component.java:73 Component.java:73
      Atomic: NO

Checking class Component$1:

  Verifying word hasNext next:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word hasNext next:

      Method: AbstractCompactionIterable.<init>()
      Calls Location: AbstractCompactionIterable.java:47 AbstractCompactionIterable.java:47
      Atomic: NO

Checking class ParallelCompactionIterable:

  Verifying word hasNext next:

      Method: ParallelCompactionIterable.iterator()
      Calls Location: ParallelCompactionIterable.java:71 ParallelCompactionIterable.java:71
      Atomic: NO

Checking class DiskAwareRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class Multiset$Entry:

  Verifying word hasNext next:

    No occurrences

Checking class HashMultiset:

  Verifying word hasNext next:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word hasNext next:

      Method: PropertyDefinitions.validate()
      Calls Location: PropertyDefinitions.java:47 PropertyDefinitions.java:47
      Atomic: NO

Checking class IMigrationListener:

  Verifying word hasNext next:

    No occurrences

Checking class MigrationManager$2:

  Verifying word hasNext next:

    No occurrences

Checking class MigrationManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word hasNext next:

      Method: MigrationManager$MigrationsSerializer.serialize()
      Calls Location: MigrationManager.java:377 MigrationManager.java:377
      Atomic: NO

      Method: MigrationManager$MigrationsSerializer.serializedSize()
      Calls Location: MigrationManager.java:395 MigrationManager.java:395
      Atomic: NO

Checking class MigrationTask:

  Verifying word hasNext next:

    No occurrences

Checking class TraceState:

  Verifying word hasNext next:

    No occurrences

Checking class OverloadedException:

  Verifying word hasNext next:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word hasNext next:

    No occurrences

Checking class Tracing$1:

  Verifying word hasNext next:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word hasNext next:

    No occurrences

Checking class Tracing$2:

  Verifying word hasNext next:

    No occurrences

Checking class Parser:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word hasNext next:

    No occurrences

Checking class BitSet:

  Verifying word hasNext next:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$Raw:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word hasNext next:

    No occurrences

Checking class Maps$Literal:

  Verifying word hasNext next:

      Method: Maps$Literal.prepare()
      Calls Location: Maps.java:96 Maps.java:72
      Atomic: NO

      Method: Maps$Literal.validateAssignableTo()
      Calls Location: Maps.java:96 Maps.java:96
      Atomic: NO

      Method: Maps$Literal.prepare()
      Calls Location: Maps.java:72 Maps.java:72
      Atomic: NO

Checking class Operation$RawUpdate:

  Verifying word hasNext next:

    No occurrences

Checking class UseStatement:

  Verifying word hasNext next:

    No occurrences

Checking class RawSelector:

  Verifying word hasNext next:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word hasNext next:

    No occurrences

Checking class Attributes$Raw:

  Verifying word hasNext next:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word hasNext next:

      Method: UpdateStatement$ParsedUpdate.prepareInternal()
      Calls Location: UpdateStatement.java:201 UpdateStatement.java:201
      Atomic: NO

Checking class DeleteStatement$Parsed:

  Verifying word hasNext next:

      Method: DeleteStatement$Parsed.prepareInternal()
      Calls Location: DeleteStatement.java:116 DeleteStatement.java:116
      Atomic: NO

Checking class Operation$RawDeletion:

  Verifying word hasNext next:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word hasNext next:

      Method: BatchStatement$Parsed.prepare()
      Calls Location: BatchStatement.java:420 BatchStatement.java:420
      Atomic: NO

      Method: BatchStatement$Parsed.prepare()
      Calls Location: BatchStatement.java:401 BatchStatement.java:420
      Atomic: NO

      Method: BatchStatement$Parsed.prepare()
      Calls Location: BatchStatement.java:401 BatchStatement.java:401
      Atomic: NO

      Method: BatchStatement$Parsed.prepareKeyspace()
      Calls Location: BatchStatement.java:391 BatchStatement.java:391
      Atomic: NO

Checking class ModificationStatement$Parsed:

  Verifying word hasNext next:

      Method: ModificationStatement$Parsed.prepare()
      Calls Location: ModificationStatement.java:791 ModificationStatement.java:791
      Atomic: NO

Checking class CreateKeyspaceStatement:

  Verifying word hasNext next:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word hasNext next:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word hasNext next:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word hasNext next:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word hasNext next:

    No occurrences

Checking class AlterTableStatement:

  Verifying word hasNext next:

      Method: AlterTableStatement.announceMigration()
      Calls Location: AlterTableStatement.java:246 AlterTableStatement.java:246
      Atomic: NO

      Method: AlterTableStatement.announceMigration()
      Calls Location: AlterTableStatement.java:227 AlterTableStatement.java:227
      Atomic: NO

Checking class DropKeyspaceStatement:

  Verifying word hasNext next:

    No occurrences

Checking class DropTableStatement:

  Verifying word hasNext next:

    No occurrences

Checking class DropIndexStatement:

  Verifying word hasNext next:

      Method: DropIndexStatement.announceMigration()
      Calls Location: DropIndexStatement.java:88 DropIndexStatement.java:102
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:102 DropIndexStatement.java:88
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:102 DropIndexStatement.java:102
      Atomic: NO

      Method: DropIndexStatement.announceMigration()
      Calls Location: DropIndexStatement.java:102 DropIndexStatement.java:102
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:88 DropIndexStatement.java:88
      Atomic: NO

      Method: DropIndexStatement.findIndexedColumn()
      Calls Location: DropIndexStatement.java:102 DropIndexStatement.java:102
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:88 DropIndexStatement.java:102
      Atomic: NO

Checking class TruncateStatement:

  Verifying word hasNext next:

    No occurrences

Checking class GrantStatement:

  Verifying word hasNext next:

    No occurrences

Checking class RevokeStatement:

  Verifying word hasNext next:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word hasNext next:

      Method: ListPermissionsStatement.execute()
      Calls Location: ListPermissionsStatement.java:91 ListPermissionsStatement.java:91
      Atomic: NO

      Method: ListPermissionsStatement.resultMessage()
      Calls Location: ListPermissionsStatement.java:109 ListPermissionsStatement.java:109
      Atomic: NO

      Method: ListPermissionsStatement.execute()
      Calls Location: ListPermissionsStatement.java:91 ListPermissionsStatement.java:109
      Atomic: NO

Checking class CreateUserStatement:

  Verifying word hasNext next:

    No occurrences

Checking class AlterUserStatement:

  Verifying word hasNext next:

      Method: AlterUserStatement.checkAccess()
      Calls Location: AlterUserStatement.java:76 AlterUserStatement.java:76
      Atomic: NO

Checking class DropUserStatement:

  Verifying word hasNext next:

    No occurrences

Checking class ListUsersStatement:

  Verifying word hasNext next:

    No occurrences

Checking class UserOptions:

  Verifying word hasNext next:

      Method: UserOptions.validate()
      Calls Location: UserOptions.java:49 UserOptions.java:49
      Atomic: NO

Checking class Constants$Literal:

  Verifying word hasNext next:

    No occurrences

Checking class Term$Raw:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$Literal:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$Prepend:

  Verifying word hasNext next:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word hasNext next:

    No occurrences

Checking class MismatchedSetException:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word hasNext next:

    No occurrences

Checking class Maps:

  Verifying word hasNext next:

    No occurrences

Checking class DeleteStatement:

  Verifying word hasNext next:

      Method: DeleteStatement.addUpdateForKey()
      Calls Location: DeleteStatement.java:88 DeleteStatement.java:88
      Atomic: NO

      Method: DeleteStatement.addUpdateForKey()
      Calls Location: DeleteStatement.java:58 DeleteStatement.java:58
      Atomic: NO

Checking class Operation$SetValue:

  Verifying word hasNext next:

    No occurrences

Checking class Token:

  Verifying word hasNext next:

    No occurrences

Checking class NoViableAltException:

  Verifying word hasNext next:

    No occurrences

Checking class UpdateStatement:

  Verifying word hasNext next:

      Method: UpdateStatement.addUpdateForKey()
      Calls Location: UpdateStatement.java:98 UpdateStatement.java:98
      Atomic: NO

      Method: UpdateStatement.addUpdateForKey()
      Calls Location: UpdateStatement.java:92 UpdateStatement.java:92
      Atomic: NO

Checking class Term$MultiColumnRaw:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word hasNext next:

    No occurrences

Checking class TypeCast:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition:

  Verifying word hasNext next:

    No occurrences

Checking class DFA:

  Verifying word hasNext next:

    No occurrences

Checking class Sets:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$Substraction:

  Verifying word hasNext next:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word hasNext next:

    No occurrences

Checking class Operation:

  Verifying word hasNext next:

    No occurrences

Checking class Constants:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$Addition:

  Verifying word hasNext next:

    No occurrences

Checking class Lists:

  Verifying word hasNext next:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word hasNext next:

    No occurrences

Checking class KSPropDefs:

  Verifying word hasNext next:

    No occurrences

Checking class FunctionCall:

  Verifying word hasNext next:

      Method: FunctionCall.bindAndGet()
      Calls Location: FunctionCall.java:57 FunctionCall.java:57
      Atomic: NO

      Method: FunctionCall.collectMarkerSpecification()
      Calls Location: FunctionCall.java:45 FunctionCall.java:45
      Atomic: NO

      Method: FunctionCall.containsBindMarker()
      Calls Location: FunctionCall.java:72 FunctionCall.java:72
      Atomic: NO

Checking class FunctionCall$Raw:

  Verifying word hasNext next:

      Method: FunctionCall$Raw.execute()
      Calls Location: FunctionCall.java:130 FunctionCall.java:130
      Atomic: NO

Checking class Selectable$WithFunction:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$SetElement:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractMarker:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Literal:

  Verifying word hasNext next:

      Method: Lists$Literal.prepare()
      Calls Location: Lists.java:93 Lists.java:71
      Atomic: NO

      Method: Lists$Literal.prepare()
      Calls Location: Lists.java:71 Lists.java:71
      Atomic: NO

      Method: Lists$Literal.validateAssignableTo()
      Calls Location: Lists.java:93 Lists.java:93
      Atomic: NO

Checking class Sets$Literal:

  Verifying word hasNext next:

      Method: Sets$Literal.validateAssignableTo()
      Calls Location: Sets.java:104 Sets.java:104
      Atomic: NO

      Method: Sets$Literal.prepare()
      Calls Location: Sets.java:75 Sets.java:75
      Atomic: NO

      Method: Sets$Literal.prepare()
      Calls Location: Sets.java:104 Sets.java:75
      Atomic: NO

Checking class Operation$ElementDeletion:

  Verifying word hasNext next:

    No occurrences

Checking class IndexPropDefs:

  Verifying word hasNext next:

    No occurrences

Checking class Lexer:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word hasNext next:

    No occurrences

Checking class EarlyExitException:

  Verifying word hasNext next:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word hasNext next:

    No occurrences

Checking class CounterMutation:

  Verifying word hasNext next:

      Method: CounterMutation.makeReplicationMutation()
      Calls Location: CounterMutation.java:97 CounterMutation.java:97
      Atomic: NO

      Method: CounterMutation.makeReplicationMutation()
      Calls Location: CounterMutation.java:88 CounterMutation.java:97
      Atomic: NO

      Method: CounterMutation.shouldReplicateOnWrite()
      Calls Location: CounterMutation.java:125 CounterMutation.java:125
      Atomic: NO

      Method: CounterMutation.apply()
      Calls Location: CounterMutation.java:137 CounterMutation.java:137
      Atomic: NO

      Method: CounterMutation.apply()
      Calls Location: CounterMutation.java:141 CounterMutation.java:137
      Atomic: NO

      Method: CounterMutation.makeReplicationMutation()
      Calls Location: CounterMutation.java:88 CounterMutation.java:88
      Atomic: NO

      Method: CounterMutation.apply()
      Calls Location: CounterMutation.java:141 CounterMutation.java:141
      Atomic: NO

      Method: CounterMutation.apply()
      Calls Location: CounterMutation.java:137 CounterMutation.java:141
      Atomic: NO

Checking class BatchStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word hasNext next:

    No occurrences

Checking class UpdateParameters:

  Verifying word hasNext next:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word hasNext next:

    No occurrences

Checking class CASConditions:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word hasNext next:

      Method: CQL3CasConditions.appliesTo()
      Calls Location: CQL3CasConditions.java:106 CQL3CasConditions.java:106
      Atomic: NO

      Method: CQL3CasConditions.readFilter()
      Calls Location: CQL3CasConditions.java:97 CQL3CasConditions.java:97
      Atomic: NO

Checking class Ints:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word hasNext next:

    No occurrences

Checking class Ordering:

  Verifying word hasNext next:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word hasNext next:

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:57 LegacyLeveledManifest.java:98
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:61 LegacyLeveledManifest.java:98
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:98 LegacyLeveledManifest.java:98
      Atomic: NO

      Method: LegacyLeveledManifest.<init>()
      Calls Location: LegacyLeveledManifest.java:57 LegacyLeveledManifest.java:57
      Atomic: NO

      Method: LegacyLeveledManifest.<init>()
      Calls Location: LegacyLeveledManifest.java:61 LegacyLeveledManifest.java:57
      Atomic: NO

      Method: LegacyLeveledManifest.<init>()
      Calls Location: LegacyLeveledManifest.java:61 LegacyLeveledManifest.java:61
      Atomic: NO

      Method: LegacyLeveledManifest.<init>()
      Calls Location: LegacyLeveledManifest.java:57 LegacyLeveledManifest.java:61
      Atomic: NO

      Method: LegacyLeveledManifest.snapshotWithoutCFS()
      Calls Location: LegacyLeveledManifest.java:121 LegacyLeveledManifest.java:121
      Atomic: NO

      Method: LegacyLeveledManifest.snapshotWithoutCFS()
      Calls Location: LegacyLeveledManifest.java:125 LegacyLeveledManifest.java:121
      Atomic: NO

      Method: LegacyLeveledManifest.snapshotWithoutCFS()
      Calls Location: LegacyLeveledManifest.java:125 LegacyLeveledManifest.java:125
      Atomic: NO

      Method: LegacyLeveledManifest.snapshotWithoutCFS()
      Calls Location: LegacyLeveledManifest.java:121 LegacyLeveledManifest.java:125
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:121 LegacyLeveledManifest.java:98
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:121 LegacyLeveledManifest.java:57
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:121 LegacyLeveledManifest.java:61
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:125 LegacyLeveledManifest.java:98
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:125 LegacyLeveledManifest.java:57
      Atomic: NO

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:125 LegacyLeveledManifest.java:61
      Atomic: NO

Checking class ImmutableSortedSet:

  Verifying word hasNext next:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word hasNext next:

    No occurrences

Checking class Predicates:

  Verifying word hasNext next:

    No occurrences

Checking class Doubles:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleStrategy:

  Verifying word hasNext next:

      Method: SimpleStrategy.calculateNaturalEndpoints()
      Calls Location: SimpleStrategy.java:56 SimpleStrategy.java:58
      Atomic: NO

Checking class InetAddressSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class Int32Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class ListSerializer:

  Verifying word hasNext next:

      Method: ListSerializer.serialize()
      Calls Location: ListSerializer.java:82 ListSerializer.java:82
      Atomic: NO

      Method: ListSerializer.toString()
      Calls Location: ListSerializer.java:95 ListSerializer.java:95
      Atomic: NO

Checking class DoubleSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class MapSerializer:

  Verifying word hasNext next:

      Method: MapSerializer.serialize()
      Calls Location: MapSerializer.java:92 MapSerializer.java:92
      Atomic: NO

      Method: MapSerializer.toString()
      Calls Location: MapSerializer.java:107 MapSerializer.java:107
      Atomic: NO

Checking class BooleanSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class SetSerializer:

  Verifying word hasNext next:

      Method: SetSerializer.serialize()
      Calls Location: SetSerializer.java:82 SetSerializer.java:82
      Atomic: NO

      Method: SetSerializer.toString()
      Calls Location: SetSerializer.java:95 SetSerializer.java:95
      Atomic: NO

Checking class EmptyType:

  Verifying word hasNext next:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word hasNext next:

    No occurrences

Checking class QueryFilter$2:

  Verifying word hasNext next:

      Method: QueryFilter$2.getNext()
      Calls Location: QueryFilter.java:157 QueryFilter.java:159
      Atomic: NO

Checking class QueryFilter$1:

  Verifying word hasNext next:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word hasNext next:

    No occurrences

Checking class Clock:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareResponse:

  Verifying word hasNext next:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word hasNext next:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word hasNext next:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word hasNext next:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word hasNext next:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word hasNext next:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word hasNext next:

      Method: ArrayBackedSortedColumns$SlicesIterator.computeNext()
      Calls Location: ArrayBackedSortedColumns.java:340 ArrayBackedSortedColumns.java:341
      Atomic: NO

Checking class MessagingServiceMBean:

  Verifying word hasNext next:

    No occurrences

Checking class ExpiringMap:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleCondition:

  Verifying word hasNext next:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word hasNext next:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word hasNext next:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word hasNext next:

    No occurrences

Checking class CallbackInfo:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$1:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word hasNext next:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word hasNext next:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word hasNext next:

    No occurrences

Checking class StatusLogger:

  Verifying word hasNext next:

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:119 StatusLogger.java:119
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:89 StatusLogger.java:119
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:84 StatusLogger.java:119
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:66 StatusLogger.java:119
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:84 StatusLogger.java:84
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:66 StatusLogger.java:84
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:89 StatusLogger.java:89
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:84 StatusLogger.java:89
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:66 StatusLogger.java:89
      Atomic: NO

      Method: StatusLogger.log()
      Calls Location: StatusLogger.java:66 StatusLogger.java:66
      Atomic: NO

Checking class MessageDeliveryTask:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class SinkManager:

  Verifying word hasNext next:

      Method: SinkManager.processInboundMessage()
      Calls Location: SinkManager.java:78 SinkManager.java:78
      Atomic: NO

      Method: SinkManager.processOutboundMessage()
      Calls Location: SinkManager.java:64 SinkManager.java:64
      Atomic: NO

      Method: SinkManager.processWriteRequest()
      Calls Location: SinkManager.java:92 SinkManager.java:92
      Atomic: NO

Checking class DroppedMessageMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$5:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$4:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$3:

  Verifying word hasNext next:

    No occurrences

Checking class MessagingService$2:

  Verifying word hasNext next:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word hasNext next:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word hasNext next:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CacheMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word hasNext next:

      Method: CacheService$KeyCacheSerializer.findDesc()
      Calls Location: CacheService.java:371 CacheService.java:371
      Atomic: NO

Checking class SerializingCacheProvider:

  Verifying word hasNext next:

    No occurrences

Checking class ICache:

  Verifying word hasNext next:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word hasNext next:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word hasNext next:

    No occurrences

Checking class Files:

  Verifying word hasNext next:

    No occurrences

Checking class SSTable$2:

  Verifying word hasNext next:

    No occurrences

Checking class SSTable$1:

  Verifying word hasNext next:

    No occurrences

Checking class CacheKey:

  Verifying word hasNext next:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word hasNext next:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word hasNext next:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word hasNext next:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word hasNext next:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word hasNext next:

      Method: ExtendedFilter$WithClauses.needsExtraQuery()
      Calls Location: ExtendedFilter.java:238 ExtendedFilter.java:238
      Atomic: NO

      Method: ExtendedFilter$WithClauses.computeOptimizedFilter()
      Calls Location: ExtendedFilter.java:206 ExtendedFilter.java:206
      Atomic: NO

      Method: ExtendedFilter$WithClauses.isSatisfiedBy()
      Calls Location: ExtendedFilter.java:292 ExtendedFilter.java:340
      Atomic: NO

      Method: ExtendedFilter$WithClauses.getExtraFilter()
      Calls Location: ExtendedFilter.java:267 ExtendedFilter.java:267
      Atomic: NO

      Method: ExtendedFilter$WithClauses.isSatisfiedBy()
      Calls Location: ExtendedFilter.java:292 ExtendedFilter.java:292
      Atomic: NO

      Method: ExtendedFilter$WithClauses.getExtraFilter()
      Calls Location: ExtendedFilter.java:238 ExtendedFilter.java:267
      Atomic: NO

Checking class ExtendedFilter$1:

  Verifying word hasNext next:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class IntervalTree:

  Verifying word hasNext next:

      Method: IntervalTree.hashCode()
      Calls Location: IntervalTree.java:176 IntervalTree.java:176
      Atomic: NO

Checking class Memory:

  Verifying word hasNext next:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word hasNext next:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word hasNext next:

      Method: CompressionMetadata$Writer.writeHeader()
      Calls Location: CompressionMetadata.java:254 CompressionMetadata.java:254
      Atomic: NO

Checking class CompressionMetadata$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class WrappedRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word hasNext next:

    No occurrences

Checking class MetricNameFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$25.value()
      Calls Location: ColumnFamilyMetrics.java:488 ColumnFamilyMetrics.java:488
      Atomic: NO

Checking class ColumnFamilyMetrics$24:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$24.getDenominator()
      Calls Location: ColumnFamilyMetrics.java:438 ColumnFamilyMetrics.java:438
      Atomic: NO

      Method: ColumnFamilyMetrics$24.getNumerator()
      Calls Location: ColumnFamilyMetrics.java:430 ColumnFamilyMetrics.java:430
      Atomic: NO

Checking class ColumnFamilyMetrics$26:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$26.value()
      Calls Location: ColumnFamilyMetrics.java:525 ColumnFamilyMetrics.java:525
      Atomic: NO

Checking class ColumnFamilyMetrics$21:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$21.value()
      Calls Location: ColumnFamilyMetrics.java:386 ColumnFamilyMetrics.java:386
      Atomic: NO

Checking class ColumnFamilyMetrics$20:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$20.value()
      Calls Location: ColumnFamilyMetrics.java:369 ColumnFamilyMetrics.java:369
      Atomic: NO

      Method: ColumnFamilyMetrics$20.value()
      Calls Location: ColumnFamilyMetrics.java:367 ColumnFamilyMetrics.java:369
      Atomic: NO

      Method: ColumnFamilyMetrics$20.value()
      Calls Location: ColumnFamilyMetrics.java:367 ColumnFamilyMetrics.java:367
      Atomic: NO

      Method: ColumnFamilyMetrics$20.value()
      Calls Location: ColumnFamilyMetrics.java:369 ColumnFamilyMetrics.java:367
      Atomic: NO

Checking class ColumnFamilyMetrics$23:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$23.value()
      Calls Location: ColumnFamilyMetrics.java:419 ColumnFamilyMetrics.java:419
      Atomic: NO

Checking class ColumnFamilyMetrics$22:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$22.value()
      Calls Location: ColumnFamilyMetrics.java:403 ColumnFamilyMetrics.java:403
      Atomic: NO

      Method: ColumnFamilyMetrics$22.value()
      Calls Location: ColumnFamilyMetrics.java:401 ColumnFamilyMetrics.java:403
      Atomic: NO

      Method: ColumnFamilyMetrics$22.value()
      Calls Location: ColumnFamilyMetrics.java:401 ColumnFamilyMetrics.java:401
      Atomic: NO

      Method: ColumnFamilyMetrics$22.value()
      Calls Location: ColumnFamilyMetrics.java:403 ColumnFamilyMetrics.java:401
      Atomic: NO

Checking class ColumnFamilyMetrics$16:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$16.value()
      Calls Location: ColumnFamilyMetrics.java:316 ColumnFamilyMetrics.java:316
      Atomic: NO

      Method: ColumnFamilyMetrics$16.value()
      Calls Location: ColumnFamilyMetrics.java:314 ColumnFamilyMetrics.java:316
      Atomic: NO

      Method: ColumnFamilyMetrics$16.value()
      Calls Location: ColumnFamilyMetrics.java:314 ColumnFamilyMetrics.java:314
      Atomic: NO

      Method: ColumnFamilyMetrics$16.value()
      Calls Location: ColumnFamilyMetrics.java:316 ColumnFamilyMetrics.java:314
      Atomic: NO

Checking class ColumnFamilyMetrics$15:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$15.value()
      Calls Location: ColumnFamilyMetrics.java:300 ColumnFamilyMetrics.java:300
      Atomic: NO

Checking class ColumnFamilyMetrics$14:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$14.value()
      Calls Location: ColumnFamilyMetrics.java:287 ColumnFamilyMetrics.java:287
      Atomic: NO

Checking class ColumnFamilyMetrics$13:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$13.value()
      Calls Location: ColumnFamilyMetrics.java:275 ColumnFamilyMetrics.java:275
      Atomic: NO

Checking class ColumnFamilyMetrics$12:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$12.value()
      Calls Location: ColumnFamilyMetrics.java:263 ColumnFamilyMetrics.java:263
      Atomic: NO

Checking class ColumnFamilyMetrics$11:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$11.value()
      Calls Location: ColumnFamilyMetrics.java:251 ColumnFamilyMetrics.java:251
      Atomic: NO

Checking class ColumnFamilyMetrics$10:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$19.value()
      Calls Location: ColumnFamilyMetrics.java:352 ColumnFamilyMetrics.java:352
      Atomic: NO

Checking class ColumnFamilyMetrics$18:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$18.value()
      Calls Location: ColumnFamilyMetrics.java:341 ColumnFamilyMetrics.java:341
      Atomic: NO

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$17.value()
      Calls Location: ColumnFamilyMetrics.java:331 ColumnFamilyMetrics.java:331
      Atomic: NO

Checking class ColumnFamilyMetrics$5:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$5.value()
      Calls Location: ColumnFamilyMetrics.java:173 ColumnFamilyMetrics.java:173
      Atomic: NO

Checking class MetricsRegistry:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$4.value()
      Calls Location: ColumnFamilyMetrics.java:159 ColumnFamilyMetrics.java:159
      Atomic: NO

Checking class ColumnFamilyMetrics$3:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$7.value()
      Calls Location: ColumnFamilyMetrics.java:207 ColumnFamilyMetrics.java:207
      Atomic: NO

      Method: ColumnFamilyMetrics$7.value()
      Calls Location: ColumnFamilyMetrics.java:205 ColumnFamilyMetrics.java:207
      Atomic: NO

      Method: ColumnFamilyMetrics$7.value()
      Calls Location: ColumnFamilyMetrics.java:205 ColumnFamilyMetrics.java:205
      Atomic: NO

      Method: ColumnFamilyMetrics$7.value()
      Calls Location: ColumnFamilyMetrics.java:207 ColumnFamilyMetrics.java:205
      Atomic: NO

Checking class ColumnFamilyMetrics$6:

  Verifying word hasNext next:

      Method: ColumnFamilyMetrics$6.value()
      Calls Location: ColumnFamilyMetrics.java:189 ColumnFamilyMetrics.java:189
      Atomic: NO

Checking class MetricName:

  Verifying word hasNext next:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word hasNext next:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word hasNext next:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnIndex:

  Verifying word hasNext next:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word hasNext next:

      Method: RowIndexEntry$IndexedEntry.memorySize()
      Calls Location: RowIndexEntry.java:193 RowIndexEntry.java:193
      Atomic: NO

      Method: RowIndexEntry$IndexedEntry.promotedSize()
      Calls Location: RowIndexEntry.java:183 RowIndexEntry.java:183
      Atomic: NO

Checking class DefaultNameFactory:

  Verifying word hasNext next:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word hasNext next:

    No occurrences

Checking class SequentialWriter:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word hasNext next:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word hasNext next:

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:139 ColumnIndex.java:139
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:126 ColumnIndex.java:139
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:131 ColumnIndex.java:139
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:123 ColumnIndex.java:139
      Atomic: NO

      Method: ColumnIndex$Builder.buildForCompaction()
      Calls Location: ColumnIndex.java:156 ColumnIndex.java:157
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:131 ColumnIndex.java:131
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:126 ColumnIndex.java:131
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:123 ColumnIndex.java:131
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:126 ColumnIndex.java:126
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:131 ColumnIndex.java:126
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:123 ColumnIndex.java:126
      Atomic: NO

      Method: ColumnIndex$Builder.build()
      Calls Location: ColumnIndex.java:123 ColumnIndex.java:123
      Atomic: NO

Checking class DataIntegrityMetadata:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogMBean:

  Verifying word hasNext next:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word hasNext next:

      Method: CommitLogAllocator.manages()
      Calls Location: CommitLogAllocator.java:247 CommitLogAllocator.java:247
      Atomic: NO

      Method: CommitLogAllocator.flushOldestKeyspaces()
      Calls Location: CommitLogAllocator.java:309 CommitLogAllocator.java:309
      Atomic: NO

      Method: CommitLogAllocator.resetUnsafe()
      Calls Location: CommitLogAllocator.java:351 CommitLogAllocator.java:351
      Atomic: NO

Checking class CommitLogArchiver:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogSegment:

  Verifying word hasNext next:

      Method: CommitLogSegment.dirtyString()
      Calls Location: CommitLogSegment.java:402 CommitLogSegment.java:402
      Atomic: NO

      Method: CommitLogSegment.markDirty()
      Calls Location: CommitLogSegment.java:228 CommitLogSegment.java:228
      Atomic: NO

Checking class CommitLogMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word hasNext next:

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:272 CommitLogReplayer.java:273
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:272 CommitLogReplayer.java:272
      Atomic: NO

      Method: CommitLogReplayer.blockForWrites()
      Calls Location: CommitLogReplayer.java:100 CommitLogReplayer.java:100
      Atomic: NO

      Method: CommitLogReplayer.<init>()
      Calls Location: CommitLogReplayer.java:74 CommitLogReplayer.java:74
      Atomic: NO

      Method: CommitLogReplayer.pointInTimeExceeded()
      Calls Location: CommitLogReplayer.java:374 CommitLogReplayer.java:374
      Atomic: NO

      Method: CommitLogReplayer.blockForWrites()
      Calls Location: CommitLogReplayer.java:109 CommitLogReplayer.java:109
      Atomic: NO

      Method: CommitLogReplayer.blockForWrites()
      Calls Location: CommitLogReplayer.java:100 CommitLogReplayer.java:109
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:273 CommitLogReplayer.java:273
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:272 CommitLogReplayer.java:273
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:272 CommitLogReplayer.java:272
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:273 CommitLogReplayer.java:272
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:273 CommitLogReplayer.java:273
      Atomic: NO

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:273 CommitLogReplayer.java:272
      Atomic: NO

Checking class BatchCommitLogExecutorService:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLog$4:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLog$1:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLog$3:

  Verifying word hasNext next:

      Method: CommitLog$3.call()
      Calls Location: CommitLog.java:218 CommitLog.java:220
      Atomic: NO

      Method: CommitLog$3.call()
      Calls Location: CommitLog.java:226 CommitLog.java:220
      Atomic: NO

Checking class CommitLog$2:

  Verifying word hasNext next:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word hasNext next:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class Directories$FileAction:

  Verifying word hasNext next:

    No occurrences

Checking class Directories$2:

  Verifying word hasNext next:

    No occurrences

Checking class Directories$1:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word hasNext next:

      Method: SecondaryIndexManager$StandardUpdater.remove()
      Calls Location: SecondaryIndexManager.java:652 SecondaryIndexManager.java:652
      Atomic: NO

      Method: SecondaryIndexManager$StandardUpdater.insert()
      Calls Location: SecondaryIndexManager.java:617 SecondaryIndexManager.java:617
      Atomic: NO

      Method: SecondaryIndexManager$StandardUpdater.updateRowLevelIndexes()
      Calls Location: SecondaryIndexManager.java:659 SecondaryIndexManager.java:659
      Atomic: NO

      Method: SecondaryIndexManager$StandardUpdater.update()
      Calls Location: SecondaryIndexManager.java:627 SecondaryIndexManager.java:627
      Atomic: NO

Checking class PerRowSecondaryIndex:

  Verifying word hasNext next:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word hasNext next:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class PropertyUtils:

  Verifying word hasNext next:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word hasNext next:

    No occurrences

Checking class TypeDescription:

  Verifying word hasNext next:

    No occurrences

Checking class Constructor:

  Verifying word hasNext next:

    No occurrences

Checking class Yaml:

  Verifying word hasNext next:

    No occurrences

Checking class NativeAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class CsvListReader:

  Verifying word hasNext next:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word hasNext next:

      Method: AbstractEndpointSnitch.isWorthMergingForRangeQuery()
      Calls Location: AbstractEndpointSnitch.java:77 AbstractEndpointSnitch.java:77
      Atomic: NO

      Method: AbstractEndpointSnitch.hasRemoteNode()
      Calls Location: AbstractEndpointSnitch.java:77 AbstractEndpointSnitch.java:77
      Atomic: NO

Checking class DynamicEndpointSnitchMBean:

  Verifying word hasNext next:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word hasNext next:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word hasNext next:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word hasNext next:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word hasNext next:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word hasNext next:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word hasNext next:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word hasNext next:

      Method: SimpleSliceReader.computeNext()
      Calls Location: SimpleSliceReader.java:88 SimpleSliceReader.java:91
      Atomic: NO

Checking class KeyspaceMetrics$MetricValue:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word hasNext next:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word hasNext next:

      Method: KeyspaceMetrics$10.value()
      Calls Location: KeyspaceMetrics.java:199 KeyspaceMetrics.java:199
      Atomic: NO

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word hasNext next:

    No occurrences

Checking class BiMap:

  Verifying word hasNext next:

    No occurrences

Checking class HashBiMap:

  Verifying word hasNext next:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word hasNext next:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word hasNext next:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word hasNext next:

    No occurrences

Checking class NamesQueryPager:

  Verifying word hasNext next:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word hasNext next:

    No occurrences

Checking class SliceQueryPager:

  Verifying word hasNext next:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word hasNext next:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word hasNext next:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word hasNext next:

    No occurrences

Checking class QueryPagers$1:

  Verifying word hasNext next:

    No occurrences

Checking class FrameDecoder:

  Verifying word hasNext next:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word hasNext next:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word hasNext next:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word hasNext next:

    No occurrences

Checking class TruncateException:

  Verifying word hasNext next:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word hasNext next:

      Method: QueryOptions$Codec$Flag.serialize()
      Calls Location: QueryOptions.java:173 QueryOptions.java:173
      Atomic: NO

Checking class ByteBufferOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word hasNext next:

    No occurrences

Checking class FloatSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class DecimalSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class IntegerSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class LSResourceResolver:

  Verifying word hasNext next:

    No occurrences

Checking class UnavailableException:

  Verifying word hasNext next:

    No occurrences

Checking class TimedOutException:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word hasNext next:

    No occurrences

Checking class OptionCodec:

  Verifying word hasNext next:

      Method: OptionCodec.encode()
      Calls Location: OptionCodec.java:91 OptionCodec.java:91
      Atomic: NO

      Method: OptionCodec.encode()
      Calls Location: OptionCodec.java:87 OptionCodec.java:91
      Atomic: NO

      Method: OptionCodec.encode()
      Calls Location: OptionCodec.java:87 OptionCodec.java:87
      Atomic: NO

Checking class DataType:

  Verifying word hasNext next:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word hasNext next:

    No occurrences

Checking class Restriction$IN:

  Verifying word hasNext next:

    No occurrences

Checking class Selection$Selector:

  Verifying word hasNext next:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word hasNext next:

      Method: Selection$FunctionSelector.compute()
      Calls Location: Selection.java:396 Selection.java:396
      Atomic: NO

Checking class Selection$SelectionWithFunctions:

  Verifying word hasNext next:

      Method: Selection$SelectionWithFunctions.handleRow()
      Calls Location: Selection.java:472 Selection.java:472
      Atomic: NO

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word hasNext next:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word hasNext next:

    No occurrences

Checking class Functions:

  Verifying word hasNext next:

      Method: Functions.get()
      Calls Location: Functions.java:96 Functions.java:96
      Atomic: NO

Checking class Selection$SimpleSelector:

  Verifying word hasNext next:

    No occurrences

Checking class Function:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word hasNext next:

    No occurrences

Checking class Term$Terminal:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$Value:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word hasNext next:

      Method: RangeSliceCommandSerializer.serialize()
      Calls Location: RangeSliceCommand.java:195 RangeSliceCommand.java:195
      Atomic: NO

      Method: RangeSliceCommandSerializer.serializedSize()
      Calls Location: RangeSliceCommand.java:309 RangeSliceCommand.java:309
      Atomic: NO

Checking class IReadCommand:

  Verifying word hasNext next:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word hasNext next:

    No occurrences

Checking class RowDataResolver:

  Verifying word hasNext next:

      Method: RowDataResolver.resolveSuperset()
      Calls Location: RowDataResolver.java:135 RowDataResolver.java:135
      Atomic: NO

      Method: RowDataResolver.resolve()
      Calls Location: RowDataResolver.java:70 RowDataResolver.java:135
      Atomic: NO

      Method: RowDataResolver.resolveSuperset()
      Calls Location: RowDataResolver.java:153 RowDataResolver.java:153
      Atomic: NO

      Method: RowDataResolver.resolveSuperset()
      Calls Location: RowDataResolver.java:135 RowDataResolver.java:153
      Atomic: NO

      Method: RowDataResolver.resolve()
      Calls Location: RowDataResolver.java:70 RowDataResolver.java:153
      Atomic: NO

      Method: RowDataResolver.resolve()
      Calls Location: RowDataResolver.java:70 RowDataResolver.java:70
      Atomic: NO

Checking class Term$NonTerminal:

  Verifying word hasNext next:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word hasNext next:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word hasNext next:

      Method: MultiColumnRestriction$InWithValues.splitValues()
      Calls Location: MultiColumnRestriction.java:74 MultiColumnRestriction.java:74
      Atomic: NO

Checking class SelectStatement$RawStatement$2:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Marker:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word hasNext next:

      Method: SingleColumnRestriction$InWithValues.values()
      Calls Location: SingleColumnRestriction.java:91 SingleColumnRestriction.java:91
      Atomic: NO

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word hasNext next:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareCallback:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$8:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$9:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$6:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$7:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$4:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$5:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$2:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$3:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word hasNext next:

      Method: HintedHandoffMetrics.log()
      Calls Location: HintedHandoffMetrics.java:74 HintedHandoffMetrics.java:74
      Atomic: NO

Checking class StorageProxy$1:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class ReadCallback:

  Verifying word hasNext next:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word hasNext next:

      Method: BatchlogEndpointSelector.chooseEndpoints()
      Calls Location: BatchlogEndpointSelector.java:55 BatchlogEndpointSelector.java:55
      Atomic: NO

      Method: BatchlogEndpointSelector.chooseEndpoints()
      Calls Location: BatchlogEndpointSelector.java:90 BatchlogEndpointSelector.java:90
      Atomic: NO

      Method: BatchlogEndpointSelector.chooseEndpoints()
      Calls Location: BatchlogEndpointSelector.java:55 BatchlogEndpointSelector.java:90
      Atomic: NO

Checking class DigestMismatchException:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word hasNext next:

      Method: RangeSliceResponseResolver.resolve()
      Calls Location: RangeSliceResponseResolver.java:79 RangeSliceResponseResolver.java:79
      Atomic: NO

Checking class AbstractReadExecutor:

  Verifying word hasNext next:

      Method: AbstractReadExecutor.makeDigestRequests()
      Calls Location: AbstractReadExecutor.java:100 AbstractReadExecutor.java:100
      Atomic: NO

      Method: AbstractReadExecutor.makeDataRequests()
      Calls Location: AbstractReadExecutor.java:80 AbstractReadExecutor.java:80
      Atomic: NO

      Method: AbstractReadExecutor.getReadExecutor()
      Calls Location: AbstractReadExecutor.java:184 AbstractReadExecutor.java:184
      Atomic: NO

Checking class IResponseResolver:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class RowDigestResolver:

  Verifying word hasNext next:

      Method: RowDigestResolver.isDataPresent()
      Calls Location: RowDigestResolver.java:100 RowDigestResolver.java:100
      Atomic: NO

      Method: RowDigestResolver.getData()
      Calls Location: RowDigestResolver.java:40 RowDigestResolver.java:40
      Atomic: NO

      Method: RowDigestResolver.resolve()
      Calls Location: RowDigestResolver.java:71 RowDigestResolver.java:71
      Atomic: NO

Checking class ReadRepairMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class ProposeCallback:

  Verifying word hasNext next:

    No occurrences

Checking class Truncation:

  Verifying word hasNext next:

    No occurrences

Checking class TriggerExecutor:

  Verifying word hasNext next:

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:75 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:76 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:76 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:75 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:87
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:87
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:92
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:92
      Atomic: NO

      Method: TriggerExecutor.mergeMutations()
      Calls Location: TriggerExecutor.java:122 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:146
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:146
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:92 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:87 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.validate()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:151
      Atomic: NO

      Method: TriggerExecutor.validateForSinglePartition()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:151
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:87
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:92
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:146
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:182 TriggerExecutor.java:151
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:87
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:92
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:164 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:87
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:92
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:160 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:151 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:122
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:87
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:164
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:182
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:160
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:92
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:163
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:163 TriggerExecutor.java:76
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:75
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:146 TriggerExecutor.java:76
      Atomic: NO

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word hasNext next:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word hasNext next:

    No occurrences

Checking class ServerConnection$State:

  Verifying word hasNext next:

    No occurrences

Checking class ServerConnection$1:

  Verifying word hasNext next:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word hasNext next:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word hasNext next:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelGroup:

  Verifying word hasNext next:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word hasNext next:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word hasNext next:

    No occurrences

Checking class ExecutionHandler:

  Verifying word hasNext next:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word hasNext next:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ClientMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class Server$1:

  Verifying word hasNext next:

    No occurrences

Checking class Server$2:

  Verifying word hasNext next:

    No occurrences

Checking class ServerBootstrap:

  Verifying word hasNext next:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word hasNext next:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word hasNext next:

    No occurrences

Checking class Event$1:

  Verifying word hasNext next:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word hasNext next:

    No occurrences

Checking class Event$StatusChange:

  Verifying word hasNext next:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word hasNext next:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word hasNext next:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word hasNext next:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word hasNext next:

      Method: MergeIterator$ManyToOne.<init>()
      Calls Location: MergeIterator.java:84 MergeIterator.java:84
      Atomic: NO

Checking class MergeIterator$TrivialOneToOne:

  Verifying word hasNext next:

      Method: MergeIterator$TrivialOneToOne.computeNext()
      Calls Location: MergeIterator.java:220 MergeIterator.java:222
      Atomic: NO

Checking class MergeIterator$OneToOne:

  Verifying word hasNext next:

      Method: MergeIterator$OneToOne.computeNext()
      Calls Location: MergeIterator.java:200 MergeIterator.java:203
      Atomic: NO

Checking class MergeIterator$Candidate:

  Verifying word hasNext next:

      Method: MergeIterator$Candidate.advance()
      Calls Location: MergeIterator.java:144 MergeIterator.java:146
      Atomic: NO

Checking class CompositesSearcher$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamEventHandler:

  Verifying word hasNext next:

    No occurrences

Checking class StreamState:

  Verifying word hasNext next:

    No occurrences

Checking class StreamEvent:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word hasNext next:

      Method: SSTableLoader$1.accept()
      Calls Location: SSTableLoader.java:117 SSTableLoader.java:117
      Atomic: NO

Checking class StreamSession$SSTableStreamingSections:

  Verifying word hasNext next:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word hasNext next:

    No occurrences

Checking class StreamSession:

  Verifying word hasNext next:

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:343 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:343 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.startStreamingFiles()
      Calls Location: StreamSession.java:343 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.startStreamingFiles()
      Calls Location: StreamSession.java:343 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.closeSession()
      Calls Location: StreamSession.java:343 StreamSession.java:343
      Atomic: YES

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:460 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:467 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.startStreamingFiles()
      Calls Location: StreamSession.java:674 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.startStreamingFiles()
      Calls Location: StreamSession.java:674 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:460 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:467 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:467 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:460 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:460 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:278 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:278 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:278 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:298 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:298 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:258 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:268 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:271 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:271 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:268 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:278 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:268 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.getSSTableSectionsForRanges()
      Calls Location: StreamSession.java:271 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.addTransferFiles()
      Calls Location: StreamSession.java:298 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:268 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:268 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:268 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:271 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:271 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:271 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:658 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:658 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:658 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:658 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:658 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:658 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.flushSSTables()
      Calls Location: StreamSession.java:658 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:258 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.addTransferRanges()
      Calls Location: StreamSession.java:243 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:458 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:258 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:658
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:300
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:243
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:258
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:268
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:458
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:271
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:467
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:278
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:243 StreamSession.java:460
      Atomic: NO

      Method: StreamSession.onInitializationComplete()
      Calls Location: StreamSession.java:427 StreamSession.java:343
      Atomic: NO

      Method: StreamSession.getSessionInfo()
      Calls Location: StreamSession.java:578 StreamSession.java:578
      Atomic: NO

      Method: StreamSession.getSessionInfo()
      Calls Location: StreamSession.java:581 StreamSession.java:581
      Atomic: NO

      Method: StreamSession.getSessionInfo()
      Calls Location: StreamSession.java:578 StreamSession.java:581
      Atomic: NO

      Method: StreamSession.onInitializationComplete()
      Calls Location: StreamSession.java:427 StreamSession.java:674
      Atomic: NO

      Method: StreamSession.onInitializationComplete()
      Calls Location: StreamSession.java:427 StreamSession.java:427
      Atomic: NO

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word hasNext next:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word hasNext next:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word hasNext next:

    No occurrences

Checking class StreamManager$3:

  Verifying word hasNext next:

    No occurrences

Checking class MoreExecutors:

  Verifying word hasNext next:

    No occurrences

Checking class StreamManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamManager$2:

  Verifying word hasNext next:

    No occurrences

Checking class EchoMessage:

  Verifying word hasNext next:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word hasNext next:

    No occurrences

Checking class SnapshotCommand:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigest:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestAck:

  Verifying word hasNext next:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word hasNext next:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word hasNext next:

    No occurrences

Checking class ArrivalWindow:

  Verifying word hasNext next:

    No occurrences

Checking class HeartBeatState:

  Verifying word hasNext next:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word hasNext next:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word hasNext next:

    No occurrences

Checking class RepairSession:

  Verifying word hasNext next:

      Method: RepairSession.runMayThrow()
      Calls Location: RepairSession.java:236 RepairSession.java:254
      Atomic: NO

      Method: RepairSession.runMayThrow()
      Calls Location: RepairSession.java:254 RepairSession.java:254
      Atomic: NO

      Method: RepairSession.repairedNodes()
      Calls Location: RepairSession.java:236 RepairSession.java:236
      Atomic: NO

Checking class RepairMessage:

  Verifying word hasNext next:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word hasNext next:

    No occurrences

Checking class SyncComplete:

  Verifying word hasNext next:

    No occurrences

Checking class ValidationComplete:

  Verifying word hasNext next:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word hasNext next:

    No occurrences

Checking class NodePair:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree:

  Verifying word hasNext next:

      Method: MerkleTree.histogramOfRowCountPerLeaf()
      Calls Location: MerkleTree.java:511 MerkleTree.java:511
      Atomic: NO

      Method: MerkleTree.histogramOfRowSizePerLeaf()
      Calls Location: MerkleTree.java:501 MerkleTree.java:501
      Atomic: NO

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTransfer:

  Verifying word hasNext next:

    No occurrences

Checking class ValidationRequest:

  Verifying word hasNext next:

    No occurrences

Checking class SyncRequest:

  Verifying word hasNext next:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceReply:

  Verifying word hasNext next:

    No occurrences

Checking class TruncateResponse:

  Verifying word hasNext next:

    No occurrences

Checking class GossiperMBean:

  Verifying word hasNext next:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word hasNext next:

    No occurrences

Checking class Gossiper$2:

  Verifying word hasNext next:

    No occurrences

Checking class Gossiper$1:

  Verifying word hasNext next:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word hasNext next:

    No occurrences

Checking class Mx4jTool:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftServer:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word hasNext next:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word hasNext next:

    No occurrences

Checking class ReporterConfig:

  Verifying word hasNext next:

    No occurrences

Checking class MeteredFlusher:

  Verifying word hasNext next:

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:130 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:130 MeteredFlusher.java:130
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:130 MeteredFlusher.java:48
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:130 MeteredFlusher.java:105
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:105 MeteredFlusher.java:48
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:105 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:105 MeteredFlusher.java:130
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:48 MeteredFlusher.java:48
      Atomic: NO

      Method: MeteredFlusher.calculateFlushingSize()
      Calls Location: MeteredFlusher.java:128 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:48 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.calculateFlushingSize()
      Calls Location: MeteredFlusher.java:130 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.affectedColumnFamilies()
      Calls Location: MeteredFlusher.java:105 MeteredFlusher.java:105
      Atomic: NO

      Method: MeteredFlusher.calculateFlushingSize()
      Calls Location: MeteredFlusher.java:130 MeteredFlusher.java:130
      Atomic: NO

      Method: MeteredFlusher.calculateFlushingSize()
      Calls Location: MeteredFlusher.java:128 MeteredFlusher.java:130
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:48 MeteredFlusher.java:130
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:128 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:128 MeteredFlusher.java:130
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:128 MeteredFlusher.java:48
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:128 MeteredFlusher.java:105
      Atomic: NO

      Method: MeteredFlusher.calculateAllowedSize()
      Calls Location: MeteredFlusher.java:116 MeteredFlusher.java:116
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:116 MeteredFlusher.java:48
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:116 MeteredFlusher.java:128
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:116 MeteredFlusher.java:105
      Atomic: NO

      Method: MeteredFlusher.run()
      Calls Location: MeteredFlusher.java:116 MeteredFlusher.java:130
      Atomic: NO

Checking class NativeAccessMBean:

  Verifying word hasNext next:

    No occurrences

Checking class GCInspector:

  Verifying word hasNext next:

      Method: GCInspector.<init>()
      Calls Location: GCInspector.java:58 GCInspector.java:58
      Atomic: NO

      Method: GCInspector.logGCResults()
      Calls Location: GCInspector.java:87 GCInspector.java:87
      Atomic: NO

Checking class CassandraDaemon$3:

  Verifying word hasNext next:

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:364 CassandraDaemon.java:364
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:362 CassandraDaemon.java:364
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:360 CassandraDaemon.java:364
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:360 CassandraDaemon.java:360
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:362 CassandraDaemon.java:360
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:364 CassandraDaemon.java:360
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:362 CassandraDaemon.java:362
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:360 CassandraDaemon.java:362
      Atomic: NO

      Method: CassandraDaemon$3.run()
      Calls Location: CassandraDaemon.java:364 CassandraDaemon.java:362
      Atomic: NO

Checking class CassandraDaemon$2:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word hasNext next:

    No occurrences

Checking class Auth$1:

  Verifying word hasNext next:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word hasNext next:

    No occurrences

Checking class Multimaps:

  Verifying word hasNext next:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class StageManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word hasNext next:

      Method: EndpointStateSerializer.serialize()
      Calls Location: EndpointState.java:133 EndpointState.java:133
      Atomic: NO

      Method: EndpointStateSerializer.serializedSize()
      Calls Location: EndpointState.java:160 EndpointState.java:160
      Atomic: NO

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word hasNext next:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word hasNext next:

      Method: PendingRangeCalculatorService$PendingRangeTask.run()
      Calls Location: PendingRangeCalculatorService.java:64 PendingRangeCalculatorService.java:64
      Atomic: NO

Checking class WriteResponse:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word hasNext next:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class VersionGenerator:

  Verifying word hasNext next:

    No occurrences

Checking class ReadResponse:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractFuture:

  Verifying word hasNext next:

    No occurrences

Checking class ProgressInfo:

  Verifying word hasNext next:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word hasNext next:

    No occurrences

Checking class StreamException:

  Verifying word hasNext next:

    No occurrences

Checking class SessionInfo:

  Verifying word hasNext next:

      Method: SessionInfo.getTotalSizes()
      Calls Location: SessionInfo.java:171 SessionInfo.java:171
      Atomic: NO

      Method: SessionInfo.getTotalSizeInProgress()
      Calls Location: SessionInfo.java:155 SessionInfo.java:155
      Atomic: NO

      Method: SessionInfo.getTotalFiles()
      Calls Location: SessionInfo.java:163 SessionInfo.java:163
      Atomic: NO

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionHandler:

  Verifying word hasNext next:

      Method: ConnectionHandler.sendMessages()
      Calls Location: ConnectionHandler.java:163 ConnectionHandler.java:163
      Atomic: NO

Checking class BooleanSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class Stage$1:

  Verifying word hasNext next:

    No occurrences

Checking class AtomicDouble:

  Verifying word hasNext next:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word hasNext next:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word hasNext next:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word hasNext next:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word hasNext next:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class CorruptBlockException:

  Verifying word hasNext next:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word hasNext next:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word hasNext next:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word hasNext next:

      Method: SSTableScanner$KeyScanningIterator.computeNext()
      Calls Location: SSTableScanner.java:219 SSTableScanner.java:222
      Atomic: NO

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class OpenBitSet:

  Verifying word hasNext next:

    No occurrences

Checking class IBitSet:

  Verifying word hasNext next:

    No occurrences

Checking class BloomFilter:

  Verifying word hasNext next:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word hasNext next:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word hasNext next:

    No occurrences

Checking class BloomCalculations:

  Verifying word hasNext next:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word hasNext next:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word hasNext next:

      Method: MmappedSegmentedFile$Builder.serializeBounds()
      Calls Location: MmappedSegmentedFile.java:214 MmappedSegmentedFile.java:214
      Atomic: NO

Checking class BufferedPoolingSegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word hasNext next:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word hasNext next:

      Method: SSTableReader$3$1.hasNext()
      Calls Location: SSTableReader.java:745 SSTableReader.java:747
      Atomic: NO

Checking class MemoryOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class MemoryInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word hasNext next:

      Method: CompactionIterable$Reducer.getReduced()
      Calls Location: CompactionIterable.java:80 CompactionIterable.java:80
      Atomic: NO

      Method: CompactionIterable$Reducer.getReduced()
      Calls Location: CompactionIterable.java:80 CompactionIterable.java:80
      Atomic: NO

Checking class CompactionIterable$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word hasNext next:

      Method: CompactionMetrics$1.value()
      Calls Location: CompactionMetrics.java:63 CompactionMetrics.java:63
      Atomic: NO

      Method: CompactionMetrics$1.value()
      Calls Location: CompactionMetrics.java:61 CompactionMetrics.java:63
      Atomic: NO

      Method: CompactionMetrics$1.value()
      Calls Location: CompactionMetrics.java:61 CompactionMetrics.java:61
      Atomic: NO

      Method: CompactionMetrics$1.value()
      Calls Location: CompactionMetrics.java:63 CompactionMetrics.java:61
      Atomic: NO

Checking class CompactionMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word hasNext next:

    No occurrences

Checking class Scrubber$1:

  Verifying word hasNext next:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word hasNext next:

      Method: MerkleTree$TreeRange.addAll()
      Calls Location: MerkleTree.java:637 MerkleTree.java:638
      Atomic: NO

Checking class MerkleTree$TreeRangeIterator:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word hasNext next:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word hasNext next:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word hasNext next:

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:96 KeysSearcher.java:132
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:143 KeysSearcher.java:132
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:135 KeysSearcher.java:132
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:143 KeysSearcher.java:145
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:135 KeysSearcher.java:145
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:96 KeysSearcher.java:145
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:135 KeysSearcher.java:138
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:96 KeysSearcher.java:138
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:143 KeysSearcher.java:138
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:96 KeysSearcher.java:126
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:143 KeysSearcher.java:126
      Atomic: NO

      Method: KeysSearcher$1.computeNext()
      Calls Location: KeysSearcher.java:135 KeysSearcher.java:126
      Atomic: NO

Checking class KeyspaceNotDefinedException:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnPath:

  Verifying word hasNext next:

    No occurrences

Checking class Deletion:

  Verifying word hasNext next:

    No occurrences

Checking class PreExecutionHook:

  Verifying word hasNext next:

    No occurrences

Checking class PostPreparationHook:

  Verifying word hasNext next:

    No occurrences

Checking class SelectStatement:

  Verifying word hasNext next:

    No occurrences

Checking class CQLStatement:

  Verifying word hasNext next:

    No occurrences

Checking class ExecutionContext:

  Verifying word hasNext next:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word hasNext next:

    No occurrences

Checking class UpdateStatement:

  Verifying word hasNext next:

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:186 UpdateStatement.java:154
      Atomic: NO

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:186 UpdateStatement.java:186
      Atomic: NO

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:154 UpdateStatement.java:154
      Atomic: NO

      Method: UpdateStatement.mutationForKey()
      Calls Location: UpdateStatement.java:186 UpdateStatement.java:186
      Atomic: NO

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:154 UpdateStatement.java:186
      Atomic: NO

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:135 UpdateStatement.java:135
      Atomic: NO

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:135 UpdateStatement.java:186
      Atomic: NO

      Method: UpdateStatement.prepareRowMutations()
      Calls Location: UpdateStatement.java:135 UpdateStatement.java:154
      Atomic: NO

Checking class CreateKeyspaceStatement:

  Verifying word hasNext next:

      Method: CreateKeyspaceStatement.validate()
      Calls Location: CreateKeyspaceStatement.java:61 CreateKeyspaceStatement.java:61
      Atomic: NO

Checking class Relation:

  Verifying word hasNext next:

    No occurrences

Checking class DropIndexStatement:

  Verifying word hasNext next:

      Method: DropIndexStatement.generateCFMetadataUpdate()
      Calls Location: DropIndexStatement.java:73 DropIndexStatement.java:73
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:73 DropIndexStatement.java:73
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:73 DropIndexStatement.java:63
      Atomic: NO

      Method: DropIndexStatement.generateCFMetadataUpdate()
      Calls Location: DropIndexStatement.java:63 DropIndexStatement.java:73
      Atomic: NO

      Method: DropIndexStatement.findIndexedColumn()
      Calls Location: DropIndexStatement.java:73 DropIndexStatement.java:73
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:63 DropIndexStatement.java:73
      Atomic: NO

      Method: DropIndexStatement.findIndexedCF()
      Calls Location: DropIndexStatement.java:63 DropIndexStatement.java:63
      Atomic: NO

Checking class PreparationContext:

  Verifying word hasNext next:

    No occurrences

Checking class DeleteStatement:

  Verifying word hasNext next:

      Method: DeleteStatement.prepareRowMutations()
      Calls Location: DeleteStatement.java:103 DeleteStatement.java:80
      Atomic: NO

      Method: DeleteStatement.prepareRowMutations()
      Calls Location: DeleteStatement.java:103 DeleteStatement.java:103
      Atomic: NO

      Method: DeleteStatement.prepareRowMutations()
      Calls Location: DeleteStatement.java:80 DeleteStatement.java:80
      Atomic: NO

      Method: DeleteStatement.mutationForKey()
      Calls Location: DeleteStatement.java:103 DeleteStatement.java:103
      Atomic: NO

      Method: DeleteStatement.prepareRowMutations()
      Calls Location: DeleteStatement.java:80 DeleteStatement.java:103
      Atomic: NO

Checking class RelationType:

  Verifying word hasNext next:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word hasNext next:

      Method: CreateColumnFamilyStatement.validate()
      Calls Location: CreateColumnFamilyStatement.java:77 CreateColumnFamilyStatement.java:77
      Atomic: NO

      Method: CreateColumnFamilyStatement.getColumns()
      Calls Location: CreateColumnFamilyStatement.java:129 CreateColumnFamilyStatement.java:129
      Atomic: NO

      Method: CreateColumnFamilyStatement.getCFMetaData()
      Calls Location: CreateColumnFamilyStatement.java:77 CreateColumnFamilyStatement.java:129
      Atomic: NO

Checking class RandomPartitioner:

  Verifying word hasNext next:

      Method: RandomPartitioner.describeOwnership()
      Calls Location: RandomPartitioner.java:144 RandomPartitioner.java:145
      Atomic: NO

      Method: RandomPartitioner.describeOwnership()
      Calls Location: RandomPartitioner.java:132 RandomPartitioner.java:142
      Atomic: NO

      Method: RandomPartitioner.describeOwnership()
      Calls Location: RandomPartitioner.java:132 RandomPartitioner.java:145
      Atomic: NO

      Method: RandomPartitioner.describeOwnership()
      Calls Location: RandomPartitioner.java:132 RandomPartitioner.java:135
      Atomic: NO

Checking class CqlParser:

  Verifying word hasNext next:

    No occurrences

Checking class Term:

  Verifying word hasNext next:

    No occurrences

Checking class StatementType:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractModification:

  Verifying word hasNext next:

    No occurrences

Checking class AlterTableStatement:

  Verifying word hasNext next:

      Method: AlterTableStatement.getCFMetaData()
      Calls Location: AlterTableStatement.java:112 AlterTableStatement.java:112
      Atomic: NO

      Method: AlterTableStatement.<init>()
      Calls Location: AlterTableStatement.java:59 AlterTableStatement.java:59
      Atomic: NO

      Method: AlterTableStatement.applyPropertiesToCFMetadata()
      Calls Location: AlterTableStatement.java:193 AlterTableStatement.java:193
      Atomic: NO

      Method: AlterTableStatement.getCFMetaData()
      Calls Location: AlterTableStatement.java:91 AlterTableStatement.java:91
      Atomic: NO

Checking class CreateIndexStatement:

  Verifying word hasNext next:

    No occurrences

Checking class CliUtils:

  Verifying word hasNext next:

      Method: CliUtils.getCfNamesByKeySpace()
      Calls Location: CliUtils.java:95 CliUtils.java:95
      Atomic: NO

      Method: CliUtils.getKeySpaceDef()
      Calls Location: CliUtils.java:115 CliUtils.java:115
      Atomic: NO

Checking class BatchStatement:

  Verifying word hasNext next:

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:88 BatchStatement.java:88
      Atomic: NO

Checking class DataResource$Level:

  Verifying word hasNext next:

    No occurrences

Checking class DataResource$1:

  Verifying word hasNext next:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word hasNext next:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word hasNext next:

      Method: LazilyCompactedRow$Reducer.getReduced()
      Calls Location: LazilyCompactedRow.java:268 LazilyCompactedRow.java:273
      Atomic: NO

Checking class PrecompactedRow$1:

  Verifying word hasNext next:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word hasNext next:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word hasNext next:

    No occurrences

Checking class SnapTreeMap:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word hasNext next:

      Method: ParallelCompactionIterable$Reducer.getReduced()
      Calls Location: ParallelCompactionIterable.java:128 ParallelCompactionIterable.java:128
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getReduced()
      Calls Location: ParallelCompactionIterable.java:150 ParallelCompactionIterable.java:128
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getReduced()
      Calls Location: ParallelCompactionIterable.java:156 ParallelCompactionIterable.java:128
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getCompactedRow()
      Calls Location: ParallelCompactionIterable.java:137 ParallelCompactionIterable.java:137
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getCompactedRow()
      Calls Location: ParallelCompactionIterable.java:150 ParallelCompactionIterable.java:150
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getCompactedRow()
      Calls Location: ParallelCompactionIterable.java:137 ParallelCompactionIterable.java:150
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getCompactedRow()
      Calls Location: ParallelCompactionIterable.java:156 ParallelCompactionIterable.java:156
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getCompactedRow()
      Calls Location: ParallelCompactionIterable.java:137 ParallelCompactionIterable.java:156
      Atomic: NO

      Method: ParallelCompactionIterable$Reducer.getReduced()
      Calls Location: ParallelCompactionIterable.java:137 ParallelCompactionIterable.java:128
      Atomic: NO

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word hasNext next:

    No occurrences

Checking class MigrationTask$1:

  Verifying word hasNext next:

    No occurrences

Checking class Stopwatch:

  Verifying word hasNext next:

    No occurrences

Checking class FormattingTuple:

  Verifying word hasNext next:

    No occurrences

Checking class MessageFormatter:

  Verifying word hasNext next:

    No occurrences

Checking class TraceState$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Prepender:

  Verifying word hasNext next:

    No occurrences

Checking class TupleType:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$Marker:

  Verifying word hasNext next:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word hasNext next:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word hasNext next:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word hasNext next:

    No occurrences

Checking class Maps$Setter:

  Verifying word hasNext next:

    No occurrences

Checking class Maps$Value:

  Verifying word hasNext next:

      Method: Maps$Value.fromSerialized()
      Calls Location: Maps.java:150 Maps.java:150
      Atomic: NO

      Method: Maps$Value.get()
      Calls Location: Maps.java:163 Maps.java:163
      Atomic: NO

Checking class Maps$Putter:

  Verifying word hasNext next:

      Method: Maps$Putter.doPut()
      Calls Location: Maps.java:316 Maps.java:316
      Atomic: NO

Checking class Maps$Marker:

  Verifying word hasNext next:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word hasNext next:

      Method: Maps$DelayedValue.bind()
      Calls Location: Maps.java:197 Maps.java:197
      Atomic: NO

Checking class PermissionAlteringStatement:

  Verifying word hasNext next:

      Method: PermissionAlteringStatement.checkAccess()
      Calls Location: PermissionAlteringStatement.java:63 PermissionAlteringStatement.java:63
      Atomic: NO

Checking class Operation$1:

  Verifying word hasNext next:

    No occurrences

Checking class Sets$Setter:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Setter:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$Setter:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word hasNext next:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word hasNext next:

    No occurrences

Checking class AssignementTestable:

  Verifying word hasNext next:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$Value:

  Verifying word hasNext next:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$Deleter:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word hasNext next:

      Method: ColumnCondition$ElementAccessBound.appliesTo()
      Calls Location: ColumnCondition.java:202 ColumnCondition.java:210
      Atomic: NO

Checking class ColumnCondition$CollectionBound:

  Verifying word hasNext next:

      Method: ColumnCondition$CollectionBound.setAppliesTo()
      Calls Location: ColumnCondition.java:302 ColumnCondition.java:307
      Atomic: NO

      Method: ColumnCondition$CollectionBound.mapAppliesTo()
      Calls Location: ColumnCondition.java:317 ColumnCondition.java:322
      Atomic: NO

      Method: ColumnCondition$CollectionBound.listAppliesTo()
      Calls Location: ColumnCondition.java:291 ColumnCondition.java:291
      Atomic: NO

      Method: ColumnCondition$CollectionBound.listAppliesTo()
      Calls Location: ColumnCondition.java:292 ColumnCondition.java:291
      Atomic: NO

      Method: ColumnCondition$CollectionBound.listAppliesTo()
      Calls Location: ColumnCondition.java:292 ColumnCondition.java:292
      Atomic: NO

      Method: ColumnCondition$CollectionBound.listAppliesTo()
      Calls Location: ColumnCondition.java:291 ColumnCondition.java:292
      Atomic: NO

Checking class Sets$Discarder:

  Verifying word hasNext next:

      Method: Sets$Discarder.execute()
      Calls Location: Sets.java:287 Sets.java:287
      Atomic: NO

Checking class Sets$Adder:

  Verifying word hasNext next:

      Method: Sets$Adder.doAdd()
      Calls Location: Sets.java:260 Sets.java:260
      Atomic: NO

Checking class Sets$DelayedValue:

  Verifying word hasNext next:

      Method: Sets$DelayedValue.bind()
      Calls Location: Sets.java:189 Sets.java:189
      Atomic: NO

Checking class Sets$Value:

  Verifying word hasNext next:

      Method: Sets$Value.fromSerialized()
      Calls Location: Sets.java:148 Sets.java:148
      Atomic: NO

Checking class Sets$Marker:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$Marker:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word hasNext next:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word hasNext next:

    No occurrences

Checking class PermissionDetails:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Discarder:

  Verifying word hasNext next:

      Method: Lists$Discarder.execute()
      Calls Location: Lists.java:429 Lists.java:429
      Atomic: NO

Checking class Constants$Substracter:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$Type:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$2:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$Adder:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$1:

  Verifying word hasNext next:

    No occurrences

Checking class Tuples$InValue:

  Verifying word hasNext next:

      Method: Tuples$InValue.fromSerialized()
      Calls Location: Tuples.java:191 Tuples.java:191
      Atomic: NO

Checking class Tuples$DelayedValue:

  Verifying word hasNext next:

      Method: Tuples$DelayedValue.collectMarkerSpecification()
      Calls Location: Tuples.java:140 Tuples.java:140
      Atomic: NO

      Method: Tuples$DelayedValue.containsBindMarker()
      Calls Location: Tuples.java:131 Tuples.java:131
      Atomic: NO

Checking class AlterTableStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Appender:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$Value:

  Verifying word hasNext next:

      Method: Lists$Value.fromSerialized()
      Calls Location: Lists.java:137 Lists.java:137
      Atomic: NO

Checking class Lists$DelayedValue:

  Verifying word hasNext next:

      Method: Lists$DelayedValue.bind()
      Calls Location: Lists.java:189 Lists.java:189
      Atomic: NO

Checking class Lists$DiscarderByIndex:

  Verifying word hasNext next:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word hasNext next:

    No occurrences

Checking class FunctionCall$1:

  Verifying word hasNext next:

    No occurrences

Checking class ITrigger:

  Verifying word hasNext next:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word hasNext next:

      Method: CQL3CasConditions$NotExistCondition.appliesTo()
      Calls Location: CQL3CasConditions.java:141 CQL3CasConditions.java:142
      Atomic: NO

Checking class CQL3CasConditions$RowCondition:

  Verifying word hasNext next:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word hasNext next:

      Method: CQL3CasConditions$ColumnsConditions.addConditions()
      Calls Location: CQL3CasConditions.java:179 CQL3CasConditions.java:179
      Atomic: NO

      Method: CQL3CasConditions$ColumnsConditions.appliesTo()
      Calls Location: CQL3CasConditions.java:196 CQL3CasConditions.java:196
      Atomic: NO

Checking class CQL3CasConditions$ExistCondition:

  Verifying word hasNext next:

      Method: CQL3CasConditions$ExistCondition.appliesTo()
      Calls Location: CQL3CasConditions.java:161 CQL3CasConditions.java:162
      Atomic: NO

Checking class JsonNode:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionSerializer:

  Verifying word hasNext next:

      Method: CollectionSerializer.pack()
      Calls Location: CollectionSerializer.java:47 CollectionSerializer.java:47
      Atomic: NO

      Method: CollectionSerializer.pack()
      Calls Location: CollectionSerializer.java:36 CollectionSerializer.java:36
      Atomic: NO

      Method: CollectionSerializer.pack()
      Calls Location: CollectionSerializer.java:47 CollectionSerializer.java:36
      Atomic: NO

Checking class EmptySerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word hasNext next:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word hasNext next:

      Method: ExpiringMap$1.run()
      Calls Location: ExpiringMap.java:90 ExpiringMap.java:90
      Atomic: NO

Checking class ConnectionMetrics$4:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class IMessageSink:

  Verifying word hasNext next:

    No occurrences

Checking class IRequestSink:

  Verifying word hasNext next:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word hasNext next:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word hasNext next:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word hasNext next:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word hasNext next:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word hasNext next:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word hasNext next:

      Method: RangeSliceReply$RangeSliceReplySerializer.serializedSize()
      Calls Location: RangeSliceReply.java:84 RangeSliceReply.java:84
      Atomic: NO

      Method: RangeSliceReply$RangeSliceReplySerializer.serialize()
      Calls Location: RangeSliceReply.java:68 RangeSliceReply.java:68
      Atomic: NO

Checking class SnapshotCommandSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word hasNext next:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word hasNext next:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word hasNext next:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word hasNext next:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word hasNext next:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class SerializingCache:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word hasNext next:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word hasNext next:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word hasNext next:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word hasNext next:

      Method: IntervalTree$IntervalNode.<init>()
      Calls Location: IntervalTree.java:247 IntervalTree.java:247
      Atomic: NO

      Method: IntervalTree$IntervalNode.<init>()
      Calls Location: IntervalTree.java:247 IntervalTree.java:268
      Atomic: NO

      Method: IntervalTree$IntervalNode.<init>()
      Calls Location: IntervalTree.java:247 IntervalTree.java:233
      Atomic: NO

      Method: IntervalTree$IntervalNode.<init>()
      Calls Location: IntervalTree.java:268 IntervalTree.java:247
      Atomic: NO

      Method: IntervalTree$IntervalNode.<init>()
      Calls Location: IntervalTree.java:268 IntervalTree.java:268
      Atomic: NO

      Method: IntervalTree$IntervalNode.<init>()
      Calls Location: IntervalTree.java:268 IntervalTree.java:233
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:312 IntervalTree.java:327
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:312 IntervalTree.java:312
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:312 IntervalTree.java:300
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:300 IntervalTree.java:327
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:300 IntervalTree.java:312
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:300 IntervalTree.java:300
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:327 IntervalTree.java:327
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:327 IntervalTree.java:312
      Atomic: NO

      Method: IntervalTree$IntervalNode.searchInternal()
      Calls Location: IntervalTree.java:327 IntervalTree.java:300
      Atomic: NO

Checking class IntervalTree$Serializer:

  Verifying word hasNext next:

      Method: IntervalTree$Serializer.serialize()
      Calls Location: IntervalTree.java:396 IntervalTree.java:396
      Atomic: NO

      Method: IntervalTree$Serializer.serializedSize()
      Calls Location: IntervalTree.java:447 IntervalTree.java:447
      Atomic: NO

Checking class IntervalTree$1:

  Verifying word hasNext next:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word hasNext next:

      Method: IntervalTree$TreeIterator.computeNext()
      Calls Location: IntervalTree.java:353 IntervalTree.java:354
      Atomic: NO

Checking class IntervalTree$2:

  Verifying word hasNext next:

    No occurrences

Checking class RatioGauge:

  Verifying word hasNext next:

    No occurrences

Checking class IExecutorMBean:

  Verifying word hasNext next:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word hasNext next:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word hasNext next:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word hasNext next:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word hasNext next:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word hasNext next:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word hasNext next:

      Method: CommitLogReplayer$1.runMayThrow()
      Calls Location: CommitLogReplayer.java:330 CommitLogReplayer.java:330
      Atomic: NO

Checking class CommitLogAllocator$5:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word hasNext next:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word hasNext next:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word hasNext next:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word hasNext next:

    No occurrences

Checking class Strings:

  Verifying word hasNext next:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word hasNext next:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word hasNext next:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word hasNext next:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word hasNext next:

    No occurrences

Checking class Property:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word hasNext next:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word hasNext next:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word hasNext next:

      Method: IndexedSliceReader$SimpleBlockFetcher.<init>()
      Calls Location: IndexedSliceReader.java:485 IndexedSliceReader.java:489
      Atomic: NO

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word hasNext next:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word hasNext next:

    No occurrences

Checking class TreeMultimap:

  Verifying word hasNext next:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word hasNext next:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word hasNext next:

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardTail()
      Calls Location: AbstractQueryPager.java:334 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardHead()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardHead()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardHead()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardHead()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:318 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.discardLast()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.discardFirst()
      Calls Location: AbstractQueryPager.java:311 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.filterEmpty()
      Calls Location: AbstractQueryPager.java:146 AbstractQueryPager.java:146
      Atomic: NO

      Method: AbstractQueryPager.filterEmpty()
      Calls Location: AbstractQueryPager.java:151 AbstractQueryPager.java:151
      Atomic: NO

      Method: AbstractQueryPager.filterEmpty()
      Calls Location: AbstractQueryPager.java:146 AbstractQueryPager.java:151
      Atomic: NO

      Method: AbstractQueryPager.getPageLiveCount()
      Calls Location: AbstractQueryPager.java:283 AbstractQueryPager.java:283
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:146 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:146 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:146 AbstractQueryPager.java:283
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:146 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:151 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:151 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:151 AbstractQueryPager.java:283
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:151 AbstractQueryPager.java:319
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:283 AbstractQueryPager.java:336
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:283 AbstractQueryPager.java:313
      Atomic: NO

      Method: AbstractQueryPager.fetchPage()
      Calls Location: AbstractQueryPager.java:283 AbstractQueryPager.java:319
      Atomic: NO

Checking class SliceByNamesReadCommandSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class LSInput:

  Verifying word hasNext next:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word hasNext next:

    No occurrences

Checking class DataType$1:

  Verifying word hasNext next:

    No occurrences

Checking class UnsignedBytes:

  Verifying word hasNext next:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word hasNext next:

    No occurrences

Checking class Function$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class TokenFct:

  Verifying word hasNext next:

      Method: TokenFct.getKeyTypes()
      Calls Location: TokenFct.java:57 TokenFct.java:57
      Atomic: NO

Checking class UuidFcts:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractFunction:

  Verifying word hasNext next:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word hasNext next:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word hasNext next:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word hasNext next:

      Method: ReadCallback$AsyncRepairRunner.run()
      Calls Location: ReadCallback.java:189 ReadCallback.java:189
      Atomic: NO

Checking class ListMultimap:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word hasNext next:

      Method: RangeSliceResponseResolver$Reducer.getReduced()
      Calls Location: RangeSliceResponseResolver.java:151 RangeSliceResponseResolver.java:151
      Atomic: NO

Checking class RangeSliceResponseResolver$1:

  Verifying word hasNext next:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word hasNext next:

      Method: RangeSliceResponseResolver$RowIterator.computeNext()
      Calls Location: RangeSliceResponseResolver.java:119 RangeSliceResponseResolver.java:119
      Atomic: NO

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word hasNext next:

    No occurrences

Checking class TruncationSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CustomClassLoader:

  Verifying word hasNext next:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word hasNext next:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word hasNext next:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word hasNext next:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word hasNext next:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word hasNext next:

    No occurrences

Checking class StreamState$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamingMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class StreamSession$State:

  Verifying word hasNext next:

    No occurrences

Checking class StreamMessage:

  Verifying word hasNext next:

    No occurrences

Checking class FileMessageHeader:

  Verifying word hasNext next:

      Method: FileMessageHeader.size()
      Calls Location: FileMessageHeader.java:79 FileMessageHeader.java:79
      Atomic: NO

Checking class IncomingFileMessage:

  Verifying word hasNext next:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word hasNext next:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word hasNext next:

    No occurrences

Checking class StreamTransferTask:

  Verifying word hasNext next:

      Method: StreamTransferTask.abort()
      Calls Location: StreamTransferTask.java:78 StreamTransferTask.java:78
      Atomic: NO

Checking class StreamSummary:

  Verifying word hasNext next:

    No occurrences

Checking class StreamTask:

  Verifying word hasNext next:

    No occurrences

Checking class StreamRequest:

  Verifying word hasNext next:

    No occurrences

Checking class RetryMessage:

  Verifying word hasNext next:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word hasNext next:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word hasNext next:

    No occurrences

Checking class StreamSession$2:

  Verifying word hasNext next:

    No occurrences

Checking class StreamSession$1:

  Verifying word hasNext next:

    No occurrences

Checking class PrepareMessage:

  Verifying word hasNext next:

      Method: PrepareMessage.toString()
      Calls Location: PrepareMessage.java:85 PrepareMessage.java:85
      Atomic: NO

Checking class SessionFailedMessage:

  Verifying word hasNext next:

    No occurrences

Checking class ReceivedMessage:

  Verifying word hasNext next:

    No occurrences

Checking class CompleteMessage:

  Verifying word hasNext next:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word hasNext next:

      Method: StreamStateCompositeData.toCompositeData()
      Calls Location: StreamStateCompositeData.java:91 StreamStateCompositeData.java:91
      Atomic: NO

Checking class SessionInfoCompositeData:

  Verifying word hasNext next:

      Method: SessionInfoCompositeData.fromCompositeData()
      Calls Location: SessionInfoCompositeData.java:142 SessionInfoCompositeData.java:142
      Atomic: NO

      Method: SessionInfoCompositeData.fromCompositeData()
      Calls Location: SessionInfoCompositeData.java:146 SessionInfoCompositeData.java:146
      Atomic: NO

      Method: SessionInfoCompositeData.fromCompositeData()
      Calls Location: SessionInfoCompositeData.java:142 SessionInfoCompositeData.java:146
      Atomic: NO

Checking class ProgressInfoCompositeData:

  Verifying word hasNext next:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word hasNext next:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word hasNext next:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word hasNext next:

      Method: GossipDigestAck2Serializer.serializedSize()
      Calls Location: GossipDigestAck2.java:80 GossipDigestAck2.java:80
      Atomic: NO

      Method: GossipDigestAck2Serializer.serialize()
      Calls Location: GossipDigestAck2.java:55 GossipDigestAck2.java:55
      Atomic: NO

Checking class GossipDigestSynSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word hasNext next:

      Method: GossipDigestAckSerializer.serializedSize()
      Calls Location: GossipDigestAck.java:93 GossipDigestAck.java:93
      Atomic: NO

      Method: GossipDigestAckSerializer.serialize()
      Calls Location: GossipDigestAck.java:66 GossipDigestAck.java:66
      Atomic: NO

Checking class BoundedStatsDeque:

  Verifying word hasNext next:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class RepairException:

  Verifying word hasNext next:

    No occurrences

Checking class RepairJob:

  Verifying word hasNext next:

      Method: RepairJob.sendTreeRequestsInternal()
      Calls Location: RepairJob.java:131 RepairJob.java:131
      Atomic: NO

      Method: RepairJob.submitDifferencers()
      Calls Location: RepairJob.java:189 RepairJob.java:189
      Atomic: NO

      Method: RepairJob.sendTreeRequests()
      Calls Location: RepairJob.java:99 RepairJob.java:99
      Atomic: NO

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word hasNext next:

    No occurrences

Checking class Preconditions:

  Verifying word hasNext next:

    No occurrences

Checking class HistogramBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word hasNext next:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word hasNext next:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word hasNext next:

      Method: SyncRequest$SyncRequestSerializer.serializedSize()
      Calls Location: SyncRequest.java:90 SyncRequest.java:90
      Atomic: NO

      Method: SyncRequest$SyncRequestSerializer.serialize()
      Calls Location: SyncRequest.java:68 SyncRequest.java:68
      Atomic: NO

Checking class ThriftServer$ThriftServerThread:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraServer:

  Verifying word hasNext next:

      Method: CassandraServer.thriftifySuperColumns()
      Calls Location: CassandraServer.java:200 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.thriftifyColumns()
      Calls Location: CassandraServer.java:136 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:136 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:136 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:136 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:136 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:136 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:136 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:136 CassandraServer.java:1289
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:136 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:136 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:136 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:136 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:200 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:200 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:200 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:200 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:200 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:200 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:200 CassandraServer.java:1289
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:200 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:200 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:200 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:200 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:273 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:224 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:224 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:224 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:224 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:224 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:224 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:224 CassandraServer.java:1289
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:224 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:224 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:224 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:224 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:432
      Atomic: NO

      Method: CassandraServer.thriftifySuperColumns()
      Calls Location: CassandraServer.java:224 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:273 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:273 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.readColumnFamily()
      Calls Location: CassandraServer.java:126 CassandraServer.java:126
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:126
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:273 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.thriftifyCounterSuperColumns()
      Calls Location: CassandraServer.java:248 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:273 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:273 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.multigetSliceInternal()
      Calls Location: CassandraServer.java:432 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:248 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:248 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:248 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:248 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:248 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:248 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:248 CassandraServer.java:1289
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:248 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:248 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:248 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:248 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:126 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:126 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:126 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:126 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:126 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:126 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.get()
      Calls Location: CassandraServer.java:126 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.get()
      Calls Location: CassandraServer.java:126 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.get()
      Calls Location: CassandraServer.java:126 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.get()
      Calls Location: CassandraServer.java:126 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:432 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.describe_keyspaces()
      Calls Location: CassandraServer.java:1367 CassandraServer.java:1367
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:1289 CassandraServer.java:1289
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:1289 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:1289 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:1289 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.thriftifyKeySlices()
      Calls Location: CassandraServer.java:1289 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:873 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:873 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:873 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:873 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:873 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:873 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:884 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:884 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:884 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:884 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:884 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:884 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:899 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:899 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:899 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:899 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:899 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:899 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:765 CassandraServer.java:765
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:754 CassandraServer.java:765
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:749 CassandraServer.java:765
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:939
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:224
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:818 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:808 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:840 CassandraServer.java:818
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:972
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:273
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:808 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:818 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:840 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:808
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:248
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:350
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:754 CassandraServer.java:754
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:749 CassandraServer.java:754
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:749 CassandraServer.java:749
      Atomic: NO

      Method: CassandraServer.deleteColumnOrSuperColumn()
      Calls Location: CassandraServer.java:899 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:840 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:818 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:808 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:899
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:627 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:627
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:136
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:126
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:126
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:840 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:818 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:808 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:840
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:432
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:432
      Atomic: NO

      Method: CassandraServer.thriftifyColumnsAsColumns()
      Calls Location: CassandraServer.java:175 CassandraServer.java:175
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:765 CassandraServer.java:175
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:754 CassandraServer.java:175
      Atomic: NO

      Method: CassandraServer.cas()
      Calls Location: CassandraServer.java:749 CassandraServer.java:175
      Atomic: NO

      Method: CassandraServer.addColumnOrSuperColumn()
      Calls Location: CassandraServer.java:873 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:840 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:818 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:808 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:873
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.multiget_slice()
      Calls Location: CassandraServer.java:350 CassandraServer.java:200
      Atomic: NO

      Method: CassandraServer.multiget_count()
      Calls Location: CassandraServer.java:598 CassandraServer.java:598
      Atomic: NO

      Method: CassandraServer.addColumnOrSuperColumn()
      Calls Location: CassandraServer.java:884 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:840 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:818 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.createMutationList()
      Calls Location: CassandraServer.java:808 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.batch_mutate()
      Calls Location: CassandraServer.java:939 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.atomic_batch_mutate()
      Calls Location: CassandraServer.java:972 CassandraServer.java:884
      Atomic: NO

      Method: CassandraServer.describe_splits_ex()
      Calls Location: CassandraServer.java:1457 CassandraServer.java:1457
      Atomic: NO

      Method: CassandraServer.describe_splits()
      Calls Location: CassandraServer.java:1441 CassandraServer.java:1441
      Atomic: NO

      Method: CassandraServer.system_add_keyspace()
      Calls Location: CassandraServer.java:1571 CassandraServer.java:1571
      Atomic: NO

      Method: CassandraServer.system_add_keyspace()
      Calls Location: CassandraServer.java:1562 CassandraServer.java:1571
      Atomic: NO

      Method: CassandraServer.system_add_keyspace()
      Calls Location: CassandraServer.java:1562 CassandraServer.java:1562
      Atomic: NO

      Method: CassandraServer.describe_splits()
      Calls Location: CassandraServer.java:1457 CassandraServer.java:1441
      Atomic: NO

Checking class TFramedTransport$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word hasNext next:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word hasNext next:

    No occurrences

Checking class GCInspector$1:

  Verifying word hasNext next:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class SessionInfo$1:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word hasNext next:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word hasNext next:

    No occurrences

Checking class FileCacheService:

  Verifying word hasNext next:

      Method: FileCacheService.sizeInBytes()
      Calls Location: FileCacheService.java:140 FileCacheService.java:140
      Atomic: NO

      Method: FileCacheService.sizeInBytes()
      Calls Location: FileCacheService.java:141 FileCacheService.java:140
      Atomic: NO

      Method: FileCacheService.sizeInBytes()
      Calls Location: FileCacheService.java:141 FileCacheService.java:141
      Atomic: NO

      Method: FileCacheService.sizeInBytes()
      Calls Location: FileCacheService.java:140 FileCacheService.java:141
      Atomic: NO

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word hasNext next:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class BitUtil:

  Verifying word hasNext next:

    No occurrences

Checking class BloomFilter$1:

  Verifying word hasNext next:

    No occurrences

Checking class MurmurHash:

  Verifying word hasNext next:

    No occurrences

Checking class RefCountedMemory:

  Verifying word hasNext next:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractDataInput:

  Verifying word hasNext next:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word hasNext next:

    No occurrences

Checking class SelectExpression:

  Verifying word hasNext next:

    No occurrences

Checking class WhereClause:

  Verifying word hasNext next:

      Method: WhereClause.extractKeysFromColumns()
      Calls Location: WhereClause.java:145 WhereClause.java:145
      Atomic: NO

Checking class Attributes:

  Verifying word hasNext next:

    No occurrences

Checking class Operation:

  Verifying word hasNext next:

    No occurrences

Checking class Optional:

  Verifying word hasNext next:

    No occurrences

Checking class CFPropDefs:

  Verifying word hasNext next:

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:152 CFPropDefs.java:152
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:149 CFPropDefs.java:152
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:128 CFPropDefs.java:152
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:154 CFPropDefs.java:154
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:152 CFPropDefs.java:154
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:149 CFPropDefs.java:154
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:128 CFPropDefs.java:154
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:128 CFPropDefs.java:128
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:149 CFPropDefs.java:149
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:128 CFPropDefs.java:149
      Atomic: NO

Checking class BigIntegerToken:

  Verifying word hasNext next:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word hasNext next:

    No occurrences

Checking class GuidGenerator:

  Verifying word hasNext next:

    No occurrences

Checking class MissingTokenException:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word hasNext next:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word hasNext next:

    No occurrences

Checking class TermType:

  Verifying word hasNext next:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word hasNext next:

    No occurrences

Checking class Operation$OperationType:

  Verifying word hasNext next:

    No occurrences

Checking class Term$1:

  Verifying word hasNext next:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word hasNext next:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word hasNext next:

    No occurrences

Checking class CommonToken:

  Verifying word hasNext next:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word hasNext next:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word hasNext next:

      Method: ParallelCompactionIterable$Reducer$MergeTask.call()
      Calls Location: ParallelCompactionIterable.java:183 ParallelCompactionIterable.java:183
      Atomic: NO

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word hasNext next:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word hasNext next:

    No occurrences

Checking class ComparisonChain:

  Verifying word hasNext next:

    No occurrences

Checking class Constants$1$1:

  Verifying word hasNext next:

    No occurrences

Checking class SnappyInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class StreamInitMessage:

  Verifying word hasNext next:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word hasNext next:

      Method: PagedRangeCommand$Serializer.serialize()
      Calls Location: PagedRangeCommand.java:147 PagedRangeCommand.java:147
      Atomic: NO

      Method: PagedRangeCommand$Serializer.serializedSize()
      Calls Location: PagedRangeCommand.java:200 PagedRangeCommand.java:200
      Atomic: NO

Checking class EncodedDataInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class SerializingCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class SerializingCache$2:

  Verifying word hasNext next:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word hasNext next:

    No occurrences

Checking class QueryPath:

  Verifying word hasNext next:

    No occurrences

Checking class TokenFct$1:

  Verifying word hasNext next:

    No occurrences

Checking class UuidFcts$1:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word hasNext next:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word hasNext next:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word hasNext next:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word hasNext next:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word hasNext next:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word hasNext next:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word hasNext next:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word hasNext next:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word hasNext next:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word hasNext next:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word hasNext next:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word hasNext next:

      Method: StreamReceiveTask$OnCompletionRunnable.run()
      Calls Location: StreamReceiveTask.java:103 StreamReceiveTask.java:103
      Atomic: NO

Checking class StreamReceiveTask$1:

  Verifying word hasNext next:

      Method: StreamReceiveTask$1.run()
      Calls Location: StreamReceiveTask.java:131 StreamReceiveTask.java:131
      Atomic: NO

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word hasNext next:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word hasNext next:

      Method: StreamRequest$StreamRequestSerializer.serializedSize()
      Calls Location: StreamRequest.java:92 StreamRequest.java:92
      Atomic: NO

      Method: StreamRequest$StreamRequestSerializer.serializedSize()
      Calls Location: StreamRequest.java:86 StreamRequest.java:92
      Atomic: NO

      Method: StreamRequest$StreamRequestSerializer.serialize()
      Calls Location: StreamRequest.java:60 StreamRequest.java:60
      Atomic: NO

      Method: StreamRequest$StreamRequestSerializer.serialize()
      Calls Location: StreamRequest.java:54 StreamRequest.java:60
      Atomic: NO

      Method: StreamRequest$StreamRequestSerializer.serializedSize()
      Calls Location: StreamRequest.java:86 StreamRequest.java:86
      Atomic: NO

      Method: StreamRequest$StreamRequestSerializer.serialize()
      Calls Location: StreamRequest.java:54 StreamRequest.java:54
      Atomic: NO

Checking class StreamMessage$Serializer:

  Verifying word hasNext next:

    No occurrences

Checking class RetryMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompressionInfo:

  Verifying word hasNext next:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word hasNext next:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word hasNext next:

      Method: FileMessageHeader$FileMessageHeaderSerializer.serialize()
      Calls Location: FileMessageHeader.java:126 FileMessageHeader.java:126
      Atomic: NO

      Method: FileMessageHeader$FileMessageHeaderSerializer.serializedSize()
      Calls Location: FileMessageHeader.java:156 FileMessageHeader.java:156
      Atomic: NO

Checking class PrepareMessage$1:

  Verifying word hasNext next:

      Method: PrepareMessage$1.serialize()
      Calls Location: PrepareMessage.java:59 PrepareMessage.java:59
      Atomic: NO

      Method: PrepareMessage$1.serialize()
      Calls Location: PrepareMessage.java:55 PrepareMessage.java:59
      Atomic: NO

      Method: PrepareMessage$1.serialize()
      Calls Location: PrepareMessage.java:55 PrepareMessage.java:55
      Atomic: NO

Checking class SessionFailedMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word hasNext next:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word hasNext next:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word hasNext next:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word hasNext next:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word hasNext next:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word hasNext next:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word hasNext next:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word hasNext next:

      Method: GossipDigestSerializationHelper.serialize()
      Calls Location: GossipDigestSyn.java:57 GossipDigestSyn.java:57
      Atomic: NO

      Method: GossipDigestSerializationHelper.serializedSize()
      Calls Location: GossipDigestSyn.java:73 GossipDigestSyn.java:73
      Atomic: NO

Checking class RequestCoordinator:

  Verifying word hasNext next:

    No occurrences

Checking class RepairJob$2:

  Verifying word hasNext next:

    No occurrences

Checking class RepairJob$1:

  Verifying word hasNext next:

    No occurrences

Checking class TreeResponse:

  Verifying word hasNext next:

    No occurrences

Checking class Differencer:

  Verifying word hasNext next:

    No occurrences

Checking class SnapshotTask:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word hasNext next:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class TServer:

  Verifying word hasNext next:

    No occurrences

Checking class TServerFactory:

  Verifying word hasNext next:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word hasNext next:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word hasNext next:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class NotFoundException:

  Verifying word hasNext next:

    No occurrences

Checking class CASResult:

  Verifying word hasNext next:

    No occurrences

Checking class CfSplit:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraServer$3:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraServer$2:

  Verifying word hasNext next:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraServer$1:

  Verifying word hasNext next:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word hasNext next:

      Method: CassandraServer$ThriftCASConditions.appliesTo()
      Calls Location: CassandraServer.java:2191 CassandraServer.java:2191
      Atomic: NO

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word hasNext next:

    No occurrences

Checking class SettableFuture:

  Verifying word hasNext next:

    No occurrences

Checking class Cache:

  Verifying word hasNext next:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word hasNext next:

    No occurrences

Checking class FileCacheService$1:

  Verifying word hasNext next:

    No occurrences

Checking class FileCacheService$2:

  Verifying word hasNext next:

      Method: FileCacheService$2.onRemoval()
      Calls Location: FileCacheService.java:72 FileCacheService.java:72
      Atomic: NO

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word hasNext next:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word hasNext next:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word hasNext next:

      Method: CompressedStreamWriter.write()
      Calls Location: CompressedStreamWriter.java:64 CompressedStreamWriter.java:64
      Atomic: NO

Checking class StreamWriter:

  Verifying word hasNext next:

      Method: StreamWriter.totalSize()
      Calls Location: StreamWriter.java:123 StreamWriter.java:123
      Atomic: NO

      Method: StreamWriter.write()
      Calls Location: StreamWriter.java:86 StreamWriter.java:86
      Atomic: NO

      Method: StreamWriter.write()
      Calls Location: StreamWriter.java:123 StreamWriter.java:86
      Atomic: NO

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word hasNext next:

      Method: CompressedStreamReader.read()
      Calls Location: CompressedStreamReader.java:71 CompressedStreamReader.java:71
      Atomic: NO

Checking class StreamReader:

  Verifying word hasNext next:

      Method: StreamReader.totalSize()
      Calls Location: StreamReader.java:136 StreamReader.java:136
      Atomic: NO

Checking class SnapshotTask$SnapshotCallback:

  Verifying word hasNext next:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word hasNext next:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word hasNext next:

      Method: RequestCoordinator$ParallelOrder.start()
      Calls Location: RequestCoordinator.java:117 RequestCoordinator.java:117
      Atomic: NO

Checking class RequestCoordinator$SequentialOrder:

  Verifying word hasNext next:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word hasNext next:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word hasNext next:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word hasNext next:

    No occurrences

Checking class RemovalNotification:

  Verifying word hasNext next:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word hasNext next:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word hasNext next:

    No occurrences

Checking class LZFOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class BytesReadTracker:

  Verifying word hasNext next:

    No occurrences

Checking class LZFInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word hasNext next:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word hasNext next:

    No occurrences

Checking class TNonblockingServer:

  Verifying word hasNext next:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word hasNext next:

    No occurrences

Checking class TServerTransport:

  Verifying word hasNext next:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word hasNext next:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word hasNext next:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word hasNext next:

    No occurrences

Checking class TServerSocket:

  Verifying word hasNext next:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word hasNext next:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word hasNext next:

    No occurrences

Checking class TDisruptorServer:

  Verifying word hasNext next:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word hasNext next:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word hasNext next:

      Method: CompressedInputStream$Reader.runMayThrow()
      Calls Location: CompressedInputStream.java:156 CompressedInputStream.java:158
      Atomic: NO

Checking class TNonblockingServerSocket:

  Verifying word hasNext next:

    No occurrences

Checking class TCustomSocket:

  Verifying word hasNext next:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word hasNext next:

    No occurrences


Run Time:
                                .buildTree     215.737s
                                    .onLCA     740.877s
                         analysis-behavior      29.701s
                          analysis-threads       0.017s
                       build-parsing-table       4.288s
                       check-word-instance       0.437s
                               grammar-opt       1.764s
                        grammar-rm-epsilon      27.239s
                                   parsing    1670.247s
                                 soot-init     144.943s
                                     total    2932.887s

Profiling Vars:
                                 cfg-nodes     185745
                       grammar-productions      15679
                            parse-branches  327225766
                               parse-trees       3595
                      parsing-table-states      15166
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Options:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommandLineParser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StressThread:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PosixParser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommandLine:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StressAction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Session:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSlicer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Stress:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlInserter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Inserter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterGetter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterAdder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StressAction$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StressAction$Producer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Reader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Uninterruptibles:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StressStatistics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RateLimiter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Stress$Operations:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Timer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiGetter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Snapshot:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SyntaxException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EncryptionOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ITransportFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraClient:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleClient:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnDef:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFMetaData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Metrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeParser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CfDef:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TTransport:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StringUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Joiner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConfigurationException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class InvalidRequestException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KsDef:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UTF8Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeUUIDType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AsciiType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Document:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Element:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Node:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NodeList:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Text:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyRange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceRange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimerContext:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnParent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SlicePredicate:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Option:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQLOperation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UUIDGen:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlRow:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Column:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FBUtilities:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Mutation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SuperColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexOperator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexExpression:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexClause:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeySlice:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Cassandra$Client:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MD5Digest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Hex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$Response:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message:

  Verifying word equals getHostAddress:

    No occurrences

Checking class InvalidRequestException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Logger:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnDefinition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionParameters:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFDefinition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Descriptor$Version:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowMutation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Row:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TriggerDefinition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositeType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstone:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Iterables:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFMetaData$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQLStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SuperColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFMetaData$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestValidationException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeletedColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamily:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OnDiskAtom:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateTableStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryProcessor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterColumnType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Descriptor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Schema:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ICompressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MapDifference:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UntypedResultSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SystemKeyspace:

  Verifying word equals getHostAddress:

      Method: SystemKeyspace.updatePeerInfo()
      Calls Location: SystemKeyspace.java:373 SystemKeyspace.java:377
      Atomic: YES

      Method: SystemKeyspace.updateTokens()
      Calls Location: SystemKeyspace.java:354 SystemKeyspace.java:424
      Atomic: YES

      Method: SystemKeyspace.updateTokens()
      Calls Location: SystemKeyspace.java:354 SystemKeyspace.java:361
      Atomic: YES

Checking class ParsedStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ToStringBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LoggerFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MarshalException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EqualsBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LongType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LZ4Compressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Column:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CollectionType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileDataInput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TFramedTransport:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexHelper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSlice:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReversedType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractType$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnavailableException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Keyspace:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProtocolException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Connection$Tracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Connection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ClientBootstrap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Channel:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelFuture:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Connection$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame$Compressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame$Encoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$Request:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleClient$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FrameCompressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ErrorMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CredentialsMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StartupMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TransportException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExecuteMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExceptionCode:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UTF8Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimestampSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AsciiSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DOMException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Attr:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DocumentType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DOMImplementation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DOMConfiguration:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NamedNodeMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UserDataHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CharacterData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQLOperation$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQLOperation$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSpecification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlMetadata:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectMapper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Pair:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TDeserializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Range:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IPartitioner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IAllocator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IAuthorizer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IAuthenticator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class JsonFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RingPosition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FBUtilities$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FBUtilities$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FBUtilities$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Token:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteComparisons:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$Direction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CBCodec:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadyMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SupportedMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthChallenge:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RegisterMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EventMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthSuccess:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OptionsMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelBuffer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ImmutableList:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositeType$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Interval:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeletionTime:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeSizes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ISerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Relation$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Relation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExpiringColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DecoratedKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LocalToken:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService:

  Verifying word equals getHostAddress:

      Method: StorageService.getRpcaddress()
      Calls Location: StorageService.java:1092 StorageService.java:1095
      Atomic: NO

      Method: StorageService.describeRing()
      Calls Location: StorageService.java:1092 StorageService.java:1269
      Atomic: NO

      Method: StorageService.getRangeToRpcaddressMap()
      Calls Location: StorageService.java:1092 StorageService.java:1095
      Atomic: NO

      Method: StorageService.describeRing()
      Calls Location: StorageService.java:1092 StorageService.java:1095
      Atomic: NO

Checking class SSTableReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeysIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ImmutableMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnauthorizedException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestExecutionException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ClientState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ImmutableSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$SetView:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeletionInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TriggerDef:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Objects:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Allocator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HeapAllocator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnStats:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamingHistogram:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Functions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnsortedColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memtable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionController:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataTracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ICompactionScanner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Component:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFPropDefs:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFName:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateTableStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Permission:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SemanticVersion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MemoryMeter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchQueryOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tracing:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CharStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftClientState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommonTokenStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class INotificationConsumer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledManifest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Multimap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OperationType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LongSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KSMetaData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class InetAddressType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Int32Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimestampType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UUIDType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ListType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DoubleType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MapType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BooleanType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SetType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Row$RowSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReplayPosition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SetMultimap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterId:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PaxosState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Commit:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RestorableMeter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractBounds:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Token$KeyBound:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HashMultimap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EmptyColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DefsTables:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SystemKeyspace$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class VariableSpecifications:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IMutation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessageOut:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStoreMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DefaultInteger:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndexManager$Updater:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataTracker$View:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataRange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExtendedFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowCacheKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamLockfile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CollationController:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyCacheKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableMetadata:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Histogram:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Counter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Futures:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FSReadError:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionMetadata:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataRange$Paging:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LocalPartitioner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIndexEntry:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LatencyMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowPosition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AutoSavingCache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLog:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Gauge:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SeedProvider:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IRequestScheduler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FSWriteError:

  Verifying word equals getHostAddress:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NoScheduler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Longs:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SeedProviderDef:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DateType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFDefinition$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFDefinition$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LZ4Compressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LZ4Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Column$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FSError:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileUtils$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileUtils$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3Type$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectSizes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCounter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenMetadata:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Keyspace$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryPagers:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WriteType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FrameCompressor$LZ4Compressor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelPipeline:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame$Decoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Channels:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ServerError:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame$Header:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CBUtil:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthenticationException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelBuffers:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StartupMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Snappy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PagingState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessageEvent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExceptionEvent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SslHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSLFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FloatType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DecimalType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntegerType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DateUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UUIDSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DOMStringList:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftConversion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IResource:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IAsyncCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessageIn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Bounds:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Range$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Restriction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Restriction$Slice:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Bound:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExcludingBounds:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ServerConnection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthResponse$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Attributes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ModificationStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchMessage$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EventMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Relation$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterContext:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IContext:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IMergeIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MergeIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesSearcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraDaemon:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$Mode:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EndpointState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ApplicationState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class VersionedValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairFuture:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamResultFuture:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableLoader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Iterators:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FailureDetector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$8:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamPlan:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ActiveRepairService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenRange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeStreamer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Gossiper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LoadBroadcaster:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Auth:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutputHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BiMultiValMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StageManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BootStrapper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Level:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IFailureDetector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Logger:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Collections2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LocalStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EndpointDetails:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Stage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchlogManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LogManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexSummary:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class InstrumentingCache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableScanner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RandomAccessReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CLibrary:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FilterFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ICompressedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThrottledReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Multiset:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Validator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairJobDesc:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$10:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Meter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionIterable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Throwables:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Scrubber:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$8:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$9:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeysSearcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LoadingCache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataResource:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheLoader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftValidation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryProcessor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ClientState$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Resources:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UUIDSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrecompactedRow:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataTracker$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memtable$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memtable$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memtable$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Component$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Component$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Multiset$Entry:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HashMultiset:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IMigrationListener:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationManager$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TraceState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OverloadedException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tracing$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tracing$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Parser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BitSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$Raw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$Literal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UseStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RawSelector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Attributes$Raw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterTableStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DropTableStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DropIndexStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncateStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GrantStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RevokeStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateUserStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterUserStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DropUserStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ListUsersStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UserOptions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Literal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term$Raw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$Literal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$Prepend:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MismatchedSetException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeleteStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$SetValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Token:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NoViableAltException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UpdateStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeCast:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DFA:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$Substraction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$Addition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KSPropDefs:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FunctionCall:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$SetElement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractMarker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Literal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$Literal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexPropDefs:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lexer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EarlyExitException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterMutation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UpdateParameters:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CASConditions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Ints:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Ordering:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ImmutableSortedSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Predicates:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Doubles:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleStrategy:

  Verifying word equals getHostAddress:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Int32Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ListSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DoubleSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MapSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BooleanSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SetSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EmptyType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryFilter$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryFilter$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Clock:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExpiringMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleCondition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CallbackInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StatusLogger:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SinkManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessagingService$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ICache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Files:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTable$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTable$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntervalTree:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Memory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WrappedRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MetricNameFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MetricsRegistry:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MetricName:

  Verifying word equals getHostAddress:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SequentialWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogSegment:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchCommitLogExecutorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLog$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLog$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLog$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLog$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories$FileAction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Directories$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PropertyUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TypeDescription:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constructor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Yaml:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NativeAllocator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CsvListReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BiMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HashBiMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NamesQueryPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceQueryPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryPagers$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FrameDecoder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncateException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FloatSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DecimalSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntegerSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LSResourceResolver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnavailableException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimedOutException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OptionCodec:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Restriction$IN:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$Selector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Functions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Function:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term$Terminal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$Value:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IReadCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowDataResolver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Marker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$8:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$9:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$6:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DigestMismatchException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IResponseResolver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowDigestResolver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProposeCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Truncation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TriggerExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ServerConnection$State:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ServerConnection$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelGroup:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExecutionHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ClientMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ServerBootstrap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$StatusChange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEventHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEvent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSession:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamManager$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MoreExecutors:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamManager$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EchoMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnapshotCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestAck:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrivalWindow:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HeartBeatState:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairSession:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SyncComplete:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ValidationComplete:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NodePair:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree:

  Verifying word equals getHostAddress:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTransfer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ValidationRequest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SyncRequest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceReply:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncateResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossiperMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Gossiper$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Gossiper$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Mx4jTool:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReporterConfig:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MeteredFlusher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GCInspector:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Auth$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Multimaps:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StageManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WriteResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class VersionGenerator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractFuture:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProgressInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BooleanSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Stage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AtomicDouble:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CorruptBlockException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OpenBitSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IBitSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BloomFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BloomCalculations:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MemoryInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Scrubber$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnPath:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Deletion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PreExecutionHook:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PostPreparationHook:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQLStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExecutionContext:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UpdateStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Relation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DropIndexStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PreparationContext:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DeleteStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RelationType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RandomPartitioner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StatementType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractModification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterTableStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CliUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataResource$Level:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataResource$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnapTreeMap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MigrationTask$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Stopwatch:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FormattingTuple:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MessageFormatter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TraceState$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Prepender:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TupleType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$Marker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$Setter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$Value:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$Putter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$Marker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$Setter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Setter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Setter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AssignementTestable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Value:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Deleter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$Discarder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$Adder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$Value:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Sets$Marker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Marker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PermissionDetails:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Discarder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Substracter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$Adder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$InValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Appender:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$Value:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FunctionCall$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ITrigger:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word equals getHostAddress:

    No occurrences

Checking class JsonNode:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CollectionSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EmptySerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IMessageSink:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IRequestSink:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SerializingCache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntervalTree$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IntervalTree$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RatioGauge:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IExecutorMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogAllocator$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Strings:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Property:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TreeMultimap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LSInput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class DataType$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UnsignedBytes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Function$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenFct:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UuidFcts:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractFunction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ListMultimap:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TruncationSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomClassLoader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamState$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamingMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSession$State:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileMessageHeader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamTransferTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSummary:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamRequest:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RetryMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSession$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSession$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReceivedMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompleteMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairJob:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Preconditions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class HistogramBuilder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word equals getHostAddress:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TFramedTransport$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GCInspector$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfo$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileCacheService:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BitUtil:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BloomFilter$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MurmurHash:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RefCountedMemory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractDataInput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SelectExpression:

  Verifying word equals getHostAddress:

    No occurrences

Checking class WhereClause:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Attributes:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Optional:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CFPropDefs:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BigIntegerToken:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GuidGenerator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MissingTokenException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TermType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Operation$OperationType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Term$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommonToken:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ComparisonChain:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Constants$1$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnappyInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamInitMessage:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SerializingCache$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SerializingCache$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class QueryPath:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TokenFct$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class UuidFcts$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RetryMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionInfo:

  Verifying word equals getHostAddress:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word equals getHostAddress:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestCoordinator:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairJob$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RepairJob$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TreeResponse:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Differencer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnapshotTask:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TServerFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class NotFoundException:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CASResult:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CfSplit:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraServer$3:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraServer$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraServer$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word equals getHostAddress:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SettableFuture:

  Verifying word equals getHostAddress:

    No occurrences

Checking class Cache:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileCacheService$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileCacheService$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamWriter:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class StreamReader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class RemovalNotification:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word equals getHostAddress:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LZFOutputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class BytesReadTracker:

  Verifying word equals getHostAddress:

    No occurrences

Checking class LZFInputStream:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TNonblockingServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TServerTransport:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TServerSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TDisruptorServer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word equals getHostAddress:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TCustomSocket:

  Verifying word equals getHostAddress:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word equals getHostAddress:

    No occurrences


Run Time:
                                .buildTree       0.001s
                                    .onLCA       0.004s
                         analysis-behavior      30.687s
                          analysis-threads       0.021s
                       build-parsing-table       0.192s
                       check-word-instance       0.001s
                               grammar-opt       2.321s
                        grammar-rm-epsilon      27.675s
                                   parsing       0.010s
                                 soot-init     143.943s
                                     total     390.661s

Profiling Vars:
                                 cfg-nodes     185745
                       grammar-productions       2883
                            parse-branches        151
                               parse-trees          7
                      parsing-table-states       4313
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word get set:

    No occurrences

Checking class Options:

  Verifying word get set:

    No occurrences

Checking class CommandLineParser:

  Verifying word get set:

    No occurrences

Checking class StressThread:

  Verifying word get set:

    No occurrences

Checking class PosixParser:

  Verifying word get set:

    No occurrences

Checking class CommandLine:

  Verifying word get set:

    No occurrences

Checking class StressAction:

  Verifying word get set:

    No occurrences

Checking class Session:

  Verifying word get set:

    No occurrences

Checking class Operation:

  Verifying word get set:

    No occurrences

Checking class RangeSlicer:

  Verifying word get set:

    No occurrences

Checking class Stress:

  Verifying word get set:

    No occurrences

Checking class CqlInserter:

  Verifying word get set:

    No occurrences

Checking class CqlReader:

  Verifying word get set:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word get set:

    No occurrences

Checking class Inserter:

  Verifying word get set:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word get set:

    No occurrences

Checking class CounterGetter:

  Verifying word get set:

    No occurrences

Checking class CounterAdder:

  Verifying word get set:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word get set:

    No occurrences

Checking class StressAction$1:

  Verifying word get set:

    No occurrences

Checking class StressAction$Producer:

  Verifying word get set:

    No occurrences

Checking class Reader:

  Verifying word get set:

    No occurrences

Checking class Uninterruptibles:

  Verifying word get set:

    No occurrences

Checking class StressStatistics:

  Verifying word get set:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word get set:

    No occurrences

Checking class RateLimiter:

  Verifying word get set:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word get set:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word get set:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word get set:

    No occurrences

Checking class Stress$Operations:

  Verifying word get set:

    No occurrences

Checking class Timer:

  Verifying word get set:

    No occurrences

Checking class MultiGetter:

  Verifying word get set:

    No occurrences

Checking class Snapshot:

  Verifying word get set:

    No occurrences

Checking class SyntaxException:

  Verifying word get set:

    No occurrences

Checking class IndexType:

  Verifying word get set:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word get set:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word get set:

    No occurrences

Checking class EncryptionOptions:

  Verifying word get set:

    No occurrences

Checking class ITransportFactory:

  Verifying word get set:

    No occurrences

Checking class CassandraClient:

  Verifying word get set:

    No occurrences

Checking class SimpleClient:

  Verifying word get set:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word get set:

    No occurrences

Checking class ResultMessage:

  Verifying word get set:

    No occurrences

Checking class ColumnDef:

  Verifying word get set:

    No occurrences

Checking class CFMetaData:

  Verifying word get set:

    No occurrences

Checking class Metrics:

  Verifying word get set:

    No occurrences

Checking class TypeParser:

  Verifying word get set:

    No occurrences

Checking class CfDef:

  Verifying word get set:

    No occurrences

Checking class TTransport:

  Verifying word get set:

    No occurrences

Checking class StringUtils:

  Verifying word get set:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word get set:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word get set:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word get set:

    No occurrences

Checking class AbstractType:

  Verifying word get set:

    No occurrences

Checking class Joiner:

  Verifying word get set:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word get set:

    No occurrences

Checking class ConfigurationException:

  Verifying word get set:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word get set:

    No occurrences

Checking class InvalidRequestException:

  Verifying word get set:

    No occurrences

Checking class KsDef:

  Verifying word get set:

    No occurrences

Checking class UTF8Type:

  Verifying word get set:

    No occurrences

Checking class TimeUUIDType:

  Verifying word get set:

    No occurrences

Checking class AsciiType:

  Verifying word get set:

    No occurrences

Checking class Document:

  Verifying word get set:

    No occurrences

Checking class Element:

  Verifying word get set:

    No occurrences

Checking class Node:

  Verifying word get set:

    No occurrences

Checking class NodeList:

  Verifying word get set:

    No occurrences

Checking class Text:

  Verifying word get set:

    No occurrences

Checking class KeyRange:

  Verifying word get set:

    No occurrences

Checking class SliceRange:

  Verifying word get set:

    No occurrences

Checking class TimerContext:

  Verifying word get set:

    No occurrences

Checking class ColumnParent:

  Verifying word get set:

    No occurrences

Checking class SlicePredicate:

  Verifying word get set:

    No occurrences

Checking class Option:

  Verifying word get set:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word get set:

    No occurrences

Checking class CQLOperation:

  Verifying word get set:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word get set:

    No occurrences

Checking class UUIDGen:

  Verifying word get set:

    No occurrences

Checking class ResultSet:

  Verifying word get set:

    No occurrences

Checking class CqlRow:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word get set:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word get set:

    No occurrences

Checking class Column:

  Verifying word get set:

    No occurrences

Checking class FBUtilities:

  Verifying word get set:

    No occurrences

Checking class Mutation:

  Verifying word get set:

    No occurrences

Checking class SuperColumn:

  Verifying word get set:

    No occurrences

Checking class IndexOperator:

  Verifying word get set:

    No occurrences

Checking class IndexExpression:

  Verifying word get set:

    No occurrences

Checking class IndexClause:

  Verifying word get set:

    No occurrences

Checking class KeySlice:

  Verifying word get set:

    No occurrences

Checking class Cassandra$Client:

  Verifying word get set:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word get set:

    No occurrences

Checking class CounterColumn:

  Verifying word get set:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word get set:

    No occurrences

Checking class Operation$1:

  Verifying word get set:

    No occurrences

Checking class Lists:

  Verifying word get set:

    No occurrences

Checking class MD5Digest:

  Verifying word get set:

    No occurrences

Checking class Hex:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word get set:

    No occurrences

Checking class Message$Response:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word get set:

    No occurrences

Checking class Message$Type:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$1:

  Verifying word get set:

    No occurrences

Checking class Message:

  Verifying word get set:

    No occurrences

Checking class InvalidRequestException:

  Verifying word get set:

    No occurrences

Checking class Logger:

  Verifying word get set:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word get set:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word get set:

    No occurrences

Checking class ColumnDefinition:

  Verifying word get set:

    No occurrences

Checking class CompressionParameters:

  Verifying word get set:

    No occurrences

Checking class CFDefinition:

  Verifying word get set:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word get set:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word get set:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word get set:

    No occurrences

Checking class Descriptor$Version:

  Verifying word get set:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word get set:

    No occurrences

Checking class RowMutation:

  Verifying word get set:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word get set:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word get set:

    No occurrences

Checking class Row:

  Verifying word get set:

    No occurrences

Checking class TriggerDefinition:

  Verifying word get set:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word get set:

    No occurrences

Checking class CompositeType:

  Verifying word get set:

    No occurrences

Checking class RangeTombstone:

  Verifying word get set:

    No occurrences

Checking class ColumnSerializer:

  Verifying word get set:

    No occurrences

Checking class SecondaryIndex:

  Verifying word get set:

    No occurrences

Checking class Iterables:

  Verifying word get set:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word get set:

    No occurrences

Checking class CFMetaData$2:

  Verifying word get set:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word get set:

    No occurrences

Checking class CQLStatement:

  Verifying word get set:

    No occurrences

Checking class SuperColumns:

  Verifying word get set:

    No occurrences

Checking class ArrayUtils:

  Verifying word get set:

    No occurrences

Checking class CFMetaData$1:

  Verifying word get set:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word get set:

    No occurrences

Checking class RequestValidationException:

  Verifying word get set:

    No occurrences

Checking class DeletedColumn:

  Verifying word get set:

    No occurrences

Checking class BytesType:

  Verifying word get set:

    No occurrences

Checking class ColumnFamily:

  Verifying word get set:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word get set:

    No occurrences

Checking class OnDiskAtom:

  Verifying word get set:

    No occurrences

Checking class CreateTableStatement:

  Verifying word get set:

    No occurrences

Checking class QueryProcessor:

  Verifying word get set:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word get set:

    No occurrences

Checking class CounterColumnType:

  Verifying word get set:

    No occurrences

Checking class Descriptor:

  Verifying word get set:

    No occurrences

Checking class Schema:

  Verifying word get set:

    No occurrences

Checking class ICompressor:

  Verifying word get set:

    No occurrences

Checking class MapDifference:

  Verifying word get set:

    No occurrences

Checking class UntypedResultSet:

  Verifying word get set:

    No occurrences

Checking class SystemKeyspace:

  Verifying word get set:

    No occurrences

Checking class ParsedStatement:

  Verifying word get set:

    No occurrences

Checking class ToStringBuilder:

  Verifying word get set:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word get set:

    No occurrences

Checking class Maps:

  Verifying word get set:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word get set:

    No occurrences

Checking class LoggerFactory:

  Verifying word get set:

    No occurrences

Checking class MarshalException:

  Verifying word get set:

    No occurrences

Checking class EqualsBuilder:

  Verifying word get set:

    No occurrences

Checking class LongType:

  Verifying word get set:

    No occurrences

Checking class LZ4Compressor:

  Verifying word get set:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word get set:

    No occurrences

Checking class Column:

  Verifying word get set:

    No occurrences

Checking class CollectionType:

  Verifying word get set:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word get set:

    No occurrences

Checking class FileUtils:

  Verifying word get set:

    No occurrences

Checking class FileDataInput:

  Verifying word get set:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word get set:

    No occurrences

Checking class TFramedTransport:

  Verifying word get set:

    No occurrences

Checking class TSocket:

  Verifying word get set:

    No occurrences

Checking class CQL3Type:

  Verifying word get set:

    No occurrences

Checking class TypeSerializer:

  Verifying word get set:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word get set:

    No occurrences

Checking class IndexHelper:

  Verifying word get set:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word get set:

    No occurrences

Checking class ColumnSlice:

  Verifying word get set:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word get set:

    No occurrences

Checking class AbstractType$6:

  Verifying word get set:

    No occurrences

Checking class AbstractType$4:

  Verifying word get set:

    No occurrences

Checking class AbstractType$5:

  Verifying word get set:

    No occurrences

Checking class AbstractType$3:

  Verifying word get set:

    No occurrences

Checking class ReversedType:

  Verifying word get set:

    No occurrences

Checking class AbstractType$2:

  Verifying word get set:

    No occurrences

Checking class AbstractType$1:

  Verifying word get set:

    No occurrences

Checking class UnavailableException:

  Verifying word get set:

    No occurrences

Checking class Keyspace:

  Verifying word get set:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word get set:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word get set:

    No occurrences

Checking class ProtocolException:

  Verifying word get set:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word get set:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word get set:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word get set:

    No occurrences

Checking class Connection$Tracker:

  Verifying word get set:

    No occurrences

Checking class Connection:

  Verifying word get set:

    No occurrences

Checking class ClientBootstrap:

  Verifying word get set:

    No occurrences

Checking class Channel:

  Verifying word get set:

    No occurrences

Checking class ChannelFuture:

  Verifying word get set:

    No occurrences

Checking class Connection$Factory:

  Verifying word get set:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word get set:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word get set:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word get set:

    No occurrences

Checking class Frame$Compressor:

  Verifying word get set:

    No occurrences

Checking class Frame$Encoder:

  Verifying word get set:

    No occurrences

Checking class Message$Request:

  Verifying word get set:

    No occurrences

Checking class SimpleClient$1:

  Verifying word get set:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word get set:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word get set:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word get set:

    No occurrences

Checking class FrameCompressor:

  Verifying word get set:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word get set:

    No occurrences

Checking class ErrorMessage:

  Verifying word get set:

    No occurrences

Checking class CredentialsMessage:

  Verifying word get set:

    No occurrences

Checking class StartupMessage:

  Verifying word get set:

    No occurrences

Checking class PrepareMessage:

  Verifying word get set:

    No occurrences

Checking class QueryMessage:

  Verifying word get set:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word get set:

    No occurrences

Checking class Frame:

  Verifying word get set:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word get set:

    No occurrences

Checking class TransportException:

  Verifying word get set:

    No occurrences

Checking class QueryOptions:

  Verifying word get set:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word get set:

    No occurrences

Checking class ExecuteMessage:

  Verifying word get set:

    No occurrences

Checking class ExceptionCode:

  Verifying word get set:

    No occurrences

Checking class UTF8Serializer:

  Verifying word get set:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word get set:

    No occurrences

Checking class TimestampSerializer:

  Verifying word get set:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word get set:

    No occurrences

Checking class AsciiSerializer:

  Verifying word get set:

    No occurrences

Checking class DOMException:

  Verifying word get set:

    No occurrences

Checking class Attr:

  Verifying word get set:

    No occurrences

Checking class TypeInfo:

  Verifying word get set:

    No occurrences

Checking class DocumentType:

  Verifying word get set:

    No occurrences

Checking class DOMImplementation:

  Verifying word get set:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word get set:

    No occurrences

Checking class DOMConfiguration:

  Verifying word get set:

    No occurrences

Checking class NamedNodeMap:

  Verifying word get set:

    No occurrences

Checking class UserDataHandler:

  Verifying word get set:

    No occurrences

Checking class CharacterData:

  Verifying word get set:

    No occurrences

Checking class CQLOperation$1:

  Verifying word get set:

    No occurrences

Checking class CQLOperation$2:

  Verifying word get set:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word get set:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word get set:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word get set:

    No occurrences

Checking class ColumnSpecification:

  Verifying word get set:

    No occurrences

Checking class CqlMetadata:

  Verifying word get set:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word get set:

    No occurrences

Checking class ObjectMapper:

  Verifying word get set:

    No occurrences

Checking class Pair:

  Verifying word get set:

    No occurrences

Checking class TSerializer:

  Verifying word get set:

    No occurrences

Checking class TDeserializer:

  Verifying word get set:

    No occurrences

Checking class Range:

  Verifying word get set:

    No occurrences

Checking class IPartitioner:

  Verifying word get set:

    No occurrences

Checking class IAllocator:

  Verifying word get set:

    No occurrences

Checking class IAuthorizer:

  Verifying word get set:

    No occurrences

Checking class IAuthenticator:

  Verifying word get set:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word get set:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word get set:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word get set:

    No occurrences

Checking class JsonFactory:

  Verifying word get set:

    No occurrences

Checking class RingPosition:

  Verifying word get set:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word get set:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word get set:

    No occurrences

Checking class FBUtilities$2:

  Verifying word get set:

    No occurrences

Checking class FBUtilities$1:

  Verifying word get set:

    No occurrences

Checking class FBUtilities$3:

  Verifying word get set:

    No occurrences

Checking class Token:

  Verifying word get set:

    No occurrences

Checking class FastByteComparisons:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word get set:

    No occurrences

Checking class SelectStatement:

  Verifying word get set:

    No occurrences

Checking class Message$Direction:

  Verifying word get set:

    No occurrences

Checking class CBCodec:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word get set:

    No occurrences

Checking class ReadyMessage:

  Verifying word get set:

    No occurrences

Checking class SupportedMessage:

  Verifying word get set:

    No occurrences

Checking class AuthResponse:

  Verifying word get set:

    No occurrences

Checking class BatchMessage:

  Verifying word get set:

    No occurrences

Checking class AuthChallenge:

  Verifying word get set:

    No occurrences

Checking class RegisterMessage:

  Verifying word get set:

    No occurrences

Checking class EventMessage:

  Verifying word get set:

    No occurrences

Checking class AuthSuccess:

  Verifying word get set:

    No occurrences

Checking class OptionsMessage:

  Verifying word get set:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word get set:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word get set:

    No occurrences

Checking class ChannelBuffer:

  Verifying word get set:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word get set:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word get set:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word get set:

    No occurrences

Checking class ImmutableList:

  Verifying word get set:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word get set:

    No occurrences

Checking class CompositeType$1:

  Verifying word get set:

    No occurrences

Checking class Interval:

  Verifying word get set:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word get set:

    No occurrences

Checking class DeletionTime:

  Verifying word get set:

    No occurrences

Checking class TypeSizes:

  Verifying word get set:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word get set:

    No occurrences

Checking class ISerializer:

  Verifying word get set:

    No occurrences

Checking class Relation$Type:

  Verifying word get set:

    No occurrences

Checking class Relation:

  Verifying word get set:

    No occurrences

Checking class ExpiringColumn:

  Verifying word get set:

    No occurrences

Checking class CounterColumn:

  Verifying word get set:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word get set:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word get set:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word get set:

    No occurrences

Checking class DecoratedKey:

  Verifying word get set:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word get set:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word get set:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word get set:

    No occurrences

Checking class CompositesIndex:

  Verifying word get set:

    No occurrences

Checking class LocalToken:

  Verifying word get set:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word get set:

    No occurrences

Checking class StorageService:

  Verifying word get set:

    No occurrences

Checking class SSTableReader:

  Verifying word get set:

    No occurrences

Checking class CompactionManager:

  Verifying word get set:

    No occurrences

Checking class KeysIndex:

  Verifying word get set:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word get set:

    No occurrences

Checking class BytesSerializer:

  Verifying word get set:

    No occurrences

Checking class ImmutableMap:

  Verifying word get set:

    No occurrences

Checking class UnauthorizedException:

  Verifying word get set:

    No occurrences

Checking class RequestExecutionException:

  Verifying word get set:

    No occurrences

Checking class ClientState:

  Verifying word get set:

    No occurrences

Checking class QueryState:

  Verifying word get set:

    No occurrences

Checking class ImmutableSet:

  Verifying word get set:

    No occurrences

Checking class Sets$SetView:

  Verifying word get set:

    No occurrences

Checking class Sets:

  Verifying word get set:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word get set:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word get set:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word get set:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word get set:

    No occurrences

Checking class DeletionInfo:

  Verifying word get set:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word get set:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word get set:

    No occurrences

Checking class TriggerDef:

  Verifying word get set:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word get set:

    No occurrences

Checking class Objects:

  Verifying word get set:

    No occurrences

Checking class CassandraException:

  Verifying word get set:

    No occurrences

Checking class Allocator:

  Verifying word get set:

    No occurrences

Checking class HeapAllocator:

  Verifying word get set:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word get set:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word get set:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word get set:

    No occurrences

Checking class ColumnStats:

  Verifying word get set:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word get set:

    No occurrences

Checking class StreamingHistogram:

  Verifying word get set:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word get set:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word get set:

    No occurrences

Checking class Functions:

  Verifying word get set:

    No occurrences

Checking class UnsortedColumns:

  Verifying word get set:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word get set:

    No occurrences

Checking class Memtable:

  Verifying word get set:

    No occurrences

Checking class CompactionController:

  Verifying word get set:

    No occurrences

Checking class DataTracker:

  Verifying word get set:

    No occurrences

Checking class ICompactionScanner:

  Verifying word get set:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word get set:

    No occurrences

Checking class Component:

  Verifying word get set:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word get set:

    No occurrences

Checking class CompactionTask:

  Verifying word get set:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word get set:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word get set:

    No occurrences

Checking class CFPropDefs:

  Verifying word get set:

    No occurrences

Checking class CFName:

  Verifying word get set:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word get set:

    No occurrences

Checking class CreateTableStatement$1:

  Verifying word get set:

    No occurrences

Checking class Permission:

  Verifying word get set:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word get set:

    No occurrences

Checking class MigrationManager:

  Verifying word get set:

    No occurrences

Checking class QueryHandler:

  Verifying word get set:

    No occurrences

Checking class SemanticVersion:

  Verifying word get set:

    No occurrences

Checking class MemoryMeter:

  Verifying word get set:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word get set:

    No occurrences

Checking class BatchStatement:

  Verifying word get set:

    No occurrences

Checking class BatchQueryOptions:

  Verifying word get set:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word get set:

    No occurrences

Checking class Tracing:

  Verifying word get set:

    No occurrences

Checking class CFStatement:

  Verifying word get set:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word get set:

    No occurrences

Checking class CqlParser:

  Verifying word get set:

Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word get get:

    No occurrences

Checking class Options:

  Verifying word get get:

    No occurrences

Checking class CommandLineParser:

  Verifying word get get:

    No occurrences

Checking class StressThread:

  Verifying word get get:

    No occurrences

Checking class PosixParser:

  Verifying word get get:

    No occurrences

Checking class CommandLine:

  Verifying word get get:

    No occurrences

Checking class StressAction:

  Verifying word get get:

    No occurrences

Checking class Session:

  Verifying word get get:

    No occurrences

Checking class Operation:

  Verifying word get get:

    No occurrences

Checking class RangeSlicer:

  Verifying word get get:

    No occurrences

Checking class Stress:

  Verifying word get get:

    No occurrences

Checking class CqlInserter:

  Verifying word get get:

    No occurrences

Checking class CqlReader:

  Verifying word get get:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word get get:

    No occurrences

Checking class Inserter:

  Verifying word get get:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word get get:

    No occurrences

Checking class CounterGetter:

  Verifying word get get:

    No occurrences

Checking class CounterAdder:

  Verifying word get get:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word get get:

    No occurrences

Checking class StressAction$1:

  Verifying word get get:

    No occurrences

Checking class StressAction$Producer:

  Verifying word get get:

    No occurrences

Checking class Reader:

  Verifying word get get:

    No occurrences

Checking class Uninterruptibles:

  Verifying word get get:

    No occurrences

Checking class StressStatistics:

  Verifying word get get:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word get get:

    No occurrences

Checking class RateLimiter:

  Verifying word get get:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word get get:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word get get:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word get get:

    No occurrences

Checking class Stress$Operations:

  Verifying word get get:

    No occurrences

Checking class Timer:

  Verifying word get get:

    No occurrences

Checking class MultiGetter:

  Verifying word get get:

    No occurrences

Checking class Snapshot:

  Verifying word get get:

    No occurrences

Checking class SyntaxException:

  Verifying word get get:

    No occurrences

Checking class IndexType:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word get get:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word get get:

    No occurrences

Checking class EncryptionOptions:

  Verifying word get get:

    No occurrences

Checking class ITransportFactory:

  Verifying word get get:

    No occurrences

Checking class CassandraClient:

  Verifying word get get:

    No occurrences

Checking class SimpleClient:

  Verifying word get get:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word get get:

    No occurrences

Checking class ResultMessage:

  Verifying word get get:

    No occurrences

Checking class ColumnDef:

  Verifying word get get:

    No occurrences

Checking class CFMetaData:

  Verifying word get get:

      Method: CFMetaData.addDefaultIndexNames()
      Calls Location: CFMetaData.java:1307 CFMetaData.java:1307
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1084 CFMetaData.java:1083
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1083 CFMetaData.java:1083
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1083 CFMetaData.java:1084
      Atomic: NO

      Method: CFMetaData.apply()
      Calls Location: CFMetaData.java:1084 CFMetaData.java:1084
      Atomic: NO

      Method: CFMetaData.toSchemaUpdate()
      Calls Location: CFMetaData.java:1233 CFMetaData.java:1233
      Atomic: NO

      Method: CFMetaData.renameColumn()
      Calls Location: CFMetaData.java:1888 CFMetaData.java:1892
      Atomic: NO

Checking class Metrics:

  Verifying word get get:

    No occurrences

Checking class TypeParser:

  Verifying word get get:

    No occurrences

Checking class CfDef:

  Verifying word get get:

    No occurrences

Checking class TTransport:

  Verifying word get get:

    No occurrences

Checking class StringUtils:

  Verifying word get get:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word get get:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word get get:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word get get:

    No occurrences

Checking class AbstractType:

  Verifying word get get:

    No occurrences

Checking class Joiner:

  Verifying word get get:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word get get:

    No occurrences

Checking class ConfigurationException:

  Verifying word get get:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word get get:

    No occurrences

Checking class InvalidRequestException:

  Verifying word get get:

    No occurrences

Checking class KsDef:

  Verifying word get get:

    No occurrences

Checking class UTF8Type:

  Verifying word get get:

    No occurrences

Checking class TimeUUIDType:

  Verifying word get get:

    No occurrences

Checking class AsciiType:

  Verifying word get get:

    No occurrences

Checking class Document:

  Verifying word get get:

    No occurrences

Checking class Element:

  Verifying word get get:

    No occurrences

Checking class Node:

  Verifying word get get:

    No occurrences

Checking class NodeList:

  Verifying word get get:

    No occurrences

Checking class Text:

  Verifying word get get:

    No occurrences

Checking class KeyRange:

  Verifying word get get:

    No occurrences

Checking class SliceRange:

  Verifying word get get:

    No occurrences

Checking class TimerContext:

  Verifying word get get:

    No occurrences

Checking class ColumnParent:

  Verifying word get get:

    No occurrences

Checking class SlicePredicate:

  Verifying word get get:

    No occurrences

Checking class Option:

  Verifying word get get:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word get get:

    No occurrences

Checking class CQLOperation:

  Verifying word get get:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word get get:

    No occurrences

Checking class UUIDGen:

  Verifying word get get:

    No occurrences

Checking class ResultSet:

  Verifying word get get:

    No occurrences

Checking class CqlRow:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word get get:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word get get:

    No occurrences

Checking class Column:

  Verifying word get get:

    No occurrences

Checking class FBUtilities:

  Verifying word get get:

    No occurrences

Checking class Mutation:

  Verifying word get get:

    No occurrences

Checking class SuperColumn:

  Verifying word get get:

    No occurrences

Checking class IndexOperator:

  Verifying word get get:

    No occurrences

Checking class IndexExpression:

  Verifying word get get:

    No occurrences

Checking class IndexClause:

  Verifying word get get:

    No occurrences

Checking class KeySlice:

  Verifying word get get:

    No occurrences

Checking class Cassandra$Client:

  Verifying word get get:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word get get:

    No occurrences

Checking class CounterColumn:

  Verifying word get get:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word get get:

    No occurrences

Checking class Operation$1:

  Verifying word get get:

    No occurrences

Checking class Lists:

  Verifying word get get:

    No occurrences

Checking class MD5Digest:

  Verifying word get get:

    No occurrences

Checking class Hex:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word get get:

    No occurrences

Checking class Message$Response:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word get get:

    No occurrences

Checking class Message$Type:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$1:

  Verifying word get get:

    No occurrences

Checking class Message:

  Verifying word get get:

    No occurrences

Checking class InvalidRequestException:

  Verifying word get get:

    No occurrences

Checking class Logger:

  Verifying word get get:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word get get:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word get get:

    No occurrences

Checking class ColumnDefinition:

  Verifying word get get:

    No occurrences

Checking class CompressionParameters:

  Verifying word get get:

      Method: CompressionParameters.create()
      Calls Location: CompressionParameters.java:61 CompressionParameters.java:88
      Atomic: NO

      Method: CompressionParameters.create()
      Calls Location: CompressionParameters.java:60 CompressionParameters.java:61
      Atomic: NO

      Method: CompressionParameters.create()
      Calls Location: CompressionParameters.java:60 CompressionParameters.java:88
      Atomic: NO

Checking class CFDefinition:

  Verifying word get get:

      Method: CFDefinition.get()
      Calls Location: CFDefinition.java:173 CFDefinition.java:176
      Atomic: NO

Checking class ReadRepairDecision:

  Verifying word get get:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word get get:

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:95 AbstractCompactionStrategy.java:97
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:97 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:95 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:381 AbstractCompactionStrategy.java:97
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:381 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:381 AbstractCompactionStrategy.java:93
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:381 AbstractCompactionStrategy.java:95
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:357 AbstractCompactionStrategy.java:97
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:357 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:357 AbstractCompactionStrategy.java:93
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:357 AbstractCompactionStrategy.java:95
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:97
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:93
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:95
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:374 AbstractCompactionStrategy.java:97
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:374 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:374 AbstractCompactionStrategy.java:93
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:374 AbstractCompactionStrategy.java:95
      Atomic: NO

      Method: AbstractCompactionStrategy.validateOptions()
      Calls Location: AbstractCompactionStrategy.java:374 AbstractCompactionStrategy.java:381
      Atomic: NO

      Method: AbstractCompactionStrategy.validateOptions()
      Calls Location: AbstractCompactionStrategy.java:357 AbstractCompactionStrategy.java:381
      Atomic: NO

      Method: AbstractCompactionStrategy.validateOptions()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:381
      Atomic: NO

      Method: AbstractCompactionStrategy.validateOptions()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:357
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:93 AbstractCompactionStrategy.java:97
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:93 AbstractCompactionStrategy.java:399
      Atomic: NO

      Method: AbstractCompactionStrategy.validateOptions()
      Calls Location: AbstractCompactionStrategy.java:357 AbstractCompactionStrategy.java:374
      Atomic: NO

      Method: AbstractCompactionStrategy.validateOptions()
      Calls Location: AbstractCompactionStrategy.java:340 AbstractCompactionStrategy.java:374
      Atomic: NO

      Method: AbstractCompactionStrategy.<init>()
      Calls Location: AbstractCompactionStrategy.java:93 AbstractCompactionStrategy.java:95
      Atomic: NO

Checking class ColumnFamilyStore:

  Verifying word get get:

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:579 ColumnFamilyStore.java:577
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:577 ColumnFamilyStore.java:577
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:577 ColumnFamilyStore.java:579
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:579 ColumnFamilyStore.java:579
      Atomic: NO

      Method: ColumnFamilyStore.filter()
      Calls Location: ColumnFamilyStore.java:984 ColumnFamilyStore.java:984
      Atomic: NO

      Method: ColumnFamilyStore.removeDroppedColumns()
      Calls Location: ColumnFamilyStore.java:984 ColumnFamilyStore.java:984
      Atomic: NO

      Method: ColumnFamilyStore.removeDeletedColumnsOnly()
      Calls Location: ColumnFamilyStore.java:984 ColumnFamilyStore.java:984
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:556 ColumnFamilyStore.java:577
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:556 ColumnFamilyStore.java:579
      Atomic: NO

      Method: ColumnFamilyStore.removeUnfinishedCompactionLeftovers()
      Calls Location: ColumnFamilyStore.java:556 ColumnFamilyStore.java:556
      Atomic: NO

Checking class Descriptor$Version:

  Verifying word get get:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word get get:

    No occurrences

Checking class RowMutation:

  Verifying word get get:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word get get:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word get get:

    No occurrences

Checking class Row:

  Verifying word get get:

    No occurrences

Checking class TriggerDefinition:

  Verifying word get get:

      Method: TriggerDefinition.fromSchema()
      Calls Location: TriggerDefinition.java:70 TriggerDefinition.java:70
      Atomic: NO

      Method: TriggerDefinition.fromThrift()
      Calls Location: TriggerDefinition.java:113 TriggerDefinition.java:113
      Atomic: NO

Checking class ColumnNameBuilder:

  Verifying word get get:

    No occurrences

Checking class CompositeType:

  Verifying word get get:

    No occurrences

Checking class RangeTombstone:

  Verifying word get get:

    No occurrences

Checking class ColumnSerializer:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndex:

  Verifying word get get:

    No occurrences

Checking class Iterables:

  Verifying word get get:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word get get:

      Method: ColumnToCollectionType.isCompatibleWith()
      Calls Location: ColumnToCollectionType.java:124 ColumnToCollectionType.java:124
      Atomic: NO

Checking class CFMetaData$2:

  Verifying word get get:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word get get:

    No occurrences

Checking class CQLStatement:

  Verifying word get get:

    No occurrences

Checking class SuperColumns:

  Verifying word get get:

    No occurrences

Checking class ArrayUtils:

  Verifying word get get:

    No occurrences

Checking class CFMetaData$1:

  Verifying word get get:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word get get:

    No occurrences

Checking class RequestValidationException:

  Verifying word get get:

    No occurrences

Checking class DeletedColumn:

  Verifying word get get:

    No occurrences

Checking class BytesType:

  Verifying word get get:

    No occurrences

Checking class ColumnFamily:

  Verifying word get get:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word get get:

    No occurrences

Checking class OnDiskAtom:

  Verifying word get get:

    No occurrences

Checking class CreateTableStatement:

  Verifying word get get:

    No occurrences

Checking class QueryProcessor:

  Verifying word get get:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word get get:

    No occurrences

Checking class CounterColumnType:

  Verifying word get get:

    No occurrences

Checking class Descriptor:

  Verifying word get get:

    No occurrences

Checking class Schema:

  Verifying word get get:

      Method: Schema.clear()
      Calls Location: Schema.java:247 Schema.java:247
      Atomic: YES

      Method: Schema.getCFMetaData()
      Calls Location: Schema.java:308 Schema.java:183
      Atomic: NO

      Method: Schema.getCFMetaData()
      Calls Location: Schema.java:183 Schema.java:184
      Atomic: NO

Checking class ICompressor:

  Verifying word get get:

    No occurrences

Checking class MapDifference:

  Verifying word get get:

    No occurrences

Checking class UntypedResultSet:

  Verifying word get get:

    No occurrences

Checking class SystemKeyspace:

  Verifying word get get:

      Method: SystemKeyspace.serializeSchema()
      Calls Location: SystemKeyspace.java:815 SystemKeyspace.java:815
      Atomic: NO

      Method: SystemKeyspace.serializeSchema()
      Calls Location: SystemKeyspace.java:815 SystemKeyspace.java:815
      Atomic: NO

Checking class ParsedStatement:

  Verifying word get get:

    No occurrences

Checking class ToStringBuilder:

  Verifying word get get:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word get get:

    No occurrences

Checking class Maps:

  Verifying word get get:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word get get:

    No occurrences

Checking class LoggerFactory:

  Verifying word get get:

    No occurrences

Checking class MarshalException:

  Verifying word get get:

    No occurrences

Checking class EqualsBuilder:

  Verifying word get get:

    No occurrences

Checking class LongType:

  Verifying word get get:

    No occurrences

Checking class LZ4Compressor:

  Verifying word get get:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word get get:

    No occurrences

Checking class Column:

  Verifying word get get:

    No occurrences

Checking class CollectionType:

  Verifying word get get:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word get get:

    No occurrences

Checking class FileUtils:

  Verifying word get get:

    No occurrences

Checking class FileDataInput:

  Verifying word get get:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word get get:

    No occurrences

Checking class TFramedTransport:

  Verifying word get get:

    No occurrences

Checking class TSocket:

  Verifying word get get:

    No occurrences

Checking class CQL3Type:

  Verifying word get get:

    No occurrences

Checking class TypeSerializer:

  Verifying word get get:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word get get:

    No occurrences

Checking class IndexHelper:

  Verifying word get get:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word get get:

    No occurrences

Checking class ColumnSlice:

  Verifying word get get:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word get get:

    No occurrences

Checking class AbstractType$6:

  Verifying word get get:

    No occurrences

Checking class AbstractType$4:

  Verifying word get get:

    No occurrences

Checking class AbstractType$5:

  Verifying word get get:

    No occurrences

Checking class AbstractType$3:

  Verifying word get get:

    No occurrences

Checking class ReversedType:

  Verifying word get get:

    No occurrences

Checking class AbstractType$2:

  Verifying word get get:

    No occurrences

Checking class AbstractType$1:

  Verifying word get get:

    No occurrences

Checking class UnavailableException:

  Verifying word get get:

    No occurrences

Checking class Keyspace:

  Verifying word get get:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word get get:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word get get:

    No occurrences

Checking class ProtocolException:

  Verifying word get get:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word get get:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word get get:

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:138 NetworkTopologyStrategy.java:157
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:119 NetworkTopologyStrategy.java:157
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:138 NetworkTopologyStrategy.java:119
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:119 NetworkTopologyStrategy.java:119
      Atomic: NO

      Method: NetworkTopologyStrategy.hasSufficientReplicas()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:138 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:119 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:119 NetworkTopologyStrategy.java:138
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:138 NetworkTopologyStrategy.java:138
      Atomic: NO

      Method: NetworkTopologyStrategy.hasSufficientReplicas()
      Calls Location: NetworkTopologyStrategy.java:178 NetworkTopologyStrategy.java:157
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:178 NetworkTopologyStrategy.java:157
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:178 NetworkTopologyStrategy.java:119
      Atomic: NO

      Method: NetworkTopologyStrategy.hasSufficientReplicas()
      Calls Location: NetworkTopologyStrategy.java:178 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:178 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:178 NetworkTopologyStrategy.java:138
      Atomic: NO

      Method: NetworkTopologyStrategy.hasSufficientReplicas()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:157
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:157
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:119
      Atomic: NO

      Method: NetworkTopologyStrategy.hasSufficientReplicas()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:178
      Atomic: NO

      Method: NetworkTopologyStrategy.calculateNaturalEndpoints()
      Calls Location: NetworkTopologyStrategy.java:157 NetworkTopologyStrategy.java:138
      Atomic: NO

Checking class SimpleClient$ResponseHandler:

  Verifying word get get:

    No occurrences

Checking class Connection$Tracker:

  Verifying word get get:

    No occurrences

Checking class Connection:

  Verifying word get get:

    No occurrences

Checking class ClientBootstrap:

  Verifying word get get:

    No occurrences

Checking class Channel:

  Verifying word get get:

    No occurrences

Checking class ChannelFuture:

  Verifying word get get:

    No occurrences

Checking class Connection$Factory:

  Verifying word get get:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word get get:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word get get:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word get get:

    No occurrences

Checking class Frame$Compressor:

  Verifying word get get:

    No occurrences

Checking class Frame$Encoder:

  Verifying word get get:

    No occurrences

Checking class Message$Request:

  Verifying word get get:

    No occurrences

Checking class SimpleClient$1:

  Verifying word get get:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word get get:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word get get:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word get get:

    No occurrences

Checking class FrameCompressor:

  Verifying word get get:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word get get:

    No occurrences

Checking class ErrorMessage:

  Verifying word get get:

    No occurrences

Checking class CredentialsMessage:

  Verifying word get get:

    No occurrences

Checking class StartupMessage:

  Verifying word get get:

      Method: StartupMessage.execute()
      Calls Location: StartupMessage.java:71 StartupMessage.java:89
      Atomic: NO

Checking class PrepareMessage:

  Verifying word get get:

    No occurrences

Checking class QueryMessage:

  Verifying word get get:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word get get:

    No occurrences

Checking class Frame:

  Verifying word get get:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word get get:

    No occurrences

Checking class TransportException:

  Verifying word get get:

    No occurrences

Checking class QueryOptions:

  Verifying word get get:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word get get:

    No occurrences

Checking class ExecuteMessage:

  Verifying word get get:

    No occurrences

Checking class ExceptionCode:

  Verifying word get get:

    No occurrences

Checking class UTF8Serializer:

  Verifying word get get:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word get get:

    No occurrences

Checking class TimestampSerializer:

  Verifying word get get:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word get get:

    No occurrences

Checking class AsciiSerializer:

  Verifying word get get:

    No occurrences

Checking class DOMException:

  Verifying word get get:

    No occurrences

Checking class Attr:

  Verifying word get get:

    No occurrences

Checking class TypeInfo:

  Verifying word get get:

    No occurrences

Checking class DocumentType:

  Verifying word get get:

    No occurrences

Checking class DOMImplementation:

  Verifying word get get:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word get get:

    No occurrences

Checking class DOMConfiguration:

  Verifying word get get:

    No occurrences

Checking class NamedNodeMap:

  Verifying word get get:

    No occurrences

Checking class UserDataHandler:

  Verifying word get get:

    No occurrences

Checking class CharacterData:

  Verifying word get get:

    No occurrences

Checking class CQLOperation$1:

  Verifying word get get:

    No occurrences

Checking class CQLOperation$2:

  Verifying word get get:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word get get:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word get get:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word get get:

    No occurrences

Checking class ColumnSpecification:

  Verifying word get get:

    No occurrences

Checking class CqlMetadata:

  Verifying word get get:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word get get:

    No occurrences

Checking class ObjectMapper:

  Verifying word get get:

    No occurrences

Checking class Pair:

  Verifying word get get:

    No occurrences

Checking class TSerializer:

  Verifying word get get:

    No occurrences

Checking class TDeserializer:

  Verifying word get get:

    No occurrences

Checking class Range:

  Verifying word get get:

    No occurrences

Checking class IPartitioner:

  Verifying word get get:

    No occurrences

Checking class IAllocator:

  Verifying word get get:

    No occurrences

Checking class IAuthorizer:

  Verifying word get get:

    No occurrences

Checking class IAuthenticator:

  Verifying word get get:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word get get:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word get get:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word get get:

    No occurrences

Checking class JsonFactory:

  Verifying word get get:

    No occurrences

Checking class RingPosition:

  Verifying word get get:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word get get:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word get get:

    No occurrences

Checking class FBUtilities$2:

  Verifying word get get:

    No occurrences

Checking class FBUtilities$1:

  Verifying word get get:

    No occurrences

Checking class FBUtilities$3:

  Verifying word get get:

    No occurrences

Checking class Token:

  Verifying word get get:

    No occurrences

Checking class FastByteComparisons:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word get get:

    No occurrences

Checking class SelectStatement:

  Verifying word get get:

      Method: SelectStatement.orderResults()
      Calls Location: SelectStatement.java:1257 SelectStatement.java:1257
      Atomic: NO

      Method: SelectStatement.pageCountQuery()
      Calls Location: SelectStatement.java:1257 SelectStatement.java:1242
      Atomic: NO

      Method: SelectStatement.pageCountQuery()
      Calls Location: SelectStatement.java:1257 SelectStatement.java:1257
      Atomic: NO

      Method: SelectStatement.getIndexExpressions()
      Calls Location: SelectStatement.java:998 SelectStatement.java:998
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:998 SelectStatement.java:1242
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:998 SelectStatement.java:1242
      Atomic: NO

      Method: SelectStatement.execute()
      Calls Location: SelectStatement.java:998 SelectStatement.java:1257
      Atomic: NO

      Method: SelectStatement.executeInternal()
      Calls Location: SelectStatement.java:998 SelectStatement.java:1257
      Atomic: NO

      Method: SelectStatement.pageCountQuery()
      Calls Location: SelectStatement.java:1242 SelectStatement.java:1242
      Atomic: NO

      Method: SelectStatement.pageCountQuery()
      Calls Location: SelectStatement.java:1242 SelectStatement.java:1257
      Atomic: NO

Checking class Message$Direction:

  Verifying word get get:

    No occurrences

Checking class CBCodec:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word get get:

    No occurrences

Checking class ReadyMessage:

  Verifying word get get:

    No occurrences

Checking class SupportedMessage:

  Verifying word get get:

    No occurrences

Checking class AuthResponse:

  Verifying word get get:

    No occurrences

Checking class BatchMessage:

  Verifying word get get:

    No occurrences

Checking class AuthChallenge:

  Verifying word get get:

    No occurrences

Checking class RegisterMessage:

  Verifying word get get:

    No occurrences

Checking class EventMessage:

  Verifying word get get:

    No occurrences

Checking class AuthSuccess:

  Verifying word get get:

    No occurrences

Checking class OptionsMessage:

  Verifying word get get:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word get get:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word get get:

    No occurrences

Checking class ChannelBuffer:

  Verifying word get get:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word get get:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word get get:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word get get:

    No occurrences

Checking class ImmutableList:

  Verifying word get get:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word get get:

    No occurrences

Checking class CompositeType$1:

  Verifying word get get:

    No occurrences

Checking class Interval:

  Verifying word get get:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word get get:

    No occurrences

Checking class DeletionTime:

  Verifying word get get:

    No occurrences

Checking class TypeSizes:

  Verifying word get get:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word get get:

    No occurrences

Checking class ISerializer:

  Verifying word get get:

    No occurrences

Checking class Relation$Type:

  Verifying word get get:

    No occurrences

Checking class Relation:

  Verifying word get get:

    No occurrences

Checking class ExpiringColumn:

  Verifying word get get:

    No occurrences

Checking class CounterColumn:

  Verifying word get get:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word get get:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word get get:

    No occurrences

Checking class DecoratedKey:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word get get:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word get get:

    No occurrences

Checking class CompositesIndex:

  Verifying word get get:

    No occurrences

Checking class LocalToken:

  Verifying word get get:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word get get:

    No occurrences

Checking class StorageService:

  Verifying word get get:

      Method: StorageService.initServer()
      Calls Location: StorageService.java:548 StorageService.java:548
      Atomic: YES

      Method: StorageService.getTokenToEndpointMap()
      Calls Location: StorageService.java:1298 StorageService.java:1298
      Atomic: NO

      Method: StorageService.effectiveOwnership()
      Calls Location: StorageService.java:3677 StorageService.java:3677
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1615 StorageService.java:1639
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1615 StorageService.java:1615
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1639 StorageService.java:1639
      Atomic: NO

      Method: StorageService.onJoin()
      Calls Location: StorageService.java:1639 StorageService.java:1615
      Atomic: NO

      Method: StorageService.handleStateNormal()
      Calls Location: StorageService.java:1615 StorageService.java:1639
      Atomic: NO

      Method: StorageService.handleStateNormal()
      Calls Location: StorageService.java:1639 StorageService.java:1639
      Atomic: NO

      Method: StorageService.handleStateNormal()
      Calls Location: StorageService.java:1639 StorageService.java:1615
      Atomic: NO

      Method: StorageService.handleStateNormal()
      Calls Location: StorageService.java:1615 StorageService.java:1615
      Atomic: NO

Checking class SSTableReader:

  Verifying word get get:

    No occurrences

Checking class CompactionManager:

  Verifying word get get:

    No occurrences

Checking class KeysIndex:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word get get:

    No occurrences

Checking class BytesSerializer:

  Verifying word get get:

    No occurrences

Checking class ImmutableMap:

  Verifying word get get:

    No occurrences

Checking class UnauthorizedException:

  Verifying word get get:

    No occurrences

Checking class RequestExecutionException:

  Verifying word get get:

    No occurrences

Checking class ClientState:

  Verifying word get get:

    No occurrences

Checking class QueryState:

  Verifying word get get:

    No occurrences

Checking class ImmutableSet:

  Verifying word get get:

    No occurrences

Checking class Sets$SetView:

  Verifying word get get:

    No occurrences

Checking class Sets:

  Verifying word get get:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word get get:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word get get:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word get get:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word get get:

    No occurrences

Checking class DeletionInfo:

  Verifying word get get:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word get get:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word get get:

    No occurrences

Checking class TriggerDef:

  Verifying word get get:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word get get:

    No occurrences

Checking class Objects:

  Verifying word get get:

    No occurrences

Checking class CassandraException:

  Verifying word get get:

    No occurrences

Checking class Allocator:

  Verifying word get get:

    No occurrences

Checking class HeapAllocator:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word get get:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word get get:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word get get:

    No occurrences

Checking class ColumnStats:

  Verifying word get get:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word get get:

    No occurrences

Checking class StreamingHistogram:

  Verifying word get get:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word get get:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word get get:

    No occurrences

Checking class Functions:

  Verifying word get get:

    No occurrences

Checking class UnsortedColumns:

  Verifying word get get:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word get get:

    No occurrences

Checking class Memtable:

  Verifying word get get:

    No occurrences

Checking class CompactionController:

  Verifying word get get:

    No occurrences

Checking class DataTracker:

  Verifying word get get:

    No occurrences

Checking class ICompactionScanner:

  Verifying word get get:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word get get:

    No occurrences

Checking class Component:

  Verifying word get get:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word get get:

    No occurrences

Checking class CompactionTask:

  Verifying word get get:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word get get:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word get get:

    No occurrences

Checking class CFPropDefs:

  Verifying word get get:

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:99 CFPropDefs.java:105
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:86 CFPropDefs.java:105
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:86 CFPropDefs.java:99
      Atomic: NO

      Method: CFPropDefs.applyToCFMetadata()
      Calls Location: CFPropDefs.java:150 CFPropDefs.java:151
      Atomic: NO

Checking class CFName:

  Verifying word get get:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word get get:

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:395 CreateTableStatement.java:388
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:395 CreateTableStatement.java:395
      Atomic: NO

      Method: CreateTableStatement$RawStatement.getTypeAndRemove()
      Calls Location: CreateTableStatement.java:388 CreateTableStatement.java:395
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:388 CreateTableStatement.java:388
      Atomic: NO

      Method: CreateTableStatement$RawStatement.prepare()
      Calls Location: CreateTableStatement.java:388 CreateTableStatement.java:395
      Atomic: NO

Checking class CreateTableStatement$1:

  Verifying word get get:

    No occurrences

Checking class Permission:

  Verifying word get get:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word get get:

    No occurrences

Checking class MigrationManager:

  Verifying word get get:

    No occurrences

Checking class QueryHandler:

  Verifying word get get:

    No occurrences

Checking class SemanticVersion:

  Verifying word get get:

    No occurrences

Checking class MemoryMeter:

  Verifying word get get:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word get get:

    No occurrences

Checking class BatchStatement:

  Verifying word get get:

      Method: BatchStatement.addStatementMutations()
      Calls Location: BatchStatement.java:187 BatchStatement.java:187
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:187 BatchStatement.java:187
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:187 BatchStatement.java:171
      Atomic: NO

      Method: BatchStatement.addStatementMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:187
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:187
      Atomic: NO

      Method: BatchStatement.getMutations()
      Calls Location: BatchStatement.java:171 BatchStatement.java:171
      Atomic: NO

Checking class BatchQueryOptions:

  Verifying word get get:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word get get:

    No occurrences

Checking class Tracing:

  Verifying word get get:

    No occurrences

Checking class CFStatement:

  Verifying word get get:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word get get:

    No occurrences

Checking class CqlParser:

  Verifying word get get:

    No occurrences

Checking class TokenStream:

  Verifying word get get:

    No occurrences

Checking class CqlLexer:

  Verifying word get get:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word get get:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word get get:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word get get:

    No occurrences

Checking class CharStream:

  Verifying word get get:

    No occurrences

Checking class ThriftClientState:

  Verifying word get get:

    No occurrences

Checking class CommonTokenStream:

  Verifying word get get:

    No occurrences

Checking class INotificationConsumer:

  Verifying word get get:

    No occurrences

Checking class LeveledManifest:

  Verifying word get get:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word get get:

    No occurrences

Checking class Multimap:

  Verifying word get get:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word get get:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word get get:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word get get:

      Method: SizeTieredCompactionStrategyOptions.validateOptions()
      Calls Location: SizeTieredCompactionStrategyOptions.java:62 SizeTieredCompactionStrategyOptions.java:62
      Atomic: NO

      Method: SizeTieredCompactionStrategyOptions.<init>()
      Calls Location: SizeTieredCompactionStrategyOptions.java:46 SizeTieredCompactionStrategyOptions.java:48
      Atomic: NO

      Method: SizeTieredCompactionStrategyOptions.<init>()
      Calls Location: SizeTieredCompactionStrategyOptions.java:42 SizeTieredCompactionStrategyOptions.java:44
      Atomic: NO

      Method: SizeTieredCompactionStrategyOptions.validateOptions()
      Calls Location: SizeTieredCompactionStrategyOptions.java:75 SizeTieredCompactionStrategyOptions.java:62
      Atomic: NO

      Method: SizeTieredCompactionStrategyOptions.<init>()
      Calls Location: SizeTieredCompactionStrategyOptions.java:44 SizeTieredCompactionStrategyOptions.java:46
      Atomic: NO

      Method: SizeTieredCompactionStrategyOptions.<init>()
      Calls Location: SizeTieredCompactionStrategyOptions.java:42 SizeTieredCompactionStrategyOptions.java:46
      Atomic: NO

Checking class SSTableListChangedNotification:

  Verifying word get get:

    No occurrences

Checking class OperationType:

  Verifying word get get:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word get get:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word get get:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word get get:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word get get:

    No occurrences

Checking class LongSerializer:

  Verifying word get get:

    No occurrences

Checking class CounterSerializer:

  Verifying word get get:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word get get:

      Method: ConcurrentBiMap.putAll()
      Calls Location: ConcurrentBiMap.java:95 ConcurrentBiMap.java:95
      Atomic: YES

Checking class KSMetaData:

  Verifying word get get:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word get get:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word get get:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word get get:

    No occurrences

Checking class InetAddressType:

  Verifying word get get:

    No occurrences

Checking class Int32Type:

  Verifying word get get:

    No occurrences

Checking class TimestampType:

  Verifying word get get:

    No occurrences

Checking class UUIDType:

  Verifying word get get:

    No occurrences

Checking class ListType:

  Verifying word get get:

    No occurrences

Checking class DoubleType:

  Verifying word get get:

    No occurrences

Checking class MapType:

  Verifying word get get:

    No occurrences

Checking class BooleanType:

  Verifying word get get:

    No occurrences

Checking class SetType:

  Verifying word get get:

    No occurrences

Checking class Row$RowSerializer:

  Verifying word get get:

    No occurrences

Checking class ReplayPosition:

  Verifying word get get:

    No occurrences

Checking class SetMultimap:

  Verifying word get get:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word get get:

    No occurrences

Checking class CounterId:

  Verifying word get get:

    No occurrences

Checking class PaxosState:

  Verifying word get get:

    No occurrences

Checking class Commit:

  Verifying word get get:

    No occurrences

Checking class RestorableMeter:

  Verifying word get get:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word get get:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word get get:

    No occurrences

Checking class AbstractBounds:

  Verifying word get get:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word get get:

    No occurrences

Checking class QueryFilter:

  Verifying word get get:

    No occurrences

Checking class Token$KeyBound:

  Verifying word get get:

    No occurrences

Checking class HashMultimap:

  Verifying word get get:

    No occurrences

Checking class EmptyColumns:

  Verifying word get get:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word get get:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word get get:

    No occurrences

Checking class DefsTables:

  Verifying word get get:

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:282 DefsTables.java:426
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:282 DefsTables.java:282
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:426 DefsTables.java:426
      Atomic: NO

      Method: DefsTables.mergeColumnFamilies()
      Calls Location: DefsTables.java:426 DefsTables.java:282
      Atomic: NO

      Method: DefsTables.mergeKeyspaces()
      Calls Location: DefsTables.java:245 DefsTables.java:245
      Atomic: NO

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:245 DefsTables.java:426
      Atomic: YES

      Method: DefsTables.mergeSchema()
      Calls Location: DefsTables.java:245 DefsTables.java:282
      Atomic: YES

Checking class SystemKeyspace$1:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word get get:

    No occurrences

Checking class VariableSpecifications:

  Verifying word get get:

    No occurrences

Checking class IMutation:

  Verifying word get get:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word get get:

    No occurrences

Checking class MessageOut:

  Verifying word get get:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word get get:

    No occurrences

Checking class MessagingService:

  Verifying word get get:

      Method: MessagingService.logDroppedMessages()
      Calls Location: MessagingService.java:853 MessagingService.java:853
      Atomic: NO

Checking class ColumnFamilyStoreMBean:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word get get:

    No occurrences

Checking class DefaultInteger:

  Verifying word get get:

    No occurrences

Checking class Directories:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word get get:

      Method: ColumnFamilyMetrics.release()
      Calls Location: ColumnFamilyMetrics.java:463 ColumnFamilyMetrics.java:463
      Atomic: NO

Checking class SecondaryIndexManager$Updater:

  Verifying word get get:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word get get:

    No occurrences

Checking class DataTracker$View:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word get get:

    No occurrences

Checking class DataRange:

  Verifying word get get:

    No occurrences

Checking class ExtendedFilter:

  Verifying word get get:

    No occurrences

Checking class RowCacheKey:

  Verifying word get get:

    No occurrences

Checking class CacheService:

  Verifying word get get:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word get get:

    No occurrences

Checking class StreamLockfile:

  Verifying word get get:

    No occurrences

Checking class CollationController:

  Verifying word get get:

    No occurrences

Checking class SSTable:

  Verifying word get get:

    No occurrences

Checking class KeyCacheKey:

  Verifying word get get:

    No occurrences

Checking class SSTableMetadata:

  Verifying word get get:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word get get:

    No occurrences

Checking class Histogram:

  Verifying word get get:

    No occurrences

Checking class Counter:

  Verifying word get get:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word get get:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word get get:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word get get:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word get get:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word get get:

    No occurrences

Checking class Futures:

  Verifying word get get:

    No occurrences

Checking class FSReadError:

  Verifying word get get:

    No occurrences

Checking class CompressionMetadata:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word get get:

    No occurrences

Checking class DataRange$Paging:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word get get:

    No occurrences

Checking class LocalPartitioner:

  Verifying word get get:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word get get:

    No occurrences

Checking class RowIndexEntry:

  Verifying word get get:

    No occurrences

Checking class LatencyMetrics:

  Verifying word get get:

    No occurrences

Checking class RowPosition:

  Verifying word get get:

    No occurrences

Checking class AutoSavingCache:

  Verifying word get get:

    No occurrences

Checking class SSTableWriter:

  Verifying word get get:

    No occurrences

Checking class CommitLog:

  Verifying word get get:

    No occurrences

Checking class Gauge:

  Verifying word get get:

    No occurrences

Checking class SeedProvider:

  Verifying word get get:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word get get:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word get get:

    No occurrences

Checking class Config:

  Verifying word get get:

    No occurrences

Checking class IRequestScheduler:

  Verifying word get get:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word get get:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word get get:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word get get:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word get get:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word get get:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word get get:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word get get:

    No occurrences

Checking class FSWriteError:

  Verifying word get get:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word get get:

    No occurrences

Checking class NoScheduler:

  Verifying word get get:

    No occurrences

Checking class Longs:

  Verifying word get get:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word get get:

    No occurrences

Checking class SeedProviderDef:

  Verifying word get get:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word get get:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word get get:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word get get:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word get get:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word get get:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word get get:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word get get:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word get get:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word get get:

    No occurrences

Checking class DateType:

  Verifying word get get:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word get get:

    No occurrences

Checking class CFDefinition$2:

  Verifying word get get:

    No occurrences

Checking class CFDefinition$1:

  Verifying word get get:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word get get:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word get get:

    No occurrences

Checking class LZ4Compressor:

  Verifying word get get:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word get get:

    No occurrences

Checking class LZ4Factory:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word get get:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word get get:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word get get:

      Method: SizeTieredCompactionStrategy$1.compare()
      Calls Location: SizeTieredCompactionStrategy.java:102 SizeTieredCompactionStrategy.java:102
      Atomic: NO

Checking class SizeTieredCompactionStrategy$4:

  Verifying word get get:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word get get:

      Method: SizeTieredCompactionStrategy$3.compare()
      Calls Location: SizeTieredCompactionStrategy.java:203 SizeTieredCompactionStrategy.java:203
      Atomic: NO

Checking class Column$1:

  Verifying word get get:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word get get:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word get get:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word get get:

    No occurrences

Checking class FSError:

  Verifying word get get:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word get get:

    No occurrences

Checking class FileUtils$2:

  Verifying word get get:

    No occurrences

Checking class FileUtils$1:

  Verifying word get get:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word get get:

    No occurrences

Checking class CQL3Type$1:

  Verifying word get get:

    No occurrences

Checking class ObjectSizes:

  Verifying word get get:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word get get:

    No occurrences

Checking class ColumnCounter:

  Verifying word get get:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word get get:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word get get:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word get get:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word get get:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word get get:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word get get:

    No occurrences

Checking class TokenMetadata:

  Verifying word get get:

    No occurrences

Checking class Keyspace$1:

  Verifying word get get:

    No occurrences

Checking class QueryPagers:

  Verifying word get get:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word get get:

    No occurrences

Checking class WriteType:

  Verifying word get get:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word get get:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word get get:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word get get:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word get get:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word get get:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word get get:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word get get:

      Method: TokenMetadata$Topology.<init>()
      Calls Location: TokenMetadata.java:1126 TokenMetadata.java:1126
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1143 TokenMetadata.java:1151
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1138 TokenMetadata.java:1151
      Atomic: NO

      Method: TokenMetadata$Topology.addEndpoint()
      Calls Location: TokenMetadata.java:1138 TokenMetadata.java:1143
      Atomic: NO

Checking class FrameCompressor$LZ4Compressor:

  Verifying word get get:

    No occurrences

Checking class ChannelPipeline:

  Verifying word get get:

    No occurrences

Checking class Frame$Decoder:

  Verifying word get get:

    No occurrences

Checking class Channels:

  Verifying word get get:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word get get:

    No occurrences

Checking class ServerError:

  Verifying word get get:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word get get:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word get get:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word get get:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word get get:

    No occurrences

Checking class Frame$Header:

  Verifying word get get:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word get get:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word get get:

    No occurrences

Checking class CBUtil:

  Verifying word get get:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word get get:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word get get:

    No occurrences

Checking class AuthenticationException:

  Verifying word get get:

    No occurrences

Checking class ChannelBuffers:

  Verifying word get get:

    No occurrences

Checking class StartupMessage$1:

  Verifying word get get:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word get get:

    No occurrences

Checking class QueryMessage$1:

  Verifying word get get:

    No occurrences

Checking class Snappy:

  Verifying word get get:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word get get:

    No occurrences

Checking class PagingState:

  Verifying word get get:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word get get:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word get get:

    No occurrences

Checking class MessageEvent:

  Verifying word get get:

    No occurrences

Checking class ExceptionEvent:

  Verifying word get get:

    No occurrences

Checking class SslHandler:

  Verifying word get get:

    No occurrences

Checking class SSLFactory:

  Verifying word get get:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word get get:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word get get:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word get get:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word get get:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word get get:

    No occurrences

Checking class FloatType:

  Verifying word get get:

    No occurrences

Checking class DecimalType:

  Verifying word get get:

    No occurrences

Checking class IntegerType:

  Verifying word get get:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word get get:

    No occurrences

Checking class DateUtils:

  Verifying word get get:

    No occurrences

Checking class UUIDSerializer:

  Verifying word get get:

    No occurrences

Checking class DOMStringList:

  Verifying word get get:

    No occurrences

Checking class ThriftConversion:

  Verifying word get get:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word get get:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word get get:

    No occurrences

Checking class IResource:

  Verifying word get get:

    No occurrences

Checking class IAsyncCallback:

  Verifying word get get:

    No occurrences

Checking class MessageIn:

  Verifying word get get:

    No occurrences

Checking class AbstractIterator:

  Verifying word get get:

    No occurrences

Checking class Bounds:

  Verifying word get get:

    No occurrences

Checking class Range$1:

  Verifying word get get:

    No occurrences

Checking class ObjectUtils:

  Verifying word get get:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word get get:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word get get:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word get get:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word get get:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word get get:

    No occurrences

Checking class Selection:

  Verifying word get get:

    No occurrences

Checking class Term:

  Verifying word get get:

    No occurrences

Checking class Restriction:

  Verifying word get get:

    No occurrences

Checking class Restriction$Slice:

  Verifying word get get:

    No occurrences

Checking class QueryPager:

  Verifying word get get:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word get get:

    No occurrences

Checking class Bound:

  Verifying word get get:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word get get:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word get get:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word get get:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word get get:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word get get:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word get get:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word get get:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word get get:

    No occurrences

Checking class ReadCommand:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word get get:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word get get:

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1612 SelectStatement.java:1631
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1612 SelectStatement.java:1612
      Atomic: NO

      Method: SelectStatement$RawStatement.updateRestrictionsForRelation()
      Calls Location: SelectStatement.java:1612 SelectStatement.java:1612
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1631 SelectStatement.java:1631
      Atomic: NO

      Method: SelectStatement$RawStatement.prepare()
      Calls Location: SelectStatement.java:1631 SelectStatement.java:1612
      Atomic: NO

Checking class ExcludingBounds:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$1:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$2:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word get get:

    No occurrences

Checking class StorageProxy:

  Verifying word get get:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word get get:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word get get:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word get get:

    No occurrences

Checking class ServerConnection:

  Verifying word get get:

    No occurrences

Checking class AuthResponse$1:

  Verifying word get get:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word get get:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word get get:

    No occurrences

Checking class Attributes:

  Verifying word get get:

    No occurrences

Checking class ModificationStatement:

  Verifying word get get:

      Method: ModificationStatement.createClusteringPrefixBuilderInternal()
      Calls Location: ModificationStatement.java:408 ModificationStatement.java:408
      Atomic: NO

      Method: ModificationStatement.createClusteringPrefixBuilder()
      Calls Location: ModificationStatement.java:379 ModificationStatement.java:379
      Atomic: NO

      Method: ModificationStatement.getFirstEmptyKey()
      Calls Location: ModificationStatement.java:436 ModificationStatement.java:436
      Atomic: NO

      Method: ModificationStatement.buildPartitionKeyNames()
      Calls Location: ModificationStatement.java:324 ModificationStatement.java:324
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:324 ModificationStatement.java:408
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:324 ModificationStatement.java:408
      Atomic: NO

      Method: ModificationStatement.getMutations()
      Calls Location: ModificationStatement.java:324 ModificationStatement.java:379
      Atomic: NO

      Method: ModificationStatement.executeWithCondition()
      Calls Location: ModificationStatement.java:324 ModificationStatement.java:379
      Atomic: NO

Checking class BatchMessage$1:

  Verifying word get get:

    No occurrences

Checking class BatchMessage$2:

  Verifying word get get:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word get get:

    No occurrences

Checking class Event$Type:

  Verifying word get get:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word get get:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word get get:

    No occurrences

Checking class Server:

  Verifying word get get:

    No occurrences

Checking class Event:

  Verifying word get get:

    No occurrences

Checking class EventMessage$1:

  Verifying word get get:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word get get:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word get get:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word get get:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word get get:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word get get:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word get get:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word get get:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word get get:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word get get:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word get get:

    No occurrences

Checking class Relation$1:

  Verifying word get get:

    No occurrences

Checking class CounterContext:

  Verifying word get get:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word get get:

    No occurrences

Checking class IContext:

  Verifying word get get:

    No occurrences

Checking class IMergeIterator:

  Verifying word get get:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word get get:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word get get:

    No occurrences

Checking class KeyIterator:

  Verifying word get get:

    No occurrences

Checking class MergeIterator:

  Verifying word get get:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word get get:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word get get:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word get get:

    No occurrences

Checking class CompositesSearcher:

  Verifying word get get:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word get get:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word get get:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word get get:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word get get:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word get get:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word get get:

    No occurrences

Checking class CassandraDaemon:

  Verifying word get get:

      Method: CassandraDaemon.setup()
      Calls Location: CassandraDaemon.java:285 CassandraDaemon.java:285
      Atomic: NO

Checking class StorageService$Mode:

  Verifying word get get:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word get get:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word get get:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word get get:

    No occurrences

Checking class EndpointState:

  Verifying word get get:

    No occurrences

Checking class ApplicationState:

  Verifying word get get:

    No occurrences

Checking class VersionedValue:

  Verifying word get get:

    No occurrences

Checking class RepairFuture:

  Verifying word get get:

    No occurrences

Checking class StreamResultFuture:

  Verifying word get get:

    No occurrences

Checking class SSTableLoader:

  Verifying word get get:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word get get:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word get get:

    No occurrences

Checking class StreamManager:

  Verifying word get get:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word get get:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word get get:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word get get:

    No occurrences

Checking class TokenSerializer:

  Verifying word get get:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word get get:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word get get:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word get get:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word get get:

    No occurrences

Checking class Iterators:

  Verifying word get get:

    No occurrences

Checking class FailureDetector:

  Verifying word get get:

      Method: FailureDetector.toString()
      Calls Location: FailureDetector.java:278 FailureDetector.java:278
      Atomic: NO

Checking class StorageService$2:

  Verifying word get get:

    No occurrences

Checking class StorageService$1:

  Verifying word get get:

    No occurrences

Checking class StorageService$4:

  Verifying word get get:

    No occurrences

Checking class StorageService$3:

  Verifying word get get:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word get get:

    No occurrences

Checking class StorageService$8:

  Verifying word get get:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word get get:

    No occurrences

Checking class StorageService$7:

  Verifying word get get:

    No occurrences

Checking class StorageService$6:

  Verifying word get get:

    No occurrences

Checking class StorageService$5:

  Verifying word get get:

    No occurrences

Checking class StreamPlan:

  Verifying word get get:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word get get:

    No occurrences

Checking class ActiveRepairService:

  Verifying word get get:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word get get:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word get get:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word get get:

    No occurrences

Checking class TokenRange:

  Verifying word get get:

    No occurrences

Checking class StorageMetrics:

  Verifying word get get:

    No occurrences

Checking class RangeStreamer:

  Verifying word get get:

    No occurrences

Checking class Gossiper:

  Verifying word get get:

      Method: Gossiper.doStatusCheck()
      Calls Location: Gossiper.java:694 Gossiper.java:694
      Atomic: NO

Checking class LoadBroadcaster:

  Verifying word get get:

    No occurrences

Checking class Auth:

  Verifying word get get:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word get get:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word get get:

    No occurrences

Checking class OutputHandler:

  Verifying word get get:

    No occurrences

Checking class BiMultiValMap:

  Verifying word get get:

    No occurrences

Checking class StageManager:

  Verifying word get get:

    No occurrences

Checking class IVerbHandler:

  Verifying word get get:

    No occurrences

Checking class BootStrapper:

  Verifying word get get:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word get get:

    No occurrences

Checking class Level:

  Verifying word get get:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word get get:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word get get:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word get get:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word get get:

      Method: RowMutationVerbHandler.doVerb()
      Calls Location: RowMutationVerbHandler.java:42 RowMutationVerbHandler.java:47
      Atomic: NO

Checking class IFailureDetector:

  Verifying word get get:

    No occurrences

Checking class Logger:

  Verifying word get get:

    No occurrences

Checking class Collections2:

  Verifying word get get:

    No occurrences

Checking class LocalStrategy:

  Verifying word get get:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word get get:

    No occurrences

Checking class EndpointDetails:

  Verifying word get get:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word get get:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word get get:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word get get:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word get get:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word get get:

    No occurrences

Checking class Stage:

  Verifying word get get:

    No occurrences

Checking class BatchlogManager:

  Verifying word get get:

    No occurrences

Checking class LogManager:

  Verifying word get get:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word get get:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word get get:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word get get:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word get get:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word get get:

    No occurrences

Checking class SegmentedFile:

  Verifying word get get:

    No occurrences

Checking class IndexSummary:

  Verifying word get get:

    No occurrences

Checking class IFilter:

  Verifying word get get:

    No occurrences

Checking class InstrumentingCache:

  Verifying word get get:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word get get:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word get get:

    No occurrences

Checking class SSTableScanner:

  Verifying word get get:

    No occurrences

Checking class RandomAccessReader:

  Verifying word get get:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word get get:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word get get:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word get get:

    No occurrences

Checking class CLibrary:

  Verifying word get get:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word get get:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word get get:

    No occurrences

Checking class FilterFactory:

  Verifying word get get:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word get get:

    No occurrences

Checking class ICompressedFile:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$2:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$1:

  Verifying word get get:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$3:

  Verifying word get get:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word get get:

    No occurrences

Checking class ThrottledReader:

  Verifying word get get:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word get get:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word get get:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word get get:

    No occurrences

Checking class CompactionMetrics:

  Verifying word get get:

    No occurrences

Checking class Multiset:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word get get:

    No occurrences

Checking class Validator:

  Verifying word get get:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word get get:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word get get:

    No occurrences

Checking class CompactionInfo:

  Verifying word get get:

    No occurrences

Checking class RepairJobDesc:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$10:

  Verifying word get get:

    No occurrences

Checking class Meter:

  Verifying word get get:

    No occurrences

Checking class CompactionIterable:

  Verifying word get get:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word get get:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word get get:

    No occurrences

Checking class Throwables:

  Verifying word get get:

    No occurrences

Checking class Scrubber:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$1:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$2:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$3:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$4:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$5:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$6:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$7:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$8:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$9:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word get get:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word get get:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word get get:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word get get:

    No occurrences

Checking class KeysSearcher:

  Verifying word get get:

    No occurrences

Checking class LoadingCache:

  Verifying word get get:

    No occurrences

Checking class DataResource:

  Verifying word get get:

    No occurrences

Checking class CacheBuilder:

  Verifying word get get:

    No occurrences

Checking class CacheLoader:

  Verifying word get get:

    No occurrences

Checking class ThriftValidation:

  Verifying word get get:

    No occurrences

Checking class QueryProcessor:

  Verifying word get get:

    No occurrences

Checking class ClientState$1:

  Verifying word get get:

    No occurrences

Checking class Resources:

  Verifying word get get:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word get get:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word get get:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word get get:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word get get:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word get get:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word get get:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word get get:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word get get:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word get get:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word get get:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word get get:

    No occurrences

Checking class UUIDSerializer:

  Verifying word get get:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word get get:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word get get:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word get get:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word get get:

    No occurrences

Checking class PrecompactedRow:

  Verifying word get get:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word get get:

    No occurrences

Checking class DataTracker$1:

  Verifying word get get:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word get get:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word get get:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word get get:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word get get:

    No occurrences

Checking class Memtable$2:

  Verifying word get get:

    No occurrences

Checking class Memtable$1:

  Verifying word get get:

    No occurrences

Checking class Memtable$3:

  Verifying word get get:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word get get:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word get get:

    No occurrences

Checking class Component$Type:

  Verifying word get get:

    No occurrences

Checking class Component$1:

  Verifying word get get:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word get get:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word get get:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word get get:

    No occurrences

Checking class Multiset$Entry:

  Verifying word get get:

    No occurrences

Checking class HashMultiset:

  Verifying word get get:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word get get:

    No occurrences

Checking class IMigrationListener:

  Verifying word get get:

    No occurrences

Checking class MigrationManager$2:

  Verifying word get get:

    No occurrences

Checking class MigrationManager$1:

  Verifying word get get:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word get get:

    No occurrences

Checking class MigrationTask:

  Verifying word get get:

    No occurrences

Checking class TraceState:

  Verifying word get get:

    No occurrences

Checking class OverloadedException:

  Verifying word get get:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word get get:

    No occurrences

Checking class Tracing$1:

  Verifying word get get:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word get get:

    No occurrences

Checking class Tracing$2:

  Verifying word get get:

    No occurrences

Checking class Parser:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word get get:

    No occurrences

Checking class BitSet:

  Verifying word get get:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word get get:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word get get:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word get get:

    No occurrences

Checking class Tuples$Raw:

  Verifying word get get:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word get get:

    No occurrences

Checking class Maps$Literal:

  Verifying word get get:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word get get:

    No occurrences

Checking class UseStatement:

  Verifying word get get:

    No occurrences

Checking class RawSelector:

  Verifying word get get:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word get get:

    No occurrences

Checking class Attributes$Raw:

  Verifying word get get:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word get get:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word get get:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word get get:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word get get:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word get get:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word get get:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word get get:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word get get:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word get get:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word get get:

    No occurrences

Checking class AlterTableStatement:

  Verifying word get get:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word get get:

    No occurrences

Checking class DropTableStatement:

  Verifying word get get:

    No occurrences

Checking class DropIndexStatement:

  Verifying word get get:

    No occurrences

Checking class TruncateStatement:

  Verifying word get get:

    No occurrences

Checking class GrantStatement:

  Verifying word get get:

    No occurrences

Checking class RevokeStatement:

  Verifying word get get:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word get get:

    No occurrences

Checking class CreateUserStatement:

  Verifying word get get:

    No occurrences

Checking class AlterUserStatement:

  Verifying word get get:

    No occurrences

Checking class DropUserStatement:

  Verifying word get get:

    No occurrences

Checking class ListUsersStatement:

  Verifying word get get:

    No occurrences

Checking class UserOptions:

  Verifying word get get:

    No occurrences

Checking class Constants$Literal:

  Verifying word get get:

    No occurrences

Checking class Term$Raw:

  Verifying word get get:

    No occurrences

Checking class Tuples$Literal:

  Verifying word get get:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word get get:

    No occurrences

Checking class Operation$Prepend:

  Verifying word get get:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word get get:

    No occurrences

Checking class MismatchedSetException:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word get get:

    No occurrences

Checking class Maps:

  Verifying word get get:

    No occurrences

Checking class DeleteStatement:

  Verifying word get get:

    No occurrences

Checking class Operation$SetValue:

  Verifying word get get:

    No occurrences

Checking class Token:

  Verifying word get get:

    No occurrences

Checking class NoViableAltException:

  Verifying word get get:

    No occurrences

Checking class UpdateStatement:

  Verifying word get get:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word get get:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word get get:

    No occurrences

Checking class TypeCast:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition:

  Verifying word get get:

    No occurrences

Checking class DFA:

  Verifying word get get:

    No occurrences

Checking class Sets:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word get get:

    No occurrences

Checking class Operation$Substraction:

  Verifying word get get:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word get get:

    No occurrences

Checking class Operation:

  Verifying word get get:

    No occurrences

Checking class Constants:

  Verifying word get get:

    No occurrences

Checking class Tuples:

  Verifying word get get:

    No occurrences

Checking class Operation$Addition:

  Verifying word get get:

    No occurrences

Checking class Lists:

  Verifying word get get:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word get get:

    No occurrences

Checking class KSPropDefs:

  Verifying word get get:

    No occurrences

Checking class FunctionCall:

  Verifying word get get:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word get get:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word get get:

    No occurrences

Checking class Operation$SetElement:

  Verifying word get get:

    No occurrences

Checking class AbstractMarker:

  Verifying word get get:

    No occurrences

Checking class Lists$Literal:

  Verifying word get get:

    No occurrences

Checking class Sets$Literal:

  Verifying word get get:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word get get:

    No occurrences

Checking class IndexPropDefs:

  Verifying word get get:

    No occurrences

Checking class Lexer:

  Verifying word get get:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word get get:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word get get:

    No occurrences

Checking class EarlyExitException:

  Verifying word get get:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word get get:

    No occurrences

Checking class CounterMutation:

  Verifying word get get:

    No occurrences

Checking class BatchStatement$1:

  Verifying word get get:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word get get:

    No occurrences

Checking class UpdateParameters:

  Verifying word get get:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word get get:

    No occurrences

Checking class CASConditions:

  Verifying word get get:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word get get:

    No occurrences

Checking class Ints:

  Verifying word get get:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word get get:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word get get:

    No occurrences

Checking class Ordering:

  Verifying word get get:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word get get:

      Method: LegacyLeveledManifest.migrateManifests()
      Calls Location: LegacyLeveledManifest.java:70 LegacyLeveledManifest.java:70
      Atomic: NO

Checking class ImmutableSortedSet:

  Verifying word get get:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word get get:

    No occurrences

Checking class Predicates:

  Verifying word get get:

    No occurrences

Checking class Doubles:

  Verifying word get get:

    No occurrences

Checking class SimpleStrategy:

  Verifying word get get:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word get get:

    No occurrences

Checking class Int32Serializer:

  Verifying word get get:

    No occurrences

Checking class ListSerializer:

  Verifying word get get:

    No occurrences

Checking class DoubleSerializer:

  Verifying word get get:

    No occurrences

Checking class MapSerializer:

  Verifying word get get:

    No occurrences

Checking class BooleanSerializer:

  Verifying word get get:

    No occurrences

Checking class SetSerializer:

  Verifying word get get:

    No occurrences

Checking class EmptyType:

  Verifying word get get:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word get get:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word get get:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word get get:

    No occurrences

Checking class QueryFilter$2:

  Verifying word get get:

    No occurrences

Checking class QueryFilter$1:

  Verifying word get get:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word get get:

    No occurrences

Checking class Clock:

  Verifying word get get:

    No occurrences

Checking class PrepareResponse:

  Verifying word get get:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word get get:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word get get:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word get get:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word get get:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word get get:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word get get:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word get get:

    No occurrences

Checking class ExpiringMap:

  Verifying word get get:

    No occurrences

Checking class SimpleCondition:

  Verifying word get get:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word get get:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word get get:

      Method: OutboundTcpConnection.run()
      Calls Location: OutboundTcpConnection.java:184 OutboundTcpConnection.java:184
      Atomic: NO

Checking class ILatencySubscriber:

  Verifying word get get:

    No occurrences

Checking class CallbackInfo:

  Verifying word get get:

    No occurrences

Checking class MessagingService$1:

  Verifying word get get:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word get get:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word get get:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word get get:

    No occurrences

Checking class StatusLogger:

  Verifying word get get:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word get get:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word get get:

    No occurrences

Checking class SinkManager:

  Verifying word get get:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word get get:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word get get:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word get get:

    No occurrences

Checking class MessagingService$5:

  Verifying word get get:

    No occurrences

Checking class MessagingService$4:

  Verifying word get get:

    No occurrences

Checking class MessagingService$3:

  Verifying word get get:

    No occurrences

Checking class MessagingService$2:

  Verifying word get get:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word get get:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word get get:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word get get:

    No occurrences

Checking class CacheMetrics:

  Verifying word get get:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word get get:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word get get:

    No occurrences

Checking class ICache:

  Verifying word get get:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word get get:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word get get:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word get get:

    No occurrences

Checking class Files:

  Verifying word get get:

    No occurrences

Checking class SSTable$2:

  Verifying word get get:

    No occurrences

Checking class SSTable$1:

  Verifying word get get:

    No occurrences

Checking class CacheKey:

  Verifying word get get:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word get get:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word get get:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word get get:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word get get:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word get get:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word get get:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word get get:

    No occurrences

Checking class IntervalTree:

  Verifying word get get:

    No occurrences

Checking class Memory:

  Verifying word get get:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word get get:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word get get:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word get get:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word get get:

    No occurrences

Checking class WrappedRunnable:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word get get:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word get get:

    No occurrences

Checking class MetricNameFactory:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word get get:

    No occurrences

Checking class MetricsRegistry:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word get get:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word get get:

    No occurrences

Checking class MetricName:

  Verifying word get get:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word get get:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word get get:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word get get:

    No occurrences

Checking class ColumnIndex:

  Verifying word get get:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word get get:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word get get:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word get get:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word get get:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word get get:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word get get:

    No occurrences

Checking class SequentialWriter:

  Verifying word get get:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word get get:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word get get:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word get get:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word get get:

    No occurrences

Checking class CommitLogMBean:

  Verifying word get get:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word get get:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word get get:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word get get:

    No occurrences

Checking class CommitLogSegment:

  Verifying word get get:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word get get:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word get get:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word get get:

      Method: CommitLogReplayer.recover()
      Calls Location: CommitLogReplayer.java:280 CommitLogReplayer.java:280
      Atomic: NO

Checking class BatchCommitLogExecutorService:

  Verifying word get get:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word get get:

    No occurrences

Checking class CommitLog$4:

  Verifying word get get:

    No occurrences

Checking class CommitLog$1:

  Verifying word get get:

    No occurrences

Checking class CommitLog$3:

  Verifying word get get:

    No occurrences

Checking class CommitLog$2:

  Verifying word get get:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word get get:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word get get:

    No occurrences

Checking class Directories$FileAction:

  Verifying word get get:

    No occurrences

Checking class Directories$2:

  Verifying word get get:

    No occurrences

Checking class Directories$1:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word get get:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word get get:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word get get:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word get get:

    No occurrences

Checking class PropertyUtils:

  Verifying word get get:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word get get:

    No occurrences

Checking class TypeDescription:

  Verifying word get get:

    No occurrences

Checking class Constructor:

  Verifying word get get:

    No occurrences

Checking class Yaml:

  Verifying word get get:

    No occurrences

Checking class NativeAllocator:

  Verifying word get get:

    No occurrences

Checking class CsvListReader:

  Verifying word get get:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word get get:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word get get:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word get get:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word get get:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word get get:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word get get:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word get get:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word get get:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word get get:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word get get:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word get get:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word get get:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word get get:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word get get:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word get get:

    No occurrences

Checking class BiMap:

  Verifying word get get:

    No occurrences

Checking class HashBiMap:

  Verifying word get get:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word get get:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word get get:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word get get:

    No occurrences

Checking class NamesQueryPager:

  Verifying word get get:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word get get:

    No occurrences

Checking class SliceQueryPager:

  Verifying word get get:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word get get:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word get get:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word get get:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word get get:

    No occurrences

Checking class QueryPagers$1:

  Verifying word get get:

    No occurrences

Checking class FrameDecoder:

  Verifying word get get:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word get get:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word get get:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word get get:

    No occurrences

Checking class TruncateException:

  Verifying word get get:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word get get:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word get get:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word get get:

    No occurrences

Checking class FloatSerializer:

  Verifying word get get:

    No occurrences

Checking class DecimalSerializer:

  Verifying word get get:

    No occurrences

Checking class IntegerSerializer:

  Verifying word get get:

    No occurrences

Checking class LSResourceResolver:

  Verifying word get get:

    No occurrences

Checking class UnavailableException:

  Verifying word get get:

    No occurrences

Checking class TimedOutException:

  Verifying word get get:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word get get:

    No occurrences

Checking class OptionCodec:

  Verifying word get get:

    No occurrences

Checking class DataType:

  Verifying word get get:

      Method: DataType.writeValue()
      Calls Location: DataType.java:153 DataType.java:153
      Atomic: NO

      Method: DataType.serializedValueSize()
      Calls Location: DataType.java:153 DataType.java:153
      Atomic: NO

Checking class IAsyncCallback$1:

  Verifying word get get:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word get get:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word get get:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word get get:

    No occurrences

Checking class Restriction$IN:

  Verifying word get get:

    No occurrences

Checking class Selection$Selector:

  Verifying word get get:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word get get:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word get get:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word get get:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word get get:

    No occurrences

Checking class Functions:

  Verifying word get get:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word get get:

    No occurrences

Checking class Function:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word get get:

    No occurrences

Checking class Term$Terminal:

  Verifying word get get:

    No occurrences

Checking class Tuples$Value:

  Verifying word get get:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word get get:

    No occurrences

Checking class IReadCommand:

  Verifying word get get:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word get get:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word get get:

    No occurrences

Checking class RowDataResolver:

  Verifying word get get:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word get get:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word get get:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word get get:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word get get:

    No occurrences

Checking class Lists$Marker:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word get get:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word get get:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word get get:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word get get:

    No occurrences

Checking class PrepareCallback:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$8:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$9:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$6:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$7:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$4:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$5:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$2:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$3:

  Verifying word get get:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$1:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word get get:

    No occurrences

Checking class ReadCallback:

  Verifying word get get:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word get get:

    No occurrences

Checking class DigestMismatchException:

  Verifying word get get:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word get get:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word get get:

    No occurrences

Checking class IResponseResolver:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word get get:

    No occurrences

Checking class RowDigestResolver:

  Verifying word get get:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word get get:

    No occurrences

Checking class ProposeCallback:

  Verifying word get get:

    No occurrences

Checking class Truncation:

  Verifying word get get:

    No occurrences

Checking class TriggerExecutor:

  Verifying word get get:

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:210 TriggerExecutor.java:184
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:210 TriggerExecutor.java:209
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:210 TriggerExecutor.java:184
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:210 TriggerExecutor.java:209
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:184 TriggerExecutor.java:184
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:184 TriggerExecutor.java:209
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:184
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:209
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:184
      Atomic: NO

      Method: TriggerExecutor.execute()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:209
      Atomic: NO

      Method: TriggerExecutor.loadTriggerInstance()
      Calls Location: TriggerExecutor.java:209 TriggerExecutor.java:210
      Atomic: YES

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:184 TriggerExecutor.java:184
      Atomic: NO

      Method: TriggerExecutor.executeInternal()
      Calls Location: TriggerExecutor.java:184 TriggerExecutor.java:209
      Atomic: NO

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word get get:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word get get:

    No occurrences

Checking class ServerConnection$State:

  Verifying word get get:

    No occurrences

Checking class ServerConnection$1:

  Verifying word get get:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word get get:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word get get:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word get get:

    No occurrences

Checking class ChannelGroup:

  Verifying word get get:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word get get:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word get get:

    No occurrences

Checking class ExecutionHandler:

  Verifying word get get:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word get get:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word get get:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word get get:

    No occurrences

Checking class ClientMetrics:

  Verifying word get get:

    No occurrences

Checking class Server$1:

  Verifying word get get:

    No occurrences

Checking class Server$2:

  Verifying word get get:

    No occurrences

Checking class ServerBootstrap:

  Verifying word get get:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word get get:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word get get:

    No occurrences

Checking class Event$1:

  Verifying word get get:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word get get:

    No occurrences

Checking class Event$StatusChange:

  Verifying word get get:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word get get:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word get get:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word get get:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word get get:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word get get:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word get get:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word get get:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word get get:

    No occurrences

Checking class StreamEventHandler:

  Verifying word get get:

    No occurrences

Checking class StreamState:

  Verifying word get get:

    No occurrences

Checking class StreamEvent:

  Verifying word get get:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word get get:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word get get:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word get get:

    No occurrences

Checking class StreamSession:

  Verifying word get get:

      Method: StreamSession.addTransferFiles()
      Calls Location: StreamSession.java:310 StreamSession.java:310
      Atomic: NO

      Method: StreamSession.prepare()
      Calls Location: StreamSession.java:310 StreamSession.java:310
      Atomic: NO

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word get get:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word get get:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word get get:

    No occurrences

Checking class StreamManager$3:

  Verifying word get get:

    No occurrences

Checking class MoreExecutors:

  Verifying word get get:

    No occurrences

Checking class StreamManager$1:

  Verifying word get get:

    No occurrences

Checking class StreamManager$2:

  Verifying word get get:

    No occurrences

Checking class EchoMessage:

  Verifying word get get:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word get get:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word get get:

    No occurrences

Checking class SnapshotCommand:

  Verifying word get get:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word get get:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word get get:

    No occurrences

Checking class GossipDigest:

  Verifying word get get:

    No occurrences

Checking class GossipDigestAck:

  Verifying word get get:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word get get:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word get get:

    No occurrences

Checking class ArrivalWindow:

  Verifying word get get:

    No occurrences

Checking class HeartBeatState:

  Verifying word get get:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word get get:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word get get:

    No occurrences

Checking class RepairSession:

  Verifying word get get:

    No occurrences

Checking class RepairMessage:

  Verifying word get get:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word get get:

    No occurrences

Checking class SyncComplete:

  Verifying word get get:

    No occurrences

Checking class ValidationComplete:

  Verifying word get get:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word get get:

    No occurrences

Checking class NodePair:

  Verifying word get get:

    No occurrences

Checking class MerkleTree:

  Verifying word get get:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word get get:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word get get:

    No occurrences

Checking class RangeTransfer:

  Verifying word get get:

    No occurrences

Checking class ValidationRequest:

  Verifying word get get:

    No occurrences

Checking class SyncRequest:

  Verifying word get get:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word get get:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word get get:

    No occurrences

Checking class RangeSliceReply:

  Verifying word get get:

    No occurrences

Checking class TruncateResponse:

  Verifying word get get:

    No occurrences

Checking class GossiperMBean:

  Verifying word get get:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word get get:

    No occurrences

Checking class Gossiper$2:

  Verifying word get get:

    No occurrences

Checking class Gossiper$1:

  Verifying word get get:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word get get:

    No occurrences

Checking class Mx4jTool:

  Verifying word get get:

    No occurrences

Checking class ThriftServer:

  Verifying word get get:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word get get:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word get get:

    No occurrences

Checking class ReporterConfig:

  Verifying word get get:

    No occurrences

Checking class MeteredFlusher:

  Verifying word get get:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word get get:

    No occurrences

Checking class GCInspector:

  Verifying word get get:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word get get:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word get get:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word get get:

    No occurrences

Checking class Auth$1:

  Verifying word get get:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word get get:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word get get:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word get get:

    No occurrences

Checking class Multimaps:

  Verifying word get get:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word get get:

    No occurrences

Checking class StageManager$1:

  Verifying word get get:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word get get:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word get get:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word get get:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word get get:

    No occurrences

Checking class WriteResponse:

  Verifying word get get:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word get get:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word get get:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word get get:

    No occurrences

Checking class VersionGenerator:

  Verifying word get get:

    No occurrences

Checking class ReadResponse:

  Verifying word get get:

    No occurrences

Checking class AbstractFuture:

  Verifying word get get:

    No occurrences

Checking class ProgressInfo:

  Verifying word get get:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word get get:

    No occurrences

Checking class StreamException:

  Verifying word get get:

    No occurrences

Checking class SessionInfo:

  Verifying word get get:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word get get:

    No occurrences

Checking class ConnectionHandler:

  Verifying word get get:

    No occurrences

Checking class BooleanSerializer:

  Verifying word get get:

    No occurrences

Checking class Stage$1:

  Verifying word get get:

    No occurrences

Checking class AtomicDouble:

  Verifying word get get:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word get get:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word get get:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word get get:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word get get:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word get get:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word get get:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word get get:

    No occurrences

Checking class CorruptBlockException:

  Verifying word get get:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word get get:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word get get:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word get get:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word get get:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word get get:

    No occurrences

Checking class OpenBitSet:

  Verifying word get get:

    No occurrences

Checking class IBitSet:

  Verifying word get get:

    No occurrences

Checking class BloomFilter:

  Verifying word get get:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word get get:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word get get:

    No occurrences

Checking class BloomCalculations:

  Verifying word get get:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word get get:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word get get:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word get get:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word get get:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word get get:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word get get:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word get get:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word get get:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word get get:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word get get:

    No occurrences

Checking class MemoryInputStream:

  Verifying word get get:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word get get:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word get get:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word get get:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word get get:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word get get:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word get get:

    No occurrences

Checking class Scrubber$1:

  Verifying word get get:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word get get:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word get get:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word get get:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word get get:

    No occurrences

Checking class ColumnPath:

  Verifying word get get:

    No occurrences

Checking class Deletion:

  Verifying word get get:

    No occurrences

Checking class PreExecutionHook:

  Verifying word get get:

    No occurrences

Checking class PostPreparationHook:

  Verifying word get get:

    No occurrences

Checking class SelectStatement:

  Verifying word get get:

    No occurrences

Checking class CQLStatement:

  Verifying word get get:

    No occurrences

Checking class ExecutionContext:

  Verifying word get get:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word get get:

    No occurrences

Checking class UpdateStatement:

  Verifying word get get:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word get get:

      Method: CreateKeyspaceStatement.validate()
      Calls Location: CreateKeyspaceStatement.java:63 CreateKeyspaceStatement.java:63
      Atomic: NO

      Method: CreateKeyspaceStatement.validate()
      Calls Location: CreateKeyspaceStatement.java:58 CreateKeyspaceStatement.java:63
      Atomic: NO

Checking class Relation:

  Verifying word get get:

    No occurrences

Checking class DropIndexStatement:

  Verifying word get get:

    No occurrences

Checking class PreparationContext:

  Verifying word get get:

    No occurrences

Checking class DeleteStatement:

  Verifying word get get:

    No occurrences

Checking class RelationType:

  Verifying word get get:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word get get:

      Method: CreateColumnFamilyStatement.getCFMetaData()
      Calls Location: CreateColumnFamilyStatement.java:134 CreateColumnFamilyStatement.java:187
      Atomic: NO

      Method: CreateColumnFamilyStatement.getColumns()
      Calls Location: CreateColumnFamilyStatement.java:134 CreateColumnFamilyStatement.java:134
      Atomic: NO

Checking class RandomPartitioner:

  Verifying word get get:

    No occurrences

Checking class CqlParser:

  Verifying word get get:

    No occurrences

Checking class Term:

  Verifying word get get:

    No occurrences

Checking class StatementType:

  Verifying word get get:

    No occurrences

Checking class CqlLexer:

  Verifying word get get:

    No occurrences

Checking class AbstractModification:

  Verifying word get get:

    No occurrences

Checking class AlterTableStatement:

  Verifying word get get:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word get get:

    No occurrences

Checking class CliUtils:

  Verifying word get get:

    No occurrences

Checking class BatchStatement:

  Verifying word get get:

    No occurrences

Checking class DataResource$Level:

  Verifying word get get:

    No occurrences

Checking class DataResource$1:

  Verifying word get get:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word get get:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word get get:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word get get:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word get get:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word get get:

    No occurrences

Checking class SnapTreeMap:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word get get:

    No occurrences

Checking class MigrationTask$1:

  Verifying word get get:

    No occurrences

Checking class Stopwatch:

  Verifying word get get:

    No occurrences

Checking class FormattingTuple:

  Verifying word get get:

    No occurrences

Checking class MessageFormatter:

  Verifying word get get:

    No occurrences

Checking class TraceState$1:

  Verifying word get get:

    No occurrences

Checking class Lists$Prepender:

  Verifying word get get:

    No occurrences

Checking class TupleType:

  Verifying word get get:

    No occurrences

Checking class Tuples$Marker:

  Verifying word get get:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word get get:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word get get:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word get get:

    No occurrences

Checking class Maps$Setter:

  Verifying word get get:

    No occurrences

Checking class Maps$Value:

  Verifying word get get:

    No occurrences

Checking class Maps$Putter:

  Verifying word get get:

    No occurrences

Checking class Maps$Marker:

  Verifying word get get:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word get get:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word get get:

    No occurrences

Checking class Operation$1:

  Verifying word get get:

    No occurrences

Checking class Sets$Setter:

  Verifying word get get:

    No occurrences

Checking class Lists$Setter:

  Verifying word get get:

    No occurrences

Checking class Constants$Setter:

  Verifying word get get:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word get get:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word get get:

    No occurrences

Checking class AssignementTestable:

  Verifying word get get:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word get get:

    No occurrences

Checking class Constants$Value:

  Verifying word get get:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word get get:

    No occurrences

Checking class Constants$Deleter:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word get get:

    No occurrences

Checking class Sets$Discarder:

  Verifying word get get:

    No occurrences

Checking class Sets$Adder:

  Verifying word get get:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word get get:

    No occurrences

Checking class Sets$Value:

  Verifying word get get:

    No occurrences

Checking class Sets$Marker:

  Verifying word get get:

    No occurrences

Checking class Constants$Marker:

  Verifying word get get:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word get get:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word get get:

    No occurrences

Checking class PermissionDetails:

  Verifying word get get:

    No occurrences

Checking class Lists$Discarder:

  Verifying word get get:

    No occurrences

Checking class Constants$Substracter:

  Verifying word get get:

    No occurrences

Checking class Constants$Type:

  Verifying word get get:

    No occurrences

Checking class Constants$2:

  Verifying word get get:

    No occurrences

Checking class Constants$Adder:

  Verifying word get get:

    No occurrences

Checking class Constants$1:

  Verifying word get get:

    No occurrences

Checking class Tuples$InValue:

  Verifying word get get:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word get get:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word get get:

    No occurrences

Checking class Lists$Appender:

  Verifying word get get:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word get get:

    No occurrences

Checking class Lists$Value:

  Verifying word get get:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word get get:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word get get:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word get get:

    No occurrences

Checking class FunctionCall$1:

  Verifying word get get:

    No occurrences

Checking class ITrigger:

  Verifying word get get:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word get get:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word get get:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word get get:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word get get:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word get get:

    No occurrences

Checking class JsonNode:

  Verifying word get get:

    No occurrences

Checking class CollectionSerializer:

  Verifying word get get:

    No occurrences

Checking class EmptySerializer:

  Verifying word get get:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word get get:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word get get:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word get get:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word get get:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word get get:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word get get:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word get get:

    No occurrences

Checking class IMessageSink:

  Verifying word get get:

    No occurrences

Checking class IRequestSink:

  Verifying word get get:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word get get:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word get get:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word get get:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word get get:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word get get:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word get get:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word get get:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word get get:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word get get:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word get get:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word get get:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word get get:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word get get:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word get get:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word get get:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word get get:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word get get:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word get get:

    No occurrences

Checking class SerializingCache:

  Verifying word get get:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word get get:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word get get:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word get get:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word get get:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word get get:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word get get:

    No occurrences

Checking class IntervalTree$1:

  Verifying word get get:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word get get:

    No occurrences

Checking class IntervalTree$2:

  Verifying word get get:

    No occurrences

Checking class RatioGauge:

  Verifying word get get:

    No occurrences

Checking class IExecutorMBean:

  Verifying word get get:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word get get:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word get get:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word get get:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word get get:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word get get:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word get get:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word get get:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word get get:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word get get:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word get get:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word get get:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word get get:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word get get:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word get get:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word get get:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word get get:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word get get:

      Method: CommitLogReplayer$1.runMayThrow()
      Calls Location: CommitLogReplayer.java:335 CommitLogReplayer.java:335
      Atomic: NO

Checking class CommitLogAllocator$5:

  Verifying word get get:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word get get:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word get get:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word get get:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word get get:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word get get:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word get get:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word get get:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word get get:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word get get:

    No occurrences

Checking class Strings:

  Verifying word get get:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word get get:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word get get:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word get get:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word get get:

    No occurrences

Checking class Property:

  Verifying word get get:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word get get:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word get get:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word get get:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word get get:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word get get:

    No occurrences

Checking class TreeMultimap:

  Verifying word get get:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word get get:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word get get:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word get get:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word get get:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word get get:

    No occurrences

Checking class LSInput:

  Verifying word get get:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word get get:

    No occurrences

Checking class DataType$1:

  Verifying word get get:

    No occurrences

Checking class UnsignedBytes:

  Verifying word get get:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word get get:

    No occurrences

Checking class Function$Factory:

  Verifying word get get:

    No occurrences

Checking class TokenFct:

  Verifying word get get:

    No occurrences

Checking class UuidFcts:

  Verifying word get get:

    No occurrences

Checking class AbstractFunction:

  Verifying word get get:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word get get:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word get get:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word get get:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word get get:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word get get:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word get get:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word get get:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word get get:

    No occurrences

Checking class ListMultimap:

  Verifying word get get:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word get get:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word get get:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word get get:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word get get:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word get get:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word get get:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word get get:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word get get:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word get get:

    No occurrences

Checking class TruncationSerializer:

  Verifying word get get:

    No occurrences

Checking class CustomClassLoader:

  Verifying word get get:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word get get:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word get get:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word get get:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word get get:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word get get:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word get get:

    No occurrences

Checking class StreamState$1:

  Verifying word get get:

    No occurrences

Checking class StreamingMetrics:

  Verifying word get get:

    No occurrences

Checking class StreamSession$State:

  Verifying word get get:

    No occurrences

Checking class StreamMessage:

  Verifying word get get:

    No occurrences

Checking class FileMessageHeader:

  Verifying word get get:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word get get:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word get get:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word get get:

    No occurrences

Checking class StreamTransferTask:

  Verifying word get get:

      Method: StreamTransferTask.createMessageForRetry()
      Calls Location: StreamTransferTask.java:105 StreamTransferTask.java:108
      Atomic: YES

Checking class StreamSummary:

  Verifying word get get:

    No occurrences

Checking class StreamTask:

  Verifying word get get:

    No occurrences

Checking class StreamRequest:

  Verifying word get get:

    No occurrences

Checking class RetryMessage:

  Verifying word get get:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word get get:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word get get:

    No occurrences

Checking class StreamSession$2:

  Verifying word get get:

    No occurrences

Checking class StreamSession$1:

  Verifying word get get:

    No occurrences

Checking class PrepareMessage:

  Verifying word get get:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word get get:

    No occurrences

Checking class ReceivedMessage:

  Verifying word get get:

    No occurrences

Checking class CompleteMessage:

  Verifying word get get:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word get get:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word get get:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word get get:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word get get:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word get get:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word get get:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word get get:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word get get:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word get get:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word get get:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word get get:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word get get:

    No occurrences

Checking class RepairException:

  Verifying word get get:

    No occurrences

Checking class RepairJob:

  Verifying word get get:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word get get:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word get get:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word get get:

    No occurrences

Checking class Preconditions:

  Verifying word get get:

    No occurrences

Checking class HistogramBuilder:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word get get:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word get get:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word get get:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word get get:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word get get:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word get get:

    No occurrences

Checking class CassandraServer:

  Verifying word get get:

      Method: CassandraServer.getSliceInternal()
      Calls Location: CassandraServer.java:275 CassandraServer.java:341
      Atomic: NO

      Method: CassandraServer.getSlice()
      Calls Location: CassandraServer.java:275 CassandraServer.java:275
      Atomic: NO

Checking class TFramedTransport$Factory:

  Verifying word get get:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word get get:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word get get:

    No occurrences

Checking class GCInspector$1:

  Verifying word get get:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word get get:

    No occurrences

Checking class SessionInfo$1:

  Verifying word get get:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word get get:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word get get:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word get get:

    No occurrences

Checking class FileCacheService:

  Verifying word get get:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word get get:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word get get:

    No occurrences

Checking class BitUtil:

  Verifying word get get:

    No occurrences

Checking class BloomFilter$1:

  Verifying word get get:

    No occurrences

Checking class MurmurHash:

  Verifying word get get:

    No occurrences

Checking class RefCountedMemory:

  Verifying word get get:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word get get:

    No occurrences

Checking class AbstractDataInput:

  Verifying word get get:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word get get:

    No occurrences

Checking class SelectExpression:

  Verifying word get get:

    No occurrences

Checking class WhereClause:

  Verifying word get get:

    No occurrences

Checking class Attributes:

  Verifying word get get:

    No occurrences

Checking class Operation:

  Verifying word get get:

    No occurrences

Checking class Optional:

  Verifying word get get:

    No occurrences

Checking class CFPropDefs:

  Verifying word get get:

      Method: CFPropDefs.getComparator()
      Calls Location: CFPropDefs.java:217 CFPropDefs.java:217
      Atomic: NO

      Method: CFPropDefs.getValidator()
      Calls Location: CFPropDefs.java:224 CFPropDefs.java:236
      Atomic: NO

      Method: CFPropDefs.getComparator()
      Calls Location: CFPropDefs.java:217 CFPropDefs.java:236
      Atomic: NO

      Method: CFPropDefs.getValidator()
      Calls Location: CFPropDefs.java:224 CFPropDefs.java:224
      Atomic: NO

      Method: CFPropDefs.getComparator()
      Calls Location: CFPropDefs.java:236 CFPropDefs.java:217
      Atomic: NO

      Method: CFPropDefs.getValidator()
      Calls Location: CFPropDefs.java:236 CFPropDefs.java:224
      Atomic: NO

      Method: CFPropDefs.getComparator()
      Calls Location: CFPropDefs.java:236 CFPropDefs.java:217
      Atomic: NO

      Method: CFPropDefs.getValidator()
      Calls Location: CFPropDefs.java:236 CFPropDefs.java:236
      Atomic: NO

      Method: CFPropDefs.getComparator()
      Calls Location: CFPropDefs.java:236 CFPropDefs.java:236
      Atomic: NO

      Method: CFPropDefs.getValidator()
      Calls Location: CFPropDefs.java:236 CFPropDefs.java:224
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:134 CFPropDefs.java:273
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:134 CFPropDefs.java:134
      Atomic: NO

      Method: CFPropDefs.validate()
      Calls Location: CFPropDefs.java:273 CFPropDefs.java:273
      Atomic: NO

Checking class BigIntegerToken:

  Verifying word get get:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word get get:

    No occurrences

Checking class GuidGenerator:

  Verifying word get get:

    No occurrences

Checking class MissingTokenException:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word get get:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word get get:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word get get:

    No occurrences

Checking class TermType:

  Verifying word get get:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word get get:

    No occurrences

Checking class Operation$OperationType:

  Verifying word get get:

    No occurrences

Checking class Term$1:

  Verifying word get get:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word get get:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word get get:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word get get:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word get get:

    No occurrences

Checking class CommonToken:

  Verifying word get get:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word get get:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word get get:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word get get:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word get get:

    No occurrences

Checking class ComparisonChain:

  Verifying word get get:

    No occurrences

Checking class Constants$1$1:

  Verifying word get get:

    No occurrences

Checking class SnappyInputStream:

  Verifying word get get:

    No occurrences

Checking class StreamInitMessage:

  Verifying word get get:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word get get:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word get get:

    No occurrences

Checking class SerializingCache$1:

  Verifying word get get:

    No occurrences

Checking class SerializingCache$2:

  Verifying word get get:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word get get:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word get get:

    No occurrences

Checking class QueryPath:

  Verifying word get get:

    No occurrences

Checking class TokenFct$1:

  Verifying word get get:

    No occurrences

Checking class UuidFcts$1:

  Verifying word get get:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word get get:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word get get:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word get get:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word get get:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word get get:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word get get:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word get get:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word get get:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word get get:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word get get:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word get get:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word get get:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word get get:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word get get:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word get get:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word get get:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word get get:

    No occurrences

Checking class RetryMessage$1:

  Verifying word get get:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word get get:

    No occurrences

Checking class CompressionInfo:

  Verifying word get get:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word get get:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word get get:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word get get:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word get get:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word get get:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word get get:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word get get:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word get get:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word get get:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word get get:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word get get:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word get get:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word get get:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word get get:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word get get:

    No occurrences

Checking class RequestCoordinator:

  Verifying word get get:

    No occurrences

Checking class RepairJob$2:

  Verifying word get get:

    No occurrences

Checking class RepairJob$1:

  Verifying word get get:

    No occurrences

Checking class TreeResponse:

  Verifying word get get:

    No occurrences

Checking class Differencer:

  Verifying word get get:

    No occurrences

Checking class SnapshotTask:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word get get:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word get get:

    No occurrences

Checking class TServer:

  Verifying word get get:

    No occurrences

Checking class TServerFactory:

  Verifying word get get:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word get get:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word get get:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word get get:

    No occurrences

Checking class NotFoundException:

  Verifying word get get:

    No occurrences

Checking class CASResult:

  Verifying word get get:

    No occurrences

Checking class CfSplit:

  Verifying word get get:

    No occurrences

Checking class CassandraServer$3:

  Verifying word get get:

    No occurrences

Checking class CassandraServer$2:

  Verifying word get get:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word get get:

    No occurrences

Checking class CassandraServer$1:

  Verifying word get get:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word get get:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word get get:

    No occurrences

Checking class SettableFuture:

  Verifying word get get:

    No occurrences

Checking class Cache:

  Verifying word get get:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word get get:

    No occurrences

Checking class FileCacheService$1:

  Verifying word get get:

    No occurrences

Checking class FileCacheService$2:

  Verifying word get get:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word get get:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word get get:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word get get:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word get get:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word get get:

    No occurrences

Checking class StreamWriter:

  Verifying word get get:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word get get:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word get get:

    No occurrences

Checking class StreamReader:

  Verifying word get get:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word get get:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word get get:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word get get:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word get get:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word get get:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word get get:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word get get:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word get get:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word get get:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word get get:

    No occurrences

Checking class RemovalNotification:

  Verifying word get get:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word get get:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word get get:

    No occurrences

Checking class LZFOutputStream:

  Verifying word get get:

    No occurrences

Checking class CompressedInputStream:

  Verifying word get get:

    No occurrences

Checking class BytesReadTracker:

  Verifying word get get:

    No occurrences

Checking class LZFInputStream:

  Verifying word get get:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word get get:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word get get:

    No occurrences

Checking class TNonblockingServer:

  Verifying word get get:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word get get:

    No occurrences

Checking class TServerTransport:

  Verifying word get get:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word get get:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word get get:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word get get:

    No occurrences

Checking class TServerSocket:

  Verifying word get get:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word get get:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word get get:

    No occurrences

Checking class TDisruptorServer:

  Verifying word get get:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word get get:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word get get:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word get get:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word get get:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word get get:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word get get:

    No occurrences

Checking class TCustomSocket:

  Verifying word get get:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word get get:

    No occurrences


Run Time:
                                .buildTree       0.621s
                                    .onLCA       3.051s
                         analysis-behavior      31.955s
                          analysis-threads       0.021s
                       build-parsing-table       0.594s
                       check-word-instance       0.027s
                               grammar-opt       2.585s
                        grammar-rm-epsilon      28.711s
                                   parsing       4.747s
                                 soot-init     147.012s
                                     total     410.955s

Profiling Vars:
                                 cfg-nodes     185745
                       grammar-productions       6161
                            parse-branches     997911
                               parse-trees        195
                      parsing-table-states       7368
                                   threads          5
Warning: org.apache.commons.cli.CommandLineParser is a phantom class!
Warning: org.apache.commons.cli.ParseException is a phantom class!
Warning: org.apache.commons.cli.Options is a phantom class!
Warning: org.apache.commons.cli.PosixParser is a phantom class!
Warning: org.apache.commons.cli.CommandLine is a phantom class!
Warning: com.google.common.util.concurrent.Uninterruptibles is a phantom class!
Warning: com.google.common.util.concurrent.RateLimiter is a phantom class!
Warning: com.yammer.metrics.core.Timer is a phantom class!
Warning: com.yammer.metrics.stats.Snapshot is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResult is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnDef is a phantom class!
Warning: org.apache.cassandra.thrift.Compression is a phantom class!
Warning: com.yammer.metrics.Metrics is a phantom class!
Warning: org.apache.cassandra.thrift.CfDef is a phantom class!
Warning: org.apache.cassandra.thrift.IndexType is a phantom class!
Warning: org.apache.thrift.transport.TTransport is a phantom class!
Warning: org.apache.commons.lang3.StringUtils is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationException is a phantom class!
Warning: org.apache.cassandra.thrift.AuthorizationException is a phantom class!
Warning: com.google.common.base.Joiner is a phantom class!
Warning: org.apache.cassandra.thrift.AuthenticationRequest is a phantom class!
Warning: org.apache.cassandra.thrift.InvalidRequestException is a phantom class!
Warning: org.apache.cassandra.thrift.ConsistencyLevel is a phantom class!
Warning: org.apache.cassandra.thrift.KsDef is a phantom class!
Warning: org.apache.thrift.protocol.TProtocol is a phantom class!
Warning: org.apache.cassandra.thrift.KeyRange is a phantom class!
Warning: org.apache.cassandra.thrift.SliceRange is a phantom class!
Warning: com.yammer.metrics.core.TimerContext is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnParent is a phantom class!
Warning: org.apache.cassandra.thrift.SlicePredicate is a phantom class!
Warning: org.apache.commons.cli.Option is a phantom class!
Warning: org.apache.cassandra.thrift.CqlRow is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnOrSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.Column is a phantom class!
Warning: org.apache.cassandra.thrift.Mutation is a phantom class!
Warning: org.apache.cassandra.thrift.SuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.IndexOperator is a phantom class!
Warning: org.apache.cassandra.thrift.IndexExpression is a phantom class!
Warning: org.apache.cassandra.thrift.IndexClause is a phantom class!
Warning: org.apache.cassandra.thrift.KeySlice is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Client is a phantom class!
Warning: org.apache.cassandra.thrift.CounterSuperColumn is a phantom class!
Warning: org.apache.cassandra.thrift.CounterColumn is a phantom class!
Warning: org.apache.commons.lang3.time.DurationFormatUtils is a phantom class!
Warning: com.google.common.collect.Lists is a phantom class!
Warning: org.apache.cassandra.thrift.CqlPreparedResult is a phantom class!
Warning: com.google.common.base.Function is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: com.google.common.collect.Iterables is a phantom class!
Warning: org.apache.commons.lang3.builder.HashCodeBuilder is a phantom class!
Warning: org.apache.commons.lang3.ArrayUtils is a phantom class!
Warning: com.google.common.annotations.VisibleForTesting is a phantom class!
Warning: com.google.common.collect.MapDifference is a phantom class!
Warning: org.apache.commons.lang3.builder.ToStringBuilder is a phantom class!
Warning: com.google.common.collect.Maps is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.apache.commons.lang3.builder.EqualsBuilder is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport is a phantom class!
Warning: org.apache.thrift.transport.TSocket is a phantom class!
Warning: org.apache.thrift.transport.TTransportException is a phantom class!
Warning: org.jboss.netty.logging.InternalLoggerFactory is a phantom class!
Warning: org.jboss.netty.logging.Slf4JLoggerFactory is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipelineFactory is a phantom class!
Warning: org.jboss.netty.channel.Channel is a phantom class!
Warning: org.jboss.netty.channel.ChannelFuture is a phantom class!
Warning: org.jboss.netty.channel.ChannelFactory is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory is a phantom class!
Warning: org.jboss.netty.bootstrap.ClientBootstrap is a phantom class!
Warning: org.apache.cassandra.thrift.CqlMetadata is a phantom class!
Warning: org.apache.cassandra.thrift.CqlResultType is a phantom class!
Warning: com.google.common.base.Joiner$MapJoiner is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.apache.thrift.TSerializer is a phantom class!
Warning: org.apache.thrift.TBase is a phantom class!
Warning: org.apache.thrift.TException is a phantom class!
Warning: org.apache.thrift.TDeserializer is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffer is a phantom class!
Warning: com.google.common.collect.ImmutableList is a phantom class!
Warning: com.google.common.collect.ImmutableMap is a phantom class!
Warning: com.google.common.collect.ImmutableSet is a phantom class!
Warning: com.google.common.collect.Sets$SetView is a phantom class!
Warning: com.google.common.collect.Sets is a phantom class!
Warning: com.google.common.base.Objects$ToStringHelper is a phantom class!
Warning: com.google.common.base.Objects is a phantom class!
Warning: org.apache.cassandra.thrift.TriggerDef is a phantom class!
Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
Warning: com.google.common.base.Functions is a phantom class!
Warning: com.google.common.base.Predicate is a phantom class!
Warning: org.antlr.runtime.ANTLRStringStream is a phantom class!
Warning: org.antlr.runtime.TokenSource is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap is a phantom class!
Warning: org.antlr.runtime.TokenStream is a phantom class!
Warning: org.antlr.runtime.RecognitionException is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EntryWeigher is a phantom class!
Warning: org.antlr.runtime.CharStream is a phantom class!
Warning: org.github.jamm.MemoryMeter is a phantom class!
Warning: org.antlr.runtime.CommonTokenStream is a phantom class!
Warning: com.google.common.collect.Multimap is a phantom class!
Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashMap is a phantom class!
Warning: com.google.common.collect.HashMultimap is a phantom class!
Warning: com.google.common.collect.SetMultimap is a phantom class!
Warning: com.yammer.metrics.core.Histogram is a phantom class!
Warning: com.yammer.metrics.core.Counter is a phantom class!
Warning: com.google.common.util.concurrent.Futures is a phantom class!
Warning: com.google.common.util.concurrent.ListenableFuture is a phantom class!
Warning: com.yammer.metrics.core.Gauge is a phantom class!
Warning: com.google.common.primitives.Longs is a phantom class!
Warning: com.google.common.collect.ImmutableSet$Builder is a phantom class!
Warning: net.jpountz.lz4.LZ4Compressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Decompressor is a phantom class!
Warning: net.jpountz.lz4.LZ4Factory is a phantom class!
Warning: net.jpountz.lz4.LZ4Exception is a phantom class!
Warning: org.jboss.netty.channel.ChannelPipeline is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandler is a phantom class!
Warning: org.jboss.netty.channel.Channels is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneEncoder is a phantom class!
Warning: org.jboss.netty.channel.ChannelHandlerContext is a phantom class!
Warning: org.jboss.netty.handler.codec.oneone.OneToOneDecoder is a phantom class!
Warning: org.jboss.netty.buffer.ChannelBuffers is a phantom class!
Warning: org.xerial.snappy.SnappyError is a phantom class!
Warning: org.xerial.snappy.Snappy is a phantom class!
Warning: org.jboss.netty.channel.SimpleChannelUpstreamHandler is a phantom class!
Warning: org.jboss.netty.channel.MessageEvent is a phantom class!
Warning: org.jboss.netty.channel.ExceptionEvent is a phantom class!
Warning: org.jboss.netty.channel.ChannelEvent is a phantom class!
Warning: org.jboss.netty.handler.ssl.SslHandler is a phantom class!
Warning: org.apache.commons.lang3.time.DateUtils is a phantom class!
Warning: com.google.common.collect.AbstractIterator is a phantom class!
Warning: org.apache.commons.lang3.ObjectUtils is a phantom class!
Warning: org.jboss.netty.channel.ChannelFutureListener is a phantom class!
Warning: com.google.common.collect.Iterators is a phantom class!
Warning: org.apache.cassandra.thrift.TokenRange is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: com.google.common.collect.Collections2 is a phantom class!
Warning: org.apache.cassandra.thrift.EndpointDetails is a phantom class!
Warning: com.google.common.util.concurrent.FutureCallback is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: com.google.common.collect.Multiset is a phantom class!
Warning: com.yammer.metrics.core.Meter is a phantom class!
Warning: com.google.common.base.Throwables is a phantom class!
Warning: com.google.common.collect.ConcurrentHashMultiset is a phantom class!
Warning: com.google.common.cache.CacheBuilder is a phantom class!
Warning: com.google.common.cache.CacheLoader is a phantom class!
Warning: com.google.common.cache.LoadingCache is a phantom class!
Warning: com.google.common.collect.UnmodifiableIterator is a phantom class!
Warning: org.cliffc.high_scale_lib.NonBlockingHashSet is a phantom class!
Warning: com.google.common.collect.Multiset$Entry is a phantom class!
Warning: com.google.common.collect.HashMultiset is a phantom class!
Warning: org.antlr.runtime.Parser is a phantom class!
Warning: org.antlr.runtime.MismatchedSetException is a phantom class!
Warning: org.antlr.runtime.BaseRecognizer is a phantom class!
Warning: org.antlr.runtime.Token is a phantom class!
Warning: org.antlr.runtime.NoViableAltException is a phantom class!
Warning: org.antlr.runtime.BitSet is a phantom class!
Warning: org.antlr.runtime.IntStream is a phantom class!
Warning: org.antlr.runtime.DFA is a phantom class!
Warning: org.antlr.runtime.RecognizerSharedState is a phantom class!
Warning: org.antlr.runtime.Lexer is a phantom class!
Warning: org.antlr.runtime.EarlyExitException is a phantom class!
Warning: com.google.common.primitives.Ints is a phantom class!
Warning: com.google.common.collect.Ordering is a phantom class!
Warning: com.google.common.collect.ImmutableSortedSet is a phantom class!
Warning: com.google.common.base.Predicates is a phantom class!
Warning: com.google.common.primitives.Doubles is a phantom class!
Warning: com.yammer.metrics.core.Clock is a phantom class!
Warning: com.google.common.collect.MapDifference$ValueDifference is a phantom class!
Warning: com.google.common.base.Charsets is a phantom class!
Warning: com.google.common.io.Files is a phantom class!
Warning: com.yammer.metrics.core.MetricsRegistry is a phantom class!
Warning: com.yammer.metrics.core.Metric is a phantom class!
Warning: com.yammer.metrics.core.MetricName is a phantom class!
Warning: org.yaml.snakeyaml.introspector.PropertyUtils is a phantom class!
Warning: org.yaml.snakeyaml.error.YAMLException is a phantom class!
Warning: org.yaml.snakeyaml.TypeDescription is a phantom class!
Warning: org.yaml.snakeyaml.constructor.Constructor is a phantom class!
Warning: org.yaml.snakeyaml.constructor.BaseConstructor is a phantom class!
Warning: org.yaml.snakeyaml.Yaml is a phantom class!
Warning: org.supercsv.io.CsvListReader is a phantom class!
Warning: org.supercsv.prefs.CsvPreference is a phantom class!
Warning: org.supercsv.prefs.CsvPreference$Builder is a phantom class!
Warning: com.yammer.metrics.stats.ExponentiallyDecayingSample is a phantom class!
Warning: com.google.common.collect.BiMap is a phantom class!
Warning: com.google.common.collect.HashBiMap is a phantom class!
Warning: org.jboss.netty.handler.codec.frame.FrameDecoder is a phantom class!
Warning: org.jboss.netty.util.CharsetUtil is a phantom class!
Warning: org.apache.cassandra.thrift.UnavailableException is a phantom class!
Warning: org.apache.cassandra.thrift.TimedOutException is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroupFuture is a phantom class!
Warning: org.jboss.netty.channel.group.ChannelGroup is a phantom class!
Warning: org.jboss.netty.channel.group.DefaultChannelGroup is a phantom class!
Warning: org.jboss.netty.handler.execution.ExecutionHandler is a phantom class!
Warning: org.jboss.netty.bootstrap.ServerBootstrap is a phantom class!
Warning: org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory is a phantom class!
Warning: com.google.common.util.concurrent.ListeningExecutorService is a phantom class!
Warning: com.google.common.util.concurrent.MoreExecutors is a phantom class!
Warning: org.apache.log4j.PropertyConfigurator is a phantom class!
Warning: com.addthis.metrics.reporter.config.ReporterConfig is a phantom class!
Warning: com.google.common.collect.Multimaps is a phantom class!
Warning: com.google.common.util.concurrent.AbstractFuture is a phantom class!
Warning: com.google.common.util.concurrent.AtomicDouble is a phantom class!
Warning: com.sun.jna.Native is a phantom class!
Warning: com.sun.jna.LastErrorException is a phantom class!
Warning: org.apache.cassandra.thrift.ColumnPath is a phantom class!
Warning: org.apache.cassandra.thrift.Deletion is a phantom class!
Warning: edu.stanford.ppl.concurrent.SnapTreeMap is a phantom class!
Warning: org.slf4j.helpers.FormattingTuple is a phantom class!
Warning: com.google.common.base.Stopwatch is a phantom class!
Warning: org.slf4j.helpers.MessageFormatter is a phantom class!
Warning: org.antlr.runtime.ParserRuleReturnScope is a phantom class!
Warning: org.codehaus.jackson.JsonNode is a phantom class!
Warning: org.xerial.snappy.SnappyOutputStream is a phantom class!
Warning: com.yammer.metrics.util.RatioGauge is a phantom class!
Warning: com.google.common.base.Strings is a phantom class!
Warning: org.yaml.snakeyaml.introspector.MissingProperty is a phantom class!
Warning: org.yaml.snakeyaml.introspector.Property is a phantom class!
Warning: com.google.common.collect.SortedSetMultimap is a phantom class!
Warning: com.google.common.collect.TreeMultimap is a phantom class!
Warning: com.google.common.primitives.UnsignedBytes is a phantom class!
Warning: com.google.common.collect.ListMultimap is a phantom class!
Warning: org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor is a phantom class!
Warning: org.jboss.netty.util.ObjectSizeEstimator is a phantom class!
Warning: com.google.common.base.Preconditions is a phantom class!
Warning: org.apache.thrift.TProcessor is a phantom class!
Warning: org.apache.thrift.transport.TFramedTransport$Factory is a phantom class!
Warning: org.apache.thrift.transport.TTransportFactory is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Processor is a phantom class!
Warning: org.apache.cassandra.thrift.Cassandra$Iface is a phantom class!
Warning: com.google.common.collect.PeekingIterator is a phantom class!
Warning: com.google.common.base.Optional is a phantom class!
Warning: org.antlr.runtime.MissingTokenException is a phantom class!
Warning: org.antlr.runtime.CommonToken is a phantom class!
Warning: org.apache.commons.lang3.StringEscapeUtils is a phantom class!
Warning: com.google.common.collect.ComparisonChain is a phantom class!
Warning: org.xerial.snappy.SnappyInputStream is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.EvictionListener is a phantom class!
Warning: com.googlecode.concurrentlinkedhashmap.Weigher is a phantom class!
Warning: org.apache.thrift.server.TServer is a phantom class!
Warning: org.apache.thrift.protocol.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.protocol.TProtocolFactory is a phantom class!
Warning: org.apache.cassandra.thrift.CfSplit is a phantom class!
Warning: org.apache.cassandra.thrift.CASResult is a phantom class!
Warning: org.apache.cassandra.thrift.SchemaDisagreementException is a phantom class!
Warning: org.apache.cassandra.thrift.NotFoundException is a phantom class!
Warning: com.google.common.util.concurrent.SettableFuture is a phantom class!
Warning: com.google.common.cache.RemovalListener is a phantom class!
Warning: com.google.common.cache.Cache is a phantom class!
Warning: com.google.common.cache.RemovalNotification is a phantom class!
Warning: com.ning.compress.lzf.LZFOutputStream is a phantom class!
Warning: com.ning.compress.lzf.LZFInputStream is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer$Args is a phantom class!
Warning: org.apache.thrift.server.TNonblockingServer is a phantom class!
Warning: org.apache.thrift.server.TServer$AbstractServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer is a phantom class!
Warning: org.apache.thrift.transport.TServerTransport is a phantom class!
Warning: org.apache.thrift.server.TThreadPoolServer$Args is a phantom class!
Warning: org.apache.thrift.TProcessorFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory is a phantom class!
Warning: org.apache.thrift.transport.TSSLTransportFactory$TSSLTransportParameters is a phantom class!
Warning: org.apache.thrift.transport.TServerSocket is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer$Args is a phantom class!
Warning: com.thinkaurelius.thrift.TDisruptorServer is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol is a phantom class!
Warning: com.thinkaurelius.thrift.util.TBinaryProtocol$Factory is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingTransport is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer is a phantom class!
Warning: com.thinkaurelius.thrift.Message is a phantom class!
Warning: org.apache.thrift.transport.TNonblockingServerSocket is a phantom class!
Warning: org.apache.thrift.server.AbstractNonblockingServer$AbstractSelectThread is a phantom class!
Warning: org.apache.thrift.transport.TIOStreamTransport is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class StressServer:

  Verifying word isListening listen:

    No occurrences

Checking class Options:

  Verifying word isListening listen:

    No occurrences

Checking class CommandLineParser:

  Verifying word isListening listen:

    No occurrences

Checking class StressThread:

  Verifying word isListening listen:

    No occurrences

Checking class PosixParser:

  Verifying word isListening listen:

    No occurrences

Checking class CommandLine:

  Verifying word isListening listen:

    No occurrences

Checking class StressAction:

  Verifying word isListening listen:

    No occurrences

Checking class Session:

  Verifying word isListening listen:

    No occurrences

Checking class Operation:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSlicer:

  Verifying word isListening listen:

    No occurrences

Checking class Stress:

  Verifying word isListening listen:

    No occurrences

Checking class CqlInserter:

  Verifying word isListening listen:

    No occurrences

Checking class CqlReader:

  Verifying word isListening listen:

    No occurrences

Checking class CqlIndexedRangeSlicer:

  Verifying word isListening listen:

    No occurrences

Checking class Inserter:

  Verifying word isListening listen:

    No occurrences

Checking class IndexedRangeSlicer:

  Verifying word isListening listen:

    No occurrences

Checking class CounterGetter:

  Verifying word isListening listen:

    No occurrences

Checking class CounterAdder:

  Verifying word isListening listen:

    No occurrences

Checking class StressAction$Consumer:

  Verifying word isListening listen:

    No occurrences

Checking class StressAction$1:

  Verifying word isListening listen:

    No occurrences

Checking class StressAction$Producer:

  Verifying word isListening listen:

    No occurrences

Checking class Reader:

  Verifying word isListening listen:

    No occurrences

Checking class Uninterruptibles:

  Verifying word isListening listen:

    No occurrences

Checking class StressStatistics:

  Verifying word isListening listen:

    No occurrences

Checking class CqlCounterGetter:

  Verifying word isListening listen:

    No occurrences

Checking class RateLimiter:

  Verifying word isListening listen:

    No occurrences

Checking class CqlRangeSlicer:

  Verifying word isListening listen:

    No occurrences

Checking class CqlCounterAdder:

  Verifying word isListening listen:

    No occurrences

Checking class CqlMultiGetter:

  Verifying word isListening listen:

    No occurrences

Checking class Stress$Operations:

  Verifying word isListening listen:

    No occurrences

Checking class Timer:

  Verifying word isListening listen:

    No occurrences

Checking class MultiGetter:

  Verifying word isListening listen:

    No occurrences

Checking class Snapshot:

  Verifying word isListening listen:

    No occurrences

Checking class SyntaxException:

  Verifying word isListening listen:

    No occurrences

Checking class IndexType:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyType:

  Verifying word isListening listen:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word isListening listen:

    No occurrences

Checking class EncryptionOptions:

  Verifying word isListening listen:

    No occurrences

Checking class ITransportFactory:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraClient:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleClient:

  Verifying word isListening listen:

    No occurrences

Checking class EncryptionOptions$ClientEncryptionOptions:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnDef:

  Verifying word isListening listen:

    No occurrences

Checking class CFMetaData:

  Verifying word isListening listen:

    No occurrences

Checking class Metrics:

  Verifying word isListening listen:

    No occurrences

Checking class TypeParser:

  Verifying word isListening listen:

    No occurrences

Checking class CfDef:

  Verifying word isListening listen:

    No occurrences

Checking class TTransport:

  Verifying word isListening listen:

    No occurrences

Checking class StringUtils:

  Verifying word isListening listen:

    No occurrences

Checking class ByteBufferUtil:

  Verifying word isListening listen:

    No occurrences

Checking class TBinaryProtocol:

  Verifying word isListening listen:

    No occurrences

Checking class TFramedTransportFactory:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType:

  Verifying word isListening listen:

    No occurrences

Checking class Joiner:

  Verifying word isListening listen:

    No occurrences

Checking class ConsistencyLevel:

  Verifying word isListening listen:

    No occurrences

Checking class ConfigurationException:

  Verifying word isListening listen:

    No occurrences

Checking class AuthenticationRequest:

  Verifying word isListening listen:

    No occurrences

Checking class InvalidRequestException:

  Verifying word isListening listen:

    No occurrences

Checking class KsDef:

  Verifying word isListening listen:

    No occurrences

Checking class UTF8Type:

  Verifying word isListening listen:

    No occurrences

Checking class TimeUUIDType:

  Verifying word isListening listen:

    No occurrences

Checking class AsciiType:

  Verifying word isListening listen:

    No occurrences

Checking class Document:

  Verifying word isListening listen:

    No occurrences

Checking class Element:

  Verifying word isListening listen:

    No occurrences

Checking class Node:

  Verifying word isListening listen:

    No occurrences

Checking class NodeList:

  Verifying word isListening listen:

    No occurrences

Checking class Text:

  Verifying word isListening listen:

    No occurrences

Checking class KeyRange:

  Verifying word isListening listen:

    No occurrences

Checking class SliceRange:

  Verifying word isListening listen:

    No occurrences

Checking class TimerContext:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnParent:

  Verifying word isListening listen:

    No occurrences

Checking class SlicePredicate:

  Verifying word isListening listen:

    No occurrences

Checking class Option:

  Verifying word isListening listen:

    No occurrences

Checking class Stress$ShutDown:

  Verifying word isListening listen:

    No occurrences

Checking class CQLOperation:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$CQLQueryExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class UUIDGen:

  Verifying word isListening listen:

    No occurrences

Checking class ResultSet:

  Verifying word isListening listen:

    No occurrences

Checking class CqlRow:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Rows:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnOrSuperColumn:

  Verifying word isListening listen:

    No occurrences

Checking class Column:

  Verifying word isListening listen:

    No occurrences

Checking class FBUtilities:

  Verifying word isListening listen:

    No occurrences

Checking class Mutation:

  Verifying word isListening listen:

    No occurrences

Checking class SuperColumn:

  Verifying word isListening listen:

    No occurrences

Checking class IndexOperator:

  Verifying word isListening listen:

    No occurrences

Checking class IndexExpression:

  Verifying word isListening listen:

    No occurrences

Checking class IndexClause:

  Verifying word isListening listen:

    No occurrences

Checking class KeySlice:

  Verifying word isListening listen:

    No occurrences

Checking class Cassandra$Client:

  Verifying word isListening listen:

    No occurrences

Checking class CounterSuperColumn:

  Verifying word isListening listen:

    No occurrences

Checking class CounterColumn:

  Verifying word isListening listen:

    No occurrences

Checking class DurationFormatUtils:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$1:

  Verifying word isListening listen:

    No occurrences

Checking class Lists:

  Verifying word isListening listen:

    No occurrences

Checking class MD5Digest:

  Verifying word isListening listen:

    No occurrences

Checking class Hex:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Prepared:

  Verifying word isListening listen:

    No occurrences

Checking class Message$Response:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Kind:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Void:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$SchemaChange:

  Verifying word isListening listen:

    No occurrences

Checking class Message$Type:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$SetKeyspace:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class Message:

  Verifying word isListening listen:

    No occurrences

Checking class InvalidRequestException:

  Verifying word isListening listen:

    No occurrences

Checking class Logger:

  Verifying word isListening listen:

    No occurrences

Checking class CFMetaData$Caching:

  Verifying word isListening listen:

    No occurrences

Checking class CFMetaData$SpeculativeRetry:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnDefinition:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionParameters:

  Verifying word isListening listen:

    No occurrences

Checking class CFDefinition:

  Verifying word isListening listen:

    No occurrences

Checking class ReadRepairDecision:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompactionStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore:

  Verifying word isListening listen:

    No occurrences

Checking class Descriptor$Version:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSerializer$Flag:

  Verifying word isListening listen:

    No occurrences

Checking class RowMutation:

  Verifying word isListening listen:

    No occurrences

Checking class UntypedResultSet$Row:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnDefinition$Type:

  Verifying word isListening listen:

    No occurrences

Checking class Row:

  Verifying word isListening listen:

    No occurrences

Checking class TriggerDefinition:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnNameBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class CompositeType:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstone:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndex:

  Verifying word isListening listen:

    No occurrences

Checking class Iterables:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnToCollectionType:

  Verifying word isListening listen:

    No occurrences

Checking class CFMetaData$2:

  Verifying word isListening listen:

    No occurrences

Checking class HashCodeBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class CQLStatement:

  Verifying word isListening listen:

    No occurrences

Checking class SuperColumns:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayUtils:

  Verifying word isListening listen:

    No occurrences

Checking class CFMetaData$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompositeType$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class RequestValidationException:

  Verifying word isListening listen:

    No occurrences

Checking class DeletedColumn:

  Verifying word isListening listen:

    No occurrences

Checking class BytesType:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamily:

  Verifying word isListening listen:

    No occurrences

Checking class CFMetaData$SpeculativeRetry$RetryType:

  Verifying word isListening listen:

    No occurrences

Checking class OnDiskAtom:

  Verifying word isListening listen:

    No occurrences

Checking class CreateTableStatement:

  Verifying word isListening listen:

    No occurrences

Checking class QueryProcessor:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledCompactionStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class CounterColumnType:

  Verifying word isListening listen:

    No occurrences

Checking class Descriptor:

  Verifying word isListening listen:

    No occurrences

Checking class Schema:

  Verifying word isListening listen:

    No occurrences

Checking class ICompressor:

  Verifying word isListening listen:

    No occurrences

Checking class MapDifference:

  Verifying word isListening listen:

    No occurrences

Checking class UntypedResultSet:

  Verifying word isListening listen:

    No occurrences

Checking class SystemKeyspace:

  Verifying word isListening listen:

    No occurrences

Checking class ParsedStatement:

  Verifying word isListening listen:

    No occurrences

Checking class ToStringBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class ParsedStatement$Prepared:

  Verifying word isListening listen:

    No occurrences

Checking class Maps:

  Verifying word isListening listen:

    No occurrences

Checking class DatabaseDescriptor:

  Verifying word isListening listen:

    No occurrences

Checking class LoggerFactory:

  Verifying word isListening listen:

    No occurrences

Checking class MarshalException:

  Verifying word isListening listen:

    No occurrences

Checking class EqualsBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class LongType:

  Verifying word isListening listen:

    No occurrences

Checking class LZ4Compressor:

  Verifying word isListening listen:

    No occurrences

Checking class SizeTieredCompactionStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class Column:

  Verifying word isListening listen:

    No occurrences

Checking class CollectionType:

  Verifying word isListening listen:

    No occurrences

Checking class ByteBufferUtil$1:

  Verifying word isListening listen:

    No occurrences

Checking class FileUtils:

  Verifying word isListening listen:

    No occurrences

Checking class FileDataInput:

  Verifying word isListening listen:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions:

  Verifying word isListening listen:

    No occurrences

Checking class TFramedTransport:

  Verifying word isListening listen:

    No occurrences

Checking class TSocket:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3Type:

  Verifying word isListening listen:

    No occurrences

Checking class TypeSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SliceQueryFilter:

  Verifying word isListening listen:

    No occurrences

Checking class IndexHelper:

  Verifying word isListening listen:

    No occurrences

Checking class IndexHelper$IndexInfo:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSlice:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3Type$Custom:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType$6:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType$4:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType$5:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType$3:

  Verifying word isListening listen:

    No occurrences

Checking class ReversedType:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType$2:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractType$1:

  Verifying word isListening listen:

    No occurrences

Checking class UnavailableException:

  Verifying word isListening listen:

    No occurrences

Checking class Keyspace:

  Verifying word isListening listen:

    No occurrences

Checking class IEndpointSnitch:

  Verifying word isListening listen:

    No occurrences

Checking class ConsistencyLevel$1:

  Verifying word isListening listen:

    No occurrences

Checking class ProtocolException:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractReplicationStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class NetworkTopologyStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleClient$ResponseHandler:

  Verifying word isListening listen:

    No occurrences

Checking class Connection$Tracker:

  Verifying word isListening listen:

    No occurrences

Checking class Connection:

  Verifying word isListening listen:

    No occurrences

Checking class ClientBootstrap:

  Verifying word isListening listen:

    No occurrences

Checking class Channel:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelFuture:

  Verifying word isListening listen:

    No occurrences

Checking class Connection$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class Message$ProtocolDecoder:

  Verifying word isListening listen:

    No occurrences

Checking class Message$ProtocolEncoder:

  Verifying word isListening listen:

    No occurrences

Checking class Frame$Decompressor:

  Verifying word isListening listen:

    No occurrences

Checking class Frame$Compressor:

  Verifying word isListening listen:

    No occurrences

Checking class Frame$Encoder:

  Verifying word isListening listen:

    No occurrences

Checking class Message$Request:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleClient$1:

  Verifying word isListening listen:

    No occurrences

Checking class InternalLoggerFactory:

  Verifying word isListening listen:

    No occurrences

Checking class Slf4JLoggerFactory:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleClient$ConnectionTracker:

  Verifying word isListening listen:

    No occurrences

Checking class FrameCompressor:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleClient$PipelineFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ErrorMessage:

  Verifying word isListening listen:

    No occurrences

Checking class CredentialsMessage:

  Verifying word isListening listen:

    No occurrences

Checking class StartupMessage:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareMessage:

  Verifying word isListening listen:

    No occurrences

Checking class QueryMessage:

  Verifying word isListening listen:

    No occurrences

Checking class NioClientSocketChannelFactory:

  Verifying word isListening listen:

    No occurrences

Checking class Frame:

  Verifying word isListening listen:

    No occurrences

Checking class FrameCompressor$SnappyCompressor:

  Verifying word isListening listen:

    No occurrences

Checking class TransportException:

  Verifying word isListening listen:

    No occurrences

Checking class QueryOptions:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleClient$SecurePipelineFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ExecuteMessage:

  Verifying word isListening listen:

    No occurrences

Checking class ExceptionCode:

  Verifying word isListening listen:

    No occurrences

Checking class UTF8Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3Type$Native:

  Verifying word isListening listen:

    No occurrences

Checking class TimestampSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class TimeUUIDSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class AsciiSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class DOMException:

  Verifying word isListening listen:

    No occurrences

Checking class Attr:

  Verifying word isListening listen:

    No occurrences

Checking class TypeInfo:

  Verifying word isListening listen:

    No occurrences

Checking class DocumentType:

  Verifying word isListening listen:

    No occurrences

Checking class DOMImplementation:

  Verifying word isListening listen:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word isListening listen:

    No occurrences

Checking class DOMConfiguration:

  Verifying word isListening listen:

    No occurrences

Checking class NamedNodeMap:

  Verifying word isListening listen:

    No occurrences

Checking class UserDataHandler:

  Verifying word isListening listen:

    No occurrences

Checking class CharacterData:

  Verifying word isListening listen:

    No occurrences

Checking class CQLOperation$1:

  Verifying word isListening listen:

    No occurrences

Checking class CQLOperation$2:

  Verifying word isListening listen:

    No occurrences

Checking class ResultSet$Codec:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnIdentifier:

  Verifying word isListening listen:

    No occurrences

Checking class ResultSet$Metadata:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSpecification:

  Verifying word isListening listen:

    No occurrences

Checking class CqlMetadata:

  Verifying word isListening listen:

    No occurrences

Checking class ResultSet$Flag:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Rows$1:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectMapper:

  Verifying word isListening listen:

    No occurrences

Checking class Pair:

  Verifying word isListening listen:

    No occurrences

Checking class TSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class TDeserializer:

  Verifying word isListening listen:

    No occurrences

Checking class Range:

  Verifying word isListening listen:

    No occurrences

Checking class IPartitioner:

  Verifying word isListening listen:

    No occurrences

Checking class IAllocator:

  Verifying word isListening listen:

    No occurrences

Checking class IAuthorizer:

  Verifying word isListening listen:

    No occurrences

Checking class IAuthenticator:

  Verifying word isListening listen:

    No occurrences

Checking class IVersionedSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class Joiner$MapJoiner:

  Verifying word isListening listen:

    No occurrences

Checking class DataOutputBuffer:

  Verifying word isListening listen:

    No occurrences

Checking class JsonFactory:

  Verifying word isListening listen:

    No occurrences

Checking class RingPosition:

  Verifying word isListening listen:

    No occurrences

Checking class AsyncOneResponse:

  Verifying word isListening listen:

    No occurrences

Checking class FBUtilities$WrappedCloseableIterator:

  Verifying word isListening listen:

    No occurrences

Checking class FBUtilities$2:

  Verifying word isListening listen:

    No occurrences

Checking class FBUtilities$1:

  Verifying word isListening listen:

    No occurrences

Checking class FBUtilities$3:

  Verifying word isListening listen:

    No occurrences

Checking class Token:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteComparisons:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Prepared$1:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement:

  Verifying word isListening listen:

    No occurrences

Checking class Message$Direction:

  Verifying word isListening listen:

    No occurrences

Checking class CBCodec:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$Void$1:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$SchemaChange$Change:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$SchemaChange$1:

  Verifying word isListening listen:

    No occurrences

Checking class ReadyMessage:

  Verifying word isListening listen:

    No occurrences

Checking class SupportedMessage:

  Verifying word isListening listen:

    No occurrences

Checking class AuthResponse:

  Verifying word isListening listen:

    No occurrences

Checking class BatchMessage:

  Verifying word isListening listen:

    No occurrences

Checking class AuthChallenge:

  Verifying word isListening listen:

    No occurrences

Checking class RegisterMessage:

  Verifying word isListening listen:

    No occurrences

Checking class EventMessage:

  Verifying word isListening listen:

    No occurrences

Checking class AuthSuccess:

  Verifying word isListening listen:

    No occurrences

Checking class OptionsMessage:

  Verifying word isListening listen:

    No occurrences

Checking class AuthenticateMessage:

  Verifying word isListening listen:

    No occurrences

Checking class ResultMessage$SetKeyspace$1:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelBuffer:

  Verifying word isListening listen:

    No occurrences

Checking class Message$Dispatcher:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompositeType:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompositeType$ParsedComparator:

  Verifying word isListening listen:

    No occurrences

Checking class ImmutableList:

  Verifying word isListening listen:

    No occurrences

Checking class CompositeType$StaticParsedComparator:

  Verifying word isListening listen:

    No occurrences

Checking class CompositeType$1:

  Verifying word isListening listen:

    No occurrences

Checking class Interval:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstone$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class DeletionTime:

  Verifying word isListening listen:

    No occurrences

Checking class TypeSizes:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstone$Tracker:

  Verifying word isListening listen:

    No occurrences

Checking class ISerializer:

  Verifying word isListening listen:

    No occurrences

Checking class Relation$Type:

  Verifying word isListening listen:

    No occurrences

Checking class Relation:

  Verifying word isListening listen:

    No occurrences

Checking class ExpiringColumn:

  Verifying word isListening listen:

    No occurrences

Checking class CounterColumn:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSerializer$CorruptColumnException:

  Verifying word isListening listen:

    No occurrences

Checking class CounterUpdateColumn:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndexSearcher:

  Verifying word isListening listen:

    No occurrences

Checking class DecoratedKey:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndex$1:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndex$2:

  Verifying word isListening listen:

    No occurrences

Checking class ReducingKeyIterator:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesIndex:

  Verifying word isListening listen:

    No occurrences

Checking class LocalToken:

  Verifying word isListening listen:

    No occurrences

Checking class LocalByPartionerType:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager:

  Verifying word isListening listen:

    No occurrences

Checking class KeysIndex:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndexBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class BytesSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ImmutableMap:

  Verifying word isListening listen:

    No occurrences

Checking class UnauthorizedException:

  Verifying word isListening listen:

    No occurrences

Checking class RequestExecutionException:

  Verifying word isListening listen:

    No occurrences

Checking class ClientState:

  Verifying word isListening listen:

    No occurrences

Checking class QueryState:

  Verifying word isListening listen:

    No occurrences

Checking class ImmutableSet:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$SetView:

  Verifying word isListening listen:

    No occurrences

Checking class Sets:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionParameters$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class SuperColumns$SCFilter:

  Verifying word isListening listen:

    No occurrences

Checking class IDiskAtomFilter:

  Verifying word isListening listen:

    No occurrences

Checking class NamesQueryFilter:

  Verifying word isListening listen:

    No occurrences

Checking class DeletionInfo:

  Verifying word isListening listen:

    No occurrences

Checking class SuperColumns$SCIterator:

  Verifying word isListening listen:

    No occurrences

Checking class DeletionInfo$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class TriggerDef:

  Verifying word isListening listen:

    No occurrences

Checking class Objects$ToStringHelper:

  Verifying word isListening listen:

    No occurrences

Checking class Objects:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraException:

  Verifying word isListening listen:

    No occurrences

Checking class Allocator:

  Verifying word isListening listen:

    No occurrences

Checking class HeapAllocator:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilySerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamily$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class DeletionInfo$InOrderTester:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnStats:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnNameHelper:

  Verifying word isListening listen:

    No occurrences

Checking class StreamingHistogram:

  Verifying word isListening listen:

    No occurrences

Checking class TreeMapBackedSortedColumns:

  Verifying word isListening listen:

    No occurrences

Checking class ImmutableMap$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class Functions:

  Verifying word isListening listen:

    No occurrences

Checking class UnsortedColumns:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompactionTask:

  Verifying word isListening listen:

    No occurrences

Checking class Memtable:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionController:

  Verifying word isListening listen:

    No occurrences

Checking class DataTracker:

  Verifying word isListening listen:

    No occurrences

Checking class ICompactionScanner:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompactionStrategy$1:

  Verifying word isListening listen:

    No occurrences

Checking class Component:

  Verifying word isListening listen:

    No occurrences

Checking class EstimatedHistogram:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionTask:

  Verifying word isListening listen:

    No occurrences

Checking class OnDiskAtom$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class SchemaAlteringStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CFPropDefs:

  Verifying word isListening listen:

    No occurrences

Checking class CFName:

  Verifying word isListening listen:

    No occurrences

Checking class CreateTableStatement$RawStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CreateTableStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class Permission:

  Verifying word isListening listen:

    No occurrences

Checking class AlreadyExistsException:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationManager:

  Verifying word isListening listen:

    No occurrences

Checking class QueryHandler:

  Verifying word isListening listen:

    No occurrences

Checking class SemanticVersion:

  Verifying word isListening listen:

    No occurrences

Checking class MemoryMeter:

  Verifying word isListening listen:

    No occurrences

Checking class ConcurrentLinkedHashMap:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement:

  Verifying word isListening listen:

    No occurrences

Checking class BatchQueryOptions:

  Verifying word isListening listen:

    No occurrences

Checking class ANTLRStringStream:

  Verifying word isListening listen:

    No occurrences

Checking class Tracing:

  Verifying word isListening listen:

    No occurrences

Checking class CFStatement:

  Verifying word isListening listen:

    No occurrences

Checking class ConcurrentLinkedHashMap$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser:

  Verifying word isListening listen:

    No occurrences

Checking class TokenStream:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer:

  Verifying word isListening listen:

    No occurrences

Checking class QueryProcessor$2:

  Verifying word isListening listen:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word isListening listen:

    No occurrences

Checking class MeasurableForPreparedCache:

  Verifying word isListening listen:

    No occurrences

Checking class CharStream:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftClientState:

  Verifying word isListening listen:

    No occurrences

Checking class CommonTokenStream:

  Verifying word isListening listen:

    No occurrences

Checking class INotificationConsumer:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledManifest:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledManifest$CompactionCandidate:

  Verifying word isListening listen:

    No occurrences

Checking class Multimap:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledCompactionStrategy$1:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayListMultimap:

  Verifying word isListening listen:

    No occurrences

Checking class SizeTieredCompactionStrategyOptions:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableListChangedNotification:

  Verifying word isListening listen:

    No occurrences

Checking class OperationType:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledCompactionStrategy$LeveledScanner:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledCompactionTask:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableAddedNotification:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCommutativeType:

  Verifying word isListening listen:

    No occurrences

Checking class LongSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CounterSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ConcurrentBiMap:

  Verifying word isListening listen:

    No occurrences

Checking class KSMetaData:

  Verifying word isListening listen:

    No occurrences

Checking class NonBlockingHashMap:

  Verifying word isListening listen:

    No occurrences

Checking class ICompressor$WrappedArray:

  Verifying word isListening listen:

    No occurrences

Checking class UntypedResultSet$1:

  Verifying word isListening listen:

    No occurrences

Checking class InetAddressType:

  Verifying word isListening listen:

    No occurrences

Checking class Int32Type:

  Verifying word isListening listen:

    No occurrences

Checking class TimestampType:

  Verifying word isListening listen:

    No occurrences

Checking class UUIDType:

  Verifying word isListening listen:

    No occurrences

Checking class ListType:

  Verifying word isListening listen:

    No occurrences

Checking class DoubleType:

  Verifying word isListening listen:

    No occurrences

Checking class MapType:

  Verifying word isListening listen:

    No occurrences

Checking class BooleanType:

  Verifying word isListening listen:

    No occurrences

Checking class SetType:

  Verifying word isListening listen:

    No occurrences

Checking class Row$RowSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ReplayPosition:

  Verifying word isListening listen:

    No occurrences

Checking class SetMultimap:

  Verifying word isListening listen:

    No occurrences

Checking class SystemKeyspace$BootstrapState:

  Verifying word isListening listen:

    No occurrences

Checking class CounterId:

  Verifying word isListening listen:

    No occurrences

Checking class PaxosState:

  Verifying word isListening listen:

    No occurrences

Checking class Commit:

  Verifying word isListening listen:

    No occurrences

Checking class RestorableMeter:

  Verifying word isListening listen:

    No occurrences

Checking class Token$TokenFactory:

  Verifying word isListening listen:

    No occurrences

Checking class IdentityQueryFilter:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractBounds:

  Verifying word isListening listen:

    No occurrences

Checking class CounterId$CounterIdRecord:

  Verifying word isListening listen:

    No occurrences

Checking class QueryFilter:

  Verifying word isListening listen:

    No occurrences

Checking class Token$KeyBound:

  Verifying word isListening listen:

    No occurrences

Checking class HashMultimap:

  Verifying word isListening listen:

    No occurrences

Checking class EmptyColumns:

  Verifying word isListening listen:

    No occurrences

Checking class ReplayPosition$ReplayPositionSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionHistoryTabularData:

  Verifying word isListening listen:

    No occurrences

Checking class DefsTables:

  Verifying word isListening listen:

    No occurrences

Checking class SystemKeyspace$1:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns:

  Verifying word isListening listen:

    No occurrences

Checking class VariableSpecifications:

  Verifying word isListening listen:

    No occurrences

Checking class IMutation:

  Verifying word isListening listen:

    No occurrences

Checking class RowMutation$RowMutationSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MessageOut:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$Verb:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStoreMBean:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndexManager:

  Verifying word isListening listen:

    No occurrences

Checking class DefaultInteger:

  Verifying word isListening listen:

    No occurrences

Checking class Directories:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndexManager$Updater:

  Verifying word isListening listen:

    No occurrences

Checking class CounterId$OneShotRenewer:

  Verifying word isListening listen:

    No occurrences

Checking class DataTracker$View:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$ViewFragment:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$AbstractScanIterator:

  Verifying word isListening listen:

    No occurrences

Checking class DataRange:

  Verifying word isListening listen:

    No occurrences

Checking class ExtendedFilter:

  Verifying word isListening listen:

    No occurrences

Checking class RowCacheKey:

  Verifying word isListening listen:

    No occurrences

Checking class CacheService:

  Verifying word isListening listen:

    No occurrences

Checking class Directories$SSTableLister:

  Verifying word isListening listen:

    No occurrences

Checking class StreamLockfile:

  Verifying word isListening listen:

    No occurrences

Checking class CollationController:

  Verifying word isListening listen:

    No occurrences

Checking class SSTable:

  Verifying word isListening listen:

    No occurrences

Checking class KeyCacheKey:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableMetadata:

  Verifying word isListening listen:

    No occurrences

Checking class RowIteratorFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$12:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$13:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$10:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$11:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$14:

  Verifying word isListening listen:

    No occurrences

Checking class Histogram:

  Verifying word isListening listen:

    No occurrences

Checking class Counter:

  Verifying word isListening listen:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class OnDiskAtomIterator:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableMetadata$SSTableMetadataSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class DataTracker$SSTableIntervalTree:

  Verifying word isListening listen:

    No occurrences

Checking class RowCacheSentinel:

  Verifying word isListening listen:

    No occurrences

Checking class Futures:

  Verifying word isListening listen:

    No occurrences

Checking class FSReadError:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionMetadata:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$7:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$8:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$5:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$6:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$3:

  Verifying word isListening listen:

    No occurrences

Checking class DataRange$Paging:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$4:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$1:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$2:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyStore$9:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyHistogram:

  Verifying word isListening listen:

    No occurrences

Checking class LocalPartitioner:

  Verifying word isListening listen:

    No occurrences

Checking class JMXEnabledThreadPoolExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$Operator:

  Verifying word isListening listen:

    No occurrences

Checking class RowIndexEntry:

  Verifying word isListening listen:

    No occurrences

Checking class LatencyMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class RowPosition:

  Verifying word isListening listen:

    No occurrences

Checking class AutoSavingCache:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableWriter:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLog:

  Verifying word isListening listen:

    No occurrences

Checking class Gauge:

  Verifying word isListening listen:

    No occurrences

Checking class SeedProvider:

  Verifying word isListening listen:

    No occurrences

Checking class IInternodeAuthenticator:

  Verifying word isListening listen:

    No occurrences

Checking class Config$DiskAccessMode:

  Verifying word isListening listen:

    No occurrences

Checking class Config:

  Verifying word isListening listen:

    No occurrences

Checking class IRequestScheduler:

  Verifying word isListening listen:

    No occurrences

Checking class Config$RequestSchedulerId:

  Verifying word isListening listen:

    No occurrences

Checking class RequestSchedulerOptions:

  Verifying word isListening listen:

    No occurrences

Checking class Config$CommitLogSync:

  Verifying word isListening listen:

    No occurrences

Checking class Config$DiskFailurePolicy:

  Verifying word isListening listen:

    No occurrences

Checking class Config$CommitFailurePolicy:

  Verifying word isListening listen:

    No occurrences

Checking class CacheService$CacheType:

  Verifying word isListening listen:

    No occurrences

Checking class Config$InternodeCompression:

  Verifying word isListening listen:

    No occurrences

Checking class FSWriteError:

  Verifying word isListening listen:

    No occurrences

Checking class YamlConfigurationLoader:

  Verifying word isListening listen:

    No occurrences

Checking class NoScheduler:

  Verifying word isListening listen:

    No occurrences

Checking class Longs:

  Verifying word isListening listen:

    No occurrences

Checking class DynamicEndpointSnitch:

  Verifying word isListening listen:

    No occurrences

Checking class SeedProviderDef:

  Verifying word isListening listen:

    No occurrences

Checking class ConfigurationLoader:

  Verifying word isListening listen:

    No occurrences

Checking class AllowAllInternodeAuthenticator:

  Verifying word isListening listen:

    No occurrences

Checking class EndpointSnitchInfo:

  Verifying word isListening listen:

    No occurrences

Checking class DatabaseDescriptor$2:

  Verifying word isListening listen:

    No occurrences

Checking class DatabaseDescriptor$3:

  Verifying word isListening listen:

    No occurrences

Checking class DatabaseDescriptor$1:

  Verifying word isListening listen:

    No occurrences

Checking class ImmutableSet$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class AllowAllAuthenticator:

  Verifying word isListening listen:

    No occurrences

Checking class AllowAllAuthorizer:

  Verifying word isListening listen:

    No occurrences

Checking class DateType:

  Verifying word isListening listen:

    No occurrences

Checking class CFDefinition$Name:

  Verifying word isListening listen:

    No occurrences

Checking class CFDefinition$2:

  Verifying word isListening listen:

    No occurrences

Checking class CFDefinition$1:

  Verifying word isListening listen:

    No occurrences

Checking class CFDefinition$Name$Kind:

  Verifying word isListening listen:

    No occurrences

Checking class CFDefinition$NonCompositeBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class LZ4Compressor:

  Verifying word isListening listen:

    No occurrences

Checking class LZ4Decompressor:

  Verifying word isListening listen:

    No occurrences

Checking class LZ4Factory:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$SizeComparator:

  Verifying word isListening listen:

    No occurrences

Checking class SizeTieredCompactionStrategy$2:

  Verifying word isListening listen:

    No occurrences

Checking class SizeTieredCompactionStrategy$1:

  Verifying word isListening listen:

    No occurrences

Checking class SizeTieredCompactionStrategy$4:

  Verifying word isListening listen:

    No occurrences

Checking class SizeTieredCompactionStrategy$3:

  Verifying word isListening listen:

    No occurrences

Checking class Column$1:

  Verifying word isListening listen:

    No occurrences

Checking class CollectionType$Kind:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3Type$Collection:

  Verifying word isListening listen:

    No occurrences

Checking class CorruptSSTableException:

  Verifying word isListening listen:

    No occurrences

Checking class FSError:

  Verifying word isListening listen:

    No occurrences

Checking class BlacklistedDirectories:

  Verifying word isListening listen:

    No occurrences

Checking class FileUtils$2:

  Verifying word isListening listen:

    No occurrences

Checking class FileUtils$1:

  Verifying word isListening listen:

    No occurrences

Checking class EncryptionOptions$ServerEncryptionOptions$InternodeEncryption:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3Type$1:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectSizes:

  Verifying word isListening listen:

    No occurrences

Checking class SliceQueryFilter$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCounter:

  Verifying word isListening listen:

    No occurrences

Checking class TombstoneOverwhelmingException:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableSliceIterator:

  Verifying word isListening listen:

    No occurrences

Checking class SliceQueryFilter$1:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCounter$GroupByPrefix:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSlice$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnSlice$NavigableMapIterator:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class TokenMetadata:

  Verifying word isListening listen:

    No occurrences

Checking class Keyspace$1:

  Verifying word isListening listen:

    No occurrences

Checking class QueryPagers:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractWriteResponseHandler:

  Verifying word isListening listen:

    No occurrences

Checking class WriteType:

  Verifying word isListening listen:

    No occurrences

Checking class DatacenterSyncWriteResponseHandler:

  Verifying word isListening listen:

    No occurrences

Checking class WriteResponseHandler:

  Verifying word isListening listen:

    No occurrences

Checking class DatacenterWriteResponseHandler:

  Verifying word isListening listen:

    No occurrences

Checking class NetworkTopologyStrategy$1:

  Verifying word isListening listen:

    No occurrences

Checking class NetworkTopologyStrategy$3:

  Verifying word isListening listen:

    No occurrences

Checking class NetworkTopologyStrategy$2:

  Verifying word isListening listen:

    No occurrences

Checking class TokenMetadata$Topology:

  Verifying word isListening listen:

    No occurrences

Checking class FrameCompressor$LZ4Compressor:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelPipeline:

  Verifying word isListening listen:

    No occurrences

Checking class Frame$Decoder:

  Verifying word isListening listen:

    No occurrences

Checking class Channels:

  Verifying word isListening listen:

    No occurrences

Checking class ErrorMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class ServerError:

  Verifying word isListening listen:

    No occurrences

Checking class ErrorMessage$2:

  Verifying word isListening listen:

    No occurrences

Checking class ErrorMessage$WrappedException:

  Verifying word isListening listen:

    No occurrences

Checking class OneToOneEncoder:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelHandlerContext:

  Verifying word isListening listen:

    No occurrences

Checking class Frame$Header:

  Verifying word isListening listen:

    No occurrences

Checking class Frame$Header$Flag:

  Verifying word isListening listen:

    No occurrences

Checking class OneToOneDecoder:

  Verifying word isListening listen:

    No occurrences

Checking class CBUtil:

  Verifying word isListening listen:

    No occurrences

Checking class CredentialsMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class AuthenticatedUser:

  Verifying word isListening listen:

    No occurrences

Checking class AuthenticationException:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelBuffers:

  Verifying word isListening listen:

    No occurrences

Checking class StartupMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class QueryMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class Snappy:

  Verifying word isListening listen:

    No occurrences

Checking class QueryOptions$SpecificOptions:

  Verifying word isListening listen:

    No occurrences

Checking class PagingState:

  Verifying word isListening listen:

    No occurrences

Checking class QueryOptions$Codec:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleChannelUpstreamHandler:

  Verifying word isListening listen:

    No occurrences

Checking class MessageEvent:

  Verifying word isListening listen:

    No occurrences

Checking class ExceptionEvent:

  Verifying word isListening listen:

    No occurrences

Checking class SslHandler:

  Verifying word isListening listen:

    No occurrences

Checking class SSLFactory:

  Verifying word isListening listen:

    No occurrences

Checking class PreparedQueryNotFoundException:

  Verifying word isListening listen:

    No occurrences

Checking class ExecuteMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractTextSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class UTF8Serializer$1:

  Verifying word isListening listen:

    No occurrences

Checking class UTF8Serializer$UTF8Validator:

  Verifying word isListening listen:

    No occurrences

Checking class FloatType:

  Verifying word isListening listen:

    No occurrences

Checking class DecimalType:

  Verifying word isListening listen:

    No occurrences

Checking class IntegerType:

  Verifying word isListening listen:

    No occurrences

Checking class TimestampSerializer$1:

  Verifying word isListening listen:

    No occurrences

Checking class DateUtils:

  Verifying word isListening listen:

    No occurrences

Checking class UUIDSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class DOMStringList:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftConversion:

  Verifying word isListening listen:

    No occurrences

Checking class ResultSet$Metadata$Codec:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteArrayOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class IResource:

  Verifying word isListening listen:

    No occurrences

Checking class IAsyncCallback:

  Verifying word isListening listen:

    No occurrences

Checking class MessageIn:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractIterator:

  Verifying word isListening listen:

    No occurrences

Checking class Bounds:

  Verifying word isListening listen:

    No occurrences

Checking class Range$1:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectUtils:

  Verifying word isListening listen:

    No occurrences

Checking class Token$TokenSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteComparisons$Comparer:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$PureJavaComparer:

  Verifying word isListening listen:

    No occurrences

Checking class IAuthenticator$Option:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$Parameters:

  Verifying word isListening listen:

    No occurrences

Checking class Selection:

  Verifying word isListening listen:

    No occurrences

Checking class Term:

  Verifying word isListening listen:

    No occurrences

Checking class Restriction:

  Verifying word isListening listen:

    No occurrences

Checking class Restriction$Slice:

  Verifying word isListening listen:

    No occurrences

Checking class QueryPager:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceCommand:

  Verifying word isListening listen:

    No occurrences

Checking class Bound:

  Verifying word isListening listen:

    No occurrences

Checking class MultiColumnRestriction$Slice:

  Verifying word isListening listen:

    No occurrences

Checking class MultiColumnRestriction$IN:

  Verifying word isListening listen:

    No occurrences

Checking class MultiColumnRestriction$EQ:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$ResultSetBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnGroupMap:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$SingleColumnComparator:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnGroupMap$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class IncludingExcludingBounds:

  Verifying word isListening listen:

    No occurrences

Checking class Pageable$ReadCommands:

  Verifying word isListening listen:

    No occurrences

Checking class ReadCommand:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$CompositeComparator:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractRangeCommand:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$RawStatement:

  Verifying word isListening listen:

    No occurrences

Checking class ExcludingBounds:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$2:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRestriction$Slice:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRestriction:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy:

  Verifying word isListening listen:

    No occurrences

Checking class ReadyMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class SupportedMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class ISaslAwareAuthenticator:

  Verifying word isListening listen:

    No occurrences

Checking class ServerConnection:

  Verifying word isListening listen:

    No occurrences

Checking class AuthResponse$1:

  Verifying word isListening listen:

    No occurrences

Checking class ISaslAwareAuthenticator$SaslAuthenticator:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement$Type:

  Verifying word isListening listen:

    No occurrences

Checking class Attributes:

  Verifying word isListening listen:

    No occurrences

Checking class ModificationStatement:

  Verifying word isListening listen:

    No occurrences

Checking class BatchMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class BatchMessage$2:

  Verifying word isListening listen:

    No occurrences

Checking class AuthChallenge$1:

  Verifying word isListening listen:

    No occurrences

Checking class Event$Type:

  Verifying word isListening listen:

    No occurrences

Checking class Server$ConnectionTracker:

  Verifying word isListening listen:

    No occurrences

Checking class RegisterMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class Server:

  Verifying word isListening listen:

    No occurrences

Checking class Event:

  Verifying word isListening listen:

    No occurrences

Checking class EventMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class AuthSuccess$1:

  Verifying word isListening listen:

    No occurrences

Checking class OptionsMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class AuthenticateMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class Message$Dispatcher$1:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompositeType$CompositeComponent:

  Verifying word isListening listen:

    No occurrences

Checking class TypeSizes$NativeDBTypeSizes:

  Verifying word isListening listen:

    No occurrences

Checking class TypeSizes$VIntEncodedTypeSizes:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstone$Tracker$1:

  Verifying word isListening listen:

    No occurrences

Checking class ISSTableSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class DeletionTime$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class Relation$1:

  Verifying word isListening listen:

    No occurrences

Checking class CounterContext:

  Verifying word isListening listen:

    No occurrences

Checking class IContext$ContextRelationship:

  Verifying word isListening listen:

    No occurrences

Checking class IContext:

  Verifying word isListening listen:

    No occurrences

Checking class IMergeIterator:

  Verifying word isListening listen:

    No occurrences

Checking class ReducingKeyIterator$1:

  Verifying word isListening listen:

    No occurrences

Checking class MergeIterator$Reducer:

  Verifying word isListening listen:

    No occurrences

Checking class KeyIterator:

  Verifying word isListening listen:

    No occurrences

Checking class MergeIterator:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractSimplePerColumnSecondaryIndex:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesIndex$IndexedEntry:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesIndex$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesSearcher:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesIndexOnPartitionKey:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesIndexOnRegular:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesIndexOnClusteringKey:

  Verifying word isListening listen:

    No occurrences

Checking class IEndpointStateChangeSubscriber:

  Verifying word isListening listen:

    No occurrences

Checking class StorageServiceMBean:

  Verifying word isListening listen:

    No occurrences

Checking class VersionedValue$VersionedValueFactory:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraDaemon:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$Mode:

  Verifying word isListening listen:

    No occurrences

Checking class ScheduledRangeTransferExecutorService:

  Verifying word isListening listen:

    No occurrences

Checking class BackgroundActivityMonitor:

  Verifying word isListening listen:

    No occurrences

Checking class IEndpointLifecycleSubscriber:

  Verifying word isListening listen:

    No occurrences

Checking class EndpointState:

  Verifying word isListening listen:

    No occurrences

Checking class ApplicationState:

  Verifying word isListening listen:

    No occurrences

Checking class VersionedValue:

  Verifying word isListening listen:

    No occurrences

Checking class RepairFuture:

  Verifying word isListening listen:

    No occurrences

Checking class StreamResultFuture:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableLoader:

  Verifying word isListening listen:

    No occurrences

Checking class GossipShutdownVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationRequestVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class StreamManager:

  Verifying word isListening listen:

    No occurrences

Checking class EchoVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class DefinitionsUpdateVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableDeletingTask:

  Verifying word isListening listen:

    No occurrences

Checking class TokenSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SnapshotVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestAck2VerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestSynVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class ReplicationFinishedVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class Iterators:

  Verifying word isListening listen:

    No occurrences

Checking class FailureDetector:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$2:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$1:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$4:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$3:

  Verifying word isListening listen:

    No occurrences

Checking class CounterMutationVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$8:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraDaemon$Server:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$7:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$6:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$5:

  Verifying word isListening listen:

    No occurrences

Checking class StreamPlan:

  Verifying word isListening listen:

    No occurrences

Checking class SchemaCheckVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class ActiveRepairService:

  Verifying word isListening listen:

    No occurrences

Checking class RepairMessageVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class TruncateVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class TokenRange:

  Verifying word isListening listen:

    No occurrences

Checking class StorageMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class RangeStreamer:

  Verifying word isListening listen:

    No occurrences

Checking class Gossiper:

  Verifying word isListening listen:

    No occurrences

Checking class LoadBroadcaster:

  Verifying word isListening listen:

    No occurrences

Checking class Auth:

  Verifying word isListening listen:

    No occurrences

Checking class OutputHandler$LogOutput:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class OutputHandler:

  Verifying word isListening listen:

    No occurrences

Checking class BiMultiValMap:

  Verifying word isListening listen:

    No occurrences

Checking class StageManager:

  Verifying word isListening listen:

    No occurrences

Checking class IVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class BootStrapper:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableLoader$Client:

  Verifying word isListening listen:

    No occurrences

Checking class Level:

  Verifying word isListening listen:

    No occurrences

Checking class RangeStreamer$SingleDatacenterFilter:

  Verifying word isListening listen:

    No occurrences

Checking class PendingRangeCalculatorService:

  Verifying word isListening listen:

    No occurrences

Checking class ReadRepairVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class RowMutationVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class IFailureDetector:

  Verifying word isListening listen:

    No occurrences

Checking class Logger:

  Verifying word isListening listen:

    No occurrences

Checking class Collections2:

  Verifying word isListening listen:

    No occurrences

Checking class LocalStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class RangeStreamer$FailureDetectorSourceFilter:

  Verifying word isListening listen:

    No occurrences

Checking class EndpointDetails:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestAckVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class CommitVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class RangeStreamer$ISourceFilter:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManager:

  Verifying word isListening listen:

    No occurrences

Checking class ReadVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class ProposeVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class Stage:

  Verifying word isListening listen:

    No occurrences

Checking class BatchlogManager:

  Verifying word isListening listen:

    No occurrences

Checking class LogManager:

  Verifying word isListening listen:

    No occurrences

Checking class StorageService$RangeRelocator:

  Verifying word isListening listen:

    No occurrences

Checking class ResponseVerbHandler:

  Verifying word isListening listen:

    No occurrences

Checking class TracingAwareExecutorService:

  Verifying word isListening listen:

    No occurrences

Checking class RowPosition$Kind:

  Verifying word isListening listen:

    No occurrences

Checking class DecoratedKey$1:

  Verifying word isListening listen:

    No occurrences

Checking class SegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class IndexSummary:

  Verifying word isListening listen:

    No occurrences

Checking class IFilter:

  Verifying word isListening listen:

    No occurrences

Checking class InstrumentingCache:

  Verifying word isListening listen:

    No occurrences

Checking class BloomFilterTracker:

  Verifying word isListening listen:

    No occurrences

Checking class SegmentedFile$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableScanner:

  Verifying word isListening listen:

    No occurrences

Checking class RandomAccessReader:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedRandomAccessReader:

  Verifying word isListening listen:

    No occurrences

Checking class BufferedSegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class DebuggableThreadPoolExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class CLibrary:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedSegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedSegmentedFile$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$EmptyCompactionScanner:

  Verifying word isListening listen:

    No occurrences

Checking class FilterFactory:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedThrottledReader:

  Verifying word isListening listen:

    No occurrences

Checking class ICompressedFile:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$2:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$1:

  Verifying word isListening listen:

    No occurrences

Checking class IndexSummaryBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$3:

  Verifying word isListening listen:

    No occurrences

Checking class BufferedSegmentedFile$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class ThrottledReader:

  Verifying word isListening listen:

    No occurrences

Checking class IndexSummary$IndexSummarySerializer:

  Verifying word isListening listen:

    No occurrences

Checking class RowIndexEntry$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManagerMBean:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CompactionExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class Multiset:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$AllSSTablesOperation:

  Verifying word isListening listen:

    No occurrences

Checking class Validator:

  Verifying word isListening listen:

    No occurrences

Checking class AutoSavingCache$Writer:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableIdentityIterator:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$BackgroundCompactionTask:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$ValidationCompactionController:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionInfo:

  Verifying word isListening listen:

    No occurrences

Checking class RepairJobDesc:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$10:

  Verifying word isListening listen:

    No occurrences

Checking class Meter:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionIterable:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionInfo$Holder:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$ValidationCompactionIterable:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompactedRow:

  Verifying word isListening listen:

    No occurrences

Checking class Throwables:

  Verifying word isListening listen:

    No occurrences

Checking class Scrubber:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$2:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$3:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$4:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$5:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$6:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$7:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$8:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$9:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CleanupInfo:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$ValidationExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CleanupStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CompactionExecutorStatsCollector:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableMetadata$Collector:

  Verifying word isListening listen:

    No occurrences

Checking class ConcurrentHashMultiset:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CacheCleanupExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionInterruptedException:

  Verifying word isListening listen:

    No occurrences

Checking class KeysSearcher:

  Verifying word isListening listen:

    No occurrences

Checking class LoadingCache:

  Verifying word isListening listen:

    No occurrences

Checking class DataResource:

  Verifying word isListening listen:

    No occurrences

Checking class CacheBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class CacheLoader:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftValidation:

  Verifying word isListening listen:

    No occurrences

Checking class QueryProcessor:

  Verifying word isListening listen:

    No occurrences

Checking class ClientState$1:

  Verifying word isListening listen:

    No occurrences

Checking class Resources:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstoneList:

  Verifying word isListening listen:

    No occurrences

Checking class NamesQueryFilter$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class NamesQueryFilter$ByNameColumnIterator:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableNamesIterator:

  Verifying word isListening listen:

    No occurrences

Checking class IDiskAtomFilter$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstoneList$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class StreamingHistogram$StreamingHistogramSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstoneList$InOrderTester:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractThreadUnsafeSortedColumns:

  Verifying word isListening listen:

    No occurrences

Checking class TreeMapBackedSortedColumns$1:

  Verifying word isListening listen:

    No occurrences

Checking class UnknownColumnFamilyException:

  Verifying word isListening listen:

    No occurrences

Checking class UUIDSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class UnsortedColumns$1:

  Verifying word isListening listen:

    No occurrences

Checking class UnsortedColumns$2:

  Verifying word isListening listen:

    No occurrences

Checking class AlwaysPresentFilter:

  Verifying word isListening listen:

    No occurrences

Checking class LazilyCompactedRow:

  Verifying word isListening listen:

    No occurrences

Checking class PrecompactedRow:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableDeletingNotification:

  Verifying word isListening listen:

    No occurrences

Checking class DataTracker$1:

  Verifying word isListening listen:

    No occurrences

Checking class MemtableRenewedNotification:

  Verifying word isListening listen:

    No occurrences

Checking class NonBlockingHashSet:

  Verifying word isListening listen:

    No occurrences

Checking class Memtable$FlushRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class Memtable$MeteringRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class Memtable$2:

  Verifying word isListening listen:

    No occurrences

Checking class Memtable$1:

  Verifying word isListening listen:

    No occurrences

Checking class Memtable$3:

  Verifying word isListening listen:

    No occurrences

Checking class AtomicSortedColumns:

  Verifying word isListening listen:

    No occurrences

Checking class NamedThreadFactory:

  Verifying word isListening listen:

    No occurrences

Checking class Component$Type:

  Verifying word isListening listen:

    No occurrences

Checking class Component$1:

  Verifying word isListening listen:

    No occurrences

Checking class EstimatedHistogram$EstimatedHistogramSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCompactionIterable:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable:

  Verifying word isListening listen:

    No occurrences

Checking class DiskAwareRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class Multiset$Entry:

  Verifying word isListening listen:

    No occurrences

Checking class HashMultiset:

  Verifying word isListening listen:

    No occurrences

Checking class PropertyDefinitions:

  Verifying word isListening listen:

    No occurrences

Checking class IMigrationListener:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationManager$2:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationManager$MigrationsSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationTask:

  Verifying word isListening listen:

    No occurrences

Checking class TraceState:

  Verifying word isListening listen:

    No occurrences

Checking class OverloadedException:

  Verifying word isListening listen:

    No occurrences

Checking class ExpiredTraceState:

  Verifying word isListening listen:

    No occurrences

Checking class Tracing$1:

  Verifying word isListening listen:

    No occurrences

Checking class WriteTimeoutException:

  Verifying word isListening listen:

    No occurrences

Checking class Tracing$2:

  Verifying word isListening listen:

    No occurrences

Checking class Parser:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA2:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA14:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA35:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA82:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA101:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA102:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA109:

  Verifying word isListening listen:

    No occurrences

Checking class BitSet:

  Verifying word isListening listen:

    No occurrences

Checking class RecognizerSharedState:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractMarker$Raw:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractMarker$INRaw:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$Raw:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$INRaw:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$Literal:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$RawUpdate:

  Verifying word isListening listen:

    No occurrences

Checking class UseStatement:

  Verifying word isListening listen:

    No occurrences

Checking class RawSelector:

  Verifying word isListening listen:

    No occurrences

Checking class UpdateStatement$ParsedInsert:

  Verifying word isListening listen:

    No occurrences

Checking class Attributes$Raw:

  Verifying word isListening listen:

    No occurrences

Checking class UpdateStatement$ParsedUpdate:

  Verifying word isListening listen:

    No occurrences

Checking class DeleteStatement$Parsed:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$RawDeletion:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement$Parsed:

  Verifying word isListening listen:

    No occurrences

Checking class ModificationStatement$Parsed:

  Verifying word isListening listen:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CreateTriggerStatement:

  Verifying word isListening listen:

    No occurrences

Checking class DropTriggerStatement:

  Verifying word isListening listen:

    No occurrences

Checking class AlterKeyspaceStatement:

  Verifying word isListening listen:

    No occurrences

Checking class AlterTableStatement:

  Verifying word isListening listen:

    No occurrences

Checking class DropKeyspaceStatement:

  Verifying word isListening listen:

    No occurrences

Checking class DropTableStatement:

  Verifying word isListening listen:

    No occurrences

Checking class DropIndexStatement:

  Verifying word isListening listen:

    No occurrences

Checking class TruncateStatement:

  Verifying word isListening listen:

    No occurrences

Checking class GrantStatement:

  Verifying word isListening listen:

    No occurrences

Checking class RevokeStatement:

  Verifying word isListening listen:

    No occurrences

Checking class ListPermissionsStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CreateUserStatement:

  Verifying word isListening listen:

    No occurrences

Checking class AlterUserStatement:

  Verifying word isListening listen:

    No occurrences

Checking class DropUserStatement:

  Verifying word isListening listen:

    No occurrences

Checking class ListUsersStatement:

  Verifying word isListening listen:

    No occurrences

Checking class UserOptions:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Literal:

  Verifying word isListening listen:

    No occurrences

Checking class Term$Raw:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$Literal:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$username_return:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$Prepend:

  Verifying word isListening listen:

    No occurrences

Checking class AlterTableStatement$Type:

  Verifying word isListening listen:

    No occurrences

Checking class MismatchedSetException:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRelation:

  Verifying word isListening listen:

    No occurrences

Checking class Maps:

  Verifying word isListening listen:

    No occurrences

Checking class DeleteStatement:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$SetValue:

  Verifying word isListening listen:

    No occurrences

Checking class Token:

  Verifying word isListening listen:

    No occurrences

Checking class NoViableAltException:

  Verifying word isListening listen:

    No occurrences

Checking class UpdateStatement:

  Verifying word isListening listen:

    No occurrences

Checking class Term$MultiColumnRaw:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$ColumnDeletion:

  Verifying word isListening listen:

    No occurrences

Checking class TypeCast:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition:

  Verifying word isListening listen:

    No occurrences

Checking class DFA:

  Verifying word isListening listen:

    No occurrences

Checking class Sets:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$Raw:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$Substraction:

  Verifying word isListening listen:

    No occurrences

Checking class Selectable$WritetimeOrTTL:

  Verifying word isListening listen:

    No occurrences

Checking class Operation:

  Verifying word isListening listen:

    No occurrences

Checking class Constants:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$Addition:

  Verifying word isListening listen:

    No occurrences

Checking class Lists:

  Verifying word isListening listen:

    No occurrences

Checking class MultiColumnRelation:

  Verifying word isListening listen:

    No occurrences

Checking class KSPropDefs:

  Verifying word isListening listen:

    No occurrences

Checking class FunctionCall:

  Verifying word isListening listen:

    No occurrences

Checking class FunctionCall$Raw:

  Verifying word isListening listen:

    No occurrences

Checking class Selectable$WithFunction:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$SetElement:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractMarker:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Literal:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$Literal:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$ElementDeletion:

  Verifying word isListening listen:

    No occurrences

Checking class IndexPropDefs:

  Verifying word isListening listen:

    No occurrences

Checking class Lexer:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer$DFA11:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer$DFA19:

  Verifying word isListening listen:

    No occurrences

Checking class EarlyExitException:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement$BatchVariables:

  Verifying word isListening listen:

    No occurrences

Checking class CounterMutation:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement$PreparedBatchVariables:

  Verifying word isListening listen:

    No occurrences

Checking class UpdateParameters:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement$BatchOfPreparedVariables:

  Verifying word isListening listen:

    No occurrences

Checking class CASConditions:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3CasConditions:

  Verifying word isListening listen:

    No occurrences

Checking class Ints:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftClientState$2:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftClientState$1:

  Verifying word isListening listen:

    No occurrences

Checking class Ordering:

  Verifying word isListening listen:

    No occurrences

Checking class LegacyLeveledManifest:

  Verifying word isListening listen:

    No occurrences

Checking class ImmutableSortedSet:

  Verifying word isListening listen:

    No occurrences

Checking class LeveledManifest$1:

  Verifying word isListening listen:

    No occurrences

Checking class Predicates:

  Verifying word isListening listen:

    No occurrences

Checking class Doubles:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleStrategy:

  Verifying word isListening listen:

    No occurrences

Checking class InetAddressSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class Int32Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class ListSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class DoubleSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MapSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class BooleanSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SetSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class EmptyType:

  Verifying word isListening listen:

    No occurrences

Checking class Commit$CommitSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractBounds$AbstractBoundsSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractBounds$Type:

  Verifying word isListening listen:

    No occurrences

Checking class QueryFilter$2:

  Verifying word isListening listen:

    No occurrences

Checking class QueryFilter$1:

  Verifying word isListening listen:

    No occurrences

Checking class RestorableMeter$RestorableEWMA:

  Verifying word isListening listen:

    No occurrences

Checking class Clock:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareResponse:

  Verifying word isListening listen:

    No occurrences

Checking class ReplayPosition$1:

  Verifying word isListening listen:

    No occurrences

Checking class ReplayPosition$2:

  Verifying word isListening listen:

    No occurrences

Checking class EmptyColumns$1:

  Verifying word isListening listen:

    No occurrences

Checking class MapDifference$ValueDifference:

  Verifying word isListening listen:

    No occurrences

Checking class CounterId$LocalCounterIdHistory:

  Verifying word isListening listen:

    No occurrences

Checking class CounterId$LocalIds:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns$1:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns$2:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns$ForwardSortedCollection:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns$SlicesIterator:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingServiceMBean:

  Verifying word isListening listen:

    No occurrences

Checking class ExpiringMap:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleCondition:

  Verifying word isListening listen:

    No occurrences

Checking class OutboundTcpConnectionPool:

  Verifying word isListening listen:

    No occurrences

Checking class OutboundTcpConnection:

  Verifying word isListening listen:

    No occurrences

Checking class ILatencySubscriber:

  Verifying word isListening listen:

    No occurrences

Checking class CallbackInfo:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$1:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$MSHandle:

  Verifying word isListening listen:

    No occurrences

Checking class ExpiringMap$CacheableObject:

  Verifying word isListening listen:

    No occurrences

Checking class WriteCallbackInfo:

  Verifying word isListening listen:

    No occurrences

Checking class StatusLogger:

  Verifying word isListening listen:

    No occurrences

Checking class MessageDeliveryTask:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class SinkManager:

  Verifying word isListening listen:

    No occurrences

Checking class DroppedMessageMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$CallbackDeterminedSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$SocketThread:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$5:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$4:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$3:

  Verifying word isListening listen:

    No occurrences

Checking class MessagingService$2:

  Verifying word isListening listen:

    No occurrences

Checking class CompactEndpointSerializationHelper:

  Verifying word isListening listen:

    No occurrences

Checking class CacheServiceMBean:

  Verifying word isListening listen:

    No occurrences

Checking class CacheService$RowCacheSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CacheMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class CacheService$KeyCacheSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SerializingCacheProvider:

  Verifying word isListening listen:

    No occurrences

Checking class ICache:

  Verifying word isListening listen:

    No occurrences

Checking class AutoSavingCache$CacheSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ConcurrentLinkedHashCache:

  Verifying word isListening listen:

    No occurrences

Checking class Directories$SSTableLister$1:

  Verifying word isListening listen:

    No occurrences

Checking class Files:

  Verifying word isListening listen:

    No occurrences

Checking class SSTable$2:

  Verifying word isListening listen:

    No occurrences

Checking class SSTable$1:

  Verifying word isListening listen:

    No occurrences

Checking class CacheKey:

  Verifying word isListening listen:

    No occurrences

Checking class RowIteratorFactory$2:

  Verifying word isListening listen:

    No occurrences

Checking class RowIteratorFactory$1:

  Verifying word isListening listen:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator:

  Verifying word isListening listen:

    No occurrences

Checking class ExtendedFilter$EmptyClauseFilter:

  Verifying word isListening listen:

    No occurrences

Checking class ExtendedFilter$WithClauses:

  Verifying word isListening listen:

    No occurrences

Checking class ExtendedFilter$1:

  Verifying word isListening listen:

    No occurrences

Checking class DebuggableScheduledThreadPoolExecutor$UncomplainingRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class IntervalTree:

  Verifying word isListening listen:

    No occurrences

Checking class Memory:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionMetadata$Chunk:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionMetadata$Writer:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionMetadata$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionMetadata$ChunkSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class WrappedRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractPartitioner:

  Verifying word isListening listen:

    No occurrences

Checking class MetricNameFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$25:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$24:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$26:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$21:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$20:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$23:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$22:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$16:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$15:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$14:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$13:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$12:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$11:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$10:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$19:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$18:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$AllColumnFamilyMetricNameFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$ColumnFamilyMetricNameFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$17:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$5:

  Verifying word isListening listen:

    No occurrences

Checking class MetricsRegistry:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$4:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$3:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$9:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$8:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$7:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnFamilyMetrics$6:

  Verifying word isListening listen:

    No occurrences

Checking class MetricName:

  Verifying word isListening listen:

    No occurrences

Checking class JMXEnabledThreadPoolExecutorMBean:

  Verifying word isListening listen:

    No occurrences

Checking class ThreadPoolMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$Operator$GreaterThan:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$Operator$Equals:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$Operator$GreaterThanOrEqualTo:

  Verifying word isListening listen:

    No occurrences

Checking class IMeasurableMemory:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnIndex:

  Verifying word isListening listen:

    No occurrences

Checking class RowIndexEntry$IndexedEntry:

  Verifying word isListening listen:

    No occurrences

Checking class DefaultNameFactory:

  Verifying word isListening listen:

    No occurrences

Checking class RowPosition$RowPositionSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class AutoSavingCache$1:

  Verifying word isListening listen:

    No occurrences

Checking class LengthAvailableInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableWriter$IndexWriter:

  Verifying word isListening listen:

    No occurrences

Checking class SequentialWriter:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedSequentialWriter:

  Verifying word isListening listen:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumWriter:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnIndex$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class DataIntegrityMetadata:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogMBean:

  Verifying word isListening listen:

    No occurrences

Checking class ICommitLogExecutorService:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogAllocator:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogArchiver:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogSegment:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogSegment$CommitLogSegmentFileComparator:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogReplayer:

  Verifying word isListening listen:

    No occurrences

Checking class BatchCommitLogExecutorService:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLog$LogRecordAdder:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLog$4:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLog$1:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLog$3:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLog$2:

  Verifying word isListening listen:

    No occurrences

Checking class PeriodicCommitLogExecutorService:

  Verifying word isListening listen:

    No occurrences

Checking class Directories$DataDirectory:

  Verifying word isListening listen:

    No occurrences

Checking class Directories$FileAction:

  Verifying word isListening listen:

    No occurrences

Checking class Directories$2:

  Verifying word isListening listen:

    No occurrences

Checking class Directories$1:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndexManager$StandardUpdater:

  Verifying word isListening listen:

    No occurrences

Checking class PerRowSecondaryIndex:

  Verifying word isListening listen:

    No occurrences

Checking class PerColumnSecondaryIndex:

  Verifying word isListening listen:

    No occurrences

Checking class SecondaryIndexManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class PropertyUtils:

  Verifying word isListening listen:

    No occurrences

Checking class YamlConfigurationLoader$MissingPropertiesChecker:

  Verifying word isListening listen:

    No occurrences

Checking class TypeDescription:

  Verifying word isListening listen:

    No occurrences

Checking class Constructor:

  Verifying word isListening listen:

    No occurrences

Checking class Yaml:

  Verifying word isListening listen:

    No occurrences

Checking class NativeAllocator:

  Verifying word isListening listen:

    No occurrences

Checking class CsvListReader:

  Verifying word isListening listen:

    No occurrences

Checking class CsvPreference$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractEndpointSnitch:

  Verifying word isListening listen:

    No occurrences

Checking class DynamicEndpointSnitchMBean:

  Verifying word isListening listen:

    No occurrences

Checking class ExponentiallyDecayingSample:

  Verifying word isListening listen:

    No occurrences

Checking class DynamicEndpointSnitch$1:

  Verifying word isListening listen:

    No occurrences

Checking class DynamicEndpointSnitch$2:

  Verifying word isListening listen:

    No occurrences

Checking class EndpointSnitchInfoMBean:

  Verifying word isListening listen:

    No occurrences

Checking class BlacklistedDirectoriesMBean:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectSizes$MemoryLayoutSpecification:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectSizes$3:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectSizes$2:

  Verifying word isListening listen:

    No occurrences

Checking class ObjectSizes$1:

  Verifying word isListening listen:

    No occurrences

Checking class IndexedSliceReader:

  Verifying word isListening listen:

    No occurrences

Checking class SimpleSliceReader:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$MetricValue:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$4:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$3:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$6:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$5:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$8:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$7:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$9:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$10:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceMetrics$KeyspaceMetricNameFactory:

  Verifying word isListening listen:

    No occurrences

Checking class BiMap:

  Verifying word isListening listen:

    No occurrences

Checking class HashBiMap:

  Verifying word isListening listen:

    No occurrences

Checking class TokenMetadata$2:

  Verifying word isListening listen:

    No occurrences

Checking class TokenMetadata$1:

  Verifying word isListening listen:

    No occurrences

Checking class SortedBiMultiValMap:

  Verifying word isListening listen:

    No occurrences

Checking class NamesQueryPager:

  Verifying word isListening listen:

    No occurrences

Checking class SliceFromReadCommand:

  Verifying word isListening listen:

    No occurrences

Checking class SliceQueryPager:

  Verifying word isListening listen:

    No occurrences

Checking class SliceByNamesReadCommand:

  Verifying word isListening listen:

    No occurrences

Checking class MultiPartitionPager:

  Verifying word isListening listen:

    No occurrences

Checking class RangeNamesQueryPager:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceQueryPager:

  Verifying word isListening listen:

    No occurrences

Checking class QueryPagers$1:

  Verifying word isListening listen:

    No occurrences

Checking class FrameDecoder:

  Verifying word isListening listen:

    No occurrences

Checking class IsBootstrappingException:

  Verifying word isListening listen:

    No occurrences

Checking class ReadTimeoutException:

  Verifying word isListening listen:

    No occurrences

Checking class RequestTimeoutException:

  Verifying word isListening listen:

    No occurrences

Checking class TruncateException:

  Verifying word isListening listen:

    No occurrences

Checking class QueryOptions$Codec$Flag:

  Verifying word isListening listen:

    No occurrences

Checking class ByteBufferOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class UTF8Serializer$UTF8Validator$State:

  Verifying word isListening listen:

    No occurrences

Checking class FloatSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class DecimalSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class IntegerSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class LSResourceResolver:

  Verifying word isListening listen:

    No occurrences

Checking class UnavailableException:

  Verifying word isListening listen:

    No occurrences

Checking class TimedOutException:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftConversion$1:

  Verifying word isListening listen:

    No occurrences

Checking class OptionCodec:

  Verifying word isListening listen:

    No occurrences

Checking class DataType:

  Verifying word isListening listen:

    No occurrences

Checking class IAsyncCallback$1:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnGroupMap$Collection:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnGroupMap$Simple:

  Verifying word isListening listen:

    No occurrences

Checking class Restriction$IN:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$Selector:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$FunctionSelector:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$SelectionWithFunctions:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$WritetimeOrTTLSelector:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$SimpleSelection:

  Verifying word isListening listen:

    No occurrences

Checking class Functions:

  Verifying word isListening listen:

    No occurrences

Checking class Selection$SimpleSelector:

  Verifying word isListening listen:

    No occurrences

Checking class Function:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRestriction$EQ:

  Verifying word isListening listen:

    No occurrences

Checking class Term$Terminal:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$Value:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceCommandSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class IReadCommand:

  Verifying word isListening listen:

    No occurrences

Checking class ReadCommandSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ReadCommand$Type:

  Verifying word isListening listen:

    No occurrences

Checking class RowDataResolver:

  Verifying word isListening listen:

    No occurrences

Checking class Term$NonTerminal:

  Verifying word isListening listen:

    No occurrences

Checking class Term$MultiItemTerminal:

  Verifying word isListening listen:

    No occurrences

Checking class MultiColumnRestriction$InWithValues:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$RawStatement$2:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement$RawStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Marker:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRestriction$InWithMarker:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRestriction$InWithValues:

  Verifying word isListening listen:

    No occurrences

Checking class MultiColumnRestriction$InWithMarker:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRestriction$1:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxyMBean:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$WritePerformer:

  Verifying word isListening listen:

    No occurrences

Checking class ClientRequestMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareCallback:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$WriteResponseHandlerWrapper:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$HintRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$8:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$9:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$6:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$7:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$4:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$5:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$2:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$3:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandoffMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$1:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$DroppableRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$LocalReadRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class ReadCallback:

  Verifying word isListening listen:

    No occurrences

Checking class BatchlogEndpointSelector:

  Verifying word isListening listen:

    No occurrences

Checking class DigestMismatchException:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceResponseResolver:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractReadExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class IResponseResolver:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class RowDigestResolver:

  Verifying word isListening listen:

    No occurrences

Checking class ReadRepairMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class ProposeCallback:

  Verifying word isListening listen:

    No occurrences

Checking class Truncation:

  Verifying word isListening listen:

    No occurrences

Checking class TriggerExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$LocalRangeSliceRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class TruncateResponseHandler:

  Verifying word isListening listen:

    No occurrences

Checking class ServerConnection$State:

  Verifying word isListening listen:

    No occurrences

Checking class ServerConnection$1:

  Verifying word isListening listen:

    No occurrences

Checking class ModificationStatement$StatementType:

  Verifying word isListening listen:

    No occurrences

Checking class ModificationStatement$2:

  Verifying word isListening listen:

    No occurrences

Checking class ModificationStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelGroup:

  Verifying word isListening listen:

    No occurrences

Checking class ChannelGroupFuture:

  Verifying word isListening listen:

    No occurrences

Checking class DefaultChannelGroup:

  Verifying word isListening listen:

    No occurrences

Checking class ExecutionHandler:

  Verifying word isListening listen:

    No occurrences

Checking class RequestThreadPoolExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class Server$EventNotifier:

  Verifying word isListening listen:

    No occurrences

Checking class Server$SecurePipelineFactory:

  Verifying word isListening listen:

    No occurrences

Checking class ClientMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class Server$1:

  Verifying word isListening listen:

    No occurrences

Checking class Server$2:

  Verifying word isListening listen:

    No occurrences

Checking class ServerBootstrap:

  Verifying word isListening listen:

    No occurrences

Checking class Server$PipelineFactory:

  Verifying word isListening listen:

    No occurrences

Checking class NioServerSocketChannelFactory:

  Verifying word isListening listen:

    No occurrences

Checking class Event$1:

  Verifying word isListening listen:

    No occurrences

Checking class Event$TopologyChange:

  Verifying word isListening listen:

    No occurrences

Checking class Event$StatusChange:

  Verifying word isListening listen:

    No occurrences

Checking class Event$SchemaChange:

  Verifying word isListening listen:

    No occurrences

Checking class CounterContext$ContextState:

  Verifying word isListening listen:

    No occurrences

Checking class CounterContext$LazyHolder:

  Verifying word isListening listen:

    No occurrences

Checking class MergeIterator$ManyToOne:

  Verifying word isListening listen:

    No occurrences

Checking class MergeIterator$TrivialOneToOne:

  Verifying word isListening listen:

    No occurrences

Checking class MergeIterator$OneToOne:

  Verifying word isListening listen:

    No occurrences

Checking class MergeIterator$Candidate:

  Verifying word isListening listen:

    No occurrences

Checking class CompositesSearcher$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEventHandler:

  Verifying word isListening listen:

    No occurrences

Checking class StreamState:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEvent:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableLoader$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSession$SSTableStreamingSections:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEvent$Type:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSession:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEvent$SessionCompleteEvent:

  Verifying word isListening listen:

    No occurrences

Checking class StreamManagerMBean:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEventJMXNotifier:

  Verifying word isListening listen:

    No occurrences

Checking class StreamManager$3:

  Verifying word isListening listen:

    No occurrences

Checking class MoreExecutors:

  Verifying word isListening listen:

    No occurrences

Checking class StreamManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamManager$2:

  Verifying word isListening listen:

    No occurrences

Checking class EchoMessage:

  Verifying word isListening listen:

    No occurrences

Checking class DefinitionsUpdateVerbHandler$1:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableDeletingTask$1:

  Verifying word isListening listen:

    No occurrences

Checking class SnapshotCommand:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestAck2:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestSyn:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigest:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestAck:

  Verifying word isListening listen:

    No occurrences

Checking class FailureDetectorMBean:

  Verifying word isListening listen:

    No occurrences

Checking class IFailureDetectionEventListener:

  Verifying word isListening listen:

    No occurrences

Checking class ArrivalWindow:

  Verifying word isListening listen:

    No occurrences

Checking class HeartBeatState:

  Verifying word isListening listen:

    No occurrences

Checking class CounterMutationVerbHandler$1:

  Verifying word isListening listen:

    No occurrences

Checking class ActiveRepairService$Status:

  Verifying word isListening listen:

    No occurrences

Checking class RepairSession:

  Verifying word isListening listen:

    No occurrences

Checking class RepairMessage:

  Verifying word isListening listen:

    No occurrences

Checking class ActiveRepairService$1:

  Verifying word isListening listen:

    No occurrences

Checking class SyncComplete:

  Verifying word isListening listen:

    No occurrences

Checking class ValidationComplete:

  Verifying word isListening listen:

    No occurrences

Checking class RepairMessage$Type:

  Verifying word isListening listen:

    No occurrences

Checking class NodePair:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree:

  Verifying word isListening listen:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTransferThreadFactory:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTransfer:

  Verifying word isListening listen:

    No occurrences

Checking class ValidationRequest:

  Verifying word isListening listen:

    No occurrences

Checking class SyncRequest:

  Verifying word isListening listen:

    No occurrences

Checking class RepairMessageVerbHandler$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamingRepairTask:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceReply:

  Verifying word isListening listen:

    No occurrences

Checking class TruncateResponse:

  Verifying word isListening listen:

    No occurrences

Checking class GossiperMBean:

  Verifying word isListening listen:

    No occurrences

Checking class Gossiper$GossipTask:

  Verifying word isListening listen:

    No occurrences

Checking class Gossiper$2:

  Verifying word isListening listen:

    No occurrences

Checking class Gossiper$1:

  Verifying word isListening listen:

    No occurrences

Checking class LoadBroadcaster$1:

  Verifying word isListening listen:

    No occurrences

Checking class Mx4jTool:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftServer:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraDaemon$NativeAccess:

  Verifying word isListening listen:

    No occurrences

Checking class PropertyConfigurator:

  Verifying word isListening listen:

    No occurrences

Checking class ReporterConfig:

  Verifying word isListening listen:

    No occurrences

Checking class MeteredFlusher:

  Verifying word isListening listen:

    No occurrences

Checking class NativeAccessMBean:

  Verifying word isListening listen:

    No occurrences

Checking class GCInspector:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraDaemon$3:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraDaemon$2:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraDaemon$1:

  Verifying word isListening listen:

    No occurrences

Checking class Auth$1:

  Verifying word isListening listen:

    No occurrences

Checking class Auth$MigrationListener:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareResponse$PrepareResponseSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class OutputHandler$SystemOutput:

  Verifying word isListening listen:

    No occurrences

Checking class Multimaps:

  Verifying word isListening listen:

    No occurrences

Checking class StageManager$ExecuteOnlyExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class StageManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class BootStrapper$StringSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class EndpointStateSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class PendingRangeCalculatorServiceMBean:

  Verifying word isListening listen:

    No occurrences

Checking class PendingRangeCalculatorService$PendingRangeTask:

  Verifying word isListening listen:

    No occurrences

Checking class WriteResponse:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteArrayInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManagerMBean:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManager$2:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManager$3:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManager$4:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandOffManager$5:

  Verifying word isListening listen:

    No occurrences

Checking class VersionedValue$VersionedValueSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class VersionGenerator:

  Verifying word isListening listen:

    No occurrences

Checking class ReadResponse:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractFuture:

  Verifying word isListening listen:

    No occurrences

Checking class ProgressInfo:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEvent$ProgressEvent:

  Verifying word isListening listen:

    No occurrences

Checking class StreamException:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfo:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEvent$SessionPreparedEvent:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionHandler:

  Verifying word isListening listen:

    No occurrences

Checking class BooleanSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class Stage$1:

  Verifying word isListening listen:

    No occurrences

Checking class AtomicDouble:

  Verifying word isListening listen:

    No occurrences

Checking class BackgroundActivityMonitor$BackgroundActivityReporter:

  Verifying word isListening listen:

    No occurrences

Checking class BatchlogManagerMBean:

  Verifying word isListening listen:

    No occurrences

Checking class BatchlogManager$1:

  Verifying word isListening listen:

    No occurrences

Checking class BatchlogManager$2:

  Verifying word isListening listen:

    No occurrences

Checking class BatchlogManager$3:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedPoolingSegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class PoolingSegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class CorruptBlockException:

  Verifying word isListening listen:

    No occurrences

Checking class DebuggableThreadPoolExecutor$1:

  Verifying word isListening listen:

    No occurrences

Checking class DebuggableThreadPoolExecutor$TraceSessionWrapper:

  Verifying word isListening listen:

    No occurrences

Checking class RandomAccessReader$BufferedRandomAccessFileMark:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator:

  Verifying word isListening listen:

    No occurrences

Checking class Murmur3BloomFilter$Murmur3BloomFilterSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class OpenBitSet:

  Verifying word isListening listen:

    No occurrences

Checking class IBitSet:

  Verifying word isListening listen:

    No occurrences

Checking class BloomFilter:

  Verifying word isListening listen:

    No occurrences

Checking class BloomCalculations$BloomSpecification:

  Verifying word isListening listen:

    No occurrences

Checking class Murmur3BloomFilter:

  Verifying word isListening listen:

    No occurrences

Checking class BloomCalculations:

  Verifying word isListening listen:

    No occurrences

Checking class OffHeapBitSet:

  Verifying word isListening listen:

    No occurrences

Checking class SegmentedFile$SegmentIterator:

  Verifying word isListening listen:

    No occurrences

Checking class MmappedSegmentedFile$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class BufferedPoolingSegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedPoolingSegmentedFile$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class MmappedSegmentedFile:

  Verifying word isListening listen:

    No occurrences

Checking class BufferedPoolingSegmentedFile$Builder:

  Verifying word isListening listen:

    No occurrences

Checking class SegmentedFile$Segment:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableReader$3$1:

  Verifying word isListening listen:

    No occurrences

Checking class MemoryOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class MemoryInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class RepairJobDesc$RepairJobDescSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionIterable$Reducer:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionIterable$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class Scrubber$ScrubInfo:

  Verifying word isListening listen:

    No occurrences

Checking class Scrubber$1:

  Verifying word isListening listen:

    No occurrences

Checking class Scrubber$ScrubController:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$TreeRange:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$TreeRangeIterator:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$RowHash:

  Verifying word isListening listen:

    No occurrences

Checking class Validator$CountingDigest:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Full:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded:

  Verifying word isListening listen:

    No occurrences

Checking class KeysSearcher$1:

  Verifying word isListening listen:

    No occurrences

Checking class KeyspaceNotDefinedException:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnPath:

  Verifying word isListening listen:

    No occurrences

Checking class Deletion:

  Verifying word isListening listen:

    No occurrences

Checking class PreExecutionHook:

  Verifying word isListening listen:

    No occurrences

Checking class PostPreparationHook:

  Verifying word isListening listen:

    No occurrences

Checking class SelectStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CQLStatement:

  Verifying word isListening listen:

    No occurrences

Checking class ExecutionContext:

  Verifying word isListening listen:

    No occurrences

Checking class QueryProcessor$1:

  Verifying word isListening listen:

    No occurrences

Checking class UpdateStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CreateKeyspaceStatement:

  Verifying word isListening listen:

    No occurrences

Checking class Relation:

  Verifying word isListening listen:

    No occurrences

Checking class DropIndexStatement:

  Verifying word isListening listen:

    No occurrences

Checking class PreparationContext:

  Verifying word isListening listen:

    No occurrences

Checking class DeleteStatement:

  Verifying word isListening listen:

    No occurrences

Checking class RelationType:

  Verifying word isListening listen:

    No occurrences

Checking class CreateColumnFamilyStatement:

  Verifying word isListening listen:

    No occurrences

Checking class RandomPartitioner:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser:

  Verifying word isListening listen:

    No occurrences

Checking class Term:

  Verifying word isListening listen:

    No occurrences

Checking class StatementType:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractModification:

  Verifying word isListening listen:

    No occurrences

Checking class AlterTableStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CreateIndexStatement:

  Verifying word isListening listen:

    No occurrences

Checking class CliUtils:

  Verifying word isListening listen:

    No occurrences

Checking class BatchStatement:

  Verifying word isListening listen:

    No occurrences

Checking class DataResource$Level:

  Verifying word isListening listen:

    No occurrences

Checking class DataResource$1:

  Verifying word isListening listen:

    No occurrences

Checking class RangeTombstoneList$1:

  Verifying word isListening listen:

    No occurrences

Checking class LazilyCompactedRow$Reducer:

  Verifying word isListening listen:

    No occurrences

Checking class PrecompactedRow$1:

  Verifying word isListening listen:

    No occurrences

Checking class AtomicSortedColumns$Holder:

  Verifying word isListening listen:

    No occurrences

Checking class AtomicSortedColumns$1:

  Verifying word isListening listen:

    No occurrences

Checking class SnapTreeMap:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$Reducer:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$CompactedRowContainer:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$NotifyingSSTableIdentityIterator:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$Unwrapper:

  Verifying word isListening listen:

    No occurrences

Checking class MigrationTask$1:

  Verifying word isListening listen:

    No occurrences

Checking class Stopwatch:

  Verifying word isListening listen:

    No occurrences

Checking class FormattingTuple:

  Verifying word isListening listen:

    No occurrences

Checking class MessageFormatter:

  Verifying word isListening listen:

    No occurrences

Checking class TraceState$1:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Prepender:

  Verifying word isListening listen:

    No occurrences

Checking class TupleType:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$Marker:

  Verifying word isListening listen:

    No occurrences

Checking class SingleColumnRelation$1:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$SetterByKey:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$DiscarderByKey:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$Setter:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$Value:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$Putter:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$Marker:

  Verifying word isListening listen:

    No occurrences

Checking class Maps$DelayedValue:

  Verifying word isListening listen:

    No occurrences

Checking class PermissionAlteringStatement:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$1:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$Setter:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Setter:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Setter:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$InMarker:

  Verifying word isListening listen:

    No occurrences

Checking class AuthenticationStatement:

  Verifying word isListening listen:

    No occurrences

Checking class AssignementTestable:

  Verifying word isListening listen:

    No occurrences

Checking class UpdateStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Value:

  Verifying word isListening listen:

    No occurrences

Checking class ParserRuleReturnScope:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Deleter:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$Bound:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$1:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$SimpleBound:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$ElementAccessBound:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$CollectionBound:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$Discarder:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$Adder:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$DelayedValue:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$Value:

  Verifying word isListening listen:

    No occurrences

Checking class Sets$Marker:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Marker:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractMarker$1:

  Verifying word isListening listen:

    No occurrences

Checking class AuthorizationStatement:

  Verifying word isListening listen:

    No occurrences

Checking class PermissionDetails:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Discarder:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Substracter:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Type:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$2:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$Adder:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$1:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$InValue:

  Verifying word isListening listen:

    No occurrences

Checking class Tuples$DelayedValue:

  Verifying word isListening listen:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Appender:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$SetterByIndex:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$Value:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$DelayedValue:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$DiscarderByIndex:

  Verifying word isListening listen:

    No occurrences

Checking class Lists$PrecisionTime:

  Verifying word isListening listen:

    No occurrences

Checking class FunctionCall$1:

  Verifying word isListening listen:

    No occurrences

Checking class ITrigger:

  Verifying word isListening listen:

    No occurrences

Checking class CounterMutationSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3CasConditions$NotExistCondition:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3CasConditions$RowCondition:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3CasConditions$ColumnsConditions:

  Verifying word isListening listen:

    No occurrences

Checking class CQL3CasConditions$ExistCondition:

  Verifying word isListening listen:

    No occurrences

Checking class JsonNode:

  Verifying word isListening listen:

    No occurrences

Checking class CollectionSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class EmptySerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ArrayBackedSortedColumns$ReverseSortedCollection$1:

  Verifying word isListening listen:

    No occurrences

Checking class ExpiringMap$1:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionMetrics$4:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionMetrics$5:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionMetrics$3:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class IMessageSink:

  Verifying word isListening listen:

    No occurrences

Checking class IRequestSink:

  Verifying word isListening listen:

    No occurrences

Checking class OutboundTcpConnection$QueuedMessage:

  Verifying word isListening listen:

    No occurrences

Checking class OutboundTcpConnection$1:

  Verifying word isListening listen:

    No occurrences

Checking class OutboundTcpConnection$RetriedQueuedMessage:

  Verifying word isListening listen:

    No occurrences

Checking class SnappyOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class IncomingTcpConnection:

  Verifying word isListening listen:

    No occurrences

Checking class IncomingStreamingConnection:

  Verifying word isListening listen:

    No occurrences

Checking class WriteResponse$WriteResponseSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class TruncateResponse$TruncateResponseSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceReply$RangeSliceReplySerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SnapshotCommandSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class PagedRangeCommand:

  Verifying word isListening listen:

    No occurrences

Checking class OutboundTcpConnectionPool$1:

  Verifying word isListening listen:

    No occurrences

Checking class CacheService$RowCacheSerializer$1:

  Verifying word isListening listen:

    No occurrences

Checking class CacheMetrics$4:

  Verifying word isListening listen:

    No occurrences

Checking class CacheMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class CacheMetrics$3:

  Verifying word isListening listen:

    No occurrences

Checking class CacheMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class SerializingCacheProvider$RowCacheSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SerializingCache:

  Verifying word isListening listen:

    No occurrences

Checking class ConcurrentLinkedHashCache$1:

  Verifying word isListening listen:

    No occurrences

Checking class IColumnIteratorFactory:

  Verifying word isListening listen:

    No occurrences

Checking class LazyColumnIterator:

  Verifying word isListening listen:

    No occurrences

Checking class RowIteratorFactory$ConvertToColumnIterator$1:

  Verifying word isListening listen:

    No occurrences

Checking class IntervalTree$IntervalNode:

  Verifying word isListening listen:

    No occurrences

Checking class IntervalTree$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class IntervalTree$1:

  Verifying word isListening listen:

    No occurrences

Checking class IntervalTree$TreeIterator:

  Verifying word isListening listen:

    No occurrences

Checking class IntervalTree$2:

  Verifying word isListening listen:

    No occurrences

Checking class RatioGauge:

  Verifying word isListening listen:

    No occurrences

Checking class IExecutorMBean:

  Verifying word isListening listen:

    No occurrences

Checking class ThreadPoolMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class ThreadPoolMetrics$3:

  Verifying word isListening listen:

    No occurrences

Checking class ThreadPoolMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class ThreadPoolMetrics$ThreadPoolMetricNameFactory:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedSequentialWriter$CompressedFileWriterMark:

  Verifying word isListening listen:

    No occurrences

Checking class SequentialWriter$BufferedFileWriterMark:

  Verifying word isListening listen:

    No occurrences

Checking class PureJavaCrc32:

  Verifying word isListening listen:

    No occurrences

Checking class DataIntegrityMetadata$ChecksumValidator:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogDescriptor:

  Verifying word isListening listen:

    No occurrences

Checking class ChecksummedOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogMetrics$3:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogReplayer$AlwaysReplayFilter:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogReplayer$ReplayFilter:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogReplayer$1:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogAllocator$5:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogAllocator$2:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogAllocator$1:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogAllocator$4:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogAllocator$3:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractCommitLogExecutorService:

  Verifying word isListening listen:

    No occurrences

Checking class BatchCommitLogExecutorService$CheaterFutureTask:

  Verifying word isListening listen:

    No occurrences

Checking class BatchCommitLogExecutorService$1:

  Verifying word isListening listen:

    No occurrences

Checking class BatchCommitLogExecutorService$2:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogArchiver$1:

  Verifying word isListening listen:

    No occurrences

Checking class Strings:

  Verifying word isListening listen:

    No occurrences

Checking class PeriodicCommitLogExecutorService$3:

  Verifying word isListening listen:

    No occurrences

Checking class PeriodicCommitLogExecutorService$4:

  Verifying word isListening listen:

    No occurrences

Checking class PeriodicCommitLogExecutorService$1:

  Verifying word isListening listen:

    No occurrences

Checking class PeriodicCommitLogExecutorService$2:

  Verifying word isListening listen:

    No occurrences

Checking class Property:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractEndpointSnitch$1:

  Verifying word isListening listen:

    No occurrences

Checking class IndexedSliceReader$BlockFetcher:

  Verifying word isListening listen:

    No occurrences

Checking class IndexedSliceReader$SimpleBlockFetcher:

  Verifying word isListening listen:

    No occurrences

Checking class IndexedSliceReader$IndexedBlockFetcher:

  Verifying word isListening listen:

    No occurrences

Checking class SortedBiMultiValMap$1:

  Verifying word isListening listen:

    No occurrences

Checking class TreeMultimap:

  Verifying word isListening listen:

    No occurrences

Checking class SinglePartitionPager:

  Verifying word isListening listen:

    No occurrences

Checking class SliceFromReadCommandSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class RetriedSliceFromReadCommand:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractQueryPager:

  Verifying word isListening listen:

    No occurrences

Checking class SliceByNamesReadCommandSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class LSInput:

  Verifying word isListening listen:

    No occurrences

Checking class OptionCodec$Codecable:

  Verifying word isListening listen:

    No occurrences

Checking class DataType$1:

  Verifying word isListening listen:

    No occurrences

Checking class UnsignedBytes:

  Verifying word isListening listen:

    No occurrences

Checking class FastByteComparisons$LexicographicalComparerHolder$UnsafeComparer$1:

  Verifying word isListening listen:

    No occurrences

Checking class Function$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class TokenFct:

  Verifying word isListening listen:

    No occurrences

Checking class UuidFcts:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractFunction:

  Verifying word isListening listen:

    No occurrences

Checking class TimeuuidFcts:

  Verifying word isListening listen:

    No occurrences

Checking class BytesConversionFcts:

  Verifying word isListening listen:

    No occurrences

Checking class ReadCommandSerializer$1:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractRowResolver:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$8$1:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandoffMetrics$DifferencingCounter:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandoffMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class HintedHandoffMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class ReadCallback$AsyncRepairRunner:

  Verifying word isListening listen:

    No occurrences

Checking class ListMultimap:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceResponseResolver$Reducer:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceResponseResolver$1:

  Verifying word isListening listen:

    No occurrences

Checking class RangeSliceResponseResolver$RowIterator:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractReadExecutor$NeverSpeculatingReadExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractReadExecutor$SpeculatingReadExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractReadExecutor$AlwaysSpeculatingReadExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class StorageProxy$LocalMutationRunnable$1:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractPaxosCallback:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareCallback$1:

  Verifying word isListening listen:

    No occurrences

Checking class TruncationSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CustomClassLoader:

  Verifying word isListening listen:

    No occurrences

Checking class MemoryAwareThreadPoolExecutor:

  Verifying word isListening listen:

    No occurrences

Checking class RequestThreadPoolExecutor$1:

  Verifying word isListening listen:

    No occurrences

Checking class Event$SchemaChange$Change:

  Verifying word isListening listen:

    No occurrences

Checking class ClientMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class Event$TopologyChange$Change:

  Verifying word isListening listen:

    No occurrences

Checking class Event$StatusChange$Status:

  Verifying word isListening listen:

    No occurrences

Checking class StreamState$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamingMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSession$State:

  Verifying word isListening listen:

    No occurrences

Checking class StreamMessage:

  Verifying word isListening listen:

    No occurrences

Checking class FileMessageHeader:

  Verifying word isListening listen:

    No occurrences

Checking class IncomingFileMessage:

  Verifying word isListening listen:

    No occurrences

Checking class ProgressInfo$Direction:

  Verifying word isListening listen:

    No occurrences

Checking class StreamReceiveTask:

  Verifying word isListening listen:

    No occurrences

Checking class StreamTransferTask:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSummary:

  Verifying word isListening listen:

    No occurrences

Checking class StreamTask:

  Verifying word isListening listen:

    No occurrences

Checking class StreamRequest:

  Verifying word isListening listen:

    No occurrences

Checking class RetryMessage:

  Verifying word isListening listen:

    No occurrences

Checking class OutgoingFileMessage:

  Verifying word isListening listen:

    No occurrences

Checking class StreamMessage$Type:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSession$2:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSession$1:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareMessage:

  Verifying word isListening listen:

    No occurrences

Checking class SessionFailedMessage:

  Verifying word isListening listen:

    No occurrences

Checking class ReceivedMessage:

  Verifying word isListening listen:

    No occurrences

Checking class CompleteMessage:

  Verifying word isListening listen:

    No occurrences

Checking class StreamStateCompositeData:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfoCompositeData:

  Verifying word isListening listen:

    No occurrences

Checking class ProgressInfoCompositeData:

  Verifying word isListening listen:

    No occurrences

Checking class SessionCompleteEventCompositeData:

  Verifying word isListening listen:

    No occurrences

Checking class StreamEventJMXNotifier$1:

  Verifying word isListening listen:

    No occurrences

Checking class EchoMessage$EchoMessageSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestAck2Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestSynSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestAckSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class BoundedStatsDeque:

  Verifying word isListening listen:

    No occurrences

Checking class HeartBeatStateSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class RepairException:

  Verifying word isListening listen:

    No occurrences

Checking class RepairJob:

  Verifying word isListening listen:

    No occurrences

Checking class SyncComplete$SyncCompleteSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ValidationComplete$ValidationCompleteSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class NodePair$NodePairSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$StopRecursion:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$StopRecursion$TooDeep:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$MerkleTreeSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$Hashable:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$StopRecursion$BadRange:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$TreeDifference:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$Inner:

  Verifying word isListening listen:

    No occurrences

Checking class Preconditions:

  Verifying word isListening listen:

    No occurrences

Checking class HistogramBuilder:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$Leaf:

  Verifying word isListening listen:

    No occurrences

Checking class JMXConfigurableThreadPoolExecutorMBean:

  Verifying word isListening listen:

    No occurrences

Checking class RepairMessage$RepairMessageSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ValidationRequest$ValidationRequestSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SyncRequest$SyncRequestSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftServer$ThriftServerThread:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraServer:

  Verifying word isListening listen:

    No occurrences

Checking class TFramedTransport$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class Cassandra$Processor:

  Verifying word isListening listen:

    No occurrences

Checking class MeteredFlusher$1:

  Verifying word isListening listen:

    No occurrences

Checking class GCInspector$1:

  Verifying word isListening listen:

    No occurrences

Checking class ReadResponseSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfo$1:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionHandler$IncomingMessageHandler:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionHandler$MessageHandler:

  Verifying word isListening listen:

    No occurrences

Checking class FileCacheService:

  Verifying word isListening listen:

    No occurrences

Checking class SSTableScanner$KeyScanningIterator$1:

  Verifying word isListening listen:

    No occurrences

Checking class BloomFilterSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class BitUtil:

  Verifying word isListening listen:

    No occurrences

Checking class BloomFilter$1:

  Verifying word isListening listen:

    No occurrences

Checking class MurmurHash:

  Verifying word isListening listen:

    No occurrences

Checking class RefCountedMemory:

  Verifying word isListening listen:

    No occurrences

Checking class MappedFileDataInput:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractDataInput:

  Verifying word isListening listen:

    No occurrences

Checking class CompactionManager$CleanupStrategy$Bounded$1:

  Verifying word isListening listen:

    No occurrences

Checking class SelectExpression:

  Verifying word isListening listen:

    No occurrences

Checking class WhereClause:

  Verifying word isListening listen:

    No occurrences

Checking class Attributes:

  Verifying word isListening listen:

    No occurrences

Checking class Operation:

  Verifying word isListening listen:

    No occurrences

Checking class Optional:

  Verifying word isListening listen:

    No occurrences

Checking class CFPropDefs:

  Verifying word isListening listen:

    No occurrences

Checking class BigIntegerToken:

  Verifying word isListening listen:

    No occurrences

Checking class RandomPartitioner$1:

  Verifying word isListening listen:

    No occurrences

Checking class GuidGenerator:

  Verifying word isListening listen:

    No occurrences

Checking class MissingTokenException:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA1:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA10:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA13:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA43:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$DFA54:

  Verifying word isListening listen:

    No occurrences

Checking class CqlParser$comparatorType_return:

  Verifying word isListening listen:

    No occurrences

Checking class TermType:

  Verifying word isListening listen:

    No occurrences

Checking class AlterTableStatement$OperationType:

  Verifying word isListening listen:

    No occurrences

Checking class Operation$OperationType:

  Verifying word isListening listen:

    No occurrences

Checking class Term$1:

  Verifying word isListening listen:

    No occurrences

Checking class LexicalUUIDType:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer$DFA1:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer$DFA7:

  Verifying word isListening listen:

    No occurrences

Checking class CqlLexer$DFA15:

  Verifying word isListening listen:

    No occurrences

Checking class CommonToken:

  Verifying word isListening listen:

    No occurrences

Checking class AlterTableStatement$1:

  Verifying word isListening listen:

    No occurrences

Checking class StringEscapeUtils:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$MergeTask:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$Reducer$DeserializedColumnIterator:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$Deserializer$1:

  Verifying word isListening listen:

    No occurrences

Checking class ParallelCompactionIterable$RowContainer$1:

  Verifying word isListening listen:

    No occurrences

Checking class ColumnCondition$Bound$1:

  Verifying word isListening listen:

    No occurrences

Checking class ComparisonChain:

  Verifying word isListening listen:

    No occurrences

Checking class Constants$1$1:

  Verifying word isListening listen:

    No occurrences

Checking class SnappyInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class StreamInitMessage:

  Verifying word isListening listen:

    No occurrences

Checking class PagedRangeCommand$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class EncodedDataInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class SerializingCache$1:

  Verifying word isListening listen:

    No occurrences

Checking class SerializingCache$2:

  Verifying word isListening listen:

    No occurrences

Checking class EncodedDataOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class CommitLogReplayer$CustomReplayFilter$1:

  Verifying word isListening listen:

    No occurrences

Checking class QueryPath:

  Verifying word isListening listen:

    No occurrences

Checking class TokenFct$1:

  Verifying word isListening listen:

    No occurrences

Checking class UuidFcts$1:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractFunction$1:

  Verifying word isListening listen:

    No occurrences

Checking class TimeuuidFcts$2:

  Verifying word isListening listen:

    No occurrences

Checking class TimeuuidFcts$3:

  Verifying word isListening listen:

    No occurrences

Checking class TimeuuidFcts$1:

  Verifying word isListening listen:

    No occurrences

Checking class TimeuuidFcts$4:

  Verifying word isListening listen:

    No occurrences

Checking class TimeuuidFcts$5:

  Verifying word isListening listen:

    No occurrences

Checking class BytesConversionFcts$2:

  Verifying word isListening listen:

    No occurrences

Checking class BytesConversionFcts$1:

  Verifying word isListening listen:

    No occurrences

Checking class BytesConversionFcts$4:

  Verifying word isListening listen:

    No occurrences

Checking class BytesConversionFcts$3:

  Verifying word isListening listen:

    No occurrences

Checking class AsyncRepairCallback:

  Verifying word isListening listen:

    No occurrences

Checking class CustomClassLoader$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamReceiveTask$OnCompletionRunnable:

  Verifying word isListening listen:

    No occurrences

Checking class StreamReceiveTask$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSummary$StreamSummarySerializer:

  Verifying word isListening listen:

    No occurrences

Checking class StreamRequest$StreamRequestSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class StreamMessage$Serializer:

  Verifying word isListening listen:

    No occurrences

Checking class RetryMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class OutgoingFileMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionInfo:

  Verifying word isListening listen:

    No occurrences

Checking class IncomingFileMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamTransferTask$1:

  Verifying word isListening listen:

    No occurrences

Checking class FileMessageHeader$FileMessageHeaderSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class PrepareMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class SessionFailedMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class ReceivedMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompleteMessage$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamStateCompositeData$1:

  Verifying word isListening listen:

    No occurrences

Checking class StreamStateCompositeData$2:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfoCompositeData$4:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfoCompositeData$1:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfoCompositeData$3:

  Verifying word isListening listen:

    No occurrences

Checking class SessionInfoCompositeData$2:

  Verifying word isListening listen:

    No occurrences

Checking class StreamSummaryCompositeData:

  Verifying word isListening listen:

    No occurrences

Checking class GossipDigestSerializationHelper:

  Verifying word isListening listen:

    No occurrences

Checking class RequestCoordinator:

  Verifying word isListening listen:

    No occurrences

Checking class RepairJob$2:

  Verifying word isListening listen:

    No occurrences

Checking class RepairJob$1:

  Verifying word isListening listen:

    No occurrences

Checking class TreeResponse:

  Verifying word isListening listen:

    No occurrences

Checking class Differencer:

  Verifying word isListening listen:

    No occurrences

Checking class SnapshotTask:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$Inner$InnerSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$Hashable$HashableSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$StopRecursion$InvalidHash:

  Verifying word isListening listen:

    No occurrences

Checking class MerkleTree$Leaf$LeafSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class TServer:

  Verifying word isListening listen:

    No occurrences

Checking class TServerFactory:

  Verifying word isListening listen:

    No occurrences

Checking class TServerFactory$Args:

  Verifying word isListening listen:

    No occurrences

Checking class TServerCustomFactory:

  Verifying word isListening listen:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class NotFoundException:

  Verifying word isListening listen:

    No occurrences

Checking class CASResult:

  Verifying word isListening listen:

    No occurrences

Checking class CfSplit:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraServer$3:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraServer$2:

  Verifying word isListening listen:

    No occurrences

Checking class ThriftSessionManager:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraServer$1:

  Verifying word isListening listen:

    No occurrences

Checking class CassandraServer$ThriftCASConditions:

  Verifying word isListening listen:

    No occurrences

Checking class ConnectionHandler$OutgoingMessageHandler$1:

  Verifying word isListening listen:

    No occurrences

Checking class SettableFuture:

  Verifying word isListening listen:

    No occurrences

Checking class Cache:

  Verifying word isListening listen:

    No occurrences

Checking class FileCacheMetrics:

  Verifying word isListening listen:

    No occurrences

Checking class FileCacheService$1:

  Verifying word isListening listen:

    No occurrences

Checking class FileCacheService$2:

  Verifying word isListening listen:

    No occurrences

Checking class MappedFileDataInput$MappedFileDataInputMark:

  Verifying word isListening listen:

    No occurrences

Checking class StreamInitMessage$StreamInitMessageSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractDataOutput:

  Verifying word isListening listen:

    No occurrences

Checking class AsyncRepairCallback$1:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedStreamWriter:

  Verifying word isListening listen:

    No occurrences

Checking class StreamWriter:

  Verifying word isListening listen:

    No occurrences

Checking class CompressionInfo$CompressionInfoSerializer:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedStreamReader:

  Verifying word isListening listen:

    No occurrences

Checking class StreamReader:

  Verifying word isListening listen:

    No occurrences

Checking class SnapshotTask$SnapshotCallback:

  Verifying word isListening listen:

    No occurrences

Checking class RequestCoordinator$Order:

  Verifying word isListening listen:

    No occurrences

Checking class RequestCoordinator$ParallelOrder:

  Verifying word isListening listen:

    No occurrences

Checking class RequestCoordinator$SequentialOrder:

  Verifying word isListening listen:

    No occurrences

Checking class CustomTNonBlockingServer$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class CustomTThreadPoolServer:

  Verifying word isListening listen:

    No occurrences

Checking class CustomTThreadPoolServer$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class THsHaDisruptorServer$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class CustomTNonBlockingServer:

  Verifying word isListening listen:

    No occurrences

Checking class THsHaDisruptorServer:

  Verifying word isListening listen:

    No occurrences

Checking class RemovalNotification:

  Verifying word isListening listen:

    No occurrences

Checking class FileCacheMetrics$1:

  Verifying word isListening listen:

    No occurrences

Checking class FileCacheMetrics$2:

  Verifying word isListening listen:

    No occurrences

Checking class LZFOutputStream:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class BytesReadTracker:

  Verifying word isListening listen:

    No occurrences

Checking class LZFInputStream:

  Verifying word isListening listen:

    No occurrences

Checking class TCustomNonblockingServerSocket:

  Verifying word isListening listen:

    No occurrences

Checking class TNonblockingServer$Args:

  Verifying word isListening listen:

    No occurrences

Checking class TNonblockingServer:

  Verifying word isListening listen:

    No occurrences

Checking class TThreadPoolServer$Args:

  Verifying word isListening listen:

    No occurrences

Checking class TServerTransport:

  Verifying word isListening listen:

    No occurrences

Checking class CustomTThreadPoolServer$WorkerProcess:

  Verifying word isListening listen:

    No occurrences

Checking class TSSLTransportFactory:

  Verifying word isListening listen:

    No occurrences

Checking class TSSLTransportFactory$TSSLTransportParameters:

  Verifying word isListening listen:

    No occurrences

Checking class TServerSocket:

  Verifying word isListening listen:

    No occurrences

Checking class TCustomServerSocket:

  Verifying word isListening listen:

    No occurrences

Checking class TDisruptorServer$Args:

  Verifying word isListening listen:

    No occurrences

Checking class TDisruptorServer:

  Verifying word isListening listen:

    No occurrences

Checking class TBinaryProtocol$Factory:

  Verifying word isListening listen:

    No occurrences

Checking class AbstractNonblockingServer$FrameBuffer:

  Verifying word isListening listen:

    No occurrences

Checking class CustomTNonBlockingServer$CustomFrameBuffer:

  Verifying word isListening listen:

    No occurrences

Checking class TNonblockingSocket:

  Verifying word isListening listen:

    No occurrences

Checking class CompressedInputStream$Reader:

  Verifying word isListening listen:

    No occurrences

Checking class TNonblockingServerSocket:

  Verifying word isListening listen:

    No occurrences

Checking class TCustomSocket:

  Verifying word isListening listen:

    No occurrences

Checking class TIOStreamTransport:

  Verifying word isListening listen:

    No occurrences


Run Time:
                         analysis-behavior      31.105s
                          analysis-threads       0.015s
                       build-parsing-table       0.230s
                               grammar-opt       2.560s
                        grammar-rm-epsilon      27.945s
                                   parsing       0.004s
                                 soot-init     141.572s
                                     total     382.123s

Profiling Vars:
                                 cfg-nodes     184764
                       grammar-productions       2896
                            parse-branches          4
                      parsing-table-states       4475
                                   threads          5
