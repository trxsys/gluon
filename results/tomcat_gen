Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Log:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CatalinaProperties:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LogFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Catalina:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Embedded:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LogConfigurationException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DirectJDKLog:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardClassLoader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Digester:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LifecycleException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardServer:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Lifecycle:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Server:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Rule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class EngineRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RuleSetBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HostRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringManager:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardService:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Engine:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LifecycleSupport:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Realm:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Connector:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Context:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Host:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Loader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LifecycleListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardEngine:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SystemLogHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Container:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Valve:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardContext:

  Verifying word getErrorCode getErrorCode:

      Method: StandardContext.addErrorPage()
      Calls Location: StandardContext.java:2467 StandardContext.java:2470
      Atomic: YES

      Method: StandardContext.removeErrorPage()
      Calls Location: StandardContext.java:3629 StandardContext.java:3632
      Atomic: YES

Checking class StandardHost:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebappLoader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RealmRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingResources:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingContextListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Service:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ServerFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Registry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringCache:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ServerInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Executor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ProtocolHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ArrayStack:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Rules:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ObjectParamRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CallParamRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CallMethodRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetNextRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetTopRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetPropertyRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetRootRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class PathCallParamRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RulesBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Adapter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Mapper:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MapperListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Request:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Response:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LoginConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LifecycleEvent:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Pipeline:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DigesterFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FilterMap:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityConstraint:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ExpandWar:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FilterDef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Wrapper:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CharsetMapper:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationParameter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MbeansSource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class JAASRealm:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardEngineValve:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class AccessLog:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CaptureLog:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Manager:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Cluster:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometEvent:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class URLEncoder:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MessageDestination:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityCollection:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FileDirContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ExtensionValidator:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardContextValve:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BaseDirContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceCache:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Globals:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextBindings:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardManager:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ProxyDirContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class TldConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestUtil:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardWrapper:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WARDirContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class InstanceListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardHostValve:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ValveBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardPipeline:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebappClassLoader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HostConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Resource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Document:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Element:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Node:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NodeList:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Text:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextTransaction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextEjb:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextEnvironment:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextResource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextResourceLink:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextService:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RegistryMBean:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ManagedBean:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ModelerSource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ByteChunk:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CharChunk:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerEvent:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class TransactionRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ServiceRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HandlerRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextAccessController:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class EjbRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContextHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class XercesParser:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class GenericParser:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringManager:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MappingData:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MessageBytes:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Response:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class OutputBuffer:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteWriter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UEncoder:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResponseFacade:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Session:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MimeHeaders:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class URL:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Response$3:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Response$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Response$2:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ServerCookie:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityUtil:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Request:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SocketStatus:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class B2CConverter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Cookies:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ActionCode:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Parameters:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ExceptionUtils:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UDecoder:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometEventImpl:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SSL:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Library:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class InputBuffer:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteReader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ParameterMap:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringParser:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Enumerator:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class GenericPrincipal:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Mapper$Host:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Mapper$Context:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Ascii:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetSessionConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetLoginConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetJspConfig:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetDistributableRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LocalResolver:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Constants:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class AttributeInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BaseModelMBean:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DomUtil:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RealmBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringManager:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamingEntry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Extension:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ManifestResource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NameParserImpl:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CacheEntry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ManagerBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardSession:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceAttributes:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class TldRuleSet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class InstanceSupport:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DummyRequest:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DummyResponse:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Constants:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContainerServlet:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class InstanceEvent:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ClientAbortException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Contained:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Reloader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceEntry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class JndiPermission:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IOTools:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DOMException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Attr:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class TypeInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DocumentType:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DOMImplementation:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DOMConfiguration:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamedNodeMap:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UserDataHandler:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CharacterData:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResourceBase:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NotificationInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class OperationInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DateTool:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HexUtils:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StringManager$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SessionListener:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MimeHeaderField:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class NamesEnumerator:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class C2BConverter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class OutputBuffer:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ActionHook:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MediaType:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HttpParser:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ServerCookie$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ReadConvertor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UserDataHelper:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Parameters$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class InputBuffer:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ContentType:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BIOCallback:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class PasswordCallback:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class InputBuffer$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometFilter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FeatureInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class MD5Encoder:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HexUtils:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationResponse:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationRequest:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardSession$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class SessionEvent:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class StandardSessionContext:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DummyRequest$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometProcessor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class Constants:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class DOMStringList:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ParameterInfo:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LSResourceResolver:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class WriteConvertor:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class CometFilterChain:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word getErrorCode getErrorCode:

    No occurrences

Checking class LSInput:

  Verifying word getErrorCode getErrorCode:

    No occurrences


Run Time:
                                .buildTree       0.000s
                                    .onLCA       0.001s
                         analysis-behavior      10.621s
                          analysis-threads       0.009s
                       build-parsing-table       0.033s
                       check-word-instance       0.001s
                               grammar-opt       1.959s
                        grammar-rm-epsilon       8.284s
                                   parsing       0.005s
                                 soot-init     160.276s
                                     total     190.993s

Profiling Vars:
                                 cfg-nodes      82596
                       grammar-productions        489
                            parse-branches          5
                               parse-trees          2
                      parsing-table-states        840
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word size values:

    No occurrences

Checking class Log:

  Verifying word size values:

    No occurrences

Checking class CatalinaProperties:

  Verifying word size values:

    No occurrences

Checking class LogFactory:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word size values:

    No occurrences

Checking class Catalina:

  Verifying word size values:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word size values:

    No occurrences

Checking class Embedded:

  Verifying word size values:

    No occurrences

Checking class LogConfigurationException:

  Verifying word size values:

    No occurrences

Checking class DirectJDKLog:

  Verifying word size values:

    No occurrences

Checking class StandardClassLoader:

  Verifying word size values:

    No occurrences

Checking class Digester:

  Verifying word size values:

    No occurrences

Checking class ContextRuleSet:

  Verifying word size values:

    No occurrences

Checking class LifecycleException:

  Verifying word size values:

    No occurrences

Checking class StandardServer:

  Verifying word size values:

    No occurrences

Checking class Lifecycle:

  Verifying word size values:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word size values:

    No occurrences

Checking class Server:

  Verifying word size values:

    No occurrences

Checking class RuleSet:

  Verifying word size values:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word size values:

    No occurrences

Checking class Rule:

  Verifying word size values:

    No occurrences

Checking class EngineRuleSet:

  Verifying word size values:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word size values:

    No occurrences

Checking class NamingRuleSet:

  Verifying word size values:

    No occurrences

Checking class RuleSetBase:

  Verifying word size values:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word size values:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word size values:

    No occurrences

Checking class HostRuleSet:

  Verifying word size values:

    No occurrences

Checking class StringManager:

  Verifying word size values:

    No occurrences

Checking class StandardService:

  Verifying word size values:

    No occurrences

Checking class Engine:

  Verifying word size values:

    No occurrences

Checking class LifecycleSupport:

  Verifying word size values:

    No occurrences

Checking class Realm:

  Verifying word size values:

    No occurrences

Checking class Connector:

  Verifying word size values:

    No occurrences

Checking class Context:

  Verifying word size values:

    No occurrences

Checking class Host:

  Verifying word size values:

    No occurrences

Checking class Loader:

  Verifying word size values:

    No occurrences

Checking class LifecycleListener:

  Verifying word size values:

    No occurrences

Checking class ContextConfig:

  Verifying word size values:

    No occurrences

Checking class StandardEngine:

  Verifying word size values:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word size values:

    No occurrences

Checking class SystemLogHandler:

  Verifying word size values:

    No occurrences

Checking class Container:

  Verifying word size values:

    No occurrences

Checking class SecurityConfig:

  Verifying word size values:

    No occurrences

Checking class Valve:

  Verifying word size values:

    No occurrences

Checking class StandardContext:

  Verifying word size values:

      Method: StandardContext.findErrorPages()
      Calls Location: StandardContext.java:3017 StandardContext.java:3018
      Atomic: YES

      Method: StandardContext.findMessageDestinations()
      Calls Location: StandardContext.java:3115 StandardContext.java:3117
      Atomic: YES

      Method: StandardContext.findFilterDefs()
      Calls Location: StandardContext.java:3054 StandardContext.java:3055
      Atomic: YES

      Method: StandardContext.findErrorPages()
      Calls Location: StandardContext.java:3014 StandardContext.java:3018
      Atomic: YES

      Method: StandardContext.findErrorPages()
      Calls Location: StandardContext.java:3014 StandardContext.java:3015
      Atomic: YES

Checking class StandardHost:

  Verifying word size values:

    No occurrences

Checking class WebappLoader:

  Verifying word size values:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word size values:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word size values:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word size values:

    No occurrences

Checking class RealmRuleSet:

  Verifying word size values:

    No occurrences

Checking class NamingResources:

  Verifying word size values:

      Method: NamingResources.findResources()
      Calls Location: NamingResources.java:555 NamingResources.java:556
      Atomic: YES

      Method: NamingResources.findMessageDestinationRefs()
      Calls Location: NamingResources.java:494 NamingResources.java:496
      Atomic: YES

      Method: NamingResources.findEjbs()
      Calls Location: NamingResources.java:406 NamingResources.java:407
      Atomic: YES

      Method: NamingResources.findResourceEnvRefs()
      Calls Location: NamingResources.java:585 NamingResources.java:586
      Atomic: YES

      Method: NamingResources.findServices()
      Calls Location: NamingResources.java:614 NamingResources.java:615
      Atomic: YES

      Method: NamingResources.findResourceLinks()
      Calls Location: NamingResources.java:539 NamingResources.java:541
      Atomic: YES

      Method: NamingResources.findEnvironments()
      Calls Location: NamingResources.java:436 NamingResources.java:437
      Atomic: YES

      Method: NamingResources.findLocalEjbs()
      Calls Location: NamingResources.java:465 NamingResources.java:466
      Atomic: YES

Checking class NamingContextListener:

  Verifying word size values:

    No occurrences

Checking class Service:

  Verifying word size values:

    No occurrences

Checking class ServerFactory:

  Verifying word size values:

    No occurrences

Checking class Registry:

  Verifying word size values:

    No occurrences

Checking class StringCache:

  Verifying word size values:

    No occurrences

Checking class ServerInfo:

  Verifying word size values:

    No occurrences

Checking class Executor:

  Verifying word size values:

    No occurrences

Checking class ProtocolHandler:

  Verifying word size values:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word size values:

    No occurrences

Checking class ArrayStack:

  Verifying word size values:

    No occurrences

Checking class Rules:

  Verifying word size values:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word size values:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word size values:

    No occurrences

Checking class ObjectParamRule:

  Verifying word size values:

    No occurrences

Checking class CallParamRule:

  Verifying word size values:

    No occurrences

Checking class CallMethodRule:

  Verifying word size values:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word size values:

    No occurrences

Checking class SetNextRule:

  Verifying word size values:

    No occurrences

Checking class SetTopRule:

  Verifying word size values:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word size values:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word size values:

    No occurrences

Checking class SetPropertyRule:

  Verifying word size values:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word size values:

    No occurrences

Checking class SetRootRule:

  Verifying word size values:

    No occurrences

Checking class PathCallParamRule:

  Verifying word size values:

    No occurrences

Checking class RulesBase:

  Verifying word size values:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word size values:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word size values:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word size values:

    No occurrences

Checking class ContainerBase:

  Verifying word size values:

      Method: ContainerBase.destroy()
      Calls Location: ContainerBase.java:868 ContainerBase.java:869
      Atomic: NO

      Method: ContainerBase.stop()
      Calls Location: ContainerBase.java:868 ContainerBase.java:869
      Atomic: YES

      Method: ContainerBase.findChildren()
      Calls Location: ContainerBase.java:868 ContainerBase.java:869
      Atomic: YES

      Method: ContainerBase.getChildren()
      Calls Location: ContainerBase.java:1525 ContainerBase.java:1526
      Atomic: NO

Checking class Adapter:

  Verifying word size values:

    No occurrences

Checking class Mapper:

  Verifying word size values:

    No occurrences

Checking class MapperListener:

  Verifying word size values:

    No occurrences

Checking class Request:

  Verifying word size values:

    No occurrences

Checking class Response:

  Verifying word size values:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word size values:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word size values:

    No occurrences

Checking class WebRuleSet:

  Verifying word size values:

    No occurrences

Checking class LoginConfig:

  Verifying word size values:

    No occurrences

Checking class LifecycleEvent:

  Verifying word size values:

    No occurrences

Checking class Pipeline:

  Verifying word size values:

    No occurrences

Checking class DigesterFactory:

  Verifying word size values:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word size values:

    No occurrences

Checking class FilterMap:

  Verifying word size values:

    No occurrences

Checking class ErrorPage:

  Verifying word size values:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word size values:

    No occurrences

Checking class SecurityConstraint:

  Verifying word size values:

    No occurrences

Checking class ExpandWar:

  Verifying word size values:

    No occurrences

Checking class FilterDef:

  Verifying word size values:

    No occurrences

Checking class Wrapper:

  Verifying word size values:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word size values:

    No occurrences

Checking class CharsetMapper:

  Verifying word size values:

    No occurrences

Checking class ApplicationParameter:

  Verifying word size values:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word size values:

    No occurrences

Checking class MbeansSource:

  Verifying word size values:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word size values:

    No occurrences

Checking class JAASRealm:

  Verifying word size values:

    No occurrences

Checking class StandardEngineValve:

  Verifying word size values:

    No occurrences

Checking class AccessLog:

  Verifying word size values:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word size values:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word size values:

    No occurrences

Checking class CaptureLog:

  Verifying word size values:

    No occurrences

Checking class Manager:

  Verifying word size values:

    No occurrences

Checking class Cluster:

  Verifying word size values:

    No occurrences

Checking class ContainerListener:

  Verifying word size values:

    No occurrences

Checking class CometEvent:

  Verifying word size values:

    No occurrences

Checking class URLEncoder:

  Verifying word size values:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word size values:

    No occurrences

Checking class ApplicationContext:

  Verifying word size values:

    No occurrences

Checking class MessageDestination:

  Verifying word size values:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word size values:

    No occurrences

Checking class SecurityCollection:

  Verifying word size values:

    No occurrences

Checking class FileDirContext:

  Verifying word size values:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word size values:

    No occurrences

Checking class ExtensionValidator:

  Verifying word size values:

    No occurrences

Checking class StandardContextValve:

  Verifying word size values:

    No occurrences

Checking class BaseDirContext:

  Verifying word size values:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word size values:

    No occurrences

Checking class ResourceCache:

  Verifying word size values:

    No occurrences

Checking class Globals:

  Verifying word size values:

    No occurrences

Checking class ContextBindings:

  Verifying word size values:

    No occurrences

Checking class StandardManager:

  Verifying word size values:

    No occurrences

Checking class ProxyDirContext:

  Verifying word size values:

    No occurrences

Checking class TldConfig:

  Verifying word size values:

    No occurrences

Checking class RequestUtil:

  Verifying word size values:

    No occurrences

Checking class StandardWrapper:

  Verifying word size values:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word size values:

    No occurrences

Checking class WARDirContext:

  Verifying word size values:

    No occurrences

Checking class InstanceListener:

  Verifying word size values:

    No occurrences

Checking class StandardHostValve:

  Verifying word size values:

    No occurrences

Checking class ValveBase:

  Verifying word size values:

    No occurrences

Checking class StandardPipeline:

  Verifying word size values:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word size values:

    No occurrences

Checking class WebappClassLoader:

  Verifying word size values:

    No occurrences

Checking class HostConfig:

  Verifying word size values:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word size values:

    No occurrences

Checking class Resource:

  Verifying word size values:

    No occurrences

Checking class Document:

  Verifying word size values:

    No occurrences

Checking class Element:

  Verifying word size values:

    No occurrences

Checking class Node:

  Verifying word size values:

    No occurrences

Checking class NodeList:

  Verifying word size values:

    No occurrences

Checking class Text:

  Verifying word size values:

    No occurrences

Checking class ContextTransaction:

  Verifying word size values:

    No occurrences

Checking class ContextEjb:

  Verifying word size values:

    No occurrences

Checking class ContextEnvironment:

  Verifying word size values:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word size values:

    No occurrences

Checking class ContextResource:

  Verifying word size values:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word size values:

    No occurrences

Checking class ContextResourceLink:

  Verifying word size values:

    No occurrences

Checking class ContextService:

  Verifying word size values:

    No occurrences

Checking class RegistryMBean:

  Verifying word size values:

    No occurrences

Checking class ManagedBean:

  Verifying word size values:

    No occurrences

Checking class ModelerSource:

  Verifying word size values:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word size values:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word size values:

    No occurrences

Checking class ByteChunk:

  Verifying word size values:

    No occurrences

Checking class CharChunk:

  Verifying word size values:

    No occurrences

Checking class NamingContext:

  Verifying word size values:

    No occurrences

Checking class ContainerEvent:

  Verifying word size values:

    No occurrences

Checking class TransactionRef:

  Verifying word size values:

    No occurrences

Checking class ServiceRef:

  Verifying word size values:

    No occurrences

Checking class HandlerRef:

  Verifying word size values:

    No occurrences

Checking class ContextAccessController:

  Verifying word size values:

    No occurrences

Checking class ResourceRef:

  Verifying word size values:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word size values:

    No occurrences

Checking class EjbRef:

  Verifying word size values:

    No occurrences

Checking class ContextHandler:

  Verifying word size values:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word size values:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word size values:

    No occurrences

Checking class XercesParser:

  Verifying word size values:

    No occurrences

Checking class GenericParser:

  Verifying word size values:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word size values:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word size values:

    No occurrences

Checking class StringManager:

  Verifying word size values:

    No occurrences

Checking class MappingData:

  Verifying word size values:

    No occurrences

Checking class MessageBytes:

  Verifying word size values:

    No occurrences

Checking class Response:

  Verifying word size values:

    No occurrences

Checking class OutputBuffer:

  Verifying word size values:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word size values:

    No occurrences

Checking class CoyoteWriter:

  Verifying word size values:

    No occurrences

Checking class UEncoder:

  Verifying word size values:

    No occurrences

Checking class ResponseFacade:

  Verifying word size values:

    No occurrences

Checking class Session:

  Verifying word size values:

    No occurrences

Checking class MimeHeaders:

  Verifying word size values:

    No occurrences

Checking class URL:

  Verifying word size values:

    No occurrences

Checking class Response$3:

  Verifying word size values:

    No occurrences

Checking class Response$1:

  Verifying word size values:

    No occurrences

Checking class Response$2:

  Verifying word size values:

    No occurrences

Checking class ServerCookie:

  Verifying word size values:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word size values:

    No occurrences

Checking class SecurityUtil:

  Verifying word size values:

    No occurrences

Checking class Request:

  Verifying word size values:

    No occurrences

Checking class SocketStatus:

  Verifying word size values:

    No occurrences

Checking class RequestInfo:

  Verifying word size values:

    No occurrences

Checking class B2CConverter:

  Verifying word size values:

    No occurrences

Checking class Cookies:

  Verifying word size values:

    No occurrences

Checking class ActionCode:

  Verifying word size values:

    No occurrences

Checking class Parameters:

  Verifying word size values:

    No occurrences

Checking class ExceptionUtils:

  Verifying word size values:

    No occurrences

Checking class UDecoder:

  Verifying word size values:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word size values:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word size values:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word size values:

    No occurrences

Checking class CometEventImpl:

  Verifying word size values:

    No occurrences

Checking class SSL:

  Verifying word size values:

    No occurrences

Checking class Library:

  Verifying word size values:

    No occurrences

Checking class InputBuffer:

  Verifying word size values:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word size values:

    No occurrences

Checking class CoyoteReader:

  Verifying word size values:

    No occurrences

Checking class ParameterMap:

  Verifying word size values:

    No occurrences

Checking class StringParser:

  Verifying word size values:

    No occurrences

Checking class RequestFacade:

  Verifying word size values:

    No occurrences

Checking class Enumerator:

  Verifying word size values:

    No occurrences

Checking class GenericPrincipal:

  Verifying word size values:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word size values:

    No occurrences

Checking class Mapper$Host:

  Verifying word size values:

    No occurrences

Checking class Mapper$Context:

  Verifying word size values:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word size values:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word size values:

    No occurrences

Checking class Ascii:

  Verifying word size values:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word size values:

    No occurrences

Checking class SetSessionConfig:

  Verifying word size values:

    No occurrences

Checking class SetLoginConfig:

  Verifying word size values:

    No occurrences

Checking class SetJspConfig:

  Verifying word size values:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word size values:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word size values:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word size values:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word size values:

    No occurrences

Checking class SetDistributableRule:

  Verifying word size values:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word size values:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word size values:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word size values:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word size values:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word size values:

    No occurrences

Checking class LocalResolver:

  Verifying word size values:

    No occurrences

Checking class Constants:

  Verifying word size values:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word size values:

    No occurrences

Checking class AttributeInfo:

  Verifying word size values:

    No occurrences

Checking class BaseModelMBean:

  Verifying word size values:

    No occurrences

Checking class DomUtil:

  Verifying word size values:

    No occurrences

Checking class RealmBase:

  Verifying word size values:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word size values:

    No occurrences

Checking class StringManager:

  Verifying word size values:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word size values:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word size values:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word size values:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word size values:

    No occurrences

Checking class NamingEntry:

  Verifying word size values:

    No occurrences

Checking class ResourceSet:

  Verifying word size values:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word size values:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word size values:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word size values:

    No occurrences

Checking class Extension:

  Verifying word size values:

    No occurrences

Checking class ManifestResource:

  Verifying word size values:

    No occurrences

Checking class NameParserImpl:

  Verifying word size values:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word size values:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word size values:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word size values:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word size values:

    No occurrences

Checking class CacheEntry:

  Verifying word size values:

    No occurrences

Checking class ManagerBase:

  Verifying word size values:

    No occurrences

Checking class StandardSession:

  Verifying word size values:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word size values:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word size values:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word size values:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word size values:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word size values:

    No occurrences

Checking class ResourceAttributes:

  Verifying word size values:

    No occurrences

Checking class TldRuleSet:

  Verifying word size values:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word size values:

    No occurrences

Checking class InstanceSupport:

  Verifying word size values:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word size values:

    No occurrences

Checking class DummyRequest:

  Verifying word size values:

    No occurrences

Checking class DummyResponse:

  Verifying word size values:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word size values:

    No occurrences

Checking class Constants:

  Verifying word size values:

    No occurrences

Checking class ContainerServlet:

  Verifying word size values:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word size values:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word size values:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word size values:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word size values:

    No occurrences

Checking class InstanceEvent:

  Verifying word size values:

    No occurrences

Checking class ClientAbortException:

  Verifying word size values:

    No occurrences

Checking class Contained:

  Verifying word size values:

    No occurrences

Checking class Reloader:

  Verifying word size values:

    No occurrences

Checking class ResourceEntry:

  Verifying word size values:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word size values:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word size values:

    No occurrences

Checking class JndiPermission:

  Verifying word size values:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word size values:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word size values:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word size values:

    No occurrences

Checking class IOTools:

  Verifying word size values:

    No occurrences

Checking class DOMException:

  Verifying word size values:

    No occurrences

Checking class Attr:

  Verifying word size values:

    No occurrences

Checking class TypeInfo:

  Verifying word size values:

    No occurrences

Checking class DocumentType:

  Verifying word size values:

    No occurrences

Checking class DOMImplementation:

  Verifying word size values:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word size values:

    No occurrences

Checking class DOMConfiguration:

  Verifying word size values:

    No occurrences

Checking class NamedNodeMap:

  Verifying word size values:

    No occurrences

Checking class UserDataHandler:

  Verifying word size values:

    No occurrences

Checking class CharacterData:

  Verifying word size values:

    No occurrences

Checking class ResourceBase:

  Verifying word size values:

    No occurrences

Checking class NotificationInfo:

  Verifying word size values:

    No occurrences

Checking class OperationInfo:

  Verifying word size values:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word size values:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word size values:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word size values:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word size values:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word size values:

    No occurrences

Checking class DateTool:

  Verifying word size values:

    No occurrences

Checking class HexUtils:

  Verifying word size values:

    No occurrences

Checking class StringManager$1:

  Verifying word size values:

    No occurrences

Checking class SessionListener:

  Verifying word size values:

    No occurrences

Checking class MimeHeaderField:

  Verifying word size values:

    No occurrences

Checking class NamesEnumerator:

  Verifying word size values:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word size values:

    No occurrences

Checking class C2BConverter:

  Verifying word size values:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word size values:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word size values:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class OutputBuffer:

  Verifying word size values:

    No occurrences

Checking class ActionHook:

  Verifying word size values:

    No occurrences

Checking class MediaType:

  Verifying word size values:

    No occurrences

Checking class HttpParser:

  Verifying word size values:

    No occurrences

Checking class ServerCookie$1:

  Verifying word size values:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word size values:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word size values:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word size values:

    No occurrences

Checking class ReadConvertor:

  Verifying word size values:

    No occurrences

Checking class UserDataHelper:

  Verifying word size values:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word size values:

    No occurrences

Checking class Parameters$1:

  Verifying word size values:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word size values:

    No occurrences

Checking class InputBuffer:

  Verifying word size values:

    No occurrences

Checking class ContentType:

  Verifying word size values:

    No occurrences

Checking class BIOCallback:

  Verifying word size values:

    No occurrences

Checking class PasswordCallback:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word size values:

    No occurrences

Checking class InputBuffer$1:

  Verifying word size values:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word size values:

    No occurrences

Checking class CometFilter:

  Verifying word size values:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word size values:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word size values:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word size values:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word size values:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word size values:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word size values:

    No occurrences

Checking class FeatureInfo:

  Verifying word size values:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word size values:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word size values:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word size values:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word size values:

    No occurrences

Checking class MD5Encoder:

  Verifying word size values:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word size values:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word size values:

    No occurrences

Checking class HexUtils:

  Verifying word size values:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word size values:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word size values:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word size values:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word size values:

    No occurrences

Checking class ApplicationResponse:

  Verifying word size values:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word size values:

    No occurrences

Checking class ApplicationRequest:

  Verifying word size values:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word size values:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word size values:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word size values:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word size values:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word size values:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word size values:

    No occurrences

Checking class StandardSession$1:

  Verifying word size values:

    No occurrences

Checking class SessionEvent:

  Verifying word size values:

    No occurrences

Checking class StandardSessionContext:

  Verifying word size values:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word size values:

    No occurrences

Checking class DummyRequest$1:

  Verifying word size values:

    No occurrences

Checking class CometProcessor:

  Verifying word size values:

    No occurrences

Checking class Constants:

  Verifying word size values:

    No occurrences

Checking class DOMStringList:

  Verifying word size values:

    No occurrences

Checking class ParameterInfo:

  Verifying word size values:

    No occurrences

Checking class LSResourceResolver:

  Verifying word size values:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word size values:

    No occurrences

Checking class WriteConvertor:

  Verifying word size values:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word size values:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word size values:

    No occurrences

Checking class CometFilterChain:

  Verifying word size values:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word size values:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word size values:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word size values:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word size values:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word size values:

    No occurrences

Checking class LSInput:

  Verifying word size values:

    No occurrences


Run Time:
                                .buildTree       0.002s
                                    .onLCA       0.006s
                         analysis-behavior       8.866s
                          analysis-threads       0.009s
                       build-parsing-table       0.436s
                       check-word-instance       0.003s
                               grammar-opt       0.745s
                        grammar-rm-epsilon       7.870s
                                   parsing       0.009s
                                 soot-init     162.837s
                                     total     190.343s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions       2740
                            parse-branches        117
                               parse-trees         17
                      parsing-table-states       2921
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Log:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CatalinaProperties:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LogFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Catalina:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Embedded:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LogConfigurationException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DirectJDKLog:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardClassLoader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Digester:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LifecycleException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardServer:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

      Method: StandardServer.stop()
      Calls Location: StandardServer.java:782 StandardServer.java:792
      Atomic: NO

      Method: StandardServer.start()
      Calls Location: StandardServer.java:747 StandardServer.java:759
      Atomic: NO

      Method: StandardServer.start()
      Calls Location: StandardServer.java:745 StandardServer.java:747
      Atomic: NO

      Method: StandardServer.stop()
      Calls Location: StandardServer.java:780 StandardServer.java:792
      Atomic: NO

      Method: StandardServer.stop()
      Calls Location: StandardServer.java:780 StandardServer.java:782
      Atomic: NO

      Method: StandardServer.start()
      Calls Location: StandardServer.java:745 StandardServer.java:759
      Atomic: NO

Checking class Lifecycle:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Server:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Rule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class EngineRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RuleSetBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HostRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringManager:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardService:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

      Method: StandardService.stop()
      Calls Location: StandardService.java:594 StandardService.java:647
      Atomic: NO

      Method: StandardService.start()
      Calls Location: StandardService.java:518 StandardService.java:550
      Atomic: NO

      Method: StandardService.stop()
      Calls Location: StandardService.java:572 StandardService.java:647
      Atomic: NO

      Method: StandardService.stop()
      Calls Location: StandardService.java:572 StandardService.java:594
      Atomic: NO

      Method: StandardService.start()
      Calls Location: StandardService.java:515 StandardService.java:518
      Atomic: NO

      Method: StandardService.start()
      Calls Location: StandardService.java:515 StandardService.java:550
      Atomic: NO

Checking class Engine:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Realm:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Connector:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Context:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Host:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Loader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LifecycleListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardEngine:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SystemLogHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Container:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Valve:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4854 StandardContext.java:4953
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4854 StandardContext.java:4854
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4854 StandardContext.java:4899
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4899
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4953
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4616
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4854
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4472
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4704
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:4983
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4854 StandardContext.java:5703
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4899 StandardContext.java:4953
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4899 StandardContext.java:4854
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4899 StandardContext.java:4899
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4899
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4953
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4616
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4854
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4472
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4704
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:4983
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4899 StandardContext.java:5703
      Atomic: YES

    *** Timeout ***

Checking class StandardHost:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebappLoader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RealmRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingResources:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingContextListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Service:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ServerFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Registry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringCache:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ServerInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Executor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ProtocolHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ArrayStack:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Rules:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ObjectParamRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CallParamRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CallMethodRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetNextRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetTopRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetPropertyRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetRootRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class PathCallParamRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RulesBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

      Method: ContainerBase.start()
      Calls Location: ContainerBase.java:1065 ContainerBase.java:1071
      Atomic: YES

      Method: ContainerBase.stop()
      Calls Location: ContainerBase.java:1098 ContainerBase.java:1139
      Atomic: YES

      Method: ContainerBase.stop()
      Calls Location: ContainerBase.java:1092 ContainerBase.java:1098
      Atomic: YES

      Method: ContainerBase.start()
      Calls Location: ContainerBase.java:1033 ContainerBase.java:1065
      Atomic: YES

      Method: ContainerBase.stop()
      Calls Location: ContainerBase.java:1092 ContainerBase.java:1139
      Atomic: YES

      Method: ContainerBase.start()
      Calls Location: ContainerBase.java:1033 ContainerBase.java:1071
      Atomic: YES

Checking class Adapter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Mapper:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MapperListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Request:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Response:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LoginConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LifecycleEvent:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Pipeline:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DigesterFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FilterMap:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ErrorPage:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityConstraint:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ExpandWar:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FilterDef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Wrapper:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CharsetMapper:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationParameter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MbeansSource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class JAASRealm:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardEngineValve:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class AccessLog:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CaptureLog:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Manager:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Cluster:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometEvent:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class URLEncoder:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MessageDestination:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityCollection:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FileDirContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ExtensionValidator:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardContextValve:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BaseDirContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceCache:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Globals:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextBindings:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardManager:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ProxyDirContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class TldConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestUtil:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardWrapper:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WARDirContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class InstanceListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardHostValve:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ValveBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardPipeline:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

      Method: StandardPipeline.start()
      Calls Location: StandardPipeline.java:239 StandardPipeline.java:242
      Atomic: YES

      Method: StandardPipeline.stop()
      Calls Location: StandardPipeline.java:264 StandardPipeline.java:280
      Atomic: YES

      Method: StandardPipeline.stop()
      Calls Location: StandardPipeline.java:261 StandardPipeline.java:280
      Atomic: YES

      Method: StandardPipeline.stop()
      Calls Location: StandardPipeline.java:261 StandardPipeline.java:264
      Atomic: YES

      Method: StandardPipeline.start()
      Calls Location: StandardPipeline.java:222 StandardPipeline.java:239
      Atomic: YES

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebappClassLoader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HostConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Resource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Document:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Element:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Node:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NodeList:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Text:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextTransaction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextEjb:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextEnvironment:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextResource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextResourceLink:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextService:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RegistryMBean:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ManagedBean:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ModelerSource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ByteChunk:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CharChunk:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerEvent:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class TransactionRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ServiceRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HandlerRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextAccessController:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class EjbRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContextHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class XercesParser:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class GenericParser:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringManager:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MappingData:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MessageBytes:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Response:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class OutputBuffer:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteWriter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UEncoder:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResponseFacade:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Session:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MimeHeaders:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class URL:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Response$3:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Response$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Response$2:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ServerCookie:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityUtil:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Request:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SocketStatus:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class B2CConverter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Cookies:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ActionCode:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Parameters:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ExceptionUtils:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UDecoder:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometEventImpl:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SSL:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Library:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class InputBuffer:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteReader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ParameterMap:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringParser:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Enumerator:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class GenericPrincipal:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Mapper$Host:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Mapper$Context:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Ascii:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetSessionConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetLoginConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetJspConfig:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetDistributableRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LocalResolver:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Constants:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class AttributeInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BaseModelMBean:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DomUtil:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RealmBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringManager:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamingEntry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Extension:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ManifestResource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NameParserImpl:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CacheEntry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ManagerBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardSession:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceAttributes:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class TldRuleSet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class InstanceSupport:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DummyRequest:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DummyResponse:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Constants:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContainerServlet:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class InstanceEvent:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ClientAbortException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Contained:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Reloader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceEntry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class JndiPermission:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IOTools:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DOMException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Attr:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class TypeInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DocumentType:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DOMImplementation:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DOMConfiguration:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamedNodeMap:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UserDataHandler:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CharacterData:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResourceBase:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NotificationInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class OperationInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DateTool:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HexUtils:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StringManager$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SessionListener:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MimeHeaderField:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class NamesEnumerator:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class C2BConverter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class OutputBuffer:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ActionHook:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MediaType:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HttpParser:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ServerCookie$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ReadConvertor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UserDataHelper:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Parameters$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class InputBuffer:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ContentType:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BIOCallback:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class PasswordCallback:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class InputBuffer$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometFilter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FeatureInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class MD5Encoder:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HexUtils:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationResponse:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationRequest:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardSession$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class SessionEvent:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class StandardSessionContext:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DummyRequest$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometProcessor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class Constants:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class DOMStringList:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ParameterInfo:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LSResourceResolver:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class WriteConvertor:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class CometFilterChain:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences

Checking class LSInput:

  Verifying word fireLifecycleEvent fireLifecycleEvent:

    No occurrences


Run Time:
                                .buildTree     244.706s
                                    .onLCA     541.186s
                         analysis-behavior       8.809s
                          analysis-threads       0.009s
                       build-parsing-table       0.096s
                       check-word-instance       0.004s
                               grammar-opt       0.786s
                        grammar-rm-epsilon       7.790s
                                   parsing    2050.450s
                                 soot-init     162.753s
                                     total    2889.829s

Profiling Vars:
                                 cfg-nodes      82498
                       grammar-productions        827
                            parse-branches  166413549
                               parse-trees         45
                      parsing-table-states       1190
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Log:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CatalinaProperties:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LogFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Catalina:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityClassLoad:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Embedded:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LogConfigurationException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DirectJDKLog:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardClassLoader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Digester:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardServer:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Lifecycle:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Server:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Rule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class EngineRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RuleSetBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HostRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringManager:

  Verifying word get(X) put(X,_):

      Method: StringManager.getManager()
      Calls Location: StringManager.java:245 StringManager.java:249
      Atomic: YES

Checking class StandardService:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Engine:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleSupport:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Realm:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Connector:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Context:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Host:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Loader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardEngine:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntrospectionUtils:

  Verifying word get(X) put(X,_):

      Method: IntrospectionUtils.processArgs()
      Calls Location: IntrospectionUtils.java:837 IntrospectionUtils.java:842
      Atomic: NO

      Method: IntrospectionUtils.processArgs()
      Calls Location: IntrospectionUtils.java:837 IntrospectionUtils.java:842
      Atomic: NO

      Method: IntrospectionUtils.findMethods()
      Calls Location: IntrospectionUtils.java:837 IntrospectionUtils.java:842
      Atomic: NO

Checking class SystemLogHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Container:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Valve:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardHost:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappLoader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetNextNamingRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RealmRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingResources:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingContextListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Service:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServerFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Registry:

  Verifying word get(X) put(X,_):

      Method: Registry.getId()
      Calls Location: Registry.java:361 Registry.java:373
      Atomic: YES

      Method: Registry.getId()
      Calls Location: Registry.java:367 Registry.java:370
      Atomic: YES

      Method: Registry.getId()
      Calls Location: Registry.java:353 Registry.java:370
      Atomic: YES

      Method: Registry.getId()
      Calls Location: Registry.java:353 Registry.java:356
      Atomic: YES

Checking class StringCache:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServerInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Executor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ProtocolHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ArrayStack:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Rules:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ObjectParamRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CallParamRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CallMethodRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FactoryCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetNextRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetTopRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ObjectCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetPropertyRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetPropertiesRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetRootRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class PathCallParamRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RulesBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Adapter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MapperListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Request:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Response:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteAdapter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class AprLifecycleListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LoginConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleEvent:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Pipeline:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DigesterFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FilterMap:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ErrorPage:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebAnnotationSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityConstraint:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ExpandWar:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FilterDef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Wrapper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class XmlErrorHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CharsetMapper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationParameter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MbeansSource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class JAASRealm:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardEngineValve:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class AccessLog:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CaptureLog:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Manager:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Cluster:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometEvent:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class URLEncoder:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class AnnotationProcessor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MessageDestination:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MessageDestinationRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityCollection:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FileDirContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ExtensionValidator:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardContextValve:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BaseDirContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceCache:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Globals:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextBindings:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardManager:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ProxyDirContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class TldConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestUtil:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardWrapper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WARDirContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class InstanceListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardHostValve:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ValveBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardPipeline:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappClassLoader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HostConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Resource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Document:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Element:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Node:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NodeList:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Text:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextTransaction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextEjb:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextEnvironment:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextLocalEjb:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextResource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextResourceLink:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextService:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RegistryMBean:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ManagedBean:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ModelerSource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ByteChunk:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CharChunk:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerEvent:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class TransactionRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServiceRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HandlerRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextAccessController:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceLinkRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class EjbRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceEnvRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class XercesParser:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class GenericParser:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringManager:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MappingData:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MessageBytes:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Response:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class OutputBuffer:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteWriter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UEncoder:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResponseFacade:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Session:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MimeHeaders:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class URL:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Response$3:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Response$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Response$2:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServerCookie:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityUtil:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Request:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SocketStatus:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class B2CConverter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Cookies:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ActionCode:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Parameters:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ExceptionUtils:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UDecoder:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyotePrincipal:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometEvent$EventType:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometEventImpl:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SSL:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Library:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class InputBuffer:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteInputStream:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteReader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ParameterMap:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringParser:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Enumerator:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class GenericPrincipal:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper$Host:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper$Context:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper$MapElement:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Ascii:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper$ContextList:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetSessionConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetLoginConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetJspConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WrapperCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SoapHeaderRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServiceQnameRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetPublicIdRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetDistributableRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CallParamMultiRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LocalResolver:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Constants:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class AttributeInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BaseModelMBean:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DomUtil:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RealmBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringManager:

  Verifying word get(X) put(X,_):

      Method: StringManager.getManager()
      Calls Location: StringManager.java:211 StringManager.java:214
      Atomic: YES

Checking class NamingContextBindingsEnumeration:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingEntry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Extension:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ManifestResource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NameParserImpl:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CacheEntry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ManagerBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardSession:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceAttributes:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class TldRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class InstanceSupport:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardWrapperValve:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DummyRequest:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DummyResponse:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardWrapper$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Constants:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerServlet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class PeriodicEventListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DirContextURLConnection:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class InstanceEvent:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClientAbortException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Contained:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Reloader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceEntry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class JndiPermission:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IOTools:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DOMException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Attr:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class TypeInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DocumentType:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DOMImplementation:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ProcessingInstruction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DOMConfiguration:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamedNodeMap:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UserDataHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CharacterData:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResourceBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NotificationInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class OperationInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DateTool:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HexUtils:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringManager$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SessionListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MimeHeaderField:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamesEnumerator:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ValuesEnumerator:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class C2BConverter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class OutputBuffer$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResponseFacade$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class OutputBuffer:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ActionHook:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MediaType:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HttpParser:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServerCookie$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityUtil$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestGroupInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntermediateInputStream:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ReadConvertor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UserDataHelper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Parameters$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class InputBuffer:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContentType:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BIOCallback:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class PasswordCallback:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class InputBuffer$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometFilter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityRoleRef:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FeatureInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MD5Encoder:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HexUtils:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationResponse:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationRequest:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardSessionFacade:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardSession$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SessionEvent:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardSessionContext:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DummyRequest$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometProcessor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Constants:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DOMStringList:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ParameterInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LSResourceResolver:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WriteConvertor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CometFilterChain:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LSInput:

  Verifying word get(X) put(X,_):

    No occurrences


Run Time:
                                .buildTree       0.094s
                                    .onLCA       0.502s
                         analysis-behavior       9.243s
                          analysis-threads       0.009s
                           analysis-vequiv       0.001s
                       build-parsing-table       0.091s
                       check-word-instance       0.074s
                               grammar-opt       0.911s
                        grammar-rm-epsilon       8.082s
                                   parsing       1.134s
                                 soot-init     154.660s
                                     total     184.074s

Profiling Vars:
                                 cfg-nodes      82652
            discarded-trees-args-not-match          8
                       grammar-productions       1254
                            parse-branches     247535
                               parse-trees          9
                      parsing-table-states       1482
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Log:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CatalinaProperties:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LogFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Catalina:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Embedded:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LogConfigurationException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DirectJDKLog:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardClassLoader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Digester:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LifecycleException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardServer:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Lifecycle:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Server:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Rule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class EngineRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RuleSetBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HostRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringManager:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardService:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Engine:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LifecycleSupport:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Realm:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Connector:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Context:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Host:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Loader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LifecycleListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardEngine:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SystemLogHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Container:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Valve:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardHost:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebappLoader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RealmRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingResources:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingContextListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Service:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ServerFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Registry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringCache:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ServerInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Executor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ProtocolHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ArrayStack:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Rules:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ObjectParamRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CallParamRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CallMethodRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetNextRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetTopRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetPropertyRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetRootRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class PathCallParamRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RulesBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Adapter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Mapper:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MapperListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Request:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Response:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LoginConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LifecycleEvent:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Pipeline:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DigesterFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FilterMap:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ErrorPage:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityConstraint:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ExpandWar:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FilterDef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Wrapper:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CharsetMapper:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationParameter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MbeansSource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class JAASRealm:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardEngineValve:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class AccessLog:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CaptureLog:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Manager:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Cluster:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometEvent:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class URLEncoder:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MessageDestination:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityCollection:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FileDirContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ExtensionValidator:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardContextValve:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BaseDirContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceCache:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Globals:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextBindings:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardManager:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ProxyDirContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class TldConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestUtil:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardWrapper:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

      Method: StandardWrapper.loadServlet()
      Calls Location: StandardWrapper.java:1153 StandardWrapper.java:1154
      Atomic: YES

      Method: StandardWrapper.unload()
      Calls Location: StandardWrapper.java:1500 StandardWrapper.java:1500
      Atomic: YES

      Method: StandardWrapper.unload()
      Calls Location: StandardWrapper.java:1454 StandardWrapper.java:1500
      Atomic: YES

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:1154 StandardWrapper.java:1153
      Atomic: NO

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:1154 StandardWrapper.java:1154
      Atomic: NO

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:1153 StandardWrapper.java:1153
      Atomic: NO

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:1153 StandardWrapper.java:1154
      Atomic: NO

Checking class DirContextURLStreamHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WARDirContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class InstanceListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardHostValve:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ValveBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardPipeline:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebappClassLoader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HostConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Resource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Document:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Element:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Node:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NodeList:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Text:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextTransaction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextEjb:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextEnvironment:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextResource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextResourceLink:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextService:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RegistryMBean:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ManagedBean:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ModelerSource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ByteChunk:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CharChunk:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerEvent:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class TransactionRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ServiceRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HandlerRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextAccessController:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class EjbRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContextHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class XercesParser:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class GenericParser:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringManager:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MappingData:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MessageBytes:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Response:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class OutputBuffer:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteWriter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UEncoder:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResponseFacade:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Session:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MimeHeaders:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class URL:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Response$3:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Response$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Response$2:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ServerCookie:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityUtil:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Request:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SocketStatus:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class B2CConverter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Cookies:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ActionCode:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Parameters:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ExceptionUtils:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UDecoder:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometEventImpl:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SSL:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Library:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class InputBuffer:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteReader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ParameterMap:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringParser:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Enumerator:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class GenericPrincipal:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Mapper$Host:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Mapper$Context:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Ascii:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetSessionConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetLoginConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetJspConfig:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetDistributableRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LocalResolver:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Constants:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class AttributeInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BaseModelMBean:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DomUtil:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RealmBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringManager:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamingEntry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Extension:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ManifestResource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NameParserImpl:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CacheEntry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ManagerBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardSession:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceAttributes:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class TldRuleSet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class InstanceSupport:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DummyRequest:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DummyResponse:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Constants:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContainerServlet:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class InstanceEvent:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ClientAbortException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Contained:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Reloader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceEntry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class JndiPermission:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IOTools:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DOMException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Attr:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class TypeInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DocumentType:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DOMImplementation:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DOMConfiguration:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamedNodeMap:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UserDataHandler:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CharacterData:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResourceBase:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NotificationInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class OperationInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DateTool:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HexUtils:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StringManager$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SessionListener:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MimeHeaderField:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class NamesEnumerator:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class C2BConverter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class OutputBuffer:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ActionHook:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MediaType:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HttpParser:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ServerCookie$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ReadConvertor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UserDataHelper:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Parameters$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class InputBuffer:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ContentType:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BIOCallback:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class PasswordCallback:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class InputBuffer$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometFilter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FeatureInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class MD5Encoder:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HexUtils:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationResponse:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationRequest:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardSession$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class SessionEvent:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class StandardSessionContext:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DummyRequest$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometProcessor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class Constants:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class DOMStringList:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ParameterInfo:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LSResourceResolver:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class WriteConvertor:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class CometFilterChain:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences

Checking class LSInput:

  Verifying word getAnnotationProcessor getAnnotationProcessor:

    No occurrences


Run Time:
                                .buildTree       0.008s
                                    .onLCA       0.054s
                         analysis-behavior       8.309s
                          analysis-threads       0.009s
                       build-parsing-table       0.089s
                       check-word-instance       0.000s
                               grammar-opt       0.820s
                        grammar-rm-epsilon       7.257s
                                   parsing       0.132s
                                 soot-init     158.828s
                                     total     186.227s

Profiling Vars:
                                 cfg-nodes      77327
                       grammar-productions       1207
                            parse-branches       5915
                               parse-trees          7
                      parsing-table-states       1446
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Log:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CatalinaProperties:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LogFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Catalina:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Embedded:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LogConfigurationException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DirectJDKLog:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardClassLoader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Digester:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LifecycleException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardServer:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Lifecycle:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Server:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Rule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class EngineRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamingRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RuleSetBase:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HostRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringManager:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardService:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Engine:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LifecycleSupport:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Realm:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Connector:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Context:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Host:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Loader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LifecycleListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardEngine:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SystemLogHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Container:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Valve:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardHost:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebappLoader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RealmRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamingResources:

  Verifying word setNamingResources getName:

      Method: NamingResources.addService()
      Calls Location: NamingResources.java:376 NamingResources.java:377
      Atomic: YES

      Method: NamingResources.addResource()
      Calls Location: NamingResources.java:302 NamingResources.java:303
      Atomic: YES

      Method: NamingResources.addResourceEnvRef()
      Calls Location: NamingResources.java:324 NamingResources.java:325
      Atomic: YES

      Method: NamingResources.addLocalEjb()
      Calls Location: NamingResources.java:246 NamingResources.java:247
      Atomic: YES

      Method: NamingResources.addEjb()
      Calls Location: NamingResources.java:180 NamingResources.java:181
      Atomic: YES

      Method: NamingResources.addResourceLink()
      Calls Location: NamingResources.java:350 NamingResources.java:351
      Atomic: YES

Checking class NamingContextListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Service:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ServerFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Registry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringCache:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ServerInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Executor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ProtocolHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ArrayStack:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Rules:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ObjectParamRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CallParamRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CallMethodRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetNextRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetTopRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetPropertyRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetRootRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class PathCallParamRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RulesBase:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerBase:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Adapter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Mapper:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MapperListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Request:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Response:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LoginConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LifecycleEvent:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Pipeline:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DigesterFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FilterMap:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ErrorPage:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityConstraint:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ExpandWar:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FilterDef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Wrapper:

  Verifying word setNamingResources getName:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CharsetMapper:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationParameter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MbeansSource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class JAASRealm:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardEngineValve:

  Verifying word setNamingResources getName:

    No occurrences

Checking class AccessLog:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CaptureLog:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Manager:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Cluster:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometEvent:

  Verifying word setNamingResources getName:

    No occurrences

Checking class URLEncoder:

  Verifying word setNamingResources getName:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MessageDestination:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityCollection:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FileDirContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ExtensionValidator:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardContextValve:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BaseDirContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceCache:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Globals:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextBindings:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardManager:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ProxyDirContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class TldConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestUtil:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardWrapper:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WARDirContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class InstanceListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardHostValve:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ValveBase:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardPipeline:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebappClassLoader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HostConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Resource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Document:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Element:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Node:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NodeList:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Text:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextTransaction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextEjb:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextEnvironment:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextResource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextResourceLink:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextService:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RegistryMBean:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ManagedBean:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ModelerSource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ByteChunk:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CharChunk:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamingContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerEvent:

  Verifying word setNamingResources getName:

    No occurrences

Checking class TransactionRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ServiceRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HandlerRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextAccessController:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class EjbRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContextHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class XercesParser:

  Verifying word setNamingResources getName:

    No occurrences

Checking class GenericParser:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringManager:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MappingData:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MessageBytes:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Response:

  Verifying word setNamingResources getName:

    No occurrences

Checking class OutputBuffer:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteWriter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UEncoder:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResponseFacade:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Session:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MimeHeaders:

  Verifying word setNamingResources getName:

    No occurrences

Checking class URL:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Response$3:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Response$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Response$2:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ServerCookie:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityUtil:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Request:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SocketStatus:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class B2CConverter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Cookies:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ActionCode:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Parameters:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ExceptionUtils:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UDecoder:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometEventImpl:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SSL:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Library:

  Verifying word setNamingResources getName:

    No occurrences

Checking class InputBuffer:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteReader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ParameterMap:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringParser:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Enumerator:

  Verifying word setNamingResources getName:

    No occurrences

Checking class GenericPrincipal:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Mapper$Host:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Mapper$Context:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Ascii:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetSessionConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetLoginConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetJspConfig:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetDistributableRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LocalResolver:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Constants:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word setNamingResources getName:

    No occurrences

Checking class AttributeInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BaseModelMBean:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DomUtil:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RealmBase:

  Verifying word setNamingResources getName:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringManager:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamingEntry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Extension:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ManifestResource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NameParserImpl:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CacheEntry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ManagerBase:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardSession:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word setNamingResources getName:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceAttributes:

  Verifying word setNamingResources getName:

    No occurrences

Checking class TldRuleSet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word setNamingResources getName:

    No occurrences

Checking class InstanceSupport:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DummyRequest:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DummyResponse:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Constants:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContainerServlet:

  Verifying word setNamingResources getName:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class InstanceEvent:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ClientAbortException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Contained:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Reloader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResourceEntry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word setNamingResources getName:

    No occurrences

Checking class JndiPermission:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IOTools:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DOMException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Attr:

  Verifying word setNamingResources getName:

    No occurrences

Checking class TypeInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DocumentType:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DOMImplementation:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DOMConfiguration:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamedNodeMap:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UserDataHandler:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CharacterData:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NotificationInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class OperationInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DateTool:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HexUtils:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StringManager$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SessionListener:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MimeHeaderField:

  Verifying word setNamingResources getName:

    No occurrences

Checking class NamesEnumerator:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word setNamingResources getName:

    No occurrences

Checking class C2BConverter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class OutputBuffer:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ActionHook:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MediaType:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HttpParser:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ServerCookie$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ReadConvertor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UserDataHelper:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Parameters$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word setNamingResources getName:

    No occurrences

Checking class InputBuffer:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ContentType:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BIOCallback:

  Verifying word setNamingResources getName:

    No occurrences

Checking class PasswordCallback:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word setNamingResources getName:

    No occurrences

Checking class InputBuffer$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometFilter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FeatureInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word setNamingResources getName:

    No occurrences

Checking class MD5Encoder:

  Verifying word setNamingResources getName:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HexUtils:

  Verifying word setNamingResources getName:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationResponse:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationRequest:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardSession$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class SessionEvent:

  Verifying word setNamingResources getName:

    No occurrences

Checking class StandardSessionContext:

  Verifying word setNamingResources getName:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DummyRequest$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometProcessor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class Constants:

  Verifying word setNamingResources getName:

    No occurrences

Checking class DOMStringList:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ParameterInfo:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LSResourceResolver:

  Verifying word setNamingResources getName:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word setNamingResources getName:

    No occurrences

Checking class WriteConvertor:

  Verifying word setNamingResources getName:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word setNamingResources getName:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word setNamingResources getName:

    No occurrences

Checking class CometFilterChain:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word setNamingResources getName:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word setNamingResources getName:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word setNamingResources getName:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word setNamingResources getName:

    No occurrences

Checking class LSInput:

  Verifying word setNamingResources getName:

    No occurrences


Run Time:
                                .buildTree       0.000s
                                    .onLCA       0.001s
                         analysis-behavior       9.075s
                          analysis-threads       0.008s
                       build-parsing-table       0.950s
                       check-word-instance       0.001s
                               grammar-opt       1.095s
                        grammar-rm-epsilon       7.725s
                                   parsing       0.004s
                                 soot-init     162.067s
                                     total     191.535s

Profiling Vars:
                                 cfg-nodes      82593
                       grammar-productions       1166
                            parse-branches         25
                               parse-trees          6
                      parsing-table-states       1569
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Log:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CatalinaProperties:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LogFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Catalina:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityClassLoad:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Embedded:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LogConfigurationException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class DirectJDKLog:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardClassLoader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Digester:

  Verifying word get(X) put(X,_):

      Method: Digester.startPrefixMapping()
      Calls Location: Digester.java:1410 Digester.java:1413
      Atomic: NO

      Method: Digester.push()
      Calls Location: Digester.java:2545 Digester.java:2548
      Atomic: NO

Checking class ContextRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleException:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardServer:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Lifecycle:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Server:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Rule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class EngineRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RuleSetBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class HostRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StringManager:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardService:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Engine:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleSupport:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Realm:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Connector:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Context:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Host:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Loader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContextConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardEngine:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntrospectionUtils:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SystemLogHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Container:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SecurityConfig:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Valve:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class StandardContext:

  Verifying word get(X) put(X,_):

      Method: StandardContext.filterStart()
      Calls Location: StandardContext.java:4076 StandardContext.java:4078
      Atomic: NO

      Method: StandardContext.addChild()
      Calls Location: StandardContext.java:2752 StandardContext.java:2759
      Atomic: NO

      Method: StandardContext.addServletMapping()
      Calls Location: StandardContext.java:2752 StandardContext.java:2759
      Atomic: YES

      Method: StandardContext.addParameter()
      Calls Location: StandardContext.java:2664 StandardContext.java:2670
      Atomic: NO

Checking class StandardHost:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class WebappLoader:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetNextNamingRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RealmRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingResources:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class NamingContextListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Service:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ServerFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Registry:

  Verifying word get(X) put(X,_):

      Method: Registry.loadDescriptors()
      Calls Location: Registry.java:825 Registry.java:841
      Atomic: NO

      Method: Registry.findDescriptor()
      Calls Location: Registry.java:825 Registry.java:841
      Atomic: NO

      Method: Registry.getRegistry()
      Calls Location: Registry.java:156 Registry.java:161
      Atomic: YES

Checking class StringCache:

  Verifying word get(X) put(X,_):

      Method: StringCache.toString()
      Calls Location: StringCache.java:400 StringCache.java:411
      Atomic: YES

      Method: StringCache.toString()
      Calls Location: StringCache.java:288 StringCache.java:301
      Atomic: YES

Checking class ServerInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Executor:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ProtocolHandler:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ArrayStack:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Rules:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ObjectParamRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CallParamRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CallMethodRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class FactoryCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetNextRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetTopRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ObjectCreateRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetPropertyRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetPropertiesRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class SetRootRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class PathCallParamRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class RulesBase:

  Verifying word get(X) put(X,_):

      Method: RulesBase.add()
      Calls Location: RulesBase.java:155 RulesBase.java:158
      Atomic: NO

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class ContainerBase:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Adapter:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Mapper:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class MapperListener:

  Verifying word get(X) put(X,_):

    No occurrences

Checking class Request:

  Verifying word get(X) put(X,_):

Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word size get:

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:179 Bootstrap.java:180
      Atomic: NO

      Method: Bootstrap.initClassLoaders()
      Calls Location: Bootstrap.java:179 Bootstrap.java:180
      Atomic: NO

      Method: Bootstrap.createClassLoader()
      Calls Location: Bootstrap.java:179 Bootstrap.java:180
      Atomic: NO

Checking class Log:

  Verifying word size get:

    No occurrences

Checking class CatalinaProperties:

  Verifying word size get:

    No occurrences

Checking class LogFactory:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word size get:

    No occurrences

Checking class Catalina:

  Verifying word size get:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word size get:

    No occurrences

Checking class Embedded:

  Verifying word size get:

    No occurrences

Checking class LogConfigurationException:

  Verifying word size get:

    No occurrences

Checking class DirectJDKLog:

  Verifying word size get:

    No occurrences

Checking class StandardClassLoader:

  Verifying word size get:

    No occurrences

Checking class Digester:

  Verifying word size get:

    No occurrences

Checking class ContextRuleSet:

  Verifying word size get:

    No occurrences

Checking class LifecycleException:

  Verifying word size get:

    No occurrences

Checking class StandardServer:

  Verifying word size get:

    No occurrences

Checking class Lifecycle:

  Verifying word size get:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word size get:

    No occurrences

Checking class Server:

  Verifying word size get:

    No occurrences

Checking class RuleSet:

  Verifying word size get:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word size get:

    No occurrences

Checking class Rule:

  Verifying word size get:

    No occurrences

Checking class EngineRuleSet:

  Verifying word size get:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word size get:

    No occurrences

Checking class NamingRuleSet:

  Verifying word size get:

    No occurrences

Checking class RuleSetBase:

  Verifying word size get:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word size get:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word size get:

    No occurrences

Checking class HostRuleSet:

  Verifying word size get:

    No occurrences

Checking class StringManager:

  Verifying word size get:

    No occurrences

Checking class StandardService:

  Verifying word size get:

      Method: StandardService.stop()
      Calls Location: StandardService.java:623 StandardService.java:624
      Atomic: YES

      Method: StandardService.start()
      Calls Location: StandardService.java:531 StandardService.java:532
      Atomic: YES

      Method: StandardService.start()
      Calls Location: StandardService.java:453 StandardService.java:532
      Atomic: NO

      Method: StandardService.getExecutor()
      Calls Location: StandardService.java:466 StandardService.java:468
      Atomic: YES

      Method: StandardService.getExecutor()
      Calls Location: StandardService.java:466 StandardService.java:467
      Atomic: YES

Checking class Engine:

  Verifying word size get:

    No occurrences

Checking class LifecycleSupport:

  Verifying word size get:

    No occurrences

Checking class Realm:

  Verifying word size get:

    No occurrences

Checking class Connector:

  Verifying word size get:

    No occurrences

Checking class Context:

  Verifying word size get:

    No occurrences

Checking class Host:

  Verifying word size get:

    No occurrences

Checking class Loader:

  Verifying word size get:

    No occurrences

Checking class LifecycleListener:

  Verifying word size get:

    No occurrences

Checking class ContextConfig:

  Verifying word size get:

    No occurrences

Checking class StandardEngine:

  Verifying word size get:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word size get:

    No occurrences

Checking class SystemLogHandler:

  Verifying word size get:

    No occurrences

Checking class Container:

  Verifying word size get:

    No occurrences

Checking class SecurityConfig:

  Verifying word size get:

    No occurrences

Checking class Valve:

  Verifying word size get:

    No occurrences

Checking class StandardContext:

  Verifying word size get:

    No occurrences

Checking class StandardHost:

  Verifying word size get:

    No occurrences

Checking class WebappLoader:

  Verifying word size get:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word size get:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word size get:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word size get:

    No occurrences

Checking class RealmRuleSet:

  Verifying word size get:

    No occurrences

Checking class NamingResources:

  Verifying word size get:

    No occurrences

Checking class NamingContextListener:

  Verifying word size get:

    No occurrences

Checking class Service:

  Verifying word size get:

    No occurrences

Checking class ServerFactory:

  Verifying word size get:

    No occurrences

Checking class Registry:

  Verifying word size get:

      Method: Registry.registerComponent()
      Calls Location: Registry.java:591 Registry.java:592
      Atomic: NO

      Method: Registry.unregisterComponent()
      Calls Location: Registry.java:591 Registry.java:592
      Atomic: NO

      Method: Registry.invoke()
      Calls Location: Registry.java:591 Registry.java:592
      Atomic: NO

      Method: Registry.getMBeanServer()
      Calls Location: Registry.java:591 Registry.java:592
      Atomic: YES

Checking class StringCache:

  Verifying word size get:

      Method: StringCache.toString()
      Calls Location: StringCache.java:373 StringCache.java:374
      Atomic: YES

      Method: StringCache.toString()
      Calls Location: StringCache.java:261 StringCache.java:262
      Atomic: YES

Checking class ServerInfo:

  Verifying word size get:

    No occurrences

Checking class Executor:

  Verifying word size get:

    No occurrences

Checking class ProtocolHandler:

  Verifying word size get:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word size get:

    No occurrences

Checking class ArrayStack:

  Verifying word size get:

      Method: ArrayStack.peek()
      Calls Location: ArrayStack.java:106 ArrayStack.java:110
      Atomic: NO

      Method: ArrayStack.peek()
      Calls Location: ArrayStack.java:88 ArrayStack.java:92
      Atomic: NO

      Method: ArrayStack.search()
      Calls Location: ArrayStack.java:154 ArrayStack.java:157
      Atomic: NO

Checking class Rules:

  Verifying word size get:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word size get:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word size get:

    No occurrences

Checking class ObjectParamRule:

  Verifying word size get:

    No occurrences

Checking class CallParamRule:

  Verifying word size get:

    No occurrences

Checking class CallMethodRule:

  Verifying word size get:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word size get:

    No occurrences

Checking class SetNextRule:

  Verifying word size get:

    No occurrences

Checking class SetTopRule:

  Verifying word size get:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word size get:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word size get:

    No occurrences

Checking class SetPropertyRule:

  Verifying word size get:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word size get:

    No occurrences

Checking class SetRootRule:

  Verifying word size get:

    No occurrences

Checking class PathCallParamRule:

  Verifying word size get:

    No occurrences

Checking class RulesBase:

  Verifying word size get:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word size get:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word size get:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word size get:

    No occurrences

Checking class ContainerBase:

  Verifying word size get:

    No occurrences

Checking class Adapter:

  Verifying word size get:

    No occurrences

Checking class Mapper:

  Verifying word size get:

    No occurrences

Checking class MapperListener:

  Verifying word size get:

    No occurrences

Checking class Request:

  Verifying word size get:

      Method: Request.getLocale()
      Calls Location: Request.java:1067 Request.java:1068
      Atomic: NO

Checking class Response:

  Verifying word size get:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word size get:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word size get:

    No occurrences

Checking class WebRuleSet:

  Verifying word size get:

    No occurrences

Checking class LoginConfig:

  Verifying word size get:

    No occurrences

Checking class LifecycleEvent:

  Verifying word size get:

    No occurrences

Checking class Pipeline:

  Verifying word size get:

    No occurrences

Checking class DigesterFactory:

  Verifying word size get:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word size get:

    No occurrences

Checking class FilterMap:

  Verifying word size get:

    No occurrences

Checking class ErrorPage:

  Verifying word size get:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word size get:

    No occurrences

Checking class SecurityConstraint:

  Verifying word size get:

    No occurrences

Checking class ExpandWar:

  Verifying word size get:

    No occurrences

Checking class FilterDef:

  Verifying word size get:

    No occurrences

Checking class Wrapper:

  Verifying word size get:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word size get:

    No occurrences

Checking class CharsetMapper:

  Verifying word size get:

    No occurrences

Checking class ApplicationParameter:

  Verifying word size get:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word size get:

    No occurrences

Checking class MbeansSource:

  Verifying word size get:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word size get:

    No occurrences

Checking class JAASRealm:

  Verifying word size get:

    No occurrences

Checking class StandardEngineValve:

  Verifying word size get:

    No occurrences

Checking class AccessLog:

  Verifying word size get:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word size get:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word size get:

    No occurrences

Checking class CaptureLog:

  Verifying word size get:

    No occurrences

Checking class Manager:

  Verifying word size get:

    No occurrences

Checking class Cluster:

  Verifying word size get:

    No occurrences

Checking class ContainerListener:

  Verifying word size get:

    No occurrences

Checking class CometEvent:

  Verifying word size get:

    No occurrences

Checking class URLEncoder:

  Verifying word size get:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word size get:

    No occurrences

Checking class ApplicationContext:

  Verifying word size get:

    No occurrences

Checking class MessageDestination:

  Verifying word size get:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word size get:

    No occurrences

Checking class SecurityCollection:

  Verifying word size get:

    No occurrences

Checking class FileDirContext:

  Verifying word size get:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word size get:

    No occurrences

Checking class ExtensionValidator:

  Verifying word size get:

    No occurrences

Checking class StandardContextValve:

  Verifying word size get:

    No occurrences

Checking class BaseDirContext:

  Verifying word size get:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word size get:

    No occurrences

Checking class ResourceCache:

  Verifying word size get:

    No occurrences

Checking class Globals:

  Verifying word size get:

    No occurrences

Checking class ContextBindings:

  Verifying word size get:

    No occurrences

Checking class StandardManager:

  Verifying word size get:

    No occurrences

Checking class ProxyDirContext:

  Verifying word size get:

    No occurrences

Checking class TldConfig:

  Verifying word size get:

    No occurrences

Checking class RequestUtil:

  Verifying word size get:

    No occurrences

Checking class StandardWrapper:

  Verifying word size get:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word size get:

    No occurrences

Checking class WARDirContext:

  Verifying word size get:

    No occurrences

Checking class InstanceListener:

  Verifying word size get:

    No occurrences

Checking class StandardHostValve:

  Verifying word size get:

    No occurrences

Checking class ValveBase:

  Verifying word size get:

    No occurrences

Checking class StandardPipeline:

  Verifying word size get:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word size get:

    No occurrences

Checking class WebappClassLoader:

  Verifying word size get:

    No occurrences

Checking class HostConfig:

  Verifying word size get:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word size get:

    No occurrences

Checking class Resource:

  Verifying word size get:

    No occurrences

Checking class Document:

  Verifying word size get:

    No occurrences

Checking class Element:

  Verifying word size get:

    No occurrences

Checking class Node:

  Verifying word size get:

    No occurrences

Checking class NodeList:

  Verifying word size get:

    No occurrences

Checking class Text:

  Verifying word size get:

    No occurrences

Checking class ContextTransaction:

  Verifying word size get:

    No occurrences

Checking class ContextEjb:

  Verifying word size get:

    No occurrences

Checking class ContextEnvironment:

  Verifying word size get:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word size get:

    No occurrences

Checking class ContextResource:

  Verifying word size get:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word size get:

    No occurrences

Checking class ContextResourceLink:

  Verifying word size get:

    No occurrences

Checking class ContextService:

  Verifying word size get:

    No occurrences

Checking class RegistryMBean:

  Verifying word size get:

    No occurrences

Checking class ManagedBean:

  Verifying word size get:

    No occurrences

Checking class ModelerSource:

  Verifying word size get:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word size get:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word size get:

    No occurrences

Checking class ByteChunk:

  Verifying word size get:

    No occurrences

Checking class CharChunk:

  Verifying word size get:

    No occurrences

Checking class NamingContext:

  Verifying word size get:

    No occurrences

Checking class ContainerEvent:

  Verifying word size get:

    No occurrences

Checking class TransactionRef:

  Verifying word size get:

    No occurrences

Checking class ServiceRef:

  Verifying word size get:

    No occurrences

Checking class HandlerRef:

  Verifying word size get:

    No occurrences

Checking class ContextAccessController:

  Verifying word size get:

    No occurrences

Checking class ResourceRef:

  Verifying word size get:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word size get:

    No occurrences

Checking class EjbRef:

  Verifying word size get:

    No occurrences

Checking class ContextHandler:

  Verifying word size get:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word size get:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word size get:

    No occurrences

Checking class XercesParser:

  Verifying word size get:

    No occurrences

Checking class GenericParser:

  Verifying word size get:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word size get:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word size get:

    No occurrences

Checking class StringManager:

  Verifying word size get:

    No occurrences

Checking class MappingData:

  Verifying word size get:

    No occurrences

Checking class MessageBytes:

  Verifying word size get:

    No occurrences

Checking class Response:

  Verifying word size get:

    No occurrences

Checking class OutputBuffer:

  Verifying word size get:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word size get:

    No occurrences

Checking class CoyoteWriter:

  Verifying word size get:

    No occurrences

Checking class UEncoder:

  Verifying word size get:

    No occurrences

Checking class ResponseFacade:

  Verifying word size get:

    No occurrences

Checking class Session:

  Verifying word size get:

    No occurrences

Checking class MimeHeaders:

  Verifying word size get:

    No occurrences

Checking class URL:

  Verifying word size get:

    No occurrences

Checking class Response$3:

  Verifying word size get:

    No occurrences

Checking class Response$1:

  Verifying word size get:

    No occurrences

Checking class Response$2:

  Verifying word size get:

    No occurrences

Checking class ServerCookie:

  Verifying word size get:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word size get:

    No occurrences

Checking class SecurityUtil:

  Verifying word size get:

    No occurrences

Checking class Request:

  Verifying word size get:

    No occurrences

Checking class SocketStatus:

  Verifying word size get:

    No occurrences

Checking class RequestInfo:

  Verifying word size get:

    No occurrences

Checking class B2CConverter:

  Verifying word size get:

    No occurrences

Checking class Cookies:

  Verifying word size get:

    No occurrences

Checking class ActionCode:

  Verifying word size get:

    No occurrences

Checking class Parameters:

  Verifying word size get:

      Method: Parameters.getParameter()
      Calls Location: Parameters.java:161 Parameters.java:164
      Atomic: NO

Checking class ExceptionUtils:

  Verifying word size get:

    No occurrences

Checking class UDecoder:

  Verifying word size get:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word size get:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word size get:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word size get:

    No occurrences

Checking class CometEventImpl:

  Verifying word size get:

    No occurrences

Checking class SSL:

  Verifying word size get:

    No occurrences

Checking class Library:

  Verifying word size get:

    No occurrences

Checking class InputBuffer:

  Verifying word size get:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word size get:

    No occurrences

Checking class CoyoteReader:

  Verifying word size get:

    No occurrences

Checking class ParameterMap:

  Verifying word size get:

    No occurrences

Checking class StringParser:

  Verifying word size get:

    No occurrences

Checking class RequestFacade:

  Verifying word size get:

    No occurrences

Checking class Enumerator:

  Verifying word size get:

    No occurrences

Checking class GenericPrincipal:

  Verifying word size get:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word size get:

    No occurrences

Checking class Mapper$Host:

  Verifying word size get:

    No occurrences

Checking class Mapper$Context:

  Verifying word size get:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word size get:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word size get:

    No occurrences

Checking class Ascii:

  Verifying word size get:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word size get:

    No occurrences

Checking class SetSessionConfig:

  Verifying word size get:

    No occurrences

Checking class SetLoginConfig:

  Verifying word size get:

    No occurrences

Checking class SetJspConfig:

  Verifying word size get:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word size get:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word size get:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word size get:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word size get:

    No occurrences

Checking class SetDistributableRule:

  Verifying word size get:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word size get:

      Method: CallMethodMultiRule.end()
      Calls Location: WebRuleSet.java:780 WebRuleSet.java:781
      Atomic: NO

Checking class CallParamMultiRule:

  Verifying word size get:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word size get:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word size get:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word size get:

    No occurrences

Checking class LocalResolver:

  Verifying word size get:

    No occurrences

Checking class Constants:

  Verifying word size get:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word size get:

    No occurrences

Checking class AttributeInfo:

  Verifying word size get:

    No occurrences

Checking class BaseModelMBean:

  Verifying word size get:

    No occurrences

Checking class DomUtil:

  Verifying word size get:

    No occurrences

Checking class RealmBase:

  Verifying word size get:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word size get:

    No occurrences

Checking class StringManager:

  Verifying word size get:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word size get:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word size get:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word size get:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word size get:

    No occurrences

Checking class NamingEntry:

  Verifying word size get:

    No occurrences

Checking class ResourceSet:

  Verifying word size get:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word size get:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word size get:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word size get:

    No occurrences

Checking class Extension:

  Verifying word size get:

    No occurrences

Checking class ManifestResource:

  Verifying word size get:

    No occurrences

Checking class NameParserImpl:

  Verifying word size get:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word size get:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word size get:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word size get:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word size get:

    No occurrences

Checking class CacheEntry:

  Verifying word size get:

    No occurrences

Checking class ManagerBase:

  Verifying word size get:

    No occurrences

Checking class StandardSession:

  Verifying word size get:

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1580 StandardSession.java:1585
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1580 StandardSession.java:1587
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1580 StandardSession.java:1583
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1580 StandardSession.java:1587
      Atomic: NO

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word size get:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word size get:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word size get:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word size get:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word size get:

    No occurrences

Checking class ResourceAttributes:

  Verifying word size get:

    No occurrences

Checking class TldRuleSet:

  Verifying word size get:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word size get:

    No occurrences

Checking class InstanceSupport:

  Verifying word size get:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word size get:

    No occurrences

Checking class DummyRequest:

  Verifying word size get:

    No occurrences

Checking class DummyResponse:

  Verifying word size get:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word size get:

    No occurrences

Checking class Constants:

  Verifying word size get:

    No occurrences

Checking class ContainerServlet:

  Verifying word size get:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word size get:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word size get:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word size get:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word size get:

    No occurrences

Checking class InstanceEvent:

  Verifying word size get:

    No occurrences

Checking class ClientAbortException:

  Verifying word size get:

    No occurrences

Checking class Contained:

  Verifying word size get:

    No occurrences

Checking class Reloader:

  Verifying word size get:

    No occurrences

Checking class ResourceEntry:

  Verifying word size get:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word size get:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word size get:

    No occurrences

Checking class JndiPermission:

  Verifying word size get:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word size get:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word size get:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word size get:

    No occurrences

Checking class IOTools:

  Verifying word size get:

    No occurrences

Checking class DOMException:

  Verifying word size get:

    No occurrences

Checking class Attr:

  Verifying word size get:

    No occurrences

Checking class TypeInfo:

  Verifying word size get:

    No occurrences

Checking class DocumentType:

  Verifying word size get:

    No occurrences

Checking class DOMImplementation:

  Verifying word size get:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word size get:

    No occurrences

Checking class DOMConfiguration:

  Verifying word size get:

    No occurrences

Checking class NamedNodeMap:

  Verifying word size get:

    No occurrences

Checking class UserDataHandler:

  Verifying word size get:

    No occurrences

Checking class CharacterData:

  Verifying word size get:

    No occurrences

Checking class ResourceBase:

  Verifying word size get:

    No occurrences

Checking class NotificationInfo:

  Verifying word size get:

    No occurrences

Checking class OperationInfo:

  Verifying word size get:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word size get:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word size get:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word size get:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word size get:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word size get:

    No occurrences

Checking class DateTool:

  Verifying word size get:

    No occurrences

Checking class HexUtils:

  Verifying word size get:

    No occurrences

Checking class StringManager$1:

  Verifying word size get:

    No occurrences

Checking class SessionListener:

  Verifying word size get:

    No occurrences

Checking class MimeHeaderField:

  Verifying word size get:

    No occurrences

Checking class NamesEnumerator:

  Verifying word size get:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word size get:

    No occurrences

Checking class C2BConverter:

  Verifying word size get:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word size get:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word size get:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class OutputBuffer:

  Verifying word size get:

    No occurrences

Checking class ActionHook:

  Verifying word size get:

    No occurrences

Checking class MediaType:

  Verifying word size get:

    No occurrences

Checking class HttpParser:

  Verifying word size get:

    No occurrences

Checking class ServerCookie$1:

  Verifying word size get:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word size get:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word size get:

      Method: RequestGroupInfo.setMaxTime()
      Calls Location: RequestGroupInfo.java:65 RequestGroupInfo.java:66
      Atomic: YES

      Method: RequestGroupInfo.setProcessingTime()
      Calls Location: RequestGroupInfo.java:82 RequestGroupInfo.java:83
      Atomic: YES

      Method: RequestGroupInfo.setErrorCount()
      Calls Location: RequestGroupInfo.java:116 RequestGroupInfo.java:117
      Atomic: YES

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:65 RequestGroupInfo.java:117
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:82 RequestGroupInfo.java:66
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:82 RequestGroupInfo.java:117
      Atomic: NO

      Method: RequestGroupInfo.setRequestCount()
      Calls Location: RequestGroupInfo.java:99 RequestGroupInfo.java:100
      Atomic: YES

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:99 RequestGroupInfo.java:66
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:99 RequestGroupInfo.java:83
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:99 RequestGroupInfo.java:117
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:133 RequestGroupInfo.java:66
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:133 RequestGroupInfo.java:100
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:133 RequestGroupInfo.java:117
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:133 RequestGroupInfo.java:83
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:133 RequestGroupInfo.java:151
      Atomic: NO

      Method: RequestGroupInfo.setBytesSent()
      Calls Location: RequestGroupInfo.java:150 RequestGroupInfo.java:151
      Atomic: YES

      Method: RequestGroupInfo.getMaxTime()
      Calls Location: RequestGroupInfo.java:55 RequestGroupInfo.java:56
      Atomic: YES

      Method: RequestGroupInfo.getErrorCount()
      Calls Location: RequestGroupInfo.java:107 RequestGroupInfo.java:108
      Atomic: YES

      Method: RequestGroupInfo.setBytesReceived()
      Calls Location: RequestGroupInfo.java:133 RequestGroupInfo.java:134
      Atomic: YES

      Method: RequestGroupInfo.getProcessingTime()
      Calls Location: RequestGroupInfo.java:73 RequestGroupInfo.java:74
      Atomic: YES

      Method: RequestGroupInfo.getBytesReceived()
      Calls Location: RequestGroupInfo.java:124 RequestGroupInfo.java:125
      Atomic: YES

      Method: RequestGroupInfo.getRequestCount()
      Calls Location: RequestGroupInfo.java:90 RequestGroupInfo.java:91
      Atomic: YES

      Method: RequestGroupInfo.getBytesSent()
      Calls Location: RequestGroupInfo.java:141 RequestGroupInfo.java:142
      Atomic: YES

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:150 RequestGroupInfo.java:66
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:150 RequestGroupInfo.java:100
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:150 RequestGroupInfo.java:117
      Atomic: NO

      Method: RequestGroupInfo.resetCounters()
      Calls Location: RequestGroupInfo.java:150 RequestGroupInfo.java:83
      Atomic: NO

Checking class IntermediateInputStream:

  Verifying word size get:

    No occurrences

Checking class ReadConvertor:

  Verifying word size get:

    No occurrences

Checking class UserDataHelper:

  Verifying word size get:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word size get:

    No occurrences

Checking class Parameters$1:

  Verifying word size get:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word size get:

    No occurrences

Checking class InputBuffer:

  Verifying word size get:

    No occurrences

Checking class ContentType:

  Verifying word size get:

    No occurrences

Checking class BIOCallback:

  Verifying word size get:

    No occurrences

Checking class PasswordCallback:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word size get:

    No occurrences

Checking class InputBuffer$1:

  Verifying word size get:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word size get:

    No occurrences

Checking class CometFilter:

  Verifying word size get:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word size get:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word size get:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word size get:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word size get:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word size get:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word size get:

    No occurrences

Checking class FeatureInfo:

  Verifying word size get:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word size get:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word size get:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word size get:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word size get:

    No occurrences

Checking class MD5Encoder:

  Verifying word size get:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word size get:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word size get:

    No occurrences

Checking class HexUtils:

  Verifying word size get:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word size get:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word size get:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word size get:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word size get:

    No occurrences

Checking class ApplicationResponse:

  Verifying word size get:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word size get:

    No occurrences

Checking class ApplicationRequest:

  Verifying word size get:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word size get:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word size get:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word size get:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word size get:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word size get:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word size get:

    No occurrences

Checking class StandardSession$1:

  Verifying word size get:

    No occurrences

Checking class SessionEvent:

  Verifying word size get:

    No occurrences

Checking class StandardSessionContext:

  Verifying word size get:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word size get:

    No occurrences

Checking class DummyRequest$1:

  Verifying word size get:

    No occurrences

Checking class CometProcessor:

  Verifying word size get:

    No occurrences

Checking class Constants:

  Verifying word size get:

    No occurrences

Checking class DOMStringList:

  Verifying word size get:

    No occurrences

Checking class ParameterInfo:

  Verifying word size get:

    No occurrences

Checking class LSResourceResolver:

  Verifying word size get:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word size get:

    No occurrences

Checking class WriteConvertor:

  Verifying word size get:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word size get:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word size get:

    No occurrences

Checking class CometFilterChain:

  Verifying word size get:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word size get:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word size get:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word size get:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word size get:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word size get:

    No occurrences

Checking class LSInput:

  Verifying word size get:

    No occurrences


Run Time:
                                .buildTree       1.662s
                                    .onLCA       4.805s
                         analysis-behavior       8.768s
                          analysis-threads       0.009s
                       build-parsing-table       0.159s
                       check-word-instance       0.004s
                               grammar-opt       0.810s
                        grammar-rm-epsilon       7.711s
                                   parsing      11.397s
                                 soot-init     159.747s
                                     total     203.964s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions       2235
                            parse-branches    1437720
                               parse-trees         51
                      parsing-table-states       2294
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Log:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CatalinaProperties:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LogFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Catalina:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Embedded:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LogConfigurationException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DirectJDKLog:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardClassLoader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Digester:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LifecycleException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardServer:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Lifecycle:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Server:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Rule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class EngineRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RuleSetBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HostRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringManager:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardService:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Engine:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LifecycleSupport:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Realm:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Connector:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Context:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Host:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Loader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LifecycleListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextConfig:

  Verifying word setByteStream getSystemId:

      Method: ContextConfig.applicationWebConfig()
      Calls Location: ContextConfig.java:351 ContextConfig.java:370
      Atomic: YES

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:671 ContextConfig.java:665
      Atomic: NO

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:671 ContextConfig.java:684
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:671 ContextConfig.java:370
      Atomic: YES

      Method: ContextConfig.processDefaultWebConfig()
      Calls Location: ContextConfig.java:671 ContextConfig.java:684
      Atomic: YES

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:781 ContextConfig.java:792
      Atomic: YES

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:781 ContextConfig.java:792
      Atomic: NO

Checking class StandardEngine:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SystemLogHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Container:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Valve:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardHost:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebappLoader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RealmRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingResources:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingContextListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Service:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ServerFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Registry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringCache:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ServerInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Executor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ProtocolHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ArrayStack:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Rules:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ObjectParamRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CallParamRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CallMethodRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetNextRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetTopRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetPropertyRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetRootRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class PathCallParamRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RulesBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Adapter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Mapper:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MapperListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Request:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Response:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LoginConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LifecycleEvent:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Pipeline:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DigesterFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FilterMap:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ErrorPage:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityConstraint:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ExpandWar:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FilterDef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Wrapper:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CharsetMapper:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationParameter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MbeansSource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class JAASRealm:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardEngineValve:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class AccessLog:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CaptureLog:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Manager:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Cluster:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometEvent:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class URLEncoder:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MessageDestination:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityCollection:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FileDirContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ExtensionValidator:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardContextValve:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BaseDirContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceCache:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Globals:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextBindings:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardManager:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ProxyDirContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class TldConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestUtil:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardWrapper:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WARDirContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class InstanceListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardHostValve:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ValveBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardPipeline:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebappClassLoader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HostConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Resource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Document:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Element:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Node:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NodeList:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Text:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextTransaction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextEjb:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextEnvironment:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextResource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextResourceLink:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextService:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RegistryMBean:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ManagedBean:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ModelerSource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ByteChunk:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CharChunk:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerEvent:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class TransactionRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ServiceRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HandlerRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextAccessController:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class EjbRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContextHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class XercesParser:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class GenericParser:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringManager:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MappingData:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MessageBytes:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Response:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class OutputBuffer:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteWriter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UEncoder:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResponseFacade:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Session:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MimeHeaders:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class URL:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Response$3:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Response$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Response$2:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ServerCookie:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityUtil:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Request:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SocketStatus:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class B2CConverter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Cookies:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ActionCode:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Parameters:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ExceptionUtils:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UDecoder:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometEventImpl:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SSL:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Library:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class InputBuffer:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteReader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ParameterMap:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringParser:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Enumerator:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class GenericPrincipal:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Mapper$Host:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Mapper$Context:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Ascii:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetSessionConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetLoginConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetJspConfig:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetDistributableRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LocalResolver:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Constants:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class AttributeInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BaseModelMBean:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DomUtil:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RealmBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringManager:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamingEntry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Extension:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ManifestResource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NameParserImpl:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CacheEntry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ManagerBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardSession:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceAttributes:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class TldRuleSet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class InstanceSupport:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DummyRequest:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DummyResponse:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Constants:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContainerServlet:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class InstanceEvent:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ClientAbortException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Contained:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Reloader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceEntry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class JndiPermission:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IOTools:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DOMException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Attr:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class TypeInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DocumentType:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DOMImplementation:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DOMConfiguration:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamedNodeMap:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UserDataHandler:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CharacterData:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResourceBase:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NotificationInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class OperationInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DateTool:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HexUtils:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StringManager$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SessionListener:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MimeHeaderField:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class NamesEnumerator:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class C2BConverter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class OutputBuffer:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ActionHook:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MediaType:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HttpParser:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ServerCookie$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ReadConvertor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UserDataHelper:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Parameters$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class InputBuffer:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ContentType:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BIOCallback:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class PasswordCallback:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class InputBuffer$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometFilter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FeatureInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class MD5Encoder:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HexUtils:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationResponse:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationRequest:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardSession$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class SessionEvent:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class StandardSessionContext:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DummyRequest$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometProcessor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class Constants:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class DOMStringList:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ParameterInfo:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LSResourceResolver:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class WriteConvertor:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class CometFilterChain:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word setByteStream getSystemId:

    No occurrences

Checking class LSInput:

  Verifying word setByteStream getSystemId:

    No occurrences


Run Time:
                                .buildTree       0.011s
                                    .onLCA       0.058s
                         analysis-behavior       8.925s
                          analysis-threads       0.009s
                       build-parsing-table       0.048s
                       check-word-instance       0.001s
                               grammar-opt       0.871s
                        grammar-rm-epsilon       7.837s
                                   parsing       0.201s
                                 soot-init     156.804s
                                     total     186.000s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions        555
                            parse-branches       8320
                               parse-trees          7
                      parsing-table-states        921
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Log:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CatalinaProperties:

  Verifying word hasMoreElements nextElement:

      Method: CatalinaProperties.loadProperties()
      Calls Location: CatalinaProperties.java:136 CatalinaProperties.java:137
      Atomic: NO

Checking class LogFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Catalina:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Embedded:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LogConfigurationException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DirectJDKLog:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardClassLoader:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Digester:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LifecycleException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardServer:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Lifecycle:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Server:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Rule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class EngineRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RuleSetBase:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class HostRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringManager:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardService:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Engine:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LifecycleSupport:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Realm:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Connector:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Context:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Host:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Loader:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LifecycleListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardEngine:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SystemLogHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Container:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Valve:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardContext:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardHost:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebappLoader:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RealmRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingResources:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingContextListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Service:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ServerFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Registry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringCache:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ServerInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Executor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ProtocolHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ArrayStack:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Rules:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ObjectParamRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CallParamRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CallMethodRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetNextRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetTopRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetPropertyRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetRootRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class PathCallParamRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RulesBase:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContainerBase:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Adapter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Mapper:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MapperListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Request:

  Verifying word hasMoreElements nextElement:

      Method: Request.getParameterMap()
      Calls Location: Request.java:1129 Request.java:1130
      Atomic: NO

      Method: Request.parseLocales()
      Calls Location: Request.java:2738 Request.java:2739
      Atomic: NO

Checking class Response:

  Verifying word hasMoreElements nextElement:

      Method: Response.getHeaderValues()
      Calls Location: Response.java:913 Response.java:914
      Atomic: NO

Checking class CoyoteAdapter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LoginConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LifecycleEvent:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Pipeline:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DigesterFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FilterMap:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ErrorPage:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityConstraint:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ExpandWar:

  Verifying word hasMoreElements nextElement:

      Method: ExpandWar.expand()
      Calls Location: ExpandWar.java:151 ExpandWar.java:152
      Atomic: NO

      Method: ExpandWar.validate()
      Calls Location: ExpandWar.java:254 ExpandWar.java:255
      Atomic: NO

Checking class FilterDef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Wrapper:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CharsetMapper:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationParameter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MbeansSource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class JAASRealm:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardEngineValve:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class AccessLog:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CaptureLog:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Manager:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Cluster:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContainerListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometEvent:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class URLEncoder:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationContext:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MessageDestination:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityCollection:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FileDirContext:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ExtensionValidator:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardContextValve:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BaseDirContext:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceCache:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Globals:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextBindings:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardManager:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ProxyDirContext:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class TldConfig:

  Verifying word hasMoreElements nextElement:

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:394 TldConfig.java:395
      Atomic: NO

      Method: TldConfig.tldScanJar()
      Calls Location: TldConfig.java:394 TldConfig.java:395
      Atomic: NO

Checking class RequestUtil:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardWrapper:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WARDirContext:

  Verifying word hasMoreElements nextElement:

      Method: WARDirContext.loadEntries()
      Calls Location: WARDirContext.java:737 WARDirContext.java:739
      Atomic: NO

Checking class InstanceListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardHostValve:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ValveBase:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardPipeline:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebappClassLoader:

  Verifying word hasMoreElements nextElement:

      Method: WebappClassLoader.findResources()
      Calls Location: WebappClassLoader.java:1334 WebappClassLoader.java:1335
      Atomic: NO

      Method: WebappClassLoader.findResources()
      Calls Location: WebappClassLoader.java:1290 WebappClassLoader.java:1291
      Atomic: NO

      Method: WebappClassLoader.findResources()
      Calls Location: WebappClassLoader.java:1290 WebappClassLoader.java:1335
      Atomic: NO

      Method: WebappClassLoader.findResourceInternal()
      Calls Location: WebappClassLoader.java:3029 WebappClassLoader.java:3030
      Atomic: NO

Checking class HostConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Resource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Document:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Element:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Node:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NodeList:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Text:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextTransaction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextEjb:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextEnvironment:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextResource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextResourceLink:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextService:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RegistryMBean:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ManagedBean:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ModelerSource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ByteChunk:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CharChunk:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingContext:

  Verifying word hasMoreElements nextElement:

      Method: NamingContext.<init>()
      Calls Location: NamingContext.java:77 NamingContext.java:78
      Atomic: NO

Checking class ContainerEvent:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class TransactionRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ServiceRef:

  Verifying word hasMoreElements nextElement:

      Method: ServiceRef.toString()
      Calls Location: ServiceRef.java:188 ServiceRef.java:189
      Atomic: NO

Checking class HandlerRef:

  Verifying word hasMoreElements nextElement:

      Method: HandlerRef.toString()
      Calls Location: HandlerRef.java:157 HandlerRef.java:158
      Atomic: NO

Checking class ContextAccessController:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceRef:

  Verifying word hasMoreElements nextElement:

      Method: ResourceRef.toString()
      Calls Location: ResourceRef.java:151 ResourceRef.java:152
      Atomic: NO

Checking class ResourceLinkRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class EjbRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContextHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class XercesParser:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class GenericParser:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringManager:

  Verifying word hasMoreElements nextElement:

      Method: StringManager.getManager()
      Calls Location: StringManager.java:247 StringManager.java:248
      Atomic: NO

Checking class MappingData:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MessageBytes:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Response:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class OutputBuffer:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteWriter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UEncoder:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResponseFacade:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Session:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MimeHeaders:

  Verifying word hasMoreElements nextElement:

      Method: MimeHeaders.toString()
      Calls Location: MimeHeaders.java:165 MimeHeaders.java:166
      Atomic: NO

      Method: MimeHeaders.toString()
      Calls Location: MimeHeaders.java:168 MimeHeaders.java:166
      Atomic: NO

      Method: MimeHeaders.toString()
      Calls Location: MimeHeaders.java:168 MimeHeaders.java:171
      Atomic: NO

      Method: MimeHeaders.toString()
      Calls Location: MimeHeaders.java:165 MimeHeaders.java:171
      Atomic: NO

Checking class URL:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Response$3:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Response$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Response$2:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ServerCookie:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityUtil:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Request:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SocketStatus:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class B2CConverter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Cookies:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ActionCode:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Parameters:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ExceptionUtils:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UDecoder:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometEventImpl:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SSL:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Library:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class InputBuffer:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteReader:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ParameterMap:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringParser:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Enumerator:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class GenericPrincipal:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Mapper$Host:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Mapper$Context:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Ascii:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetSessionConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetLoginConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetJspConfig:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetDistributableRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LocalResolver:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Constants:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class AttributeInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BaseModelMBean:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DomUtil:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RealmBase:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringManager:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamingEntry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Extension:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ManifestResource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NameParserImpl:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CacheEntry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ManagerBase:

  Verifying word hasMoreElements nextElement:

      Method: ManagerBase.getSession()
      Calls Location: ManagerBase.java:1374 ManagerBase.java:1375
      Atomic: NO

      Method: ManagerBase.getSession()
      Calls Location: ManagerBase.java:1369 ManagerBase.java:1375
      Atomic: NO

Checking class StandardSession:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceAttributes:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class TldRuleSet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class InstanceSupport:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DummyRequest:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DummyResponse:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Constants:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContainerServlet:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class InstanceEvent:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ClientAbortException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Contained:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Reloader:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceEntry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class JndiPermission:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IOTools:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DOMException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Attr:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class TypeInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DocumentType:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DOMImplementation:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DOMConfiguration:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamedNodeMap:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UserDataHandler:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CharacterData:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResourceBase:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NotificationInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class OperationInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DateTool:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class HexUtils:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StringManager$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SessionListener:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MimeHeaderField:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class NamesEnumerator:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class C2BConverter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class OutputBuffer:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ActionHook:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MediaType:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class HttpParser:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ServerCookie$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ReadConvertor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UserDataHelper:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Parameters$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class InputBuffer:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ContentType:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BIOCallback:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class PasswordCallback:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class InputBuffer$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometFilter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FeatureInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class MD5Encoder:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class HexUtils:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationResponse:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationRequest:

  Verifying word hasMoreElements nextElement:

      Method: ApplicationRequest.setRequest()
      Calls Location: ApplicationRequest.java:180 ApplicationRequest.java:181
      Atomic: YES

Checking class ApplicationHttpResponse:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardSession$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class SessionEvent:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class StandardSessionContext:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DummyRequest$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometProcessor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class Constants:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class DOMStringList:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ParameterInfo:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class LSResourceResolver:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class WriteConvertor:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class CometFilterChain:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word hasMoreElements nextElement:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word hasMoreElements nextElement:

      Method: ApplicationHttpRequest$AttributeNamesEnumerator.findNext()
      Calls Location: ApplicationHttpRequest.java:941 ApplicationHttpRequest.java:942
      Atomic: NO

Checking class LSInput:

  Verifying word hasMoreElements nextElement:

    No occurrences


Run Time:
                                .buildTree       0.001s
                                    .onLCA       0.006s
                         analysis-behavior       8.830s
                          analysis-threads       0.009s
                       build-parsing-table       0.060s
                       check-word-instance       0.002s
                               grammar-opt       0.875s
                        grammar-rm-epsilon       7.606s
                                   parsing       0.021s
                                 soot-init     156.553s
                                     total     185.037s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions        797
                            parse-branches        715
                               parse-trees         26
                      parsing-table-states       1135
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Log:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CatalinaProperties:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LogFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Catalina:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityClassLoad:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Embedded:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LogConfigurationException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DirectJDKLog:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardClassLoader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Digester:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LifecycleException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardServer:

  Verifying word isRegistered(X) invoke(X,_,_,_):

      Method: StandardServer.storeContext()
      Calls Location: StandardServer.java:661 StandardServer.java:662
      Atomic: YES

Checking class Lifecycle:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Server:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Rule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class EngineRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RuleSetBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HostRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringManager:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardService:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Engine:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LifecycleSupport:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Realm:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Connector:

  Verifying word isRegistered(X) invoke(X,_,_,_):

      Method: Connector.findContainer()
      Calls Location: Connector.java:1319 Connector.java:1320
      Atomic: NO

Checking class Context:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Host:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Loader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LifecycleListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardEngine:

  Verifying word isRegistered(X) invoke(X,_,_,_):

      Method: StandardEngine.start()
      Calls Location: StandardEngine.java:438 StandardEngine.java:439
      Atomic: NO

Checking class IntrospectionUtils:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SystemLogHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Container:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Valve:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4507 StandardContext.java:4508
      Atomic: YES

      Method: StandardContext.init()
      Calls Location: StandardContext.java:5646 StandardContext.java:5685
      Atomic: NO

Checking class StandardHost:

  Verifying word isRegistered(X) invoke(X,_,_,_):

      Method: StandardHost.init()
      Calls Location: StandardHost.java:869 StandardHost.java:872
      Atomic: NO

      Method: StandardHost.start()
      Calls Location: StandardHost.java:781 StandardHost.java:782
      Atomic: YES

Checking class WebappLoader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetNextNamingRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RealmRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingResources:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingContextListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Service:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ServerFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Registry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringCache:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ServerInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Executor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ProtocolHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ArrayStack:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Rules:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ObjectParamRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CallParamRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CallMethodRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FactoryCreateRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetNextRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetTopRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ObjectCreateRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetPropertyRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetPropertiesRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetRootRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class PathCallParamRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RulesBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

      Method: ContainerBase.init()
      Calls Location: ContainerBase.java:1160 ContainerBase.java:1163
      Atomic: NO

Checking class Adapter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Mapper:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MapperListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Request:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Response:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteAdapter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class AprLifecycleListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LoginConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LifecycleEvent:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Pipeline:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DigesterFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FilterMap:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ErrorPage:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebAnnotationSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityConstraint:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ExpandWar:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FilterDef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Wrapper:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class XmlErrorHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CharsetMapper:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationParameter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MbeansSource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class JAASRealm:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardEngineValve:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class AccessLog:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CaptureLog:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Manager:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Cluster:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometEvent:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class URLEncoder:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class AnnotationProcessor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MessageDestination:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MessageDestinationRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityCollection:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FileDirContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ExtensionValidator:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardContextValve:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BaseDirContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceCache:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Globals:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextBindings:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardManager:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ProxyDirContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class TldConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestUtil:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardWrapper:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WARDirContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class InstanceListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardHostValve:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ValveBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardPipeline:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebappClassLoader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HostConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Resource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Document:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Element:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Node:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NodeList:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Text:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextTransaction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextEjb:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextEnvironment:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextLocalEjb:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextResource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextResourceLink:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextService:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RegistryMBean:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ManagedBean:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ModelerSource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ByteChunk:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CharChunk:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerEvent:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class TransactionRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ServiceRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HandlerRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextAccessController:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceLinkRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class EjbRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContextHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceEnvRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class XercesParser:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class GenericParser:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringManager:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MappingData:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MessageBytes:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Response:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class OutputBuffer:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteWriter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UEncoder:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResponseFacade:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Session:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MimeHeaders:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class URL:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Response$3:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Response$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Response$2:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ServerCookie:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityUtil:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Request:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SocketStatus:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class B2CConverter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Cookies:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ActionCode:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Parameters:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ExceptionUtils:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UDecoder:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyotePrincipal:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometEvent$EventType:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometEventImpl:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SSL:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Library:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class InputBuffer:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteInputStream:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteReader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ParameterMap:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringParser:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Enumerator:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class GenericPrincipal:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Mapper$Host:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Mapper$Context:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Mapper$MapElement:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Ascii:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Mapper$ContextList:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetSessionConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetLoginConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetJspConfig:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WrapperCreateRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SoapHeaderRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ServiceQnameRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetPublicIdRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetDistributableRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CallParamMultiRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LocalResolver:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Constants:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class AttributeInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BaseModelMBean:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DomUtil:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RealmBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringManager:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamingEntry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Extension:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ManifestResource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NameParserImpl:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CacheEntry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ManagerBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardSession:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceAttributes:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class TldRuleSet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class InstanceSupport:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardWrapperValve:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DummyRequest:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DummyResponse:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardWrapper$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Constants:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContainerServlet:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class PeriodicEventListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DirContextURLConnection:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class InstanceEvent:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ClientAbortException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Contained:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Reloader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceEntry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class JndiPermission:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IOTools:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DOMException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Attr:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class TypeInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DocumentType:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DOMImplementation:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ProcessingInstruction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DOMConfiguration:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamedNodeMap:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UserDataHandler:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CharacterData:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResourceBase:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NotificationInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class OperationInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DateTool:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HexUtils:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StringManager$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SessionListener:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MimeHeaderField:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class NamesEnumerator:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ValuesEnumerator:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class C2BConverter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class OutputBuffer$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResponseFacade$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class OutputBuffer:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ActionHook:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MediaType:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HttpParser:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ServerCookie$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityUtil$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestGroupInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IntermediateInputStream:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ReadConvertor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UserDataHelper:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Parameters$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class InputBuffer:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ContentType:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BIOCallback:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class PasswordCallback:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class InputBuffer$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometFilter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SecurityRoleRef:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FeatureInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class MD5Encoder:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HexUtils:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationResponse:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationRequest:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardSessionFacade:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardSession$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class SessionEvent:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class StandardSessionContext:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DummyRequest$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometProcessor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class Constants:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class DOMStringList:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ParameterInfo:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LSResourceResolver:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class WriteConvertor:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class CometFilterChain:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences

Checking class LSInput:

  Verifying word isRegistered(X) invoke(X,_,_,_):

    No occurrences


Run Time:
                                .buildTree       0.007s
                                    .onLCA       0.023s
                         analysis-behavior       9.135s
                          analysis-threads       0.009s
                           analysis-vequiv       0.002s
                       build-parsing-table       0.156s
                       check-word-instance       0.008s
                               grammar-opt       0.809s
                        grammar-rm-epsilon       8.075s
                                   parsing       0.128s
                                 soot-init     158.920s
                                     total     186.450s

Profiling Vars:
                                 cfg-nodes      82652
            discarded-trees-args-not-match         18
                       grammar-productions        910
                            parse-branches       2109
                               parse-trees          8
                      parsing-table-states       1253
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word size toArray:

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:179 Bootstrap.java:171
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:179 Bootstrap.java:172
      Atomic: NO

      Method: Bootstrap.initClassLoaders()
      Calls Location: Bootstrap.java:179 Bootstrap.java:171
      Atomic: NO

      Method: Bootstrap.initClassLoaders()
      Calls Location: Bootstrap.java:179 Bootstrap.java:172
      Atomic: NO

Checking class Log:

  Verifying word size toArray:

    No occurrences

Checking class CatalinaProperties:

  Verifying word size toArray:

    No occurrences

Checking class LogFactory:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word size toArray:

    No occurrences

Checking class Catalina:

  Verifying word size toArray:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word size toArray:

    No occurrences

Checking class Embedded:

  Verifying word size toArray:

    No occurrences

Checking class LogConfigurationException:

  Verifying word size toArray:

    No occurrences

Checking class DirectJDKLog:

  Verifying word size toArray:

    No occurrences

Checking class StandardClassLoader:

  Verifying word size toArray:

    No occurrences

Checking class Digester:

  Verifying word size toArray:

    No occurrences

Checking class ContextRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class LifecycleException:

  Verifying word size toArray:

    No occurrences

Checking class StandardServer:

  Verifying word size toArray:

    No occurrences

Checking class Lifecycle:

  Verifying word size toArray:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word size toArray:

    No occurrences

Checking class Server:

  Verifying word size toArray:

    No occurrences

Checking class RuleSet:

  Verifying word size toArray:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word size toArray:

    No occurrences

Checking class Rule:

  Verifying word size toArray:

    No occurrences

Checking class EngineRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word size toArray:

    No occurrences

Checking class NamingRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class RuleSetBase:

  Verifying word size toArray:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word size toArray:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word size toArray:

    No occurrences

Checking class HostRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class StringManager:

  Verifying word size toArray:

    No occurrences

Checking class StandardService:

  Verifying word size toArray:

      Method: StandardService.findExecutors()
      Calls Location: StandardService.java:453 StandardService.java:454
      Atomic: YES

      Method: StandardService.stop()
      Calls Location: StandardService.java:623 StandardService.java:454
      Atomic: NO

Checking class Engine:

  Verifying word size toArray:

    No occurrences

Checking class LifecycleSupport:

  Verifying word size toArray:

    No occurrences

Checking class Realm:

  Verifying word size toArray:

    No occurrences

Checking class Connector:

  Verifying word size toArray:

    No occurrences

Checking class Context:

  Verifying word size toArray:

    No occurrences

Checking class Host:

  Verifying word size toArray:

    No occurrences

Checking class Loader:

  Verifying word size toArray:

    No occurrences

Checking class LifecycleListener:

  Verifying word size toArray:

    No occurrences

Checking class ContextConfig:

  Verifying word size toArray:

    No occurrences

Checking class StandardEngine:

  Verifying word size toArray:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word size toArray:

    No occurrences

Checking class SystemLogHandler:

  Verifying word size toArray:

    No occurrences

Checking class Container:

  Verifying word size toArray:

    No occurrences

Checking class SecurityConfig:

  Verifying word size toArray:

    No occurrences

Checking class Valve:

  Verifying word size toArray:

    No occurrences

Checking class StandardContext:

  Verifying word size toArray:

    No occurrences

Checking class StandardHost:

  Verifying word size toArray:

      Method: StandardHost.findReloadedContextMemoryLeaks()
      Calls Location: StandardHost.java:628 StandardHost.java:628
      Atomic: NO

Checking class WebappLoader:

  Verifying word size toArray:

      Method: WebappLoader.getLoaderRepositories()
      Calls Location: WebappLoader.java:468 WebappLoader.java:469
      Atomic: NO

Checking class SetNextNamingRule:

  Verifying word size toArray:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word size toArray:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word size toArray:

    No occurrences

Checking class RealmRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class NamingResources:

  Verifying word size toArray:

    No occurrences

Checking class NamingContextListener:

  Verifying word size toArray:

    No occurrences

Checking class Service:

  Verifying word size toArray:

    No occurrences

Checking class ServerFactory:

  Verifying word size toArray:

    No occurrences

Checking class Registry:

  Verifying word size toArray:

      Method: Registry.findManagedBeans()
      Calls Location: Registry.java:443 Registry.java:444
      Atomic: NO

Checking class StringCache:

  Verifying word size toArray:

    No occurrences

Checking class ServerInfo:

  Verifying word size toArray:

    No occurrences

Checking class Executor:

  Verifying word size toArray:

    No occurrences

Checking class ProtocolHandler:

  Verifying word size toArray:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word size toArray:

    No occurrences

Checking class ArrayStack:

  Verifying word size toArray:

    No occurrences

Checking class Rules:

  Verifying word size toArray:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word size toArray:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word size toArray:

    No occurrences

Checking class ObjectParamRule:

  Verifying word size toArray:

    No occurrences

Checking class CallParamRule:

  Verifying word size toArray:

    No occurrences

Checking class CallMethodRule:

  Verifying word size toArray:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word size toArray:

    No occurrences

Checking class SetNextRule:

  Verifying word size toArray:

    No occurrences

Checking class SetTopRule:

  Verifying word size toArray:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word size toArray:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word size toArray:

    No occurrences

Checking class SetPropertyRule:

  Verifying word size toArray:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word size toArray:

    No occurrences

Checking class SetRootRule:

  Verifying word size toArray:

    No occurrences

Checking class PathCallParamRule:

  Verifying word size toArray:

    No occurrences

Checking class RulesBase:

  Verifying word size toArray:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word size toArray:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word size toArray:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word size toArray:

    No occurrences

Checking class ContainerBase:

  Verifying word size toArray:

      Method: ContainerBase.fireContainerEvent()
      Calls Location: ContainerBase.java:1406 ContainerBase.java:1411
      Atomic: NO

      Method: ContainerBase.destroy()
      Calls Location: ContainerBase.java:1406 ContainerBase.java:1411
      Atomic: NO

      Method: ContainerBase.stop()
      Calls Location: ContainerBase.java:1406 ContainerBase.java:1411
      Atomic: YES

      Method: ContainerBase.findContainerListeners()
      Calls Location: ContainerBase.java:883 ContainerBase.java:885
      Atomic: YES

Checking class Adapter:

  Verifying word size toArray:

    No occurrences

Checking class Mapper:

  Verifying word size toArray:

      Method: Mapper.getContextNames()
      Calls Location: Mapper.java:300 Mapper.java:301
      Atomic: NO

      Method: Mapper.getWrapperNames()
      Calls Location: Mapper.java:534 Mapper.java:535
      Atomic: NO

Checking class MapperListener:

  Verifying word size toArray:

    No occurrences

Checking class Request:

  Verifying word size toArray:

    No occurrences

Checking class Response:

  Verifying word size toArray:

      Method: Response.getCookies()
      Calls Location: Response.java:868 Response.java:868
      Atomic: NO

Checking class CoyoteAdapter:

  Verifying word size toArray:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word size toArray:

    No occurrences

Checking class WebRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class LoginConfig:

  Verifying word size toArray:

    No occurrences

Checking class LifecycleEvent:

  Verifying word size toArray:

    No occurrences

Checking class Pipeline:

  Verifying word size toArray:

    No occurrences

Checking class DigesterFactory:

  Verifying word size toArray:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word size toArray:

    No occurrences

Checking class FilterMap:

  Verifying word size toArray:

    No occurrences

Checking class ErrorPage:

  Verifying word size toArray:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word size toArray:

    No occurrences

Checking class SecurityConstraint:

  Verifying word size toArray:

    No occurrences

Checking class ExpandWar:

  Verifying word size toArray:

    No occurrences

Checking class FilterDef:

  Verifying word size toArray:

    No occurrences

Checking class Wrapper:

  Verifying word size toArray:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word size toArray:

    No occurrences

Checking class CharsetMapper:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationParameter:

  Verifying word size toArray:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word size toArray:

    No occurrences

Checking class MbeansSource:

  Verifying word size toArray:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word size toArray:

    No occurrences

Checking class JAASRealm:

  Verifying word size toArray:

    No occurrences

Checking class StandardEngineValve:

  Verifying word size toArray:

    No occurrences

Checking class AccessLog:

  Verifying word size toArray:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word size toArray:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word size toArray:

    No occurrences

Checking class CaptureLog:

  Verifying word size toArray:

    No occurrences

Checking class Manager:

  Verifying word size toArray:

    No occurrences

Checking class Cluster:

  Verifying word size toArray:

    No occurrences

Checking class ContainerListener:

  Verifying word size toArray:

    No occurrences

Checking class CometEvent:

  Verifying word size toArray:

    No occurrences

Checking class URLEncoder:

  Verifying word size toArray:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationContext:

  Verifying word size toArray:

    No occurrences

Checking class MessageDestination:

  Verifying word size toArray:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word size toArray:

    No occurrences

Checking class SecurityCollection:

  Verifying word size toArray:

    No occurrences

Checking class FileDirContext:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word size toArray:

    No occurrences

Checking class ExtensionValidator:

  Verifying word size toArray:

    No occurrences

Checking class StandardContextValve:

  Verifying word size toArray:

    No occurrences

Checking class BaseDirContext:

  Verifying word size toArray:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word size toArray:

    No occurrences

Checking class ResourceCache:

  Verifying word size toArray:

    No occurrences

Checking class Globals:

  Verifying word size toArray:

    No occurrences

Checking class ContextBindings:

  Verifying word size toArray:

    No occurrences

Checking class StandardManager:

  Verifying word size toArray:

    No occurrences

Checking class ProxyDirContext:

  Verifying word size toArray:

    No occurrences

Checking class TldConfig:

  Verifying word size toArray:

      Method: TldConfig.getTldListeners()
      Calls Location: TldConfig.java:284 TldConfig.java:285
      Atomic: NO

Checking class RequestUtil:

  Verifying word size toArray:

    No occurrences

Checking class StandardWrapper:

  Verifying word size toArray:

      Method: StandardWrapper.findMappings()
      Calls Location: StandardWrapper.java:957 StandardWrapper.java:957
      Atomic: NO

Checking class DirContextURLStreamHandler:

  Verifying word size toArray:

    No occurrences

Checking class WARDirContext:

  Verifying word size toArray:

    No occurrences

Checking class InstanceListener:

  Verifying word size toArray:

    No occurrences

Checking class StandardHostValve:

  Verifying word size toArray:

    No occurrences

Checking class ValveBase:

  Verifying word size toArray:

    No occurrences

Checking class StandardPipeline:

  Verifying word size toArray:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word size toArray:

    No occurrences

Checking class WebappClassLoader:

  Verifying word size toArray:

    No occurrences

Checking class HostConfig:

  Verifying word size toArray:

      Method: HostConfig.filterAppPaths()
      Calls Location: HostConfig.java:541 HostConfig.java:541
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:541 HostConfig.java:541
      Atomic: NO

Checking class DirContextURLStreamHandlerFactory:

  Verifying word size toArray:

    No occurrences

Checking class Resource:

  Verifying word size toArray:

    No occurrences

Checking class Document:

  Verifying word size toArray:

    No occurrences

Checking class Element:

  Verifying word size toArray:

    No occurrences

Checking class Node:

  Verifying word size toArray:

    No occurrences

Checking class NodeList:

  Verifying word size toArray:

    No occurrences

Checking class Text:

  Verifying word size toArray:

    No occurrences

Checking class ContextTransaction:

  Verifying word size toArray:

    No occurrences

Checking class ContextEjb:

  Verifying word size toArray:

    No occurrences

Checking class ContextEnvironment:

  Verifying word size toArray:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word size toArray:

    No occurrences

Checking class ContextResource:

  Verifying word size toArray:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word size toArray:

    No occurrences

Checking class ContextResourceLink:

  Verifying word size toArray:

    No occurrences

Checking class ContextService:

  Verifying word size toArray:

    No occurrences

Checking class RegistryMBean:

  Verifying word size toArray:

    No occurrences

Checking class ManagedBean:

  Verifying word size toArray:

    No occurrences

Checking class ModelerSource:

  Verifying word size toArray:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word size toArray:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word size toArray:

    No occurrences

Checking class ByteChunk:

  Verifying word size toArray:

    No occurrences

Checking class CharChunk:

  Verifying word size toArray:

    No occurrences

Checking class NamingContext:

  Verifying word size toArray:

    No occurrences

Checking class ContainerEvent:

  Verifying word size toArray:

    No occurrences

Checking class TransactionRef:

  Verifying word size toArray:

    No occurrences

Checking class ServiceRef:

  Verifying word size toArray:

    No occurrences

Checking class HandlerRef:

  Verifying word size toArray:

    No occurrences

Checking class ContextAccessController:

  Verifying word size toArray:

    No occurrences

Checking class ResourceRef:

  Verifying word size toArray:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word size toArray:

    No occurrences

Checking class EjbRef:

  Verifying word size toArray:

    No occurrences

Checking class ContextHandler:

  Verifying word size toArray:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word size toArray:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word size toArray:

    No occurrences

Checking class XercesParser:

  Verifying word size toArray:

    No occurrences

Checking class GenericParser:

  Verifying word size toArray:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word size toArray:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word size toArray:

    No occurrences

Checking class StringManager:

  Verifying word size toArray:

    No occurrences

Checking class MappingData:

  Verifying word size toArray:

    No occurrences

Checking class MessageBytes:

  Verifying word size toArray:

    No occurrences

Checking class Response:

  Verifying word size toArray:

    No occurrences

Checking class OutputBuffer:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteWriter:

  Verifying word size toArray:

    No occurrences

Checking class UEncoder:

  Verifying word size toArray:

    No occurrences

Checking class ResponseFacade:

  Verifying word size toArray:

    No occurrences

Checking class Session:

  Verifying word size toArray:

    No occurrences

Checking class MimeHeaders:

  Verifying word size toArray:

    No occurrences

Checking class URL:

  Verifying word size toArray:

    No occurrences

Checking class Response$3:

  Verifying word size toArray:

    No occurrences

Checking class Response$1:

  Verifying word size toArray:

    No occurrences

Checking class Response$2:

  Verifying word size toArray:

    No occurrences

Checking class ServerCookie:

  Verifying word size toArray:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word size toArray:

    No occurrences

Checking class SecurityUtil:

  Verifying word size toArray:

    No occurrences

Checking class Request:

  Verifying word size toArray:

    No occurrences

Checking class SocketStatus:

  Verifying word size toArray:

    No occurrences

Checking class RequestInfo:

  Verifying word size toArray:

    No occurrences

Checking class B2CConverter:

  Verifying word size toArray:

    No occurrences

Checking class Cookies:

  Verifying word size toArray:

    No occurrences

Checking class ActionCode:

  Verifying word size toArray:

    No occurrences

Checking class Parameters:

  Verifying word size toArray:

      Method: Parameters.getParameterValues()
      Calls Location: Parameters.java:148 Parameters.java:148
      Atomic: NO

Checking class ExceptionUtils:

  Verifying word size toArray:

    No occurrences

Checking class UDecoder:

  Verifying word size toArray:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word size toArray:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word size toArray:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word size toArray:

    No occurrences

Checking class CometEventImpl:

  Verifying word size toArray:

    No occurrences

Checking class SSL:

  Verifying word size toArray:

    No occurrences

Checking class Library:

  Verifying word size toArray:

    No occurrences

Checking class InputBuffer:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteReader:

  Verifying word size toArray:

    No occurrences

Checking class ParameterMap:

  Verifying word size toArray:

    No occurrences

Checking class StringParser:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade:

  Verifying word size toArray:

    No occurrences

Checking class Enumerator:

  Verifying word size toArray:

    No occurrences

Checking class GenericPrincipal:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word size toArray:

    No occurrences

Checking class Mapper$Host:

  Verifying word size toArray:

    No occurrences

Checking class Mapper$Context:

  Verifying word size toArray:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word size toArray:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word size toArray:

    No occurrences

Checking class Ascii:

  Verifying word size toArray:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word size toArray:

    No occurrences

Checking class SetSessionConfig:

  Verifying word size toArray:

    No occurrences

Checking class SetLoginConfig:

  Verifying word size toArray:

    No occurrences

Checking class SetJspConfig:

  Verifying word size toArray:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word size toArray:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word size toArray:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word size toArray:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word size toArray:

    No occurrences

Checking class SetDistributableRule:

  Verifying word size toArray:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word size toArray:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word size toArray:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word size toArray:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word size toArray:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word size toArray:

    No occurrences

Checking class LocalResolver:

  Verifying word size toArray:

    No occurrences

Checking class Constants:

  Verifying word size toArray:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word size toArray:

    No occurrences

Checking class AttributeInfo:

  Verifying word size toArray:

    No occurrences

Checking class BaseModelMBean:

  Verifying word size toArray:

    No occurrences

Checking class DomUtil:

  Verifying word size toArray:

    No occurrences

Checking class RealmBase:

  Verifying word size toArray:

      Method: RealmBase.resultsToArray()
      Calls Location: RealmBase.java:741 RealmBase.java:742
      Atomic: NO

Checking class JAASCallbackHandler:

  Verifying word size toArray:

    No occurrences

Checking class StringManager:

  Verifying word size toArray:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word size toArray:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word size toArray:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word size toArray:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word size toArray:

    No occurrences

Checking class NamingEntry:

  Verifying word size toArray:

    No occurrences

Checking class ResourceSet:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word size toArray:

    No occurrences

Checking class Extension:

  Verifying word size toArray:

    No occurrences

Checking class ManifestResource:

  Verifying word size toArray:

    No occurrences

Checking class NameParserImpl:

  Verifying word size toArray:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word size toArray:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word size toArray:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word size toArray:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word size toArray:

    No occurrences

Checking class CacheEntry:

  Verifying word size toArray:

    No occurrences

Checking class ManagerBase:

  Verifying word size toArray:

    No occurrences

Checking class StandardSession:

  Verifying word size toArray:

      Method: StandardSession.fireSessionEvent()
      Calls Location: StandardSession.java:1653 StandardSession.java:1658
      Atomic: NO

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word size toArray:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word size toArray:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word size toArray:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word size toArray:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word size toArray:

    No occurrences

Checking class ResourceAttributes:

  Verifying word size toArray:

    No occurrences

Checking class TldRuleSet:

  Verifying word size toArray:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word size toArray:

    No occurrences

Checking class InstanceSupport:

  Verifying word size toArray:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word size toArray:

    No occurrences

Checking class DummyRequest:

  Verifying word size toArray:

    No occurrences

Checking class DummyResponse:

  Verifying word size toArray:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word size toArray:

    No occurrences

Checking class Constants:

  Verifying word size toArray:

    No occurrences

Checking class ContainerServlet:

  Verifying word size toArray:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word size toArray:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word size toArray:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word size toArray:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word size toArray:

    No occurrences

Checking class InstanceEvent:

  Verifying word size toArray:

    No occurrences

Checking class ClientAbortException:

  Verifying word size toArray:

    No occurrences

Checking class Contained:

  Verifying word size toArray:

    No occurrences

Checking class Reloader:

  Verifying word size toArray:

    No occurrences

Checking class ResourceEntry:

  Verifying word size toArray:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word size toArray:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word size toArray:

    No occurrences

Checking class JndiPermission:

  Verifying word size toArray:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word size toArray:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word size toArray:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word size toArray:

    No occurrences

Checking class IOTools:

  Verifying word size toArray:

    No occurrences

Checking class DOMException:

  Verifying word size toArray:

    No occurrences

Checking class Attr:

  Verifying word size toArray:

    No occurrences

Checking class TypeInfo:

  Verifying word size toArray:

    No occurrences

Checking class DocumentType:

  Verifying word size toArray:

    No occurrences

Checking class DOMImplementation:

  Verifying word size toArray:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word size toArray:

    No occurrences

Checking class DOMConfiguration:

  Verifying word size toArray:

    No occurrences

Checking class NamedNodeMap:

  Verifying word size toArray:

    No occurrences

Checking class UserDataHandler:

  Verifying word size toArray:

    No occurrences

Checking class CharacterData:

  Verifying word size toArray:

    No occurrences

Checking class ResourceBase:

  Verifying word size toArray:

    No occurrences

Checking class NotificationInfo:

  Verifying word size toArray:

    No occurrences

Checking class OperationInfo:

  Verifying word size toArray:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word size toArray:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word size toArray:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word size toArray:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word size toArray:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word size toArray:

    No occurrences

Checking class DateTool:

  Verifying word size toArray:

    No occurrences

Checking class HexUtils:

  Verifying word size toArray:

    No occurrences

Checking class StringManager$1:

  Verifying word size toArray:

    No occurrences

Checking class SessionListener:

  Verifying word size toArray:

    No occurrences

Checking class MimeHeaderField:

  Verifying word size toArray:

    No occurrences

Checking class NamesEnumerator:

  Verifying word size toArray:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word size toArray:

    No occurrences

Checking class C2BConverter:

  Verifying word size toArray:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word size toArray:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word size toArray:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class OutputBuffer:

  Verifying word size toArray:

    No occurrences

Checking class ActionHook:

  Verifying word size toArray:

    No occurrences

Checking class MediaType:

  Verifying word size toArray:

    No occurrences

Checking class HttpParser:

  Verifying word size toArray:

    No occurrences

Checking class ServerCookie$1:

  Verifying word size toArray:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word size toArray:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word size toArray:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word size toArray:

    No occurrences

Checking class ReadConvertor:

  Verifying word size toArray:

    No occurrences

Checking class UserDataHelper:

  Verifying word size toArray:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word size toArray:

    No occurrences

Checking class Parameters$1:

  Verifying word size toArray:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word size toArray:

    No occurrences

Checking class InputBuffer:

  Verifying word size toArray:

    No occurrences

Checking class ContentType:

  Verifying word size toArray:

    No occurrences

Checking class BIOCallback:

  Verifying word size toArray:

    No occurrences

Checking class PasswordCallback:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word size toArray:

    No occurrences

Checking class InputBuffer$1:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word size toArray:

    No occurrences

Checking class CometFilter:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word size toArray:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word size toArray:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word size toArray:

    No occurrences

Checking class FeatureInfo:

  Verifying word size toArray:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word size toArray:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word size toArray:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word size toArray:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word size toArray:

    No occurrences

Checking class MD5Encoder:

  Verifying word size toArray:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word size toArray:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word size toArray:

    No occurrences

Checking class HexUtils:

  Verifying word size toArray:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationResponse:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word size toArray:

      Method: ApplicationHttpRequest.mergeParameters()
      Calls Location: ApplicationHttpRequest.java:847 ApplicationHttpRequest.java:848
      Atomic: NO

      Method: ApplicationHttpRequest.mergeValues()
      Calls Location: ApplicationHttpRequest.java:847 ApplicationHttpRequest.java:848
      Atomic: NO

Checking class ApplicationRequest:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word size toArray:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word size toArray:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word size toArray:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word size toArray:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word size toArray:

    No occurrences

Checking class StandardSession$1:

  Verifying word size toArray:

    No occurrences

Checking class SessionEvent:

  Verifying word size toArray:

    No occurrences

Checking class StandardSessionContext:

  Verifying word size toArray:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word size toArray:

    No occurrences

Checking class DummyRequest$1:

  Verifying word size toArray:

    No occurrences

Checking class CometProcessor:

  Verifying word size toArray:

    No occurrences

Checking class Constants:

  Verifying word size toArray:

    No occurrences

Checking class DOMStringList:

  Verifying word size toArray:

    No occurrences

Checking class ParameterInfo:

  Verifying word size toArray:

    No occurrences

Checking class LSResourceResolver:

  Verifying word size toArray:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word size toArray:

    No occurrences

Checking class WriteConvertor:

  Verifying word size toArray:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word size toArray:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word size toArray:

    No occurrences

Checking class CometFilterChain:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word size toArray:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word size toArray:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word size toArray:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word size toArray:

    No occurrences

Checking class LSInput:

  Verifying word size toArray:

    No occurrences


Run Time:
                                .buildTree       5.258s
                                    .onLCA      15.983s
                         analysis-behavior       8.856s
                          analysis-threads       0.009s
                       build-parsing-table       0.151s
                       check-word-instance       0.005s
                               grammar-opt       0.830s
                        grammar-rm-epsilon       7.795s
                                   parsing      42.305s
                                 soot-init     156.876s
                                     total     245.983s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions       2235
                            parse-branches    5066691
                               parse-trees         25
                      parsing-table-states       2306
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word parse reset:

    No occurrences

Checking class Log:

  Verifying word parse reset:

    No occurrences

Checking class CatalinaProperties:

  Verifying word parse reset:

    No occurrences

Checking class LogFactory:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word parse reset:

    No occurrences

Checking class Catalina:

  Verifying word parse reset:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word parse reset:

    No occurrences

Checking class Embedded:

  Verifying word parse reset:

    No occurrences

Checking class LogConfigurationException:

  Verifying word parse reset:

    No occurrences

Checking class DirectJDKLog:

  Verifying word parse reset:

    No occurrences

Checking class StandardClassLoader:

  Verifying word parse reset:

    No occurrences

Checking class ContextRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class LifecycleException:

  Verifying word parse reset:

    No occurrences

Checking class StandardServer:

  Verifying word parse reset:

    No occurrences

Checking class Lifecycle:

  Verifying word parse reset:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word parse reset:

    No occurrences

Checking class Server:

  Verifying word parse reset:

    No occurrences

Checking class RuleSet:

  Verifying word parse reset:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word parse reset:

    No occurrences

Checking class Rule:

  Verifying word parse reset:

    No occurrences

Checking class EngineRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word parse reset:

    No occurrences

Checking class NamingRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class RuleSetBase:

  Verifying word parse reset:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word parse reset:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word parse reset:

    No occurrences

Checking class HostRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class StringManager:

  Verifying word parse reset:

    No occurrences

Checking class StandardService:

  Verifying word parse reset:

    No occurrences

Checking class Engine:

  Verifying word parse reset:

    No occurrences

Checking class LifecycleSupport:

  Verifying word parse reset:

    No occurrences

Checking class Realm:

  Verifying word parse reset:

    No occurrences

Checking class Connector:

  Verifying word parse reset:

    No occurrences

Checking class Context:

  Verifying word parse reset:

    No occurrences

Checking class Host:

  Verifying word parse reset:

    No occurrences

Checking class Loader:

  Verifying word parse reset:

    No occurrences

Checking class LifecycleListener:

  Verifying word parse reset:

    No occurrences

Checking class ContextConfig:

  Verifying word parse reset:

      Method: ContextConfig.applicationWebConfig()
      Calls Location: ContextConfig.java:365 ContextConfig.java:401
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:680 ContextConfig.java:401
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:680 ContextConfig.java:401
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:680 ContextConfig.java:401
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:680 ContextConfig.java:401
      Atomic: YES

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:680 ContextConfig.java:706
      Atomic: NO

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:680 ContextConfig.java:706
      Atomic: NO

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:680 ContextConfig.java:706
      Atomic: NO

      Method: ContextConfig.processDefaultWebConfig()
      Calls Location: ContextConfig.java:680 ContextConfig.java:706
      Atomic: YES

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:788 ContextConfig.java:819
      Atomic: YES

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:788 ContextConfig.java:819
      Atomic: NO

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:788 ContextConfig.java:819
      Atomic: NO

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:788 ContextConfig.java:819
      Atomic: NO

Checking class StandardEngine:

  Verifying word parse reset:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word parse reset:

    No occurrences

Checking class SystemLogHandler:

  Verifying word parse reset:

    No occurrences

Checking class Container:

  Verifying word parse reset:

    No occurrences

Checking class SecurityConfig:

  Verifying word parse reset:

    No occurrences

Checking class Valve:

  Verifying word parse reset:

    No occurrences

Checking class StandardContext:

  Verifying word parse reset:

    No occurrences

Checking class StandardHost:

  Verifying word parse reset:

    No occurrences

Checking class WebappLoader:

  Verifying word parse reset:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word parse reset:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word parse reset:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word parse reset:

    No occurrences

Checking class RealmRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class NamingResources:

  Verifying word parse reset:

    No occurrences

Checking class NamingContextListener:

  Verifying word parse reset:

    No occurrences

Checking class Service:

  Verifying word parse reset:

    No occurrences

Checking class ServerFactory:

  Verifying word parse reset:

    No occurrences

Checking class Registry:

  Verifying word parse reset:

    No occurrences

Checking class StringCache:

  Verifying word parse reset:

    No occurrences

Checking class ServerInfo:

  Verifying word parse reset:

    No occurrences

Checking class Executor:

  Verifying word parse reset:

    No occurrences

Checking class ProtocolHandler:

  Verifying word parse reset:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word parse reset:

    No occurrences

Checking class ArrayStack:

  Verifying word parse reset:

    No occurrences

Checking class Rules:

  Verifying word parse reset:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word parse reset:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word parse reset:

    No occurrences

Checking class ObjectParamRule:

  Verifying word parse reset:

    No occurrences

Checking class CallParamRule:

  Verifying word parse reset:

    No occurrences

Checking class CallMethodRule:

  Verifying word parse reset:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word parse reset:

    No occurrences

Checking class SetNextRule:

  Verifying word parse reset:

    No occurrences

Checking class SetTopRule:

  Verifying word parse reset:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word parse reset:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word parse reset:

    No occurrences

Checking class SetPropertyRule:

  Verifying word parse reset:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word parse reset:

    No occurrences

Checking class SetRootRule:

  Verifying word parse reset:

    No occurrences

Checking class PathCallParamRule:

  Verifying word parse reset:

    No occurrences

Checking class RulesBase:

  Verifying word parse reset:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word parse reset:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word parse reset:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word parse reset:

    No occurrences

Checking class ContainerBase:

  Verifying word parse reset:

    No occurrences

Checking class Adapter:

  Verifying word parse reset:

    No occurrences

Checking class Mapper:

  Verifying word parse reset:

    No occurrences

Checking class MapperListener:

  Verifying word parse reset:

    No occurrences

Checking class Request:

  Verifying word parse reset:

    No occurrences

Checking class Response:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word parse reset:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word parse reset:

    No occurrences

Checking class WebRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class LoginConfig:

  Verifying word parse reset:

    No occurrences

Checking class LifecycleEvent:

  Verifying word parse reset:

    No occurrences

Checking class Pipeline:

  Verifying word parse reset:

    No occurrences

Checking class DigesterFactory:

  Verifying word parse reset:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word parse reset:

    No occurrences

Checking class FilterMap:

  Verifying word parse reset:

    No occurrences

Checking class ErrorPage:

  Verifying word parse reset:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word parse reset:

    No occurrences

Checking class SecurityConstraint:

  Verifying word parse reset:

    No occurrences

Checking class ExpandWar:

  Verifying word parse reset:

    No occurrences

Checking class FilterDef:

  Verifying word parse reset:

    No occurrences

Checking class Wrapper:

  Verifying word parse reset:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word parse reset:

    No occurrences

Checking class CharsetMapper:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationParameter:

  Verifying word parse reset:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word parse reset:

    No occurrences

Checking class MbeansSource:

  Verifying word parse reset:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word parse reset:

    No occurrences

Checking class JAASRealm:

  Verifying word parse reset:

    No occurrences

Checking class StandardEngineValve:

  Verifying word parse reset:

    No occurrences

Checking class AccessLog:

  Verifying word parse reset:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word parse reset:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word parse reset:

    No occurrences

Checking class CaptureLog:

  Verifying word parse reset:

    No occurrences

Checking class Manager:

  Verifying word parse reset:

    No occurrences

Checking class Cluster:

  Verifying word parse reset:

    No occurrences

Checking class ContainerListener:

  Verifying word parse reset:

    No occurrences

Checking class CometEvent:

  Verifying word parse reset:

    No occurrences

Checking class URLEncoder:

  Verifying word parse reset:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationContext:

  Verifying word parse reset:

    No occurrences

Checking class MessageDestination:

  Verifying word parse reset:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word parse reset:

    No occurrences

Checking class SecurityCollection:

  Verifying word parse reset:

    No occurrences

Checking class FileDirContext:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word parse reset:

    No occurrences

Checking class ExtensionValidator:

  Verifying word parse reset:

    No occurrences

Checking class StandardContextValve:

  Verifying word parse reset:

    No occurrences

Checking class BaseDirContext:

  Verifying word parse reset:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word parse reset:

    No occurrences

Checking class ResourceCache:

  Verifying word parse reset:

    No occurrences

Checking class Globals:

  Verifying word parse reset:

    No occurrences

Checking class ContextBindings:

  Verifying word parse reset:

    No occurrences

Checking class StandardManager:

  Verifying word parse reset:

    No occurrences

Checking class ProxyDirContext:

  Verifying word parse reset:

    No occurrences

Checking class TldConfig:

  Verifying word parse reset:

      Method: TldConfig.tldScanStream()
      Calls Location: TldConfig.java:451 TldConfig.java:456
      Atomic: YES

      Method: TldConfig.tldScanJar()
      Calls Location: TldConfig.java:451 TldConfig.java:456
      Atomic: NO

      Method: TldConfig.tldScanJar()
      Calls Location: TldConfig.java:451 TldConfig.java:456
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:451 TldConfig.java:456
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:451 TldConfig.java:456
      Atomic: NO

Checking class RequestUtil:

  Verifying word parse reset:

    No occurrences

Checking class StandardWrapper:

  Verifying word parse reset:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word parse reset:

    No occurrences

Checking class WARDirContext:

  Verifying word parse reset:

    No occurrences

Checking class InstanceListener:

  Verifying word parse reset:

    No occurrences

Checking class StandardHostValve:

  Verifying word parse reset:

    No occurrences

Checking class ValveBase:

  Verifying word parse reset:

    No occurrences

Checking class StandardPipeline:

  Verifying word parse reset:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word parse reset:

    No occurrences

Checking class WebappClassLoader:

  Verifying word parse reset:

    No occurrences

Checking class HostConfig:

  Verifying word parse reset:

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1035 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1035 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1035 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1035 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1035 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1035 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployDirectories()
      Calls Location: HostConfig.java:1035 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployDirectories()
      Calls Location: HostConfig.java:1035 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployDirectory()
      Calls Location: HostConfig.java:1035 HostConfig.java:1092
      Atomic: YES

      Method: HostConfig.deployWAR()
      Calls Location: HostConfig.java:911 HostConfig.java:974
      Atomic: YES

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:911 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:911 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployWARs()
      Calls Location: HostConfig.java:911 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.deployWARs()
      Calls Location: HostConfig.java:911 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:911 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:911 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:911 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:911 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:911 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:911 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:911 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:911 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployDescriptors()
      Calls Location: HostConfig.java:631 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.deployDescriptors()
      Calls Location: HostConfig.java:631 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:631 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:631 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:631 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:631 HostConfig.java:736
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:631 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:631 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:974
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:631 HostConfig.java:1092
      Atomic: NO

      Method: HostConfig.deployDescriptor()
      Calls Location: HostConfig.java:631 HostConfig.java:736
      Atomic: YES

Checking class DirContextURLStreamHandlerFactory:

  Verifying word parse reset:

    No occurrences

Checking class Resource:

  Verifying word parse reset:

    No occurrences

Checking class Document:

  Verifying word parse reset:

    No occurrences

Checking class Element:

  Verifying word parse reset:

    No occurrences

Checking class Node:

  Verifying word parse reset:

    No occurrences

Checking class NodeList:

  Verifying word parse reset:

    No occurrences

Checking class Text:

  Verifying word parse reset:

    No occurrences

Checking class ContextTransaction:

  Verifying word parse reset:

    No occurrences

Checking class ContextEjb:

  Verifying word parse reset:

    No occurrences

Checking class ContextEnvironment:

  Verifying word parse reset:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word parse reset:

    No occurrences

Checking class ContextResource:

  Verifying word parse reset:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word parse reset:

    No occurrences

Checking class ContextResourceLink:

  Verifying word parse reset:

    No occurrences

Checking class ContextService:

  Verifying word parse reset:

    No occurrences

Checking class RegistryMBean:

  Verifying word parse reset:

    No occurrences

Checking class ManagedBean:

  Verifying word parse reset:

    No occurrences

Checking class ModelerSource:

  Verifying word parse reset:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word parse reset:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word parse reset:

    No occurrences

Checking class ByteChunk:

  Verifying word parse reset:

    No occurrences

Checking class CharChunk:

  Verifying word parse reset:

    No occurrences

Checking class NamingContext:

  Verifying word parse reset:

    No occurrences

Checking class ContainerEvent:

  Verifying word parse reset:

    No occurrences

Checking class TransactionRef:

  Verifying word parse reset:

    No occurrences

Checking class ServiceRef:

  Verifying word parse reset:

    No occurrences

Checking class HandlerRef:

  Verifying word parse reset:

    No occurrences

Checking class ContextAccessController:

  Verifying word parse reset:

    No occurrences

Checking class ResourceRef:

  Verifying word parse reset:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word parse reset:

    No occurrences

Checking class EjbRef:

  Verifying word parse reset:

    No occurrences

Checking class ContextHandler:

  Verifying word parse reset:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word parse reset:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word parse reset:

    No occurrences

Checking class XercesParser:

  Verifying word parse reset:

    No occurrences

Checking class GenericParser:

  Verifying word parse reset:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word parse reset:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word parse reset:

    No occurrences

Checking class StringManager:

  Verifying word parse reset:

    No occurrences

Checking class MappingData:

  Verifying word parse reset:

    No occurrences

Checking class MessageBytes:

  Verifying word parse reset:

    No occurrences

Checking class Response:

  Verifying word parse reset:

    No occurrences

Checking class OutputBuffer:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteWriter:

  Verifying word parse reset:

    No occurrences

Checking class UEncoder:

  Verifying word parse reset:

    No occurrences

Checking class ResponseFacade:

  Verifying word parse reset:

    No occurrences

Checking class Session:

  Verifying word parse reset:

    No occurrences

Checking class MimeHeaders:

  Verifying word parse reset:

    No occurrences

Checking class URL:

  Verifying word parse reset:

    No occurrences

Checking class Response$3:

  Verifying word parse reset:

    No occurrences

Checking class Response$1:

  Verifying word parse reset:

    No occurrences

Checking class Response$2:

  Verifying word parse reset:

    No occurrences

Checking class ServerCookie:

  Verifying word parse reset:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word parse reset:

    No occurrences

Checking class SecurityUtil:

  Verifying word parse reset:

    No occurrences

Checking class Request:

  Verifying word parse reset:

    No occurrences

Checking class SocketStatus:

  Verifying word parse reset:

    No occurrences

Checking class RequestInfo:

  Verifying word parse reset:

    No occurrences

Checking class B2CConverter:

  Verifying word parse reset:

    No occurrences

Checking class Cookies:

  Verifying word parse reset:

    No occurrences

Checking class ActionCode:

  Verifying word parse reset:

    No occurrences

Checking class Parameters:

  Verifying word parse reset:

    No occurrences

Checking class ExceptionUtils:

  Verifying word parse reset:

    No occurrences

Checking class UDecoder:

  Verifying word parse reset:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word parse reset:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word parse reset:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word parse reset:

    No occurrences

Checking class CometEventImpl:

  Verifying word parse reset:

    No occurrences

Checking class SSL:

  Verifying word parse reset:

    No occurrences

Checking class Library:

  Verifying word parse reset:

    No occurrences

Checking class InputBuffer:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteReader:

  Verifying word parse reset:

    No occurrences

Checking class ParameterMap:

  Verifying word parse reset:

    No occurrences

Checking class StringParser:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade:

  Verifying word parse reset:

    No occurrences

Checking class Enumerator:

  Verifying word parse reset:

    No occurrences

Checking class GenericPrincipal:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word parse reset:

    No occurrences

Checking class Mapper$Host:

  Verifying word parse reset:

    No occurrences

Checking class Mapper$Context:

  Verifying word parse reset:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word parse reset:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word parse reset:

    No occurrences

Checking class Ascii:

  Verifying word parse reset:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word parse reset:

    No occurrences

Checking class SetSessionConfig:

  Verifying word parse reset:

    No occurrences

Checking class SetLoginConfig:

  Verifying word parse reset:

    No occurrences

Checking class SetJspConfig:

  Verifying word parse reset:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word parse reset:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word parse reset:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word parse reset:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word parse reset:

    No occurrences

Checking class SetDistributableRule:

  Verifying word parse reset:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word parse reset:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word parse reset:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word parse reset:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word parse reset:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word parse reset:

    No occurrences

Checking class LocalResolver:

  Verifying word parse reset:

    No occurrences

Checking class Constants:

  Verifying word parse reset:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word parse reset:

    No occurrences

Checking class AttributeInfo:

  Verifying word parse reset:

    No occurrences

Checking class BaseModelMBean:

  Verifying word parse reset:

    No occurrences

Checking class DomUtil:

  Verifying word parse reset:

    No occurrences

Checking class RealmBase:

  Verifying word parse reset:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word parse reset:

    No occurrences

Checking class StringManager:

  Verifying word parse reset:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word parse reset:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word parse reset:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word parse reset:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word parse reset:

    No occurrences

Checking class NamingEntry:

  Verifying word parse reset:

    No occurrences

Checking class ResourceSet:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word parse reset:

    No occurrences

Checking class Extension:

  Verifying word parse reset:

    No occurrences

Checking class ManifestResource:

  Verifying word parse reset:

    No occurrences

Checking class NameParserImpl:

  Verifying word parse reset:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word parse reset:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word parse reset:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word parse reset:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word parse reset:

    No occurrences

Checking class CacheEntry:

  Verifying word parse reset:

    No occurrences

Checking class ManagerBase:

  Verifying word parse reset:

    No occurrences

Checking class StandardSession:

  Verifying word parse reset:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word parse reset:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word parse reset:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word parse reset:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word parse reset:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word parse reset:

    No occurrences

Checking class ResourceAttributes:

  Verifying word parse reset:

    No occurrences

Checking class TldRuleSet:

  Verifying word parse reset:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word parse reset:

    No occurrences

Checking class InstanceSupport:

  Verifying word parse reset:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word parse reset:

    No occurrences

Checking class DummyRequest:

  Verifying word parse reset:

    No occurrences

Checking class DummyResponse:

  Verifying word parse reset:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word parse reset:

    No occurrences

Checking class Constants:

  Verifying word parse reset:

    No occurrences

Checking class ContainerServlet:

  Verifying word parse reset:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word parse reset:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word parse reset:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word parse reset:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word parse reset:

    No occurrences

Checking class InstanceEvent:

  Verifying word parse reset:

    No occurrences

Checking class ClientAbortException:

  Verifying word parse reset:

    No occurrences

Checking class Contained:

  Verifying word parse reset:

    No occurrences

Checking class Reloader:

  Verifying word parse reset:

    No occurrences

Checking class ResourceEntry:

  Verifying word parse reset:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word parse reset:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word parse reset:

    No occurrences

Checking class JndiPermission:

  Verifying word parse reset:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word parse reset:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word parse reset:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word parse reset:

    No occurrences

Checking class IOTools:

  Verifying word parse reset:

    No occurrences

Checking class DOMException:

  Verifying word parse reset:

    No occurrences

Checking class Attr:

  Verifying word parse reset:

    No occurrences

Checking class TypeInfo:

  Verifying word parse reset:

    No occurrences

Checking class DocumentType:

  Verifying word parse reset:

    No occurrences

Checking class DOMImplementation:

  Verifying word parse reset:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word parse reset:

    No occurrences

Checking class DOMConfiguration:

  Verifying word parse reset:

    No occurrences

Checking class NamedNodeMap:

  Verifying word parse reset:

    No occurrences

Checking class UserDataHandler:

  Verifying word parse reset:

    No occurrences

Checking class CharacterData:

  Verifying word parse reset:

    No occurrences

Checking class ResourceBase:

  Verifying word parse reset:

    No occurrences

Checking class NotificationInfo:

  Verifying word parse reset:

    No occurrences

Checking class OperationInfo:

  Verifying word parse reset:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word parse reset:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word parse reset:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word parse reset:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word parse reset:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word parse reset:

    No occurrences

Checking class DateTool:

  Verifying word parse reset:

    No occurrences

Checking class HexUtils:

  Verifying word parse reset:

    No occurrences

Checking class StringManager$1:

  Verifying word parse reset:

    No occurrences

Checking class SessionListener:

  Verifying word parse reset:

    No occurrences

Checking class MimeHeaderField:

  Verifying word parse reset:

    No occurrences

Checking class NamesEnumerator:

  Verifying word parse reset:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word parse reset:

    No occurrences

Checking class C2BConverter:

  Verifying word parse reset:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word parse reset:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word parse reset:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class OutputBuffer:

  Verifying word parse reset:

    No occurrences

Checking class ActionHook:

  Verifying word parse reset:

    No occurrences

Checking class MediaType:

  Verifying word parse reset:

    No occurrences

Checking class HttpParser:

  Verifying word parse reset:

    No occurrences

Checking class ServerCookie$1:

  Verifying word parse reset:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word parse reset:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word parse reset:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word parse reset:

    No occurrences

Checking class ReadConvertor:

  Verifying word parse reset:

    No occurrences

Checking class UserDataHelper:

  Verifying word parse reset:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word parse reset:

    No occurrences

Checking class Parameters$1:

  Verifying word parse reset:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word parse reset:

    No occurrences

Checking class InputBuffer:

  Verifying word parse reset:

    No occurrences

Checking class ContentType:

  Verifying word parse reset:

    No occurrences

Checking class BIOCallback:

  Verifying word parse reset:

    No occurrences

Checking class PasswordCallback:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word parse reset:

    No occurrences

Checking class InputBuffer$1:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word parse reset:

    No occurrences

Checking class CometFilter:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word parse reset:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word parse reset:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word parse reset:

    No occurrences

Checking class FeatureInfo:

  Verifying word parse reset:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word parse reset:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word parse reset:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word parse reset:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word parse reset:

    No occurrences

Checking class MD5Encoder:

  Verifying word parse reset:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word parse reset:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word parse reset:

    No occurrences

Checking class HexUtils:

  Verifying word parse reset:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationResponse:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationRequest:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word parse reset:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word parse reset:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word parse reset:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word parse reset:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word parse reset:

    No occurrences

Checking class StandardSession$1:

  Verifying word parse reset:

    No occurrences

Checking class SessionEvent:

  Verifying word parse reset:

    No occurrences

Checking class StandardSessionContext:

  Verifying word parse reset:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word parse reset:

    No occurrences

Checking class DummyRequest$1:

  Verifying word parse reset:

    No occurrences

Checking class CometProcessor:

  Verifying word parse reset:

    No occurrences

Checking class Constants:

  Verifying word parse reset:

    No occurrences

Checking class DOMStringList:

  Verifying word parse reset:

    No occurrences

Checking class ParameterInfo:

  Verifying word parse reset:

    No occurrences

Checking class LSResourceResolver:

  Verifying word parse reset:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word parse reset:

    No occurrences

Checking class WriteConvertor:

  Verifying word parse reset:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word parse reset:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word parse reset:

    No occurrences

Checking class CometFilterChain:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word parse reset:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word parse reset:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word parse reset:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word parse reset:

    No occurrences

Checking class LSInput:

  Verifying word parse reset:

    No occurrences


Run Time:
                                .buildTree       1.622s
                                    .onLCA       5.730s
                         analysis-behavior       8.623s
                          analysis-threads       0.009s
                       build-parsing-table       6.911s
                       check-word-instance       0.004s
                               grammar-opt       0.834s
                        grammar-rm-epsilon       7.565s
                                   parsing      10.216s
                                 soot-init     157.539s
                                     total     208.242s

Profiling Vars:
                                 cfg-nodes      80844
                       grammar-productions       2006
                            parse-branches    2487869
                               parse-trees         57
                      parsing-table-states       2625
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Log:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CatalinaProperties:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LogFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Catalina:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Embedded:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LogConfigurationException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DirectJDKLog:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardClassLoader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Digester:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LifecycleException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardServer:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Lifecycle:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Server:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Rule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class EngineRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RuleSetBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HostRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringManager:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardService:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Engine:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LifecycleSupport:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Realm:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Connector:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Context:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Host:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Loader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LifecycleListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextConfig:

  Verifying word getWarnings logFindings:

      Method: ContextConfig.applicationWebConfig()
      Calls Location: ContextConfig.java:367 ContextConfig.java:370
      Atomic: YES

      Method: ContextConfig.processDefaultWebConfig()
      Calls Location: ContextConfig.java:681 ContextConfig.java:684
      Atomic: YES

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:681 ContextConfig.java:684
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:681 ContextConfig.java:370
      Atomic: YES

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:789 ContextConfig.java:792
      Atomic: YES

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:789 ContextConfig.java:792
      Atomic: NO

  Verifying word getErrors logFindings:

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:681 ContextConfig.java:684
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:681 ContextConfig.java:370
      Atomic: YES

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:789 ContextConfig.java:792
      Atomic: NO

      Method: ContextConfig.processDefaultWebConfig()
      Calls Location: ContextConfig.java:681 ContextConfig.java:684
      Atomic: YES

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:789 ContextConfig.java:792
      Atomic: YES

      Method: ContextConfig.applicationWebConfig()
      Calls Location: ContextConfig.java:367 ContextConfig.java:370
      Atomic: YES

Checking class StandardEngine:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SystemLogHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Container:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Valve:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardHost:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebappLoader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RealmRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingResources:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingContextListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Service:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ServerFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Registry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringCache:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ServerInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Executor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ProtocolHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ArrayStack:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Rules:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ObjectParamRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CallParamRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CallMethodRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetNextRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetTopRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetPropertyRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetRootRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class PathCallParamRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RulesBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Adapter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Mapper:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MapperListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Request:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Response:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LoginConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LifecycleEvent:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Pipeline:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DigesterFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FilterMap:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ErrorPage:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityConstraint:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ExpandWar:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FilterDef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Wrapper:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CharsetMapper:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationParameter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MbeansSource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class JAASRealm:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardEngineValve:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class AccessLog:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CaptureLog:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Manager:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Cluster:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometEvent:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class URLEncoder:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MessageDestination:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityCollection:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FileDirContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ExtensionValidator:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardContextValve:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BaseDirContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceCache:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Globals:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextBindings:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardManager:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ProxyDirContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class TldConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestUtil:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardWrapper:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WARDirContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class InstanceListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardHostValve:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ValveBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardPipeline:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebappClassLoader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HostConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Resource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Document:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Element:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Node:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NodeList:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Text:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextTransaction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextEjb:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextEnvironment:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextResource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextResourceLink:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextService:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RegistryMBean:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ManagedBean:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ModelerSource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ByteChunk:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CharChunk:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerEvent:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class TransactionRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ServiceRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HandlerRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextAccessController:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class EjbRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContextHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class XercesParser:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class GenericParser:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringManager:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MappingData:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MessageBytes:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Response:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class OutputBuffer:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteWriter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UEncoder:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResponseFacade:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Session:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MimeHeaders:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class URL:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Response$3:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Response$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Response$2:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ServerCookie:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityUtil:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Request:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SocketStatus:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class B2CConverter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Cookies:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ActionCode:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Parameters:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ExceptionUtils:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UDecoder:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometEventImpl:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SSL:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Library:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class InputBuffer:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteReader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ParameterMap:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringParser:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Enumerator:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class GenericPrincipal:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Mapper$Host:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Mapper$Context:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Ascii:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetSessionConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetLoginConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetJspConfig:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetDistributableRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LocalResolver:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Constants:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class AttributeInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BaseModelMBean:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DomUtil:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RealmBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringManager:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamingEntry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Extension:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ManifestResource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NameParserImpl:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CacheEntry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ManagerBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardSession:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceAttributes:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class TldRuleSet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class InstanceSupport:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DummyRequest:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DummyResponse:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Constants:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContainerServlet:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class InstanceEvent:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ClientAbortException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Contained:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Reloader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceEntry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class JndiPermission:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IOTools:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DOMException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Attr:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class TypeInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DocumentType:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DOMImplementation:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DOMConfiguration:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamedNodeMap:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UserDataHandler:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CharacterData:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResourceBase:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NotificationInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class OperationInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DateTool:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HexUtils:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StringManager$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SessionListener:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MimeHeaderField:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class NamesEnumerator:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class C2BConverter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class OutputBuffer:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ActionHook:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MediaType:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HttpParser:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ServerCookie$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ReadConvertor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UserDataHelper:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Parameters$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class InputBuffer:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ContentType:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BIOCallback:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class PasswordCallback:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class InputBuffer$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometFilter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FeatureInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class MD5Encoder:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HexUtils:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationResponse:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationRequest:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardSession$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class SessionEvent:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class StandardSessionContext:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DummyRequest$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometProcessor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class Constants:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class DOMStringList:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ParameterInfo:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LSResourceResolver:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class WriteConvertor:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class CometFilterChain:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences

Checking class LSInput:

  Verifying word getWarnings logFindings:

    No occurrences

  Verifying word getErrors logFindings:

    No occurrences


Run Time:
                                .buildTree       0.025s
                                    .onLCA       0.107s
                         analysis-behavior      18.153s
                          analysis-threads       0.010s
                       build-parsing-table       0.097s
                       check-word-instance       0.001s
                               grammar-opt       1.979s
                        grammar-rm-epsilon      15.763s
                                   parsing       0.270s
                                 soot-init     160.433s
                                     total     215.407s

Profiling Vars:
                                 cfg-nodes     165176
                       grammar-productions       1094
                            parse-branches      17070
                               parse-trees         12
                      parsing-table-states       1818
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word size contains:

    No occurrences

Checking class Log:

  Verifying word size contains:

    No occurrences

Checking class CatalinaProperties:

  Verifying word size contains:

    No occurrences

Checking class LogFactory:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word size contains:

    No occurrences

Checking class Catalina:

  Verifying word size contains:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word size contains:

    No occurrences

Checking class Embedded:

  Verifying word size contains:

    No occurrences

Checking class LogConfigurationException:

  Verifying word size contains:

    No occurrences

Checking class DirectJDKLog:

  Verifying word size contains:

    No occurrences

Checking class StandardClassLoader:

  Verifying word size contains:

    No occurrences

Checking class Digester:

  Verifying word size contains:

    No occurrences

Checking class ContextRuleSet:

  Verifying word size contains:

    No occurrences

Checking class LifecycleException:

  Verifying word size contains:

    No occurrences

Checking class StandardServer:

  Verifying word size contains:

    No occurrences

Checking class Lifecycle:

  Verifying word size contains:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word size contains:

    No occurrences

Checking class Server:

  Verifying word size contains:

    No occurrences

Checking class RuleSet:

  Verifying word size contains:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word size contains:

    No occurrences

Checking class Rule:

  Verifying word size contains:

    No occurrences

Checking class EngineRuleSet:

  Verifying word size contains:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word size contains:

    No occurrences

Checking class NamingRuleSet:

  Verifying word size contains:

    No occurrences

Checking class RuleSetBase:

  Verifying word size contains:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word size contains:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word size contains:

    No occurrences

Checking class HostRuleSet:

  Verifying word size contains:

    No occurrences

Checking class StringManager:

  Verifying word size contains:

    No occurrences

Checking class StandardService:

  Verifying word size contains:

    No occurrences

Checking class Engine:

  Verifying word size contains:

    No occurrences

Checking class LifecycleSupport:

  Verifying word size contains:

    No occurrences

Checking class Realm:

  Verifying word size contains:

    No occurrences

Checking class Connector:

  Verifying word size contains:

    No occurrences

Checking class Context:

  Verifying word size contains:

    No occurrences

Checking class Host:

  Verifying word size contains:

    No occurrences

Checking class Loader:

  Verifying word size contains:

    No occurrences

Checking class LifecycleListener:

  Verifying word size contains:

    No occurrences

Checking class ContextConfig:

  Verifying word size contains:

    No occurrences

Checking class StandardEngine:

  Verifying word size contains:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word size contains:

    No occurrences

Checking class SystemLogHandler:

  Verifying word size contains:

    No occurrences

Checking class Container:

  Verifying word size contains:

    No occurrences

Checking class SecurityConfig:

  Verifying word size contains:

    No occurrences

Checking class Valve:

  Verifying word size contains:

    No occurrences

Checking class StandardContext:

  Verifying word size contains:

    No occurrences

Checking class StandardHost:

  Verifying word size contains:

    No occurrences

Checking class WebappLoader:

  Verifying word size contains:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word size contains:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word size contains:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word size contains:

    No occurrences

Checking class RealmRuleSet:

  Verifying word size contains:

    No occurrences

Checking class NamingResources:

  Verifying word size contains:

    No occurrences

Checking class NamingContextListener:

  Verifying word size contains:

    No occurrences

Checking class Service:

  Verifying word size contains:

    No occurrences

Checking class ServerFactory:

  Verifying word size contains:

    No occurrences

Checking class Registry:

  Verifying word size contains:

    No occurrences

Checking class StringCache:

  Verifying word size contains:

    No occurrences

Checking class ServerInfo:

  Verifying word size contains:

    No occurrences

Checking class Executor:

  Verifying word size contains:

    No occurrences

Checking class ProtocolHandler:

  Verifying word size contains:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word size contains:

    No occurrences

Checking class ArrayStack:

  Verifying word size contains:

    No occurrences

Checking class Rules:

  Verifying word size contains:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word size contains:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word size contains:

    No occurrences

Checking class ObjectParamRule:

  Verifying word size contains:

    No occurrences

Checking class CallParamRule:

  Verifying word size contains:

    No occurrences

Checking class CallMethodRule:

  Verifying word size contains:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word size contains:

    No occurrences

Checking class SetNextRule:

  Verifying word size contains:

    No occurrences

Checking class SetTopRule:

  Verifying word size contains:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word size contains:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word size contains:

    No occurrences

Checking class SetPropertyRule:

  Verifying word size contains:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word size contains:

    No occurrences

Checking class SetRootRule:

  Verifying word size contains:

    No occurrences

Checking class PathCallParamRule:

  Verifying word size contains:

    No occurrences

Checking class RulesBase:

  Verifying word size contains:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word size contains:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word size contains:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word size contains:

    No occurrences

Checking class ContainerBase:

  Verifying word size contains:

    No occurrences

Checking class Adapter:

  Verifying word size contains:

    No occurrences

Checking class Mapper:

  Verifying word size contains:

    No occurrences

Checking class MapperListener:

  Verifying word size contains:

    No occurrences

Checking class Request:

  Verifying word size contains:

    No occurrences

Checking class Response:

  Verifying word size contains:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word size contains:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word size contains:

    No occurrences

Checking class WebRuleSet:

  Verifying word size contains:

    No occurrences

Checking class LoginConfig:

  Verifying word size contains:

    No occurrences

Checking class LifecycleEvent:

  Verifying word size contains:

    No occurrences

Checking class Pipeline:

  Verifying word size contains:

    No occurrences

Checking class DigesterFactory:

  Verifying word size contains:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word size contains:

    No occurrences

Checking class FilterMap:

  Verifying word size contains:

    No occurrences

Checking class ErrorPage:

  Verifying word size contains:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word size contains:

    No occurrences

Checking class SecurityConstraint:

  Verifying word size contains:

    No occurrences

Checking class ExpandWar:

  Verifying word size contains:

    No occurrences

Checking class FilterDef:

  Verifying word size contains:

    No occurrences

Checking class Wrapper:

  Verifying word size contains:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word size contains:

    No occurrences

Checking class CharsetMapper:

  Verifying word size contains:

    No occurrences

Checking class ApplicationParameter:

  Verifying word size contains:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word size contains:

    No occurrences

Checking class MbeansSource:

  Verifying word size contains:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word size contains:

    No occurrences

Checking class JAASRealm:

  Verifying word size contains:

    No occurrences

Checking class StandardEngineValve:

  Verifying word size contains:

    No occurrences

Checking class AccessLog:

  Verifying word size contains:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word size contains:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word size contains:

    No occurrences

Checking class CaptureLog:

  Verifying word size contains:

    No occurrences

Checking class Manager:

  Verifying word size contains:

    No occurrences

Checking class Cluster:

  Verifying word size contains:

    No occurrences

Checking class ContainerListener:

  Verifying word size contains:

    No occurrences

Checking class CometEvent:

  Verifying word size contains:

    No occurrences

Checking class URLEncoder:

  Verifying word size contains:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word size contains:

    No occurrences

Checking class ApplicationContext:

  Verifying word size contains:

    No occurrences

Checking class MessageDestination:

  Verifying word size contains:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word size contains:

    No occurrences

Checking class SecurityCollection:

  Verifying word size contains:

    No occurrences

Checking class FileDirContext:

  Verifying word size contains:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word size contains:

    No occurrences

Checking class ExtensionValidator:

  Verifying word size contains:

    No occurrences

Checking class StandardContextValve:

  Verifying word size contains:

    No occurrences

Checking class BaseDirContext:

  Verifying word size contains:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word size contains:

    No occurrences

Checking class ResourceCache:

  Verifying word size contains:

    No occurrences

Checking class Globals:

  Verifying word size contains:

    No occurrences

Checking class ContextBindings:

  Verifying word size contains:

    No occurrences

Checking class StandardManager:

  Verifying word size contains:

    No occurrences

Checking class ProxyDirContext:

  Verifying word size contains:

    No occurrences

Checking class TldConfig:

  Verifying word size contains:

    No occurrences

Checking class RequestUtil:

  Verifying word size contains:

    No occurrences

Checking class StandardWrapper:

  Verifying word size contains:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word size contains:

    No occurrences

Checking class WARDirContext:

  Verifying word size contains:

    No occurrences

Checking class InstanceListener:

  Verifying word size contains:

    No occurrences

Checking class StandardHostValve:

  Verifying word size contains:

    No occurrences

Checking class ValveBase:

  Verifying word size contains:

    No occurrences

Checking class StandardPipeline:

  Verifying word size contains:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word size contains:

    No occurrences

Checking class WebappClassLoader:

  Verifying word size contains:

    No occurrences

Checking class HostConfig:

  Verifying word size contains:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word size contains:

    No occurrences

Checking class Resource:

  Verifying word size contains:

    No occurrences

Checking class Document:

  Verifying word size contains:

    No occurrences

Checking class Element:

  Verifying word size contains:

    No occurrences

Checking class Node:

  Verifying word size contains:

    No occurrences

Checking class NodeList:

  Verifying word size contains:

    No occurrences

Checking class Text:

  Verifying word size contains:

    No occurrences

Checking class ContextTransaction:

  Verifying word size contains:

    No occurrences

Checking class ContextEjb:

  Verifying word size contains:

    No occurrences

Checking class ContextEnvironment:

  Verifying word size contains:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word size contains:

    No occurrences

Checking class ContextResource:

  Verifying word size contains:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word size contains:

    No occurrences

Checking class ContextResourceLink:

  Verifying word size contains:

    No occurrences

Checking class ContextService:

  Verifying word size contains:

    No occurrences

Checking class RegistryMBean:

  Verifying word size contains:

    No occurrences

Checking class ManagedBean:

  Verifying word size contains:

    No occurrences

Checking class ModelerSource:

  Verifying word size contains:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word size contains:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word size contains:

    No occurrences

Checking class ByteChunk:

  Verifying word size contains:

    No occurrences

Checking class CharChunk:

  Verifying word size contains:

    No occurrences

Checking class NamingContext:

  Verifying word size contains:

    No occurrences

Checking class ContainerEvent:

  Verifying word size contains:

    No occurrences

Checking class TransactionRef:

  Verifying word size contains:

    No occurrences

Checking class ServiceRef:

  Verifying word size contains:

    No occurrences

Checking class HandlerRef:

  Verifying word size contains:

    No occurrences

Checking class ContextAccessController:

  Verifying word size contains:

    No occurrences

Checking class ResourceRef:

  Verifying word size contains:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word size contains:

    No occurrences

Checking class EjbRef:

  Verifying word size contains:

    No occurrences

Checking class ContextHandler:

  Verifying word size contains:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word size contains:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word size contains:

    No occurrences

Checking class XercesParser:

  Verifying word size contains:

    No occurrences

Checking class GenericParser:

  Verifying word size contains:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word size contains:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word size contains:

    No occurrences

Checking class StringManager:

  Verifying word size contains:

    No occurrences

Checking class MappingData:

  Verifying word size contains:

    No occurrences

Checking class MessageBytes:

  Verifying word size contains:

    No occurrences

Checking class Response:

  Verifying word size contains:

    No occurrences

Checking class OutputBuffer:

  Verifying word size contains:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word size contains:

    No occurrences

Checking class CoyoteWriter:

  Verifying word size contains:

    No occurrences

Checking class UEncoder:

  Verifying word size contains:

    No occurrences

Checking class ResponseFacade:

  Verifying word size contains:

    No occurrences

Checking class Session:

  Verifying word size contains:

    No occurrences

Checking class MimeHeaders:

  Verifying word size contains:

    No occurrences

Checking class URL:

  Verifying word size contains:

    No occurrences

Checking class Response$3:

  Verifying word size contains:

    No occurrences

Checking class Response$1:

  Verifying word size contains:

    No occurrences

Checking class Response$2:

  Verifying word size contains:

    No occurrences

Checking class ServerCookie:

  Verifying word size contains:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word size contains:

    No occurrences

Checking class SecurityUtil:

  Verifying word size contains:

    No occurrences

Checking class Request:

  Verifying word size contains:

    No occurrences

Checking class SocketStatus:

  Verifying word size contains:

    No occurrences

Checking class RequestInfo:

  Verifying word size contains:

    No occurrences

Checking class B2CConverter:

  Verifying word size contains:

    No occurrences

Checking class Cookies:

  Verifying word size contains:

    No occurrences

Checking class ActionCode:

  Verifying word size contains:

    No occurrences

Checking class Parameters:

  Verifying word size contains:

    No occurrences

Checking class ExceptionUtils:

  Verifying word size contains:

    No occurrences

Checking class UDecoder:

  Verifying word size contains:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word size contains:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word size contains:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word size contains:

    No occurrences

Checking class CometEventImpl:

  Verifying word size contains:

    No occurrences

Checking class SSL:

  Verifying word size contains:

    No occurrences

Checking class Library:

  Verifying word size contains:

    No occurrences

Checking class InputBuffer:

  Verifying word size contains:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word size contains:

    No occurrences

Checking class CoyoteReader:

  Verifying word size contains:

    No occurrences

Checking class ParameterMap:

  Verifying word size contains:

    No occurrences

Checking class StringParser:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade:

  Verifying word size contains:

    No occurrences

Checking class Enumerator:

  Verifying word size contains:

    No occurrences

Checking class GenericPrincipal:

  Verifying word size contains:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word size contains:

    No occurrences

Checking class Mapper$Host:

  Verifying word size contains:

    No occurrences

Checking class Mapper$Context:

  Verifying word size contains:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word size contains:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word size contains:

    No occurrences

Checking class Ascii:

  Verifying word size contains:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word size contains:

    No occurrences

Checking class SetSessionConfig:

  Verifying word size contains:

    No occurrences

Checking class SetLoginConfig:

  Verifying word size contains:

    No occurrences

Checking class SetJspConfig:

  Verifying word size contains:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word size contains:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word size contains:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word size contains:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word size contains:

    No occurrences

Checking class SetDistributableRule:

  Verifying word size contains:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word size contains:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word size contains:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word size contains:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word size contains:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word size contains:

    No occurrences

Checking class LocalResolver:

  Verifying word size contains:

    No occurrences

Checking class Constants:

  Verifying word size contains:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word size contains:

    No occurrences

Checking class AttributeInfo:

  Verifying word size contains:

    No occurrences

Checking class BaseModelMBean:

  Verifying word size contains:

    No occurrences

Checking class DomUtil:

  Verifying word size contains:

    No occurrences

Checking class RealmBase:

  Verifying word size contains:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word size contains:

    No occurrences

Checking class StringManager:

  Verifying word size contains:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word size contains:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word size contains:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word size contains:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word size contains:

    No occurrences

Checking class NamingEntry:

  Verifying word size contains:

    No occurrences

Checking class ResourceSet:

  Verifying word size contains:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word size contains:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word size contains:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word size contains:

    No occurrences

Checking class Extension:

  Verifying word size contains:

    No occurrences

Checking class ManifestResource:

  Verifying word size contains:

    No occurrences

Checking class NameParserImpl:

  Verifying word size contains:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word size contains:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word size contains:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word size contains:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word size contains:

    No occurrences

Checking class CacheEntry:

  Verifying word size contains:

    No occurrences

Checking class ManagerBase:

  Verifying word size contains:

    No occurrences

Checking class StandardSession:

  Verifying word size contains:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word size contains:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word size contains:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word size contains:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word size contains:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word size contains:

    No occurrences

Checking class ResourceAttributes:

  Verifying word size contains:

    No occurrences

Checking class TldRuleSet:

  Verifying word size contains:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word size contains:

    No occurrences

Checking class InstanceSupport:

  Verifying word size contains:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word size contains:

    No occurrences

Checking class DummyRequest:

  Verifying word size contains:

    No occurrences

Checking class DummyResponse:

  Verifying word size contains:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word size contains:

    No occurrences

Checking class Constants:

  Verifying word size contains:

    No occurrences

Checking class ContainerServlet:

  Verifying word size contains:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word size contains:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word size contains:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word size contains:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word size contains:

    No occurrences

Checking class InstanceEvent:

  Verifying word size contains:

    No occurrences

Checking class ClientAbortException:

  Verifying word size contains:

    No occurrences

Checking class Contained:

  Verifying word size contains:

    No occurrences

Checking class Reloader:

  Verifying word size contains:

    No occurrences

Checking class ResourceEntry:

  Verifying word size contains:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word size contains:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word size contains:

    No occurrences

Checking class JndiPermission:

  Verifying word size contains:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word size contains:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word size contains:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word size contains:

    No occurrences

Checking class IOTools:

  Verifying word size contains:

    No occurrences

Checking class DOMException:

  Verifying word size contains:

    No occurrences

Checking class Attr:

  Verifying word size contains:

    No occurrences

Checking class TypeInfo:

  Verifying word size contains:

    No occurrences

Checking class DocumentType:

  Verifying word size contains:

    No occurrences

Checking class DOMImplementation:

  Verifying word size contains:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word size contains:

    No occurrences

Checking class DOMConfiguration:

  Verifying word size contains:

    No occurrences

Checking class NamedNodeMap:

  Verifying word size contains:

    No occurrences

Checking class UserDataHandler:

  Verifying word size contains:

    No occurrences

Checking class CharacterData:

  Verifying word size contains:

    No occurrences

Checking class ResourceBase:

  Verifying word size contains:

    No occurrences

Checking class NotificationInfo:

  Verifying word size contains:

    No occurrences

Checking class OperationInfo:

  Verifying word size contains:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word size contains:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word size contains:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word size contains:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word size contains:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word size contains:

    No occurrences

Checking class DateTool:

  Verifying word size contains:

    No occurrences

Checking class HexUtils:

  Verifying word size contains:

    No occurrences

Checking class StringManager$1:

  Verifying word size contains:

    No occurrences

Checking class SessionListener:

  Verifying word size contains:

    No occurrences

Checking class MimeHeaderField:

  Verifying word size contains:

    No occurrences

Checking class NamesEnumerator:

  Verifying word size contains:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word size contains:

    No occurrences

Checking class C2BConverter:

  Verifying word size contains:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word size contains:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word size contains:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class OutputBuffer:

  Verifying word size contains:

    No occurrences

Checking class ActionHook:

  Verifying word size contains:

    No occurrences

Checking class MediaType:

  Verifying word size contains:

    No occurrences

Checking class HttpParser:

  Verifying word size contains:

    No occurrences

Checking class ServerCookie$1:

  Verifying word size contains:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word size contains:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word size contains:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word size contains:

    No occurrences

Checking class ReadConvertor:

  Verifying word size contains:

    No occurrences

Checking class UserDataHelper:

  Verifying word size contains:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word size contains:

    No occurrences

Checking class Parameters$1:

  Verifying word size contains:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word size contains:

    No occurrences

Checking class InputBuffer:

  Verifying word size contains:

    No occurrences

Checking class ContentType:

  Verifying word size contains:

    No occurrences

Checking class BIOCallback:

  Verifying word size contains:

    No occurrences

Checking class PasswordCallback:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word size contains:

    No occurrences

Checking class InputBuffer$1:

  Verifying word size contains:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word size contains:

    No occurrences

Checking class CometFilter:

  Verifying word size contains:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word size contains:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word size contains:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word size contains:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word size contains:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word size contains:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word size contains:

    No occurrences

Checking class FeatureInfo:

  Verifying word size contains:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word size contains:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word size contains:

      Method: BaseAttributeFilter.isNotificationEnabled()
      Calls Location: BaseAttributeFilter.java:136 BaseAttributeFilter.java:139
      Atomic: YES

Checking class BaseModelMBean$MethodKey:

  Verifying word size contains:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word size contains:

    No occurrences

Checking class MD5Encoder:

  Verifying word size contains:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word size contains:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word size contains:

    No occurrences

Checking class HexUtils:

  Verifying word size contains:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word size contains:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word size contains:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word size contains:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word size contains:

    No occurrences

Checking class ApplicationResponse:

  Verifying word size contains:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word size contains:

    No occurrences

Checking class ApplicationRequest:

  Verifying word size contains:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word size contains:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word size contains:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word size contains:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word size contains:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word size contains:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word size contains:

    No occurrences

Checking class StandardSession$1:

  Verifying word size contains:

    No occurrences

Checking class SessionEvent:

  Verifying word size contains:

    No occurrences

Checking class StandardSessionContext:

  Verifying word size contains:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word size contains:

    No occurrences

Checking class DummyRequest$1:

  Verifying word size contains:

    No occurrences

Checking class CometProcessor:

  Verifying word size contains:

    No occurrences

Checking class Constants:

  Verifying word size contains:

    No occurrences

Checking class DOMStringList:

  Verifying word size contains:

    No occurrences

Checking class ParameterInfo:

  Verifying word size contains:

    No occurrences

Checking class LSResourceResolver:

  Verifying word size contains:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word size contains:

    No occurrences

Checking class WriteConvertor:

  Verifying word size contains:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word size contains:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word size contains:

    No occurrences

Checking class CometFilterChain:

  Verifying word size contains:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word size contains:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word size contains:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word size contains:

      Method: FixedNotificationFilter.isNotificationEnabled()
      Calls Location: FixedNotificationFilter.java:86 FixedNotificationFilter.java:89
      Atomic: YES

Checking class BaseNotificationBroadcasterEntry:

  Verifying word size contains:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word size contains:

    No occurrences

Checking class LSInput:

  Verifying word size contains:

    No occurrences


Run Time:
                                .buildTree       0.001s
                                    .onLCA       0.002s
                         analysis-behavior       9.169s
                          analysis-threads       0.010s
                       build-parsing-table       0.248s
                       check-word-instance       0.002s
                               grammar-opt       0.959s
                        grammar-rm-epsilon       7.973s
                                   parsing       0.003s
                                 soot-init     159.561s
                                     total     187.425s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions        799
                            parse-branches          5
                               parse-trees          2
                      parsing-table-states       1138
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word add poll:

    No occurrences

Checking class Log:

  Verifying word add poll:

    No occurrences

Checking class CatalinaProperties:

  Verifying word add poll:

    No occurrences

Checking class LogFactory:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word add poll:

    No occurrences

Checking class Catalina:

  Verifying word add poll:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word add poll:

    No occurrences

Checking class Embedded:

  Verifying word add poll:

    No occurrences

Checking class LogConfigurationException:

  Verifying word add poll:

    No occurrences

Checking class DirectJDKLog:

  Verifying word add poll:

    No occurrences

Checking class StandardClassLoader:

  Verifying word add poll:

    No occurrences

Checking class Digester:

  Verifying word add poll:

    No occurrences

Checking class ContextRuleSet:

  Verifying word add poll:

    No occurrences

Checking class LifecycleException:

  Verifying word add poll:

    No occurrences

Checking class StandardServer:

  Verifying word add poll:

    No occurrences

Checking class Lifecycle:

  Verifying word add poll:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word add poll:

    No occurrences

Checking class Server:

  Verifying word add poll:

    No occurrences

Checking class RuleSet:

  Verifying word add poll:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word add poll:

    No occurrences

Checking class Rule:

  Verifying word add poll:

    No occurrences

Checking class EngineRuleSet:

  Verifying word add poll:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word add poll:

    No occurrences

Checking class NamingRuleSet:

  Verifying word add poll:

    No occurrences

Checking class RuleSetBase:

  Verifying word add poll:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word add poll:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word add poll:

    No occurrences

Checking class HostRuleSet:

  Verifying word add poll:

    No occurrences

Checking class StringManager:

  Verifying word add poll:

    No occurrences

Checking class StandardService:

  Verifying word add poll:

    No occurrences

Checking class Engine:

  Verifying word add poll:

    No occurrences

Checking class LifecycleSupport:

  Verifying word add poll:

    No occurrences

Checking class Realm:

  Verifying word add poll:

    No occurrences

Checking class Connector:

  Verifying word add poll:

    No occurrences

Checking class Context:

  Verifying word add poll:

    No occurrences

Checking class Host:

  Verifying word add poll:

    No occurrences

Checking class Loader:

  Verifying word add poll:

    No occurrences

Checking class LifecycleListener:

  Verifying word add poll:

    No occurrences

Checking class ContextConfig:

  Verifying word add poll:

    No occurrences

Checking class StandardEngine:

  Verifying word add poll:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word add poll:

    No occurrences

Checking class SystemLogHandler:

  Verifying word add poll:

    No occurrences

Checking class Container:

  Verifying word add poll:

    No occurrences

Checking class SecurityConfig:

  Verifying word add poll:

    No occurrences

Checking class Valve:

  Verifying word add poll:

    No occurrences

Checking class StandardContext:

  Verifying word add poll:

    No occurrences

Checking class StandardHost:

  Verifying word add poll:

    No occurrences

Checking class WebappLoader:

  Verifying word add poll:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word add poll:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word add poll:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word add poll:

    No occurrences

Checking class RealmRuleSet:

  Verifying word add poll:

    No occurrences

Checking class NamingResources:

  Verifying word add poll:

    No occurrences

Checking class NamingContextListener:

  Verifying word add poll:

    No occurrences

Checking class Service:

  Verifying word add poll:

    No occurrences

Checking class ServerFactory:

  Verifying word add poll:

    No occurrences

Checking class Registry:

  Verifying word add poll:

    No occurrences

Checking class StringCache:

  Verifying word add poll:

    No occurrences

Checking class ServerInfo:

  Verifying word add poll:

    No occurrences

Checking class Executor:

  Verifying word add poll:

    No occurrences

Checking class ProtocolHandler:

  Verifying word add poll:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word add poll:

    No occurrences

Checking class ArrayStack:

  Verifying word add poll:

    No occurrences

Checking class Rules:

  Verifying word add poll:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word add poll:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word add poll:

    No occurrences

Checking class ObjectParamRule:

  Verifying word add poll:

    No occurrences

Checking class CallParamRule:

  Verifying word add poll:

    No occurrences

Checking class CallMethodRule:

  Verifying word add poll:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word add poll:

    No occurrences

Checking class SetNextRule:

  Verifying word add poll:

    No occurrences

Checking class SetTopRule:

  Verifying word add poll:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word add poll:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word add poll:

    No occurrences

Checking class SetPropertyRule:

  Verifying word add poll:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word add poll:

    No occurrences

Checking class SetRootRule:

  Verifying word add poll:

    No occurrences

Checking class PathCallParamRule:

  Verifying word add poll:

    No occurrences

Checking class RulesBase:

  Verifying word add poll:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word add poll:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word add poll:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word add poll:

    No occurrences

Checking class ContainerBase:

  Verifying word add poll:

    No occurrences

Checking class Adapter:

  Verifying word add poll:

    No occurrences

Checking class Mapper:

  Verifying word add poll:

    No occurrences

Checking class MapperListener:

  Verifying word add poll:

    No occurrences

Checking class Request:

  Verifying word add poll:

    No occurrences

Checking class Response:

  Verifying word add poll:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word add poll:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word add poll:

    No occurrences

Checking class WebRuleSet:

  Verifying word add poll:

    No occurrences

Checking class LoginConfig:

  Verifying word add poll:

    No occurrences

Checking class LifecycleEvent:

  Verifying word add poll:

    No occurrences

Checking class Pipeline:

  Verifying word add poll:

    No occurrences

Checking class DigesterFactory:

  Verifying word add poll:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word add poll:

    No occurrences

Checking class FilterMap:

  Verifying word add poll:

    No occurrences

Checking class ErrorPage:

  Verifying word add poll:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word add poll:

    No occurrences

Checking class SecurityConstraint:

  Verifying word add poll:

    No occurrences

Checking class ExpandWar:

  Verifying word add poll:

    No occurrences

Checking class FilterDef:

  Verifying word add poll:

    No occurrences

Checking class Wrapper:

  Verifying word add poll:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word add poll:

    No occurrences

Checking class CharsetMapper:

  Verifying word add poll:

    No occurrences

Checking class ApplicationParameter:

  Verifying word add poll:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word add poll:

    No occurrences

Checking class MbeansSource:

  Verifying word add poll:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word add poll:

    No occurrences

Checking class JAASRealm:

  Verifying word add poll:

    No occurrences

Checking class StandardEngineValve:

  Verifying word add poll:

    No occurrences

Checking class AccessLog:

  Verifying word add poll:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word add poll:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word add poll:

    No occurrences

Checking class CaptureLog:

  Verifying word add poll:

    No occurrences

Checking class Manager:

  Verifying word add poll:

    No occurrences

Checking class Cluster:

  Verifying word add poll:

    No occurrences

Checking class ContainerListener:

  Verifying word add poll:

    No occurrences

Checking class CometEvent:

  Verifying word add poll:

    No occurrences

Checking class URLEncoder:

  Verifying word add poll:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word add poll:

    No occurrences

Checking class ApplicationContext:

  Verifying word add poll:

    No occurrences

Checking class MessageDestination:

  Verifying word add poll:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word add poll:

    No occurrences

Checking class SecurityCollection:

  Verifying word add poll:

    No occurrences

Checking class FileDirContext:

  Verifying word add poll:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word add poll:

    No occurrences

Checking class ExtensionValidator:

  Verifying word add poll:

    No occurrences

Checking class StandardContextValve:

  Verifying word add poll:

    No occurrences

Checking class BaseDirContext:

  Verifying word add poll:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word add poll:

    No occurrences

Checking class ResourceCache:

  Verifying word add poll:

    No occurrences

Checking class Globals:

  Verifying word add poll:

    No occurrences

Checking class ContextBindings:

  Verifying word add poll:

    No occurrences

Checking class StandardManager:

  Verifying word add poll:

    No occurrences

Checking class ProxyDirContext:

  Verifying word add poll:

    No occurrences

Checking class TldConfig:

  Verifying word add poll:

    No occurrences

Checking class RequestUtil:

  Verifying word add poll:

    No occurrences

Checking class StandardWrapper:

  Verifying word add poll:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word add poll:

    No occurrences

Checking class WARDirContext:

  Verifying word add poll:

    No occurrences

Checking class InstanceListener:

  Verifying word add poll:

    No occurrences

Checking class StandardHostValve:

  Verifying word add poll:

    No occurrences

Checking class ValveBase:

  Verifying word add poll:

    No occurrences

Checking class StandardPipeline:

  Verifying word add poll:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word add poll:

    No occurrences

Checking class WebappClassLoader:

  Verifying word add poll:

    No occurrences

Checking class HostConfig:

  Verifying word add poll:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word add poll:

    No occurrences

Checking class Resource:

  Verifying word add poll:

    No occurrences

Checking class Document:

  Verifying word add poll:

    No occurrences

Checking class Element:

  Verifying word add poll:

    No occurrences

Checking class Node:

  Verifying word add poll:

    No occurrences

Checking class NodeList:

  Verifying word add poll:

    No occurrences

Checking class Text:

  Verifying word add poll:

    No occurrences

Checking class ContextTransaction:

  Verifying word add poll:

    No occurrences

Checking class ContextEjb:

  Verifying word add poll:

    No occurrences

Checking class ContextEnvironment:

  Verifying word add poll:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word add poll:

    No occurrences

Checking class ContextResource:

  Verifying word add poll:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word add poll:

    No occurrences

Checking class ContextResourceLink:

  Verifying word add poll:

    No occurrences

Checking class ContextService:

  Verifying word add poll:

    No occurrences

Checking class RegistryMBean:

  Verifying word add poll:

    No occurrences

Checking class ManagedBean:

  Verifying word add poll:

    No occurrences

Checking class ModelerSource:

  Verifying word add poll:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word add poll:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word add poll:

    No occurrences

Checking class ByteChunk:

  Verifying word add poll:

    No occurrences

Checking class CharChunk:

  Verifying word add poll:

    No occurrences

Checking class NamingContext:

  Verifying word add poll:

    No occurrences

Checking class ContainerEvent:

  Verifying word add poll:

    No occurrences

Checking class TransactionRef:

  Verifying word add poll:

    No occurrences

Checking class ServiceRef:

  Verifying word add poll:

    No occurrences

Checking class HandlerRef:

  Verifying word add poll:

    No occurrences

Checking class ContextAccessController:

  Verifying word add poll:

    No occurrences

Checking class ResourceRef:

  Verifying word add poll:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word add poll:

    No occurrences

Checking class EjbRef:

  Verifying word add poll:

    No occurrences

Checking class ContextHandler:

  Verifying word add poll:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word add poll:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word add poll:

    No occurrences

Checking class XercesParser:

  Verifying word add poll:

    No occurrences

Checking class GenericParser:

  Verifying word add poll:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word add poll:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word add poll:

    No occurrences

Checking class StringManager:

  Verifying word add poll:

    No occurrences

Checking class MappingData:

  Verifying word add poll:

    No occurrences

Checking class MessageBytes:

  Verifying word add poll:

    No occurrences

Checking class Response:

  Verifying word add poll:

    No occurrences

Checking class OutputBuffer:

  Verifying word add poll:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word add poll:

    No occurrences

Checking class CoyoteWriter:

  Verifying word add poll:

    No occurrences

Checking class UEncoder:

  Verifying word add poll:

    No occurrences

Checking class ResponseFacade:

  Verifying word add poll:

    No occurrences

Checking class Session:

  Verifying word add poll:

    No occurrences

Checking class MimeHeaders:

  Verifying word add poll:

    No occurrences

Checking class URL:

  Verifying word add poll:

    No occurrences

Checking class Response$3:

  Verifying word add poll:

    No occurrences

Checking class Response$1:

  Verifying word add poll:

    No occurrences

Checking class Response$2:

  Verifying word add poll:

    No occurrences

Checking class ServerCookie:

  Verifying word add poll:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word add poll:

    No occurrences

Checking class SecurityUtil:

  Verifying word add poll:

    No occurrences

Checking class Request:

  Verifying word add poll:

    No occurrences

Checking class SocketStatus:

  Verifying word add poll:

    No occurrences

Checking class RequestInfo:

  Verifying word add poll:

    No occurrences

Checking class B2CConverter:

  Verifying word add poll:

    No occurrences

Checking class Cookies:

  Verifying word add poll:

    No occurrences

Checking class ActionCode:

  Verifying word add poll:

    No occurrences

Checking class Parameters:

  Verifying word add poll:

    No occurrences

Checking class ExceptionUtils:

  Verifying word add poll:

    No occurrences

Checking class UDecoder:

  Verifying word add poll:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word add poll:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word add poll:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word add poll:

    No occurrences

Checking class CometEventImpl:

  Verifying word add poll:

    No occurrences

Checking class SSL:

  Verifying word add poll:

    No occurrences

Checking class Library:

  Verifying word add poll:

    No occurrences

Checking class InputBuffer:

  Verifying word add poll:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word add poll:

    No occurrences

Checking class CoyoteReader:

  Verifying word add poll:

    No occurrences

Checking class ParameterMap:

  Verifying word add poll:

    No occurrences

Checking class StringParser:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade:

  Verifying word add poll:

    No occurrences

Checking class Enumerator:

  Verifying word add poll:

    No occurrences

Checking class GenericPrincipal:

  Verifying word add poll:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word add poll:

    No occurrences

Checking class Mapper$Host:

  Verifying word add poll:

    No occurrences

Checking class Mapper$Context:

  Verifying word add poll:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word add poll:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word add poll:

    No occurrences

Checking class Ascii:

  Verifying word add poll:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word add poll:

    No occurrences

Checking class SetSessionConfig:

  Verifying word add poll:

    No occurrences

Checking class SetLoginConfig:

  Verifying word add poll:

    No occurrences

Checking class SetJspConfig:

  Verifying word add poll:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word add poll:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word add poll:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word add poll:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word add poll:

    No occurrences

Checking class SetDistributableRule:

  Verifying word add poll:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word add poll:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word add poll:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word add poll:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word add poll:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word add poll:

    No occurrences

Checking class LocalResolver:

  Verifying word add poll:

    No occurrences

Checking class Constants:

  Verifying word add poll:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word add poll:

    No occurrences

Checking class AttributeInfo:

  Verifying word add poll:

    No occurrences

Checking class BaseModelMBean:

  Verifying word add poll:

    No occurrences

Checking class DomUtil:

  Verifying word add poll:

    No occurrences

Checking class RealmBase:

  Verifying word add poll:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word add poll:

    No occurrences

Checking class StringManager:

  Verifying word add poll:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word add poll:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word add poll:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word add poll:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word add poll:

    No occurrences

Checking class NamingEntry:

  Verifying word add poll:

    No occurrences

Checking class ResourceSet:

  Verifying word add poll:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word add poll:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word add poll:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word add poll:

    No occurrences

Checking class Extension:

  Verifying word add poll:

    No occurrences

Checking class ManifestResource:

  Verifying word add poll:

    No occurrences

Checking class NameParserImpl:

  Verifying word add poll:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word add poll:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word add poll:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word add poll:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word add poll:

    No occurrences

Checking class CacheEntry:

  Verifying word add poll:

    No occurrences

Checking class ManagerBase:

  Verifying word add poll:

      Method: ManagerBase.createSession()
      Calls Location: ManagerBase.java:911 ManagerBase.java:912
      Atomic: YES

Checking class StandardSession:

  Verifying word add poll:

      Method: StandardSession.expire()
      Calls Location: StandardSession.java:781 StandardSession.java:782
      Atomic: YES

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word add poll:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word add poll:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word add poll:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word add poll:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word add poll:

    No occurrences

Checking class ResourceAttributes:

  Verifying word add poll:

    No occurrences

Checking class TldRuleSet:

  Verifying word add poll:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word add poll:

    No occurrences

Checking class InstanceSupport:

  Verifying word add poll:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word add poll:

    No occurrences

Checking class DummyRequest:

  Verifying word add poll:

    No occurrences

Checking class DummyResponse:

  Verifying word add poll:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word add poll:

    No occurrences

Checking class Constants:

  Verifying word add poll:

    No occurrences

Checking class ContainerServlet:

  Verifying word add poll:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word add poll:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word add poll:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word add poll:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word add poll:

    No occurrences

Checking class InstanceEvent:

  Verifying word add poll:

    No occurrences

Checking class ClientAbortException:

  Verifying word add poll:

    No occurrences

Checking class Contained:

  Verifying word add poll:

    No occurrences

Checking class Reloader:

  Verifying word add poll:

    No occurrences

Checking class ResourceEntry:

  Verifying word add poll:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word add poll:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word add poll:

    No occurrences

Checking class JndiPermission:

  Verifying word add poll:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word add poll:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word add poll:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word add poll:

    No occurrences

Checking class IOTools:

  Verifying word add poll:

    No occurrences

Checking class DOMException:

  Verifying word add poll:

    No occurrences

Checking class Attr:

  Verifying word add poll:

    No occurrences

Checking class TypeInfo:

  Verifying word add poll:

    No occurrences

Checking class DocumentType:

  Verifying word add poll:

    No occurrences

Checking class DOMImplementation:

  Verifying word add poll:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word add poll:

    No occurrences

Checking class DOMConfiguration:

  Verifying word add poll:

    No occurrences

Checking class NamedNodeMap:

  Verifying word add poll:

    No occurrences

Checking class UserDataHandler:

  Verifying word add poll:

    No occurrences

Checking class CharacterData:

  Verifying word add poll:

    No occurrences

Checking class ResourceBase:

  Verifying word add poll:

    No occurrences

Checking class NotificationInfo:

  Verifying word add poll:

    No occurrences

Checking class OperationInfo:

  Verifying word add poll:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word add poll:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word add poll:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word add poll:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word add poll:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word add poll:

    No occurrences

Checking class DateTool:

  Verifying word add poll:

    No occurrences

Checking class HexUtils:

  Verifying word add poll:

    No occurrences

Checking class StringManager$1:

  Verifying word add poll:

    No occurrences

Checking class SessionListener:

  Verifying word add poll:

    No occurrences

Checking class MimeHeaderField:

  Verifying word add poll:

    No occurrences

Checking class NamesEnumerator:

  Verifying word add poll:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word add poll:

    No occurrences

Checking class C2BConverter:

  Verifying word add poll:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word add poll:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word add poll:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class OutputBuffer:

  Verifying word add poll:

    No occurrences

Checking class ActionHook:

  Verifying word add poll:

    No occurrences

Checking class MediaType:

  Verifying word add poll:

    No occurrences

Checking class HttpParser:

  Verifying word add poll:

    No occurrences

Checking class ServerCookie$1:

  Verifying word add poll:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word add poll:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word add poll:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word add poll:

    No occurrences

Checking class ReadConvertor:

  Verifying word add poll:

    No occurrences

Checking class UserDataHelper:

  Verifying word add poll:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word add poll:

    No occurrences

Checking class Parameters$1:

  Verifying word add poll:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word add poll:

    No occurrences

Checking class InputBuffer:

  Verifying word add poll:

    No occurrences

Checking class ContentType:

  Verifying word add poll:

    No occurrences

Checking class BIOCallback:

  Verifying word add poll:

    No occurrences

Checking class PasswordCallback:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word add poll:

    No occurrences

Checking class InputBuffer$1:

  Verifying word add poll:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word add poll:

    No occurrences

Checking class CometFilter:

  Verifying word add poll:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word add poll:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word add poll:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word add poll:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word add poll:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word add poll:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word add poll:

    No occurrences

Checking class FeatureInfo:

  Verifying word add poll:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word add poll:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word add poll:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word add poll:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word add poll:

    No occurrences

Checking class MD5Encoder:

  Verifying word add poll:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word add poll:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word add poll:

    No occurrences

Checking class HexUtils:

  Verifying word add poll:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word add poll:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word add poll:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word add poll:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word add poll:

    No occurrences

Checking class ApplicationResponse:

  Verifying word add poll:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word add poll:

    No occurrences

Checking class ApplicationRequest:

  Verifying word add poll:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word add poll:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word add poll:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word add poll:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word add poll:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word add poll:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word add poll:

    No occurrences

Checking class StandardSession$1:

  Verifying word add poll:

    No occurrences

Checking class SessionEvent:

  Verifying word add poll:

    No occurrences

Checking class StandardSessionContext:

  Verifying word add poll:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word add poll:

    No occurrences

Checking class DummyRequest$1:

  Verifying word add poll:

    No occurrences

Checking class CometProcessor:

  Verifying word add poll:

    No occurrences

Checking class Constants:

  Verifying word add poll:

    No occurrences

Checking class DOMStringList:

  Verifying word add poll:

    No occurrences

Checking class ParameterInfo:

  Verifying word add poll:

    No occurrences

Checking class LSResourceResolver:

  Verifying word add poll:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word add poll:

    No occurrences

Checking class WriteConvertor:

  Verifying word add poll:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word add poll:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word add poll:

    No occurrences

Checking class CometFilterChain:

  Verifying word add poll:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word add poll:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word add poll:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word add poll:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word add poll:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word add poll:

    No occurrences

Checking class LSInput:

  Verifying word add poll:

    No occurrences


Run Time:
                                .buildTree       0.000s
                                    .onLCA       0.001s
                         analysis-behavior       9.057s
                          analysis-threads       0.008s
                       build-parsing-table       0.032s
                       check-word-instance       0.001s
                               grammar-opt       0.888s
                        grammar-rm-epsilon       7.925s
                                   parsing       0.004s
                                 soot-init     160.084s
                                     total     187.401s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions        483
                            parse-branches          4
                               parse-trees          2
                      parsing-table-states        836
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CatalinaProperties:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LogFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Catalina:

  Verifying word isInfoEnabled info:

      Method: Catalina.load()
      Calls Location: Catalina.java:549 Catalina.java:550
      Atomic: NO

      Method: Catalina.process()
      Calls Location: Catalina.java:549 Catalina.java:603
      Atomic: NO

      Method: Catalina.process()
      Calls Location: Catalina.java:549 Catalina.java:550
      Atomic: NO

      Method: Catalina.start()
      Calls Location: Catalina.java:549 Catalina.java:603
      Atomic: NO

      Method: Catalina.start()
      Calls Location: Catalina.java:602 Catalina.java:603
      Atomic: NO

Checking class SecurityClassLoad:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Embedded:

  Verifying word isInfoEnabled info:

      Method: Embedded.start()
      Calls Location: Embedded.java:805 Embedded.java:806
      Atomic: NO

      Method: Embedded.start()
      Calls Location: Embedded.java:805 Embedded.java:889
      Atomic: NO

Checking class LogConfigurationException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DirectJDKLog:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardClassLoader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Digester:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LifecycleException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardServer:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Lifecycle:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Server:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Rule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class EngineRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RuleSetBase:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HostRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringManager:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardService:

  Verifying word isInfoEnabled info:

      Method: StandardService.initialize()
      Calls Location: StandardService.java:661 StandardService.java:662
      Atomic: NO

      Method: StandardService.start()
      Calls Location: StandardService.java:505 StandardService.java:506
      Atomic: NO

      Method: StandardService.start()
      Calls Location: StandardService.java:516 StandardService.java:517
      Atomic: NO

      Method: StandardService.stop()
      Calls Location: StandardService.java:595 StandardService.java:596
      Atomic: NO

      Method: StandardService.start()
      Calls Location: StandardService.java:661 StandardService.java:517
      Atomic: NO

Checking class Engine:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LifecycleSupport:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Realm:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Connector:

  Verifying word isInfoEnabled info:

      Method: Connector.start()
      Calls Location: Connector.java:1172 Connector.java:1173
      Atomic: NO

      Method: Connector.start()
      Calls Location: Connector.java:1191 Connector.java:1192
      Atomic: NO

      Method: Connector.initialize()
      Calls Location: Connector.java:1090 Connector.java:1091
      Atomic: NO

      Method: Connector.start()
      Calls Location: Connector.java:1090 Connector.java:1192
      Atomic: NO

      Method: Connector.start()
      Calls Location: Connector.java:1090 Connector.java:1173
      Atomic: NO

Checking class Context:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Host:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Loader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LifecycleListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardEngine:

  Verifying word isInfoEnabled info:

      Method: StandardEngine.start()
      Calls Location: StandardEngine.java:451 StandardEngine.java:452
      Atomic: NO

Checking class IntrospectionUtils:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SystemLogHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Container:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Valve:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardContext:

  Verifying word isInfoEnabled info:

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4848 StandardContext.java:4849
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4848 StandardContext.java:5604
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4848 StandardContext.java:5573
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4848 StandardContext.java:4849
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4848 StandardContext.java:5604
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4848 StandardContext.java:4448
      Atomic: YES

    *** Timeout ***

Checking class StandardHost:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebappLoader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RealmRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingResources:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingContextListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Service:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ServerFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Registry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringCache:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ServerInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Executor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ProtocolHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ArrayStack:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Rules:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ObjectParamRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CallParamRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CallMethodRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word isInfoEnabled info:

      Method: FactoryCreateRule.begin()
      Calls Location: FactoryCreateRule.java:377 FactoryCreateRule.java:378
      Atomic: NO

Checking class SetNextRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetTopRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetPropertyRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetRootRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class PathCallParamRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RulesBase:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerBase:

  Verifying word isInfoEnabled info:

      Method: ContainerBase.stop()
      Calls Location: ContainerBase.java:1086 ContainerBase.java:1087
      Atomic: YES

      Method: ContainerBase.start()
      Calls Location: ContainerBase.java:1027 ContainerBase.java:1028
      Atomic: YES

Checking class Adapter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Mapper:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MapperListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Request:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Response:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LoginConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LifecycleEvent:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Pipeline:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DigesterFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FilterMap:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ErrorPage:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityConstraint:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ExpandWar:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FilterDef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Wrapper:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CharsetMapper:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationParameter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MbeansSource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class JAASRealm:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardEngineValve:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class AccessLog:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CaptureLog:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Manager:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Cluster:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometEvent:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class URLEncoder:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MessageDestination:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityCollection:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FileDirContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ExtensionValidator:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardContextValve:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BaseDirContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceCache:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Globals:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextBindings:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardManager:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ProxyDirContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class TldConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestUtil:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardWrapper:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DirContextURLStreamHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WARDirContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class InstanceListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardHostValve:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ValveBase:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardPipeline:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebappClassLoader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HostConfig:

  Verifying word isInfoEnabled info:

      Method: HostConfig.deployDirectory()
      Calls Location: HostConfig.java:1023 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.deployDirectories()
      Calls Location: HostConfig.java:1023 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1023 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1023 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1023 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.deployWAR()
      Calls Location: HostConfig.java:903 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:903 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.deployWARs()
      Calls Location: HostConfig.java:903 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:903 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:903 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:903 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:903 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.deployDescriptor()
      Calls Location: HostConfig.java:623 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:623 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:623 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.deployDescriptors()
      Calls Location: HostConfig.java:623 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:623 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:623 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:623 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:623 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.deployApps()
      Calls Location: HostConfig.java:623 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1208 HostConfig.java:1209
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1208 HostConfig.java:1273
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1208 HostConfig.java:1156
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1208 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1208 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1208 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1208 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1208 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1208 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.checkResources()
      Calls Location: HostConfig.java:1272 HostConfig.java:1273
      Atomic: YES

      Method: HostConfig.checkResources()
      Calls Location: HostConfig.java:1208 HostConfig.java:1209
      Atomic: YES

      Method: HostConfig.checkResources()
      Calls Location: HostConfig.java:1155 HostConfig.java:1156
      Atomic: YES

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1272 HostConfig.java:1209
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1272 HostConfig.java:1273
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1272 HostConfig.java:1156
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1272 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1272 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1272 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1272 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1272 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1272 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1155 HostConfig.java:1209
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1155 HostConfig.java:1273
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1155 HostConfig.java:1156
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1155 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1155 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.check()
      Calls Location: HostConfig.java:1155 HostConfig.java:624
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1155 HostConfig.java:1024
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1155 HostConfig.java:904
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1155 HostConfig.java:624
      Atomic: NO

Checking class DirContextURLStreamHandlerFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Resource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Document:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Element:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Node:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NodeList:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Text:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextTransaction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextEjb:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextEnvironment:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextResource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextResourceLink:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextService:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RegistryMBean:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ManagedBean:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ModelerSource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ByteChunk:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CharChunk:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerEvent:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class TransactionRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ServiceRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HandlerRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextAccessController:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class EjbRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContextHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class XercesParser:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class GenericParser:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringManager:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MappingData:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MessageBytes:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Response:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class OutputBuffer:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteWriter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UEncoder:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResponseFacade:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Session:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MimeHeaders:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class URL:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Response$3:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Response$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Response$2:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ServerCookie:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityUtil:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Request:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SocketStatus:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class B2CConverter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Cookies:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ActionCode:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Parameters:

  Verifying word isInfoEnabled info:

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:430 Parameters.java:257
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:430 Parameters.java:441
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:430 Parameters.java:367
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:430 Parameters.java:471
      Atomic: NO

Checking class ExceptionUtils:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UDecoder:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometEventImpl:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SSL:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Library:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class InputBuffer:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteReader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ParameterMap:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringParser:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Enumerator:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class GenericPrincipal:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Mapper$Host:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Mapper$Context:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Ascii:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetSessionConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetLoginConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetJspConfig:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetDistributableRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LocalResolver:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Constants:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class AttributeInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BaseModelMBean:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DomUtil:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RealmBase:

  Verifying word isInfoEnabled info:

      Method: RealmBase.stop()
      Calls Location: RealmBase.java:1085 RealmBase.java:1086
      Atomic: NO

      Method: RealmBase.start()
      Calls Location: RealmBase.java:1048 RealmBase.java:1049
      Atomic: NO

Checking class JAASCallbackHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringManager:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamingEntry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Extension:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ManifestResource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NameParserImpl:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CacheEntry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ManagerBase:

  Verifying word isInfoEnabled info:

      Method: ManagerBase.getSession()
      Calls Location: ManagerBase.java:1337 ManagerBase.java:1338
      Atomic: NO

      Method: ManagerBase.getLastAccessedTime()
      Calls Location: ManagerBase.java:1403 ManagerBase.java:1404
      Atomic: NO

      Method: ManagerBase.getSessionAttribute()
      Calls Location: ManagerBase.java:1337 ManagerBase.java:1338
      Atomic: NO

      Method: ManagerBase.getSession()
      Calls Location: ManagerBase.java:1362 ManagerBase.java:1363
      Atomic: NO

      Method: ManagerBase.getCreationTime()
      Calls Location: ManagerBase.java:1413 ManagerBase.java:1414
      Atomic: NO

      Method: ManagerBase.expireSession()
      Calls Location: ManagerBase.java:1386 ManagerBase.java:1387
      Atomic: NO

Checking class StandardSession:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceAttributes:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class TldRuleSet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class InstanceSupport:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DummyRequest:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DummyResponse:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Constants:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContainerServlet:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class InstanceEvent:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ClientAbortException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Contained:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Reloader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceEntry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class JndiPermission:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IOTools:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DOMException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Attr:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class TypeInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DocumentType:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DOMImplementation:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DOMConfiguration:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamedNodeMap:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UserDataHandler:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CharacterData:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResourceBase:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NotificationInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class OperationInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DateTool:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HexUtils:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StringManager$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SessionListener:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MimeHeaderField:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class NamesEnumerator:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class C2BConverter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class OutputBuffer:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ActionHook:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MediaType:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HttpParser:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ServerCookie$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ReadConvertor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UserDataHelper:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Parameters$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class InputBuffer:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ContentType:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BIOCallback:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class PasswordCallback:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class InputBuffer$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometFilter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FeatureInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class MD5Encoder:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HexUtils:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationResponse:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationRequest:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardSession$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class SessionEvent:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class StandardSessionContext:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DummyRequest$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometProcessor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class Constants:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class DOMStringList:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ParameterInfo:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LSResourceResolver:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class WriteConvertor:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class CometFilterChain:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word isInfoEnabled info:

    No occurrences

Checking class LSInput:

  Verifying word isInfoEnabled info:

    No occurrences


Run Time:
                                .buildTree     337.128s
                                    .onLCA     721.058s
                         analysis-behavior       8.958s
                          analysis-threads       0.009s
                       build-parsing-table       2.650s
                       check-word-instance       0.013s
                               grammar-opt       0.485s
                        grammar-rm-epsilon       8.212s
                                   parsing    1851.528s
                                 soot-init     162.281s
                                     total    2922.311s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions       6852
                            parse-branches  211321148
                               parse-trees         90
                      parsing-table-states       6158
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word size keySet:

    No occurrences

Checking class Log:

  Verifying word size keySet:

    No occurrences

Checking class CatalinaProperties:

  Verifying word size keySet:

    No occurrences

Checking class LogFactory:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word size keySet:

    No occurrences

Checking class Catalina:

  Verifying word size keySet:

    No occurrences

Checking class SecurityClassLoad:

  Verifying word size keySet:

    No occurrences

Checking class Embedded:

  Verifying word size keySet:

    No occurrences

Checking class LogConfigurationException:

  Verifying word size keySet:

    No occurrences

Checking class DirectJDKLog:

  Verifying word size keySet:

    No occurrences

Checking class StandardClassLoader:

  Verifying word size keySet:

    No occurrences

Checking class Digester:

  Verifying word size keySet:

    No occurrences

Checking class ContextRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class LifecycleException:

  Verifying word size keySet:

    No occurrences

Checking class StandardServer:

  Verifying word size keySet:

    No occurrences

Checking class Lifecycle:

  Verifying word size keySet:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word size keySet:

    No occurrences

Checking class Server:

  Verifying word size keySet:

    No occurrences

Checking class RuleSet:

  Verifying word size keySet:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word size keySet:

    No occurrences

Checking class Rule:

  Verifying word size keySet:

    No occurrences

Checking class EngineRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word size keySet:

    No occurrences

Checking class NamingRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class RuleSetBase:

  Verifying word size keySet:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word size keySet:

    No occurrences

Checking class SetAllPropertiesRule:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word size keySet:

    No occurrences

Checking class HostRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class StringManager:

  Verifying word size keySet:

    No occurrences

Checking class StandardService:

  Verifying word size keySet:

    No occurrences

Checking class Engine:

  Verifying word size keySet:

    No occurrences

Checking class LifecycleSupport:

  Verifying word size keySet:

    No occurrences

Checking class Realm:

  Verifying word size keySet:

    No occurrences

Checking class Connector:

  Verifying word size keySet:

    No occurrences

Checking class Context:

  Verifying word size keySet:

    No occurrences

Checking class Host:

  Verifying word size keySet:

    No occurrences

Checking class Loader:

  Verifying word size keySet:

    No occurrences

Checking class LifecycleListener:

  Verifying word size keySet:

    No occurrences

Checking class ContextConfig:

  Verifying word size keySet:

    No occurrences

Checking class StandardEngine:

  Verifying word size keySet:

    No occurrences

Checking class IntrospectionUtils:

  Verifying word size keySet:

    No occurrences

Checking class SystemLogHandler:

  Verifying word size keySet:

    No occurrences

Checking class Container:

  Verifying word size keySet:

    No occurrences

Checking class SecurityConfig:

  Verifying word size keySet:

    No occurrences

Checking class Valve:

  Verifying word size keySet:

    No occurrences

Checking class StandardContext:

  Verifying word size keySet:

      Method: StandardContext.findServletMappings()
      Calls Location: StandardContext.java:3284 StandardContext.java:3285
      Atomic: YES

      Method: StandardContext.findTaglibs()
      Calls Location: StandardContext.java:3351 StandardContext.java:3352
      Atomic: YES

      Method: StandardContext.findParameters()
      Calls Location: StandardContext.java:3202 StandardContext.java:3203
      Atomic: YES

      Method: StandardContext.findMimeMappings()
      Calls Location: StandardContext.java:3171 StandardContext.java:3172
      Atomic: YES

      Method: StandardContext.findStatusPages()
      Calls Location: StandardContext.java:3317 StandardContext.java:3318
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:3202 StandardContext.java:4104
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:3202 StandardContext.java:4069
      Atomic: YES

Checking class StandardHost:

  Verifying word size keySet:

    No occurrences

Checking class WebappLoader:

  Verifying word size keySet:

    No occurrences

Checking class SetNextNamingRule:

  Verifying word size keySet:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word size keySet:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word size keySet:

    No occurrences

Checking class RealmRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class NamingResources:

  Verifying word size keySet:

    No occurrences

Checking class NamingContextListener:

  Verifying word size keySet:

    No occurrences

Checking class Service:

  Verifying word size keySet:

    No occurrences

Checking class ServerFactory:

  Verifying word size keySet:

    No occurrences

Checking class Registry:

  Verifying word size keySet:

    No occurrences

Checking class StringCache:

  Verifying word size keySet:

    No occurrences

Checking class ServerInfo:

  Verifying word size keySet:

    No occurrences

Checking class Executor:

  Verifying word size keySet:

    No occurrences

Checking class ProtocolHandler:

  Verifying word size keySet:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word size keySet:

    No occurrences

Checking class ArrayStack:

  Verifying word size keySet:

    No occurrences

Checking class Rules:

  Verifying word size keySet:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word size keySet:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word size keySet:

    No occurrences

Checking class ObjectParamRule:

  Verifying word size keySet:

    No occurrences

Checking class CallParamRule:

  Verifying word size keySet:

    No occurrences

Checking class CallMethodRule:

  Verifying word size keySet:

    No occurrences

Checking class FactoryCreateRule:

  Verifying word size keySet:

    No occurrences

Checking class SetNextRule:

  Verifying word size keySet:

    No occurrences

Checking class SetTopRule:

  Verifying word size keySet:

    No occurrences

Checking class ParserFeatureSetterFactory:

  Verifying word size keySet:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word size keySet:

    No occurrences

Checking class SetPropertyRule:

  Verifying word size keySet:

    No occurrences

Checking class SetPropertiesRule:

  Verifying word size keySet:

    No occurrences

Checking class SetRootRule:

  Verifying word size keySet:

    No occurrences

Checking class PathCallParamRule:

  Verifying word size keySet:

    No occurrences

Checking class RulesBase:

  Verifying word size keySet:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word size keySet:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word size keySet:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word size keySet:

    No occurrences

Checking class ContainerBase:

  Verifying word size keySet:

    No occurrences

Checking class Adapter:

  Verifying word size keySet:

    No occurrences

Checking class Mapper:

  Verifying word size keySet:

    No occurrences

Checking class MapperListener:

  Verifying word size keySet:

    No occurrences

Checking class Request:

  Verifying word size keySet:

    No occurrences

Checking class Response:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word size keySet:

    No occurrences

Checking class AprLifecycleListener:

  Verifying word size keySet:

    No occurrences

Checking class WebRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class LoginConfig:

  Verifying word size keySet:

    No occurrences

Checking class LifecycleEvent:

  Verifying word size keySet:

    No occurrences

Checking class Pipeline:

  Verifying word size keySet:

    No occurrences

Checking class DigesterFactory:

  Verifying word size keySet:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word size keySet:

    No occurrences

Checking class FilterMap:

  Verifying word size keySet:

    No occurrences

Checking class ErrorPage:

  Verifying word size keySet:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word size keySet:

    No occurrences

Checking class SecurityConstraint:

  Verifying word size keySet:

    No occurrences

Checking class ExpandWar:

  Verifying word size keySet:

    No occurrences

Checking class FilterDef:

  Verifying word size keySet:

    No occurrences

Checking class Wrapper:

  Verifying word size keySet:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word size keySet:

    No occurrences

Checking class CharsetMapper:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationParameter:

  Verifying word size keySet:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word size keySet:

    No occurrences

Checking class MbeansSource:

  Verifying word size keySet:

    No occurrences

Checking class StandardEngine$AccessLogListener:

  Verifying word size keySet:

    No occurrences

Checking class JAASRealm:

  Verifying word size keySet:

    No occurrences

Checking class StandardEngineValve:

  Verifying word size keySet:

    No occurrences

Checking class AccessLog:

  Verifying word size keySet:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word size keySet:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word size keySet:

    No occurrences

Checking class CaptureLog:

  Verifying word size keySet:

    No occurrences

Checking class Manager:

  Verifying word size keySet:

    No occurrences

Checking class Cluster:

  Verifying word size keySet:

    No occurrences

Checking class ContainerListener:

  Verifying word size keySet:

    No occurrences

Checking class CometEvent:

  Verifying word size keySet:

    No occurrences

Checking class URLEncoder:

  Verifying word size keySet:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationContext:

  Verifying word size keySet:

    No occurrences

Checking class MessageDestination:

  Verifying word size keySet:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word size keySet:

    No occurrences

Checking class SecurityCollection:

  Verifying word size keySet:

    No occurrences

Checking class FileDirContext:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word size keySet:

    No occurrences

Checking class ExtensionValidator:

  Verifying word size keySet:

    No occurrences

Checking class StandardContextValve:

  Verifying word size keySet:

    No occurrences

Checking class BaseDirContext:

  Verifying word size keySet:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word size keySet:

    No occurrences

Checking class ResourceCache:

  Verifying word size keySet:

    No occurrences

Checking class Globals:

  Verifying word size keySet:

    No occurrences

Checking class ContextBindings:

  Verifying word size keySet:

    No occurrences

Checking class StandardManager:

  Verifying word size keySet:

    No occurrences

Checking class ProxyDirContext:

  Verifying word size keySet:

    No occurrences

Checking class TldConfig:

  Verifying word size keySet:

    No occurrences

Checking class RequestUtil:

  Verifying word size keySet:

    No occurrences

Checking class StandardWrapper:

  Verifying word size keySet:

      Method: StandardWrapper.findInitParameters()
      Calls Location: StandardWrapper.java:941 StandardWrapper.java:942
      Atomic: NO

      Method: StandardWrapper.findSecurityReferences()
      Calls Location: StandardWrapper.java:991 StandardWrapper.java:992
      Atomic: NO

Checking class DirContextURLStreamHandler:

  Verifying word size keySet:

    No occurrences

Checking class WARDirContext:

  Verifying word size keySet:

    No occurrences

Checking class InstanceListener:

  Verifying word size keySet:

    No occurrences

Checking class StandardHostValve:

  Verifying word size keySet:

    No occurrences

Checking class ValveBase:

  Verifying word size keySet:

    No occurrences

Checking class StandardPipeline:

  Verifying word size keySet:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word size keySet:

    No occurrences

Checking class WebappClassLoader:

  Verifying word size keySet:

    No occurrences

Checking class HostConfig:

  Verifying word size keySet:

    No occurrences

Checking class DirContextURLStreamHandlerFactory:

  Verifying word size keySet:

    No occurrences

Checking class Resource:

  Verifying word size keySet:

    No occurrences

Checking class Document:

  Verifying word size keySet:

    No occurrences

Checking class Element:

  Verifying word size keySet:

    No occurrences

Checking class Node:

  Verifying word size keySet:

    No occurrences

Checking class NodeList:

  Verifying word size keySet:

    No occurrences

Checking class Text:

  Verifying word size keySet:

    No occurrences

Checking class ContextTransaction:

  Verifying word size keySet:

    No occurrences

Checking class ContextEjb:

  Verifying word size keySet:

    No occurrences

Checking class ContextEnvironment:

  Verifying word size keySet:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word size keySet:

    No occurrences

Checking class ContextResource:

  Verifying word size keySet:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word size keySet:

    No occurrences

Checking class ContextResourceLink:

  Verifying word size keySet:

    No occurrences

Checking class ContextService:

  Verifying word size keySet:

    No occurrences

Checking class RegistryMBean:

  Verifying word size keySet:

    No occurrences

Checking class ManagedBean:

  Verifying word size keySet:

    No occurrences

Checking class ModelerSource:

  Verifying word size keySet:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word size keySet:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word size keySet:

    No occurrences

Checking class ByteChunk:

  Verifying word size keySet:

    No occurrences

Checking class CharChunk:

  Verifying word size keySet:

    No occurrences

Checking class NamingContext:

  Verifying word size keySet:

    No occurrences

Checking class ContainerEvent:

  Verifying word size keySet:

    No occurrences

Checking class TransactionRef:

  Verifying word size keySet:

    No occurrences

Checking class ServiceRef:

  Verifying word size keySet:

    No occurrences

Checking class HandlerRef:

  Verifying word size keySet:

    No occurrences

Checking class ContextAccessController:

  Verifying word size keySet:

    No occurrences

Checking class ResourceRef:

  Verifying word size keySet:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word size keySet:

    No occurrences

Checking class EjbRef:

  Verifying word size keySet:

    No occurrences

Checking class ContextHandler:

  Verifying word size keySet:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word size keySet:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word size keySet:

    No occurrences

Checking class XercesParser:

  Verifying word size keySet:

    No occurrences

Checking class GenericParser:

  Verifying word size keySet:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word size keySet:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word size keySet:

    No occurrences

Checking class StringManager:

  Verifying word size keySet:

    No occurrences

Checking class MappingData:

  Verifying word size keySet:

    No occurrences

Checking class MessageBytes:

  Verifying word size keySet:

    No occurrences

Checking class Response:

  Verifying word size keySet:

    No occurrences

Checking class OutputBuffer:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteWriter:

  Verifying word size keySet:

    No occurrences

Checking class UEncoder:

  Verifying word size keySet:

    No occurrences

Checking class ResponseFacade:

  Verifying word size keySet:

    No occurrences

Checking class Session:

  Verifying word size keySet:

    No occurrences

Checking class MimeHeaders:

  Verifying word size keySet:

    No occurrences

Checking class URL:

  Verifying word size keySet:

    No occurrences

Checking class Response$3:

  Verifying word size keySet:

    No occurrences

Checking class Response$1:

  Verifying word size keySet:

    No occurrences

Checking class Response$2:

  Verifying word size keySet:

    No occurrences

Checking class ServerCookie:

  Verifying word size keySet:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word size keySet:

    No occurrences

Checking class SecurityUtil:

  Verifying word size keySet:

    No occurrences

Checking class Request:

  Verifying word size keySet:

    No occurrences

Checking class SocketStatus:

  Verifying word size keySet:

    No occurrences

Checking class RequestInfo:

  Verifying word size keySet:

    No occurrences

Checking class B2CConverter:

  Verifying word size keySet:

    No occurrences

Checking class Cookies:

  Verifying word size keySet:

    No occurrences

Checking class ActionCode:

  Verifying word size keySet:

    No occurrences

Checking class Parameters:

  Verifying word size keySet:

    No occurrences

Checking class ExceptionUtils:

  Verifying word size keySet:

    No occurrences

Checking class UDecoder:

  Verifying word size keySet:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word size keySet:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word size keySet:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word size keySet:

    No occurrences

Checking class CometEventImpl:

  Verifying word size keySet:

    No occurrences

Checking class SSL:

  Verifying word size keySet:

    No occurrences

Checking class Library:

  Verifying word size keySet:

    No occurrences

Checking class InputBuffer:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteReader:

  Verifying word size keySet:

    No occurrences

Checking class ParameterMap:

  Verifying word size keySet:

    No occurrences

Checking class StringParser:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade:

  Verifying word size keySet:

    No occurrences

Checking class Enumerator:

  Verifying word size keySet:

    No occurrences

Checking class GenericPrincipal:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word size keySet:

    No occurrences

Checking class Mapper$Host:

  Verifying word size keySet:

    No occurrences

Checking class Mapper$Context:

  Verifying word size keySet:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word size keySet:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word size keySet:

    No occurrences

Checking class Ascii:

  Verifying word size keySet:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word size keySet:

    No occurrences

Checking class SetSessionConfig:

  Verifying word size keySet:

    No occurrences

Checking class SetLoginConfig:

  Verifying word size keySet:

    No occurrences

Checking class SetJspConfig:

  Verifying word size keySet:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word size keySet:

    No occurrences

Checking class SoapHeaderRule:

  Verifying word size keySet:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word size keySet:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word size keySet:

    No occurrences

Checking class SetDistributableRule:

  Verifying word size keySet:

    No occurrences

Checking class CallMethodMultiRule:

  Verifying word size keySet:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word size keySet:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word size keySet:

    No occurrences

Checking class IgnoreAnnotationsRule:

  Verifying word size keySet:

    No occurrences

Checking class SecurityRoleRefCreateRule:

  Verifying word size keySet:

    No occurrences

Checking class LocalResolver:

  Verifying word size keySet:

    No occurrences

Checking class Constants:

  Verifying word size keySet:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word size keySet:

    No occurrences

Checking class AttributeInfo:

  Verifying word size keySet:

    No occurrences

Checking class BaseModelMBean:

  Verifying word size keySet:

    No occurrences

Checking class DomUtil:

  Verifying word size keySet:

    No occurrences

Checking class RealmBase:

  Verifying word size keySet:

    No occurrences

Checking class JAASCallbackHandler:

  Verifying word size keySet:

    No occurrences

Checking class StringManager:

  Verifying word size keySet:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word size keySet:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word size keySet:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word size keySet:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word size keySet:

    No occurrences

Checking class NamingEntry:

  Verifying word size keySet:

    No occurrences

Checking class ResourceSet:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word size keySet:

    No occurrences

Checking class Extension:

  Verifying word size keySet:

    No occurrences

Checking class ManifestResource:

  Verifying word size keySet:

    No occurrences

Checking class NameParserImpl:

  Verifying word size keySet:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word size keySet:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word size keySet:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word size keySet:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word size keySet:

    No occurrences

Checking class CacheEntry:

  Verifying word size keySet:

    No occurrences

Checking class ManagerBase:

  Verifying word size keySet:

    No occurrences

Checking class StandardSession:

  Verifying word size keySet:

    No occurrences

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word size keySet:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word size keySet:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word size keySet:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word size keySet:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word size keySet:

    No occurrences

Checking class ResourceAttributes:

  Verifying word size keySet:

    No occurrences

Checking class TldRuleSet:

  Verifying word size keySet:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word size keySet:

    No occurrences

Checking class InstanceSupport:

  Verifying word size keySet:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word size keySet:

    No occurrences

Checking class DummyRequest:

  Verifying word size keySet:

    No occurrences

Checking class DummyResponse:

  Verifying word size keySet:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word size keySet:

    No occurrences

Checking class Constants:

  Verifying word size keySet:

    No occurrences

Checking class ContainerServlet:

  Verifying word size keySet:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word size keySet:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word size keySet:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word size keySet:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word size keySet:

    No occurrences

Checking class InstanceEvent:

  Verifying word size keySet:

    No occurrences

Checking class ClientAbortException:

  Verifying word size keySet:

    No occurrences

Checking class Contained:

  Verifying word size keySet:

    No occurrences

Checking class Reloader:

  Verifying word size keySet:

    No occurrences

Checking class ResourceEntry:

  Verifying word size keySet:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word size keySet:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word size keySet:

    No occurrences

Checking class JndiPermission:

  Verifying word size keySet:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word size keySet:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word size keySet:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word size keySet:

    No occurrences

Checking class IOTools:

  Verifying word size keySet:

    No occurrences

Checking class DOMException:

  Verifying word size keySet:

    No occurrences

Checking class Attr:

  Verifying word size keySet:

    No occurrences

Checking class TypeInfo:

  Verifying word size keySet:

    No occurrences

Checking class DocumentType:

  Verifying word size keySet:

    No occurrences

Checking class DOMImplementation:

  Verifying word size keySet:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word size keySet:

    No occurrences

Checking class DOMConfiguration:

  Verifying word size keySet:

    No occurrences

Checking class NamedNodeMap:

  Verifying word size keySet:

    No occurrences

Checking class UserDataHandler:

  Verifying word size keySet:

    No occurrences

Checking class CharacterData:

  Verifying word size keySet:

    No occurrences

Checking class ResourceBase:

  Verifying word size keySet:

    No occurrences

Checking class NotificationInfo:

  Verifying word size keySet:

    No occurrences

Checking class OperationInfo:

  Verifying word size keySet:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word size keySet:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word size keySet:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word size keySet:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word size keySet:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word size keySet:

    No occurrences

Checking class DateTool:

  Verifying word size keySet:

    No occurrences

Checking class HexUtils:

  Verifying word size keySet:

    No occurrences

Checking class StringManager$1:

  Verifying word size keySet:

    No occurrences

Checking class SessionListener:

  Verifying word size keySet:

    No occurrences

Checking class MimeHeaderField:

  Verifying word size keySet:

    No occurrences

Checking class NamesEnumerator:

  Verifying word size keySet:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word size keySet:

    No occurrences

Checking class C2BConverter:

  Verifying word size keySet:

    No occurrences

Checking class OutputBuffer$1:

  Verifying word size keySet:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word size keySet:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class OutputBuffer:

  Verifying word size keySet:

    No occurrences

Checking class ActionHook:

  Verifying word size keySet:

    No occurrences

Checking class MediaType:

  Verifying word size keySet:

    No occurrences

Checking class HttpParser:

  Verifying word size keySet:

    No occurrences

Checking class ServerCookie$1:

  Verifying word size keySet:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word size keySet:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word size keySet:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word size keySet:

    No occurrences

Checking class ReadConvertor:

  Verifying word size keySet:

    No occurrences

Checking class UserDataHelper:

  Verifying word size keySet:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word size keySet:

    No occurrences

Checking class Parameters$1:

  Verifying word size keySet:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word size keySet:

    No occurrences

Checking class InputBuffer:

  Verifying word size keySet:

    No occurrences

Checking class ContentType:

  Verifying word size keySet:

    No occurrences

Checking class BIOCallback:

  Verifying word size keySet:

    No occurrences

Checking class PasswordCallback:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word size keySet:

    No occurrences

Checking class InputBuffer$1:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word size keySet:

    No occurrences

Checking class CometFilter:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word size keySet:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word size keySet:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word size keySet:

    No occurrences

Checking class FeatureInfo:

  Verifying word size keySet:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word size keySet:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word size keySet:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word size keySet:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word size keySet:

    No occurrences

Checking class MD5Encoder:

  Verifying word size keySet:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word size keySet:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word size keySet:

    No occurrences

Checking class HexUtils:

  Verifying word size keySet:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationResponse:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationRequest:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word size keySet:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word size keySet:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word size keySet:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word size keySet:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word size keySet:

    No occurrences

Checking class StandardSession$1:

  Verifying word size keySet:

    No occurrences

Checking class SessionEvent:

  Verifying word size keySet:

    No occurrences

Checking class StandardSessionContext:

  Verifying word size keySet:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word size keySet:

    No occurrences

Checking class DummyRequest$1:

  Verifying word size keySet:

    No occurrences

Checking class CometProcessor:

  Verifying word size keySet:

    No occurrences

Checking class Constants:

  Verifying word size keySet:

    No occurrences

Checking class DOMStringList:

  Verifying word size keySet:

    No occurrences

Checking class ParameterInfo:

  Verifying word size keySet:

    No occurrences

Checking class LSResourceResolver:

  Verifying word size keySet:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word size keySet:

    No occurrences

Checking class WriteConvertor:

  Verifying word size keySet:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word size keySet:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word size keySet:

    No occurrences

Checking class CometFilterChain:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word size keySet:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word size keySet:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word size keySet:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word size keySet:

    No occurrences

Checking class LSInput:

  Verifying word size keySet:

    No occurrences


Run Time:
                                .buildTree       0.008s
                                    .onLCA       0.033s
                         analysis-behavior       8.841s
                          analysis-threads       0.009s
                       build-parsing-table       0.424s
                       check-word-instance       0.001s
                               grammar-opt       0.737s
                        grammar-rm-epsilon       7.852s
                                   parsing       0.071s
                                 soot-init     159.786s
                                     total     187.185s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions       2738
                            parse-branches       2194
                               parse-trees          9
                      parsing-table-states       2918
                                   threads          1

Warning: java.dyn.InvokeDynamic is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class Bootstrap:

  Verifying word isDebugEnabled debug:

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:225 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:214 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:214 Bootstrap.java:215
      Atomic: NO

      Method: Bootstrap.createClassLoader()
      Calls Location: Bootstrap.java:144 Bootstrap.java:145
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:214 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:214 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:214 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:214 Bootstrap.java:215
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:214 Bootstrap.java:145
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:144 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:144 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:144 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:144 Bootstrap.java:215
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:144 Bootstrap.java:145
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:144 Bootstrap.java:215
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:144 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.initClassLoaders()
      Calls Location: Bootstrap.java:144 Bootstrap.java:145
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:225 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.init()
      Calls Location: Bootstrap.java:225 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:225 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:225 Bootstrap.java:215
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:225 Bootstrap.java:145
      Atomic: NO

      Method: Bootstrap.load()
      Calls Location: Bootstrap.java:277 Bootstrap.java:278
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:277 Bootstrap.java:226
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:277 Bootstrap.java:215
      Atomic: NO

      Method: Bootstrap.main()
      Calls Location: Bootstrap.java:277 Bootstrap.java:145
      Atomic: NO

Checking class CatalinaProperties:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LogFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderFactory:

  Verifying word isDebugEnabled debug:

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:227
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:227
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:227
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:227
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:227
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:218
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:218
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:218
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:218
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:218
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:127 ClassLoaderFactory.java:128
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:251 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:240
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:240
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:240
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:240
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:240
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:208
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:208
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:208
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:208
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:208
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:146 ClassLoaderFactory.java:147
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:127 ClassLoaderFactory.java:147
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:198
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:198
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:198
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:198
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:198
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:207 ClassLoaderFactory.java:285
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:197 ClassLoaderFactory.java:285
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:217 ClassLoaderFactory.java:285
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:239 ClassLoaderFactory.java:285
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:226 ClassLoaderFactory.java:285
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:227
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:218
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:113 ClassLoaderFactory.java:128
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:253
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:240
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:208
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:187
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:113 ClassLoaderFactory.java:147
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:198
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:113 ClassLoaderFactory.java:114
      Atomic: NO

      Method: ClassLoaderFactory.createClassLoader()
      Calls Location: ClassLoaderFactory.java:186 ClassLoaderFactory.java:285
      Atomic: NO

Checking class Catalina:

  Verifying word isDebugEnabled debug:

      Method: Catalina.createStartDigester()
      Calls Location: Catalina.java:347 Catalina.java:348
      Atomic: NO

      Method: Catalina.process()
      Calls Location: Catalina.java:347 Catalina.java:348
      Atomic: NO

Checking class SecurityClassLoad:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Embedded:

  Verifying word isDebugEnabled debug:

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:678 Embedded.java:679
      Atomic: YES

      Method: Embedded.initNaming()
      Calls Location: Embedded.java:900 Embedded.java:909
      Atomic: NO

      Method: Embedded.initNaming()
      Calls Location: Embedded.java:900 Embedded.java:901
      Atomic: NO

      Method: Embedded.createLoader()
      Calls Location: Embedded.java:564 Embedded.java:565
      Atomic: NO

      Method: Embedded.createContext()
      Calls Location: Embedded.java:475 Embedded.java:476
      Atomic: NO

      Method: Embedded.removeHost()
      Calls Location: Embedded.java:721 Embedded.java:722
      Atomic: YES

      Method: Embedded.addConnector()
      Calls Location: Embedded.java:314 Embedded.java:315
      Atomic: YES

      Method: Embedded.createEngine()
      Calls Location: Embedded.java:500 Embedded.java:501
      Atomic: NO

      Method: Embedded.removeContext()
      Calls Location: Embedded.java:620 Embedded.java:621
      Atomic: YES

      Method: Embedded.createHost()
      Calls Location: Embedded.java:541 Embedded.java:542
      Atomic: NO

      Method: Embedded.createConnector()
      Calls Location: Embedded.java:412 Embedded.java:413
      Atomic: NO

      Method: Embedded.removeContext()
      Calls Location: Embedded.java:595 Embedded.java:621
      Atomic: YES

      Method: Embedded.removeHost()
      Calls Location: Embedded.java:700 Embedded.java:701
      Atomic: YES

      Method: Embedded.removeContext()
      Calls Location: Embedded.java:595 Embedded.java:596
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:668 Embedded.java:669
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:651 Embedded.java:669
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:636 Embedded.java:669
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:651 Embedded.java:652
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:636 Embedded.java:652
      Atomic: YES

      Method: Embedded.stop()
      Calls Location: Embedded.java:848 Embedded.java:849
      Atomic: NO

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:668 Embedded.java:679
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:651 Embedded.java:679
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:636 Embedded.java:679
      Atomic: YES

      Method: Embedded.removeEngine()
      Calls Location: Embedded.java:636 Embedded.java:637
      Atomic: YES

      Method: Embedded.removeHost()
      Calls Location: Embedded.java:700 Embedded.java:722
      Atomic: YES

      Method: Embedded.addEngine()
      Calls Location: Embedded.java:338 Embedded.java:339
      Atomic: YES

Checking class LogConfigurationException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DirectJDKLog:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardClassLoader:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Digester:

  Verifying word isDebugEnabled debug:

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1533 Digester.java:1534
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1503 Digester.java:1504
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1510 Digester.java:1511
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1510 Digester.java:1534
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1146
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1333 Digester.java:1344
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1123
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1333 Digester.java:1334
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1156
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1098
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1333 Digester.java:1374
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1136
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1102
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1333 Digester.java:1363
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1097 Digester.java:1101
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1333 Digester.java:1387
      Atomic: NO

      Method: Digester.notationDecl()
      Calls Location: Digester.java:1432 Digester.java:1433
      Atomic: NO

      Method: Digester.processingInstruction()
      Calls Location: Digester.java:1243 Digester.java:1244
      Atomic: NO

      Method: Digester.ignorableWhitespace()
      Calls Location: Digester.java:1222 Digester.java:1223
      Atomic: NO

      Method: Digester.unparsedEntityDecl()
      Calls Location: Digester.java:1451 Digester.java:1452
      Atomic: NO

      Method: Digester.setDocumentLocator()
      Calls Location: Digester.java:1270 Digester.java:1271
      Atomic: NO

      Method: Digester.pop()
      Calls Location: Digester.java:2570 Digester.java:2571
      Atomic: NO

      Method: Digester.peek()
      Calls Location: Digester.java:2600 Digester.java:2601
      Atomic: NO

      Method: Digester.characters()
      Calls Location: Digester.java:1029 Digester.java:1030
      Atomic: NO

      Method: Digester.register()
      Calls Location: Digester.java:1761 Digester.java:1762
      Atomic: NO

      Method: Digester.skippedEntity()
      Calls Location: Digester.java:1288 Digester.java:1289
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1484 Digester.java:1504
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1146
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1123
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1331 Digester.java:1334
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1484 Digester.java:1485
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1156
      Atomic: NO

      Method: Digester.startDocument()
      Calls Location: Digester.java:1304 Digester.java:1305
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1331 Digester.java:1363
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1331 Digester.java:1387
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1523 Digester.java:1524
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1136
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1523 Digester.java:1534
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1484 Digester.java:1534
      Atomic: NO

      Method: Digester.addRuleSet()
      Calls Location: Digester.java:1796 Digester.java:1798
      Atomic: NO

      Method: Digester.resolveEntity()
      Calls Location: Digester.java:1484 Digester.java:1511
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1331 Digester.java:1344
      Atomic: NO

      Method: Digester.addRuleSet()
      Calls Location: Digester.java:1796 Digester.java:1800
      Atomic: NO

      Method: Digester.endPrefixMapping()
      Calls Location: Digester.java:1189 Digester.java:1190
      Atomic: NO

      Method: Digester.endDocument()
      Calls Location: Digester.java:1045 Digester.java:1047
      Atomic: NO

      Method: Digester.startPrefixMapping()
      Calls Location: Digester.java:1405 Digester.java:1406
      Atomic: NO

      Method: Digester.endDocument()
      Calls Location: Digester.java:1045 Digester.java:1050
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1098
      Atomic: NO

      Method: Digester.startElement()
      Calls Location: Digester.java:1331 Digester.java:1374
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1102
      Atomic: NO

      Method: Digester.endElement()
      Calls Location: Digester.java:1094 Digester.java:1101
      Atomic: NO

Checking class ContextRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LifecycleException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardServer:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Lifecycle:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ConnectorCreateRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Server:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetParentClassLoaderRule:

  Verifying word isDebugEnabled debug:

      Method: SetParentClassLoaderRule.begin()
      Calls Location: Catalina.java:751 Catalina.java:752
      Atomic: NO

Checking class Rule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class EngineRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Catalina$CatalinaShutdownHook:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RuleSetBase:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClusterRuleSetFactory:

  Verifying word isDebugEnabled debug:

      Method: ClusterRuleSetFactory.getClusterRuleSet()
      Calls Location: ClusterRuleSetFactory.java:49 ClusterRuleSetFactory.java:49
      Atomic: NO

      Method: ClusterRuleSetFactory.getClusterRuleSet()
      Calls Location: ClusterRuleSetFactory.java:58 ClusterRuleSetFactory.java:58
      Atomic: NO

      Method: ClusterRuleSetFactory.getClusterRuleSet()
      Calls Location: ClusterRuleSetFactory.java:42 ClusterRuleSetFactory.java:42
      Atomic: NO

      Method: ClusterRuleSetFactory.getClusterRuleSet()
      Calls Location: ClusterRuleSetFactory.java:65 ClusterRuleSetFactory.java:65
      Atomic: NO

Checking class SetAllPropertiesRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HostRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringManager:

  Verifying word isDebugEnabled debug:

      Method: StringManager.<init>()
      Calls Location: StringManager.java:93 StringManager.java:94
      Atomic: NO

      Method: StringManager.<init>()
      Calls Location: StringManager.java:89 StringManager.java:90
      Atomic: NO

      Method: StringManager.<init>()
      Calls Location: StringManager.java:89 StringManager.java:94
      Atomic: NO

Checking class StandardService:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Engine:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LifecycleSupport:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Realm:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Connector:

  Verifying word isDebugEnabled debug:

      Method: Connector.start()
      Calls Location: Connector.java:1215 Connector.java:1216
      Atomic: NO

      Method: Connector.initialize()
      Calls Location: Connector.java:1108 Connector.java:1109
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1108 Connector.java:1339
      Atomic: NO

      Method: Connector.start()
      Calls Location: Connector.java:1108 Connector.java:1216
      Atomic: NO

      Method: Connector.init()
      Calls Location: Connector.java:1352 Connector.java:1353
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1338 Connector.java:1339
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1331 Connector.java:1339
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1317 Connector.java:1339
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1317 Connector.java:1318
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1331 Connector.java:1109
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1317 Connector.java:1109
      Atomic: NO

      Method: Connector.destroy()
      Calls Location: Connector.java:1363 Connector.java:1364
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1331 Connector.java:1332
      Atomic: NO

      Method: Connector.findContainer()
      Calls Location: Connector.java:1317 Connector.java:1332
      Atomic: NO

Checking class Context:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Host:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Loader:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LifecycleListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextConfig:

  Verifying word isDebugEnabled debug:

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:794 ContextConfig.java:795
      Atomic: NO

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:794 ContextConfig.java:741
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:506 ContextConfig.java:1059
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:506 ContextConfig.java:1069
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:506 ContextConfig.java:1066
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:331 ContextConfig.java:507
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:331 ContextConfig.java:1059
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:331 ContextConfig.java:1069
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:331 ContextConfig.java:1066
      Atomic: YES

      Method: ContextConfig.applicationWebConfig()
      Calls Location: ContextConfig.java:331 ContextConfig.java:332
      Atomic: NO

      Method: ContextConfig.authenticatorConfig()
      Calls Location: ContextConfig.java:506 ContextConfig.java:507
      Atomic: YES

      Method: ContextConfig.processDefaultWebConfig()
      Calls Location: ContextConfig.java:664 ContextConfig.java:665
      Atomic: NO

      Method: ContextConfig.applicationWebConfig()
      Calls Location: ContextConfig.java:361 ContextConfig.java:362
      Atomic: YES

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:794 ContextConfig.java:795
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:664 ContextConfig.java:507
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:664 ContextConfig.java:1059
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:664 ContextConfig.java:1069
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:664 ContextConfig.java:1066
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:664 ContextConfig.java:332
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:664 ContextConfig.java:362
      Atomic: YES

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:664 ContextConfig.java:665
      Atomic: NO

      Method: ContextConfig.defaultWebConfig()
      Calls Location: ContextConfig.java:664 ContextConfig.java:622
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:361 ContextConfig.java:507
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:361 ContextConfig.java:1059
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:361 ContextConfig.java:1069
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:361 ContextConfig.java:1066
      Atomic: YES

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:740 ContextConfig.java:795
      Atomic: NO

      Method: ContextConfig.contextConfig()
      Calls Location: ContextConfig.java:740 ContextConfig.java:741
      Atomic: NO

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:740 ContextConfig.java:795
      Atomic: NO

      Method: ContextConfig.processContextConfig()
      Calls Location: ContextConfig.java:740 ContextConfig.java:741
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1058 ContextConfig.java:1059
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1058 ContextConfig.java:1069
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1058 ContextConfig.java:1066
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:362
      Atomic: YES

      Method: ContextConfig.antiLocking()
      Calls Location: ContextConfig.java:976 ContextConfig.java:977
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:665
      Atomic: YES

      Method: ContextConfig.init()
      Calls Location: ContextConfig.java:1001 ContextConfig.java:1002
      Atomic: NO

      Method: ContextConfig.init()
      Calls Location: ContextConfig.java:1001 ContextConfig.java:741
      Atomic: NO

      Method: ContextConfig.destroy()
      Calls Location: ContextConfig.java:1248 ContextConfig.java:1249
      Atomic: YES

      Method: ContextConfig.init()
      Calls Location: ContextConfig.java:1001 ContextConfig.java:795
      Atomic: NO

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:507
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:332
      Atomic: YES

      Method: ContextConfig.stop()
      Calls Location: ContextConfig.java:1088 ContextConfig.java:1089
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:1059
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:1066
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:1041
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:1069
      Atomic: YES

      Method: ContextConfig.start()
      Calls Location: ContextConfig.java:1040 ContextConfig.java:622
      Atomic: YES

Checking class StandardEngine:

  Verifying word isDebugEnabled debug:

      Method: StandardEngine.createObjectName()
      Calls Location: StandardEngine.java:591 StandardEngine.java:592
      Atomic: NO

      Method: StandardEngine.init()
      Calls Location: StandardEngine.java:322 StandardEngine.java:323
      Atomic: NO

Checking class IntrospectionUtils:

  Verifying word isDebugEnabled debug:

      Method: IntrospectionUtils.getAttribute()
      Calls Location: IntrospectionUtils.java:97 IntrospectionUtils.java:98
      Atomic: NO

      Method: IntrospectionUtils.setAttribute()
      Calls Location: IntrospectionUtils.java:76 IntrospectionUtils.java:77
      Atomic: NO

      Method: IntrospectionUtils.d()
      Calls Location: IntrospectionUtils.java:1029 IntrospectionUtils.java:1030
      Atomic: NO

      Method: IntrospectionUtils.addToolsJar()
      Calls Location: IntrospectionUtils.java:598 IntrospectionUtils.java:599
      Atomic: NO

      Method: IntrospectionUtils.displayClassPath()
      Calls Location: IntrospectionUtils.java:227 IntrospectionUtils.java:230
      Atomic: NO

      Method: IntrospectionUtils.displayClassPath()
      Calls Location: IntrospectionUtils.java:227 IntrospectionUtils.java:228
      Atomic: NO

      Method: IntrospectionUtils.setProperty()
      Calls Location: IntrospectionUtils.java:1029 IntrospectionUtils.java:1030
      Atomic: NO

      Method: IntrospectionUtils.processArgs()
      Calls Location: IntrospectionUtils.java:1029 IntrospectionUtils.java:1030
      Atomic: NO

      Method: IntrospectionUtils.processArgs()
      Calls Location: IntrospectionUtils.java:1029 IntrospectionUtils.java:1030
      Atomic: NO

Checking class SystemLogHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Container:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SecurityConfig:

  Verifying word isDebugEnabled debug:

      Method: SecurityConfig.<init>()
      Calls Location: SecurityConfig.java:68 SecurityConfig.java:69
      Atomic: NO

Checking class Valve:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardContext:

  Verifying word isDebugEnabled debug:

      Method: StandardContext.resetContext()
      Calls Location: StandardContext.java:5009 StandardContext.java:5010
      Atomic: NO

      Method: StandardContext.stop()
      Calls Location: StandardContext.java:4955 StandardContext.java:4956
      Atomic: YES

      Method: StandardContext.filterStop()
      Calls Location: StandardContext.java:4107 StandardContext.java:4108
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4955 StandardContext.java:5554
      Atomic: YES

      Method: StandardContext.reload()
      Calls Location: StandardContext.java:4955 StandardContext.java:4233
      Atomic: YES

      Method: StandardContext.start()
      Calls Location: StandardContext.java:4955 StandardContext.java:4233
      Atomic: YES

    *** Timeout ***

Checking class StandardHost:

  Verifying word isDebugEnabled debug:

      Method: StandardHost.start()
      Calls Location: StandardHost.java:886 StandardHost.java:820
      Atomic: YES

      Method: StandardHost.map()
      Calls Location: StandardHost.java:698 StandardHost.java:699
      Atomic: NO

      Method: StandardHost.init()
      Calls Location: StandardHost.java:886 StandardHost.java:887
      Atomic: NO

      Method: StandardHost.start()
      Calls Location: StandardHost.java:816 StandardHost.java:820
      Atomic: YES

      Method: StandardHost.start()
      Calls Location: StandardHost.java:870 StandardHost.java:820
      Atomic: YES

      Method: StandardHost.createObjectName()
      Calls Location: StandardHost.java:923 StandardHost.java:924
      Atomic: NO

      Method: StandardHost.init()
      Calls Location: StandardHost.java:870 StandardHost.java:887
      Atomic: NO

      Method: StandardHost.map()
      Calls Location: StandardHost.java:664 StandardHost.java:665
      Atomic: NO

      Method: StandardHost.init()
      Calls Location: StandardHost.java:870 StandardHost.java:871
      Atomic: NO

      Method: StandardHost.map()
      Calls Location: StandardHost.java:664 StandardHost.java:699
      Atomic: NO

Checking class WebappLoader:

  Verifying word isDebugEnabled debug:

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:976 WebappLoader.java:1172
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:976 WebappLoader.java:1178
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:932 WebappLoader.java:1172
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:932 WebappLoader.java:1178
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:1040 WebappLoader.java:1172
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:1040 WebappLoader.java:1178
      Atomic: NO

      Method: WebappLoader.getClasspath()
      Calls Location: WebappLoader.java:1177 WebappLoader.java:1178
      Atomic: NO

      Method: WebappLoader.getClasspath()
      Calls Location: WebappLoader.java:1171 WebappLoader.java:1172
      Atomic: NO

      Method: WebappLoader.setRepositories()
      Calls Location: WebappLoader.java:932 WebappLoader.java:933
      Atomic: NO

      Method: WebappLoader.setRepositories()
      Calls Location: WebappLoader.java:1040 WebappLoader.java:1041
      Atomic: NO

      Method: WebappLoader.setRepositories()
      Calls Location: WebappLoader.java:976 WebappLoader.java:1041
      Atomic: NO

      Method: WebappLoader.setRepositories()
      Calls Location: WebappLoader.java:932 WebappLoader.java:1041
      Atomic: NO

      Method: WebappLoader.setRepositories()
      Calls Location: WebappLoader.java:976 WebappLoader.java:977
      Atomic: NO

      Method: WebappLoader.setRepositories()
      Calls Location: WebappLoader.java:932 WebappLoader.java:977
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:632 WebappLoader.java:1172
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:632 WebappLoader.java:633
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:632 WebappLoader.java:933
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:632 WebappLoader.java:1041
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:632 WebappLoader.java:977
      Atomic: NO

      Method: WebappLoader.start()
      Calls Location: WebappLoader.java:632 WebappLoader.java:1178
      Atomic: NO

      Method: WebappLoader.addRepository()
      Calls Location: WebappLoader.java:393 WebappLoader.java:1172
      Atomic: NO

      Method: WebappLoader.addRepository()
      Calls Location: WebappLoader.java:393 WebappLoader.java:394
      Atomic: NO

      Method: WebappLoader.stop()
      Calls Location: WebappLoader.java:726 WebappLoader.java:727
      Atomic: NO

      Method: WebappLoader.addRepository()
      Calls Location: WebappLoader.java:393 WebappLoader.java:1178
      Atomic: NO

Checking class SetNextNamingRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LifecycleListenerRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetContextPropertiesRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RealmRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingResources:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingContextListener:

  Verifying word isDebugEnabled debug:

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:845 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:845 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:845 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:845 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:1056
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:1090
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:1016
      Atomic: NO

      Method: NamingContextListener.addResourceLink()
      Calls Location: NamingContextListener.java:1089 NamingContextListener.java:1090
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:1090
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:1090
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.addService()
      Calls Location: NamingContextListener.java:984 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:620
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:620
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.addEnvironment()
      Calls Location: NamingContextListener.java:845 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.addResource()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:1016
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:1016
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:1016
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:231
      Atomic: NO

      Method: NamingContextListener.addResourceEnvRef()
      Calls Location: NamingContextListener.java:1055 NamingContextListener.java:1056
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:619 NamingContextListener.java:1056
      Atomic: NO

      Method: NamingContextListener.lifecycleEvent()
      Calls Location: NamingContextListener.java:230 NamingContextListener.java:1056
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1055 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1055 NamingContextListener.java:1056
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1055 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1055 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1055 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:984 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:984 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:984 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:985
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:1056
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:846
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:928
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:894
      Atomic: NO

      Method: NamingContextListener.createNamingContext()
      Calls Location: NamingContextListener.java:1015 NamingContextListener.java:1016
      Atomic: NO

Checking class Service:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ServerFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Registry:

  Verifying word isDebugEnabled debug:

      Method: Registry.registerComponent()
      Calls Location: Registry.java:625 Registry.java:801
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:625 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:625 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:593 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:593 Registry.java:594
      Atomic: NO

      Method: Registry.invoke()
      Calls Location: Registry.java:593 Registry.java:599
      Atomic: NO

      Method: Registry.invoke()
      Calls Location: Registry.java:593 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:593 Registry.java:801
      Atomic: NO

      Method: Registry.unregisterComponent()
      Calls Location: Registry.java:593 Registry.java:594
      Atomic: NO

      Method: Registry.unregisterComponent()
      Calls Location: Registry.java:593 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:634 Registry.java:801
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:634 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:634 Registry.java:599
      Atomic: NO

      Method: Registry.getMBeanServer()
      Calls Location: Registry.java:593 Registry.java:594
      Atomic: YES

      Method: Registry.getMBeanServer()
      Calls Location: Registry.java:598 Registry.java:599
      Atomic: YES

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:800 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:781
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:800 Registry.java:801
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:801
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:646 Registry.java:647
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:625 Registry.java:647
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:647
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:634 Registry.java:647
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:625 Registry.java:626
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:626
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:634 Registry.java:635
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:625 Registry.java:635
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:635
      Atomic: NO

      Method: Registry.findManagedBean()
      Calls Location: Registry.java:625 Registry.java:840
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:840
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:780 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:800 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:598 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:598 Registry.java:594
      Atomic: NO

      Method: Registry.invoke()
      Calls Location: Registry.java:598 Registry.java:599
      Atomic: NO

      Method: Registry.invoke()
      Calls Location: Registry.java:598 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:598 Registry.java:801
      Atomic: NO

      Method: Registry.unregisterComponent()
      Calls Location: Registry.java:598 Registry.java:594
      Atomic: NO

      Method: Registry.unregisterComponent()
      Calls Location: Registry.java:598 Registry.java:599
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:646 Registry.java:801
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:646 Registry.java:594
      Atomic: NO

      Method: Registry.registerComponent()
      Calls Location: Registry.java:646 Registry.java:599
      Atomic: NO

    *** Timeout ***

Checking class StringCache:

  Verifying word isDebugEnabled debug:

      Method: StringCache.toString()
      Calls Location: StringCache.java:391 StringCache.java:393
      Atomic: YES

      Method: StringCache.toString()
      Calls Location: StringCache.java:279 StringCache.java:281
      Atomic: YES

Checking class ServerInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Executor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ProtocolHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class IntrospectionUtils$PropertySource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ArrayStack:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Rules:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ObjectCreationFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Digester$SystemPropertySource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ObjectParamRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CallParamRule:

  Verifying word isDebugEnabled debug:

      Method: CallParamRule.begin()
      Calls Location: CallParamRule.java:192 CallParamRule.java:198
      Atomic: NO

Checking class CallMethodRule:

  Verifying word isDebugEnabled debug:

      Method: CallMethodRule.end()
      Calls Location: CallMethodRule.java:552 CallMethodRule.java:577
      Atomic: NO

Checking class FactoryCreateRule:

  Verifying word isDebugEnabled debug:

      Method: FactoryCreateRule.begin()
      Calls Location: FactoryCreateRule.java:380 FactoryCreateRule.java:381
      Atomic: NO

      Method: FactoryCreateRule.begin()
      Calls Location: FactoryCreateRule.java:368 FactoryCreateRule.java:369
      Atomic: NO

      Method: FactoryCreateRule.begin()
      Calls Location: FactoryCreateRule.java:390 FactoryCreateRule.java:391
      Atomic: NO

      Method: FactoryCreateRule.begin()
      Calls Location: FactoryCreateRule.java:484 FactoryCreateRule.java:369
      Atomic: NO

      Method: FactoryCreateRule.begin()
      Calls Location: FactoryCreateRule.java:484 FactoryCreateRule.java:391
      Atomic: NO

      Method: FactoryCreateRule.end()
      Calls Location: FactoryCreateRule.java:422 FactoryCreateRule.java:423
      Atomic: NO

      Method: FactoryCreateRule.getFactory()
      Calls Location: FactoryCreateRule.java:484 FactoryCreateRule.java:485
      Atomic: NO

Checking class SetNextRule:

  Verifying word isDebugEnabled debug:

      Method: SetNextRule.end()
      Calls Location: SetNextRule.java:180 SetNextRule.java:186
      Atomic: NO

Checking class SetTopRule:

  Verifying word isDebugEnabled debug:

      Method: SetTopRule.end()
      Calls Location: SetTopRule.java:181 SetTopRule.java:187
      Atomic: NO

Checking class ParserFeatureSetterFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ObjectCreateRule:

  Verifying word isDebugEnabled debug:

      Method: ObjectCreateRule.begin()
      Calls Location: ObjectCreateRule.java:199 ObjectCreateRule.java:200
      Atomic: NO

      Method: ObjectCreateRule.end()
      Calls Location: ObjectCreateRule.java:218 ObjectCreateRule.java:219
      Atomic: NO

Checking class SetPropertyRule:

  Verifying word isDebugEnabled debug:

      Method: SetPropertyRule.begin()
      Calls Location: SetPropertyRule.java:121 SetPropertyRule.java:122
      Atomic: NO

Checking class SetPropertiesRule:

  Verifying word isDebugEnabled debug:

      Method: SetPropertiesRule.begin()
      Calls Location: SetPropertiesRule.java:159 SetPropertiesRule.java:165
      Atomic: NO

      Method: SetPropertiesRule.begin()
      Calls Location: SetPropertiesRule.java:159 SetPropertiesRule.java:161
      Atomic: NO

      Method: SetPropertiesRule.begin()
      Calls Location: SetPropertiesRule.java:203 SetPropertiesRule.java:204
      Atomic: NO

      Method: SetPropertiesRule.begin()
      Calls Location: SetPropertiesRule.java:159 SetPropertiesRule.java:204
      Atomic: NO

Checking class SetRootRule:

  Verifying word isDebugEnabled debug:

      Method: SetRootRule.end()
      Calls Location: SetRootRule.java:181 SetRootRule.java:187
      Atomic: NO

Checking class PathCallParamRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RulesBase:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClusterRuleSetFactory$DefaultClusterRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$ClassLoaderLogInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$RootLogger:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$Cleaner:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$LogNode:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$3:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$2:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClassLoaderLogManager$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CopyParentClassLoaderRule:

  Verifying word isDebugEnabled debug:

      Method: CopyParentClassLoaderRule.begin()
      Calls Location: CopyParentClassLoaderRule.java:64 CopyParentClassLoaderRule.java:65
      Atomic: NO

Checking class ContainerBase:

  Verifying word isDebugEnabled debug:

      Method: ContainerBase.destroy()
      Calls Location: ContainerBase.java:1186 ContainerBase.java:1187
      Atomic: NO

      Method: ContainerBase.createObjectName()
      Calls Location: ContainerBase.java:1540 ContainerBase.java:1541
      Atomic: NO

      Method: ContainerBase.addChildInternal()
      Calls Location: ContainerBase.java:785 ContainerBase.java:786
      Atomic: NO

Checking class Adapter:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Mapper:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MapperListener:

  Verifying word isDebugEnabled debug:

      Method: MapperListener.unregisterContext()
      Calls Location: MapperListener.java:486 MapperListener.java:487
      Atomic: NO

      Method: MapperListener.registerContext()
      Calls Location: MapperListener.java:414 MapperListener.java:415
      Atomic: NO

      Method: MapperListener.registerWrapper()
      Calls Location: MapperListener.java:536 MapperListener.java:537
      Atomic: NO

      Method: MapperListener.init()
      Calls Location: MapperListener.java:414 MapperListener.java:415
      Atomic: NO

      Method: MapperListener.init()
      Calls Location: MapperListener.java:414 MapperListener.java:537
      Atomic: NO

      Method: MapperListener.init()
      Calls Location: MapperListener.java:536 MapperListener.java:537
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:345 MapperListener.java:415
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:345 MapperListener.java:537
      Atomic: NO

      Method: MapperListener.init()
      Calls Location: MapperListener.java:345 MapperListener.java:415
      Atomic: NO

      Method: MapperListener.init()
      Calls Location: MapperListener.java:345 MapperListener.java:346
      Atomic: NO

      Method: MapperListener.init()
      Calls Location: MapperListener.java:345 MapperListener.java:537
      Atomic: NO

      Method: MapperListener.registerHost()
      Calls Location: MapperListener.java:345 MapperListener.java:346
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:366 MapperListener.java:487
      Atomic: NO

      Method: MapperListener.unregisterHost()
      Calls Location: MapperListener.java:366 MapperListener.java:367
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:216 MapperListener.java:487
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:216 MapperListener.java:537
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:216 MapperListener.java:217
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:216 MapperListener.java:367
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:216 MapperListener.java:415
      Atomic: NO

      Method: MapperListener.handleNotification()
      Calls Location: MapperListener.java:216 MapperListener.java:346
      Atomic: NO

Checking class Request:

  Verifying word isDebugEnabled debug:

      Method: Request.getParameterMap()
      Calls Location: Request.java:2641 Request.java:2622
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2641 Request.java:2642
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2641 Request.java:2656
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2621 Request.java:2622
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2621 Request.java:2642
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2621 Request.java:2656
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2655 Request.java:2622
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2655 Request.java:2642
      Atomic: NO

      Method: Request.getParameterMap()
      Calls Location: Request.java:2655 Request.java:2656
      Atomic: NO

      Method: Request.parseParameters()
      Calls Location: Request.java:2655 Request.java:2656
      Atomic: NO

      Method: Request.parseParameters()
      Calls Location: Request.java:2641 Request.java:2642
      Atomic: NO

      Method: Request.parseParameters()
      Calls Location: Request.java:2621 Request.java:2622
      Atomic: NO

Checking class Response:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteAdapter:

  Verifying word isDebugEnabled debug:

      Method: CoyoteAdapter.postParseRequest()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:752
      Atomic: NO

      Method: CoyoteAdapter.postParseRequest()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:752
      Atomic: NO

      Method: CoyoteAdapter.postParseRequest()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:752
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:681
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:681
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:681
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:679
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:679
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:679
      Atomic: NO

      Method: CoyoteAdapter.parseSessionCookiesId()
      Calls Location: CoyoteAdapter.java:751 CoyoteAdapter.java:752
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:677
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:677
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:677
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:667
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:667
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:667
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:612
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:663
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:663
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:663
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:662 CoyoteAdapter.java:665
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:665
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:676 CoyoteAdapter.java:665
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:610
      Atomic: NO

      Method: CoyoteAdapter.parsePathParameters()
      Calls Location: CoyoteAdapter.java:607 CoyoteAdapter.java:608
      Atomic: NO

Checking class AprLifecycleListener:

  Verifying word isDebugEnabled debug:

      Method: AprLifecycleListener.init()
      Calls Location: AprLifecycleListener.java:225 AprLifecycleListener.java:233
      Atomic: NO

      Method: AprLifecycleListener.init()
      Calls Location: AprLifecycleListener.java:211 AprLifecycleListener.java:233
      Atomic: NO

      Method: AprLifecycleListener.lifecycleEvent()
      Calls Location: AprLifecycleListener.java:132 AprLifecycleListener.java:135
      Atomic: NO

      Method: AprLifecycleListener.init()
      Calls Location: AprLifecycleListener.java:211 AprLifecycleListener.java:218
      Atomic: NO

      Method: AprLifecycleListener.init()
      Calls Location: AprLifecycleListener.java:186 AprLifecycleListener.java:190
      Atomic: NO

Checking class WebRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LoginConfig:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LifecycleEvent:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Pipeline:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DigesterFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextConfig$ContextErrorHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FilterMap:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ErrorPage:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WebAnnotationSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SecurityConstraint:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ExpandWar:

  Verifying word isDebugEnabled debug:

      Method: ExpandWar.expand()
      Calls Location: ExpandWar.java:76 ExpandWar.java:77
      Atomic: NO

      Method: ExpandWar.expand()
      Calls Location: ExpandWar.java:90 ExpandWar.java:91
      Atomic: NO

      Method: ExpandWar.expand()
      Calls Location: ExpandWar.java:76 ExpandWar.java:91
      Atomic: NO

Checking class FilterDef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Wrapper:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class XmlErrorHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CharsetMapper:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationParameter:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContainerBase$NoopAccessLog:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MbeansSource:

  Verifying word isDebugEnabled debug:

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:233 MbeansSource.java:234
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:191 MbeansSource.java:234
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:191 MbeansSource.java:192
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:233 MbeansSource.java:192
      Atomic: NO

      Method: MbeansSource.processAttribute()
      Calls Location: MbeansSource.java:330 MbeansSource.java:331
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:191 MbeansSource.java:331
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:233 MbeansSource.java:331
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:330 MbeansSource.java:234
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:330 MbeansSource.java:192
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:330 MbeansSource.java:331
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:159 MbeansSource.java:160
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:159 MbeansSource.java:234
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:159 MbeansSource.java:192
      Atomic: NO

      Method: MbeansSource.execute()
      Calls Location: MbeansSource.java:159 MbeansSource.java:331
      Atomic: NO

Checking class StandardEngine$AccessLogListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class JAASRealm:

  Verifying word isDebugEnabled debug:

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:521 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:521 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:514 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:514 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:535 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:535 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:529 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:529 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:508 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:508 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:412 JAASRealm.java:413
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:445 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:535 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:521 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:508 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:514 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:529 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:521 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:508 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:514 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:437
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:437
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:404
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:413
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:514 JAASRealm.java:515
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:508 JAASRealm.java:515
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:521 JAASRealm.java:515
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:515
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:515
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:508 JAASRealm.java:509
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:521 JAASRealm.java:509
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:514 JAASRealm.java:509
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:509
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:509
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:521 JAASRealm.java:522
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:508 JAASRealm.java:522
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:436 JAASRealm.java:522
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:403 JAASRealm.java:522
      Atomic: NO

      Method: JAASRealm.createPrincipal()
      Calls Location: JAASRealm.java:514 JAASRealm.java:522
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:421 JAASRealm.java:422
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:417 JAASRealm.java:418
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:425 JAASRealm.java:426
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:536
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:530
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:446
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:442
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:437
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:404
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:413
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:515
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:509
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:381
      Atomic: NO

      Method: JAASRealm.authenticate()
      Calls Location: JAASRealm.java:380 JAASRealm.java:522
      Atomic: NO

Checking class StandardEngineValve:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class AccessLog:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class IntrospectionUtils$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class IntrospectionUtils$AttributeHolder:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CaptureLog:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Manager:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Cluster:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContainerListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometEvent:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class URLEncoder:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class AnnotationProcessor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MessageDestination:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MessageDestinationRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SecurityCollection:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FileDirContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationFilterConfig:

  Verifying word isDebugEnabled debug:

      Method: ApplicationFilterConfig.unregisterJMX()
      Calls Location: ApplicationFilterConfig.java:472 ApplicationFilterConfig.java:473
      Atomic: NO

Checking class ExtensionValidator:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardContextValve:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BaseDirContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DefaultAnnotationProcessor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceCache:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Globals:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextBindings:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardManager:

  Verifying word isDebugEnabled debug:

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:391 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:577 StandardManager.java:578
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:444 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:391 StandardManager.java:392
      Atomic: YES

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:365 StandardManager.java:392
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:361 StandardManager.java:392
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:365 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:361 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:361 StandardManager.java:362
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:365 StandardManager.java:366
      Atomic: NO

      Method: StandardManager.load()
      Calls Location: StandardManager.java:317 StandardManager.java:318
      Atomic: NO

      Method: StandardManager.unload()
      Calls Location: StandardManager.java:465 StandardManager.java:466
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:370 StandardManager.java:371
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:519 StandardManager.java:520
      Atomic: YES

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:496 StandardManager.java:520
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:484 StandardManager.java:520
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:520
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:347 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:337 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:445
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:347 StandardManager.java:392
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:337 StandardManager.java:392
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:392
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:392
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:347 StandardManager.java:362
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:337 StandardManager.java:362
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:362
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:362
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:563 StandardManager.java:564
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:496 StandardManager.java:564
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:484 StandardManager.java:564
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:564
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:563 StandardManager.java:578
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:496 StandardManager.java:578
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:484 StandardManager.java:578
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:578
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:347 StandardManager.java:366
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:337 StandardManager.java:366
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:366
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:366
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:371
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:371
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:347 StandardManager.java:348
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:337 StandardManager.java:348
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:348
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:348
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:466
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:318
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:318
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:496 StandardManager.java:497
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:484 StandardManager.java:497
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:497
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:645
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:645
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:642
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:668
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:484 StandardManager.java:485
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:485
      Atomic: NO

      Method: StandardManager.doLoad()
      Calls Location: StandardManager.java:337 StandardManager.java:338
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:644 StandardManager.java:338
      Atomic: NO

      Method: StandardManager.start()
      Calls Location: StandardManager.java:641 StandardManager.java:338
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:484 StandardManager.java:488
      Atomic: NO

      Method: StandardManager.stop()
      Calls Location: StandardManager.java:667 StandardManager.java:488
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:519 StandardManager.java:564
      Atomic: NO

      Method: StandardManager.doUnload()
      Calls Location: StandardManager.java:519 StandardManager.java:578
      Atomic: NO

Checking class ProxyDirContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class TldConfig:

  Verifying word isDebugEnabled debug:

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:325 TldConfig.java:326
      Atomic: NO

      Method: TldConfig.tldScanJar()
      Calls Location: TldConfig.java:351 TldConfig.java:352
      Atomic: NO

      Method: TldConfig.tldScanTld()
      Calls Location: TldConfig.java:469 TldConfig.java:470
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:351 TldConfig.java:352
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:351 TldConfig.java:470
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:351 TldConfig.java:326
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:469 TldConfig.java:352
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:469 TldConfig.java:470
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:469 TldConfig.java:326
      Atomic: NO

      Method: TldConfig.tldScanResourcePaths()
      Calls Location: TldConfig.java:510 TldConfig.java:511
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:510 TldConfig.java:352
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:510 TldConfig.java:470
      Atomic: NO

      Method: TldConfig.execute()
      Calls Location: TldConfig.java:510 TldConfig.java:326
      Atomic: NO

Checking class RequestUtil:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardWrapper:

  Verifying word isDebugEnabled debug:

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:1167 StandardWrapper.java:1168
      Atomic: NO

      Method: StandardWrapper.loadServlet()
      Calls Location: StandardWrapper.java:1167 StandardWrapper.java:1168
      Atomic: YES

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:824 StandardWrapper.java:1168
      Atomic: NO

      Method: StandardWrapper.allocate()
      Calls Location: StandardWrapper.java:824 StandardWrapper.java:825
      Atomic: YES

Checking class DirContextURLStreamHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WARDirContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class InstanceListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardHostValve:

  Verifying word isDebugEnabled debug:

      Method: StandardHostValve.throwable()
      Calls Location: StandardHostValve.java:235 StandardHostValve.java:236
      Atomic: NO

      Method: StandardHostValve.custom()
      Calls Location: StandardHostValve.java:401 StandardHostValve.java:402
      Atomic: NO

Checking class ValveBase:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardPipeline:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardHost$MemoryLeakTrackingListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WebappClassLoader:

  Verifying word isDebugEnabled debug:

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2166
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2697
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2071
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2077
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2127
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2711
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2117
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2480
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2484
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2085
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1451 WebappClassLoader.java:2134
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2166
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2697
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2071
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2077
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2127
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2711
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2117
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2480
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2484
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2085
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1466 WebappClassLoader.java:2134
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:2133 WebappClassLoader.java:2711
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:2133 WebappClassLoader.java:2697
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2133 WebappClassLoader.java:2071
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2133 WebappClassLoader.java:2127
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2133 WebappClassLoader.java:2117
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2133 WebappClassLoader.java:2134
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:2076 WebappClassLoader.java:2711
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:2076 WebappClassLoader.java:2697
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:2116 WebappClassLoader.java:2711
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:2116 WebappClassLoader.java:2697
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2116 WebappClassLoader.java:2071
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2116 WebappClassLoader.java:2127
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2116 WebappClassLoader.java:2117
      Atomic: NO

      Method: WebappClassLoader.clearReferencesStaticFinal()
      Calls Location: WebappClassLoader.java:2116 WebappClassLoader.java:2134
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2166
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2697
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2071
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2077
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2127
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2711
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2117
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2480
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2484
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2085
      Atomic: NO

      Method: WebappClassLoader.clearReferences()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:2134
      Atomic: NO

      Method: WebappClassLoader.getResource()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1427
      Atomic: NO

      Method: WebappClassLoader.getResourceAsStream()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1509
      Atomic: NO

      Method: WebappClassLoader.getResourceAsStream()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1479
      Atomic: NO

      Method: WebappClassLoader.getResource()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1408
      Atomic: NO

      Method: WebappClassLoader.getResourceAsStream()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1502
      Atomic: NO

      Method: WebappClassLoader.getResourceAsStream()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1494
      Atomic: NO

      Method: WebappClassLoader.getResource()
      Calls Location: WebappClassLoader.java:1253 WebappClassLoader.java:1420
      Atomic: NO

    *** Timeout ***

Checking class HostConfig:

  Verifying word isDebugEnabled debug:

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1128 HostConfig.java:1135
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1128 HostConfig.java:1304
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1128 HostConfig.java:1129
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1128 HostConfig.java:535
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1128 HostConfig.java:1352
      Atomic: NO

      Method: HostConfig.lifecycleEvent()
      Calls Location: HostConfig.java:1128 HostConfig.java:1328
      Atomic: NO

      Method: HostConfig.deployDirectories()
      Calls Location: HostConfig.java:1128 HostConfig.java:1135
      Atomic: NO

      Method: HostConfig.deployDirectories()
      Calls Location: HostConfig.java:1128 HostConfig.java:1129
      Atomic: NO

    *** Timeout ***

Checking class DirContextURLStreamHandlerFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Resource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Document:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Element:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Node:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NodeList:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Text:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextTransaction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextEjb:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextEnvironment:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextLocalEjb:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextResource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextResourceEnvRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextResourceLink:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextService:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RegistryMBean:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ManagedBean:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ModelerSource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringCache$ByteEntry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringCache$CharEntry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ByteChunk:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CharChunk:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContainerEvent:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class TransactionRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ServiceRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HandlerRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextAccessController:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceLinkRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class EjbRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContextHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceEnvRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceLinkFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class XercesParser:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class GenericParser:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContainerBase$ContainerBackgroundProcessor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContainerBase$PrivilegedAddChild:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringManager:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MappingData:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MessageBytes:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Response:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class OutputBuffer:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteOutputStream:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteWriter:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UEncoder:

  Verifying word isDebugEnabled debug:

      Method: UEncoder.log()
      Calls Location: UEncoder.java:175 UEncoder.java:176
      Atomic: NO

Checking class ResponseFacade:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Session:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MimeHeaders:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class URL:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Response$3:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Response$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Response$2:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ServerCookie:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FastHttpDateFormat:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SecurityUtil:

  Verifying word isDebugEnabled debug:

      Method: SecurityUtil.execute()
      Calls Location: SecurityUtil.java:319 SecurityUtil.java:320
      Atomic: NO

Checking class Request:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SocketStatus:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class B2CConverter:

  Verifying word isDebugEnabled debug:

      Method: B2CConverter.log()
      Calls Location: B2CConverter.java:164 B2CConverter.java:165
      Atomic: NO

Checking class Cookies:

  Verifying word isDebugEnabled debug:

      Method: Cookies.processCookies()
      Calls Location: Cookies.java:295 Cookies.java:296
      Atomic: NO

      Method: Cookies.toString()
      Calls Location: Cookies.java:295 Cookies.java:296
      Atomic: NO

    *** Timeout ***

Checking class ActionCode:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Parameters:

  Verifying word isDebugEnabled debug:

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:323 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:454 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:388 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:338 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:338 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:323 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:454 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:388 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:454 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:388 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:323 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:338 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:323 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:454 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:388 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:338 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:460 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:454 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:388 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:323 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:338 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:444
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:427 Parameters.java:428
      Atomic: NO

      Method: Parameters.setEncoding()
      Calls Location: Parameters.java:92 Parameters.java:93
      Atomic: NO

      Method: Parameters.setQueryStringEncoding()
      Calls Location: Parameters.java:99 Parameters.java:100
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:339
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:228 Parameters.java:339
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:370
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:228 Parameters.java:370
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:444
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:444
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:428
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:428
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:181
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:228 Parameters.java:260
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:228 Parameters.java:230
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:230
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:325
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:228 Parameters.java:325
      Atomic: NO

      Method: Parameters.handleQueryParameters()
      Calls Location: Parameters.java:180 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:426 Parameters.java:474
      Atomic: NO

      Method: Parameters.processParameters()
      Calls Location: Parameters.java:228 Parameters.java:474
      Atomic: NO

Checking class ExceptionUtils:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UDecoder:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometEvent$EventSubType:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyotePrincipal:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometEvent$EventType:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometEventImpl:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SSL:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Library:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class InputBuffer:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteInputStream:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteReader:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ParameterMap:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringParser:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Enumerator:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class GenericPrincipal:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationFilterFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Mapper$Host:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Mapper$Context:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Mapper$Wrapper:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Mapper$MapElement:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Ascii:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Mapper$ContextList:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetSessionConfig:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetLoginConfig:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetJspConfig:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WrapperCreateRule:

  Verifying word isDebugEnabled debug:

      Method: WrapperCreateRule.end()
      Calls Location: WebRuleSet.java:676 WebRuleSet.java:677
      Atomic: NO

      Method: WrapperCreateRule.begin()
      Calls Location: WebRuleSet.java:669 WebRuleSet.java:670
      Atomic: NO

Checking class SoapHeaderRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ServiceQnameRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetPublicIdRule:

  Verifying word isDebugEnabled debug:

      Method: SetPublicIdRule.begin()
      Calls Location: WebRuleSet.java:644 WebRuleSet.java:645
      Atomic: NO

Checking class SetDistributableRule:

  Verifying word isDebugEnabled debug:

      Method: SetDistributableRule.begin()
      Calls Location: WebRuleSet.java:603 WebRuleSet.java:604
      Atomic: NO

Checking class CallMethodMultiRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CallParamMultiRule:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SetAuthConstraintRule:

  Verifying word isDebugEnabled debug:

      Method: SetAuthConstraintRule.begin()
      Calls Location: WebRuleSet.java:580 WebRuleSet.java:581
      Atomic: NO

Checking class IgnoreAnnotationsRule:

  Verifying word isDebugEnabled debug:

      Method: IgnoreAnnotationsRule.begin()
      Calls Location: WebRuleSet.java:818 WebRuleSet.java:819
      Atomic: NO

Checking class SecurityRoleRefCreateRule:

  Verifying word isDebugEnabled debug:

      Method: SecurityRoleRefCreateRule.end()
      Calls Location: WebRuleSet.java:901 WebRuleSet.java:902
      Atomic: NO

      Method: SecurityRoleRefCreateRule.begin()
      Calls Location: WebRuleSet.java:889 WebRuleSet.java:890
      Atomic: NO

Checking class LocalResolver:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Constants:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MbeansSourceMBean:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class AttributeInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BaseModelMBean:

  Verifying word isDebugEnabled debug:

      Method: BaseModelMBean.sendAttributeChangeNotification()
      Calls Location: BaseModelMBean.java:672 BaseModelMBean.java:673
      Atomic: NO

      Method: BaseModelMBean.setAttributes()
      Calls Location: BaseModelMBean.java:672 BaseModelMBean.java:673
      Atomic: NO

      Method: BaseModelMBean.setAttributes()
      Calls Location: BaseModelMBean.java:672 BaseModelMBean.java:378
      Atomic: NO

      Method: BaseModelMBean.setAttribute()
      Calls Location: BaseModelMBean.java:377 BaseModelMBean.java:673
      Atomic: NO

      Method: BaseModelMBean.setAttribute()
      Calls Location: BaseModelMBean.java:377 BaseModelMBean.java:378
      Atomic: NO

      Method: BaseModelMBean.setAttributes()
      Calls Location: BaseModelMBean.java:377 BaseModelMBean.java:673
      Atomic: NO

      Method: BaseModelMBean.setAttributes()
      Calls Location: BaseModelMBean.java:377 BaseModelMBean.java:378
      Atomic: NO

      Method: BaseModelMBean.invoke()
      Calls Location: BaseModelMBean.java:287 BaseModelMBean.java:287
      Atomic: NO

      Method: BaseModelMBean.addAttributeChangeNotificationListener()
      Calls Location: BaseModelMBean.java:592 BaseModelMBean.java:593
      Atomic: NO

      Method: BaseModelMBean.addNotificationListener()
      Calls Location: BaseModelMBean.java:805 BaseModelMBean.java:806
      Atomic: NO

      Method: BaseModelMBean.addNotificationListener()
      Calls Location: BaseModelMBean.java:791 BaseModelMBean.java:791
      Atomic: NO

      Method: BaseModelMBean.preRegister()
      Calls Location: BaseModelMBean.java:1075 BaseModelMBean.java:1076
      Atomic: NO

      Method: BaseModelMBean.addNotificationListener()
      Calls Location: BaseModelMBean.java:791 BaseModelMBean.java:806
      Atomic: NO

Checking class DomUtil:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RealmBase:

  Verifying word isDebugEnabled debug:

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:880 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:884 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.getPrincipal()
      Calls Location: RealmBase.java:1224 RealmBase.java:1225
      Atomic: NO

      Method: RealmBase.hasRole()
      Calls Location: RealmBase.java:884 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasUserDataPermission()
      Calls Location: RealmBase.java:928 RealmBase.java:929
      Atomic: NO

      Method: RealmBase.hasUserDataPermission()
      Calls Location: RealmBase.java:915 RealmBase.java:916
      Atomic: NO

      Method: RealmBase.hasUserDataPermission()
      Calls Location: RealmBase.java:923 RealmBase.java:924
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:502 RealmBase.java:503
      Atomic: NO

      Method: RealmBase.hasUserDataPermission()
      Calls Location: RealmBase.java:945 RealmBase.java:946
      Atomic: NO

      Method: RealmBase.hasUserDataPermission()
      Calls Location: RealmBase.java:936 RealmBase.java:937
      Atomic: NO

      Method: RealmBase.hasUserDataPermission()
      Calls Location: RealmBase.java:978 RealmBase.java:979
      Atomic: NO

      Method: RealmBase.init()
      Calls Location: RealmBase.java:1413 RealmBase.java:1414
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:466 RealmBase.java:467
      Atomic: NO

      Method: RealmBase.destroy()
      Calls Location: RealmBase.java:1105 RealmBase.java:1106
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:694 RealmBase.java:695
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:571 RealmBase.java:695
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:527 RealmBase.java:695
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:637 RealmBase.java:695
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:727 RealmBase.java:728
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:571 RealmBase.java:728
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:527 RealmBase.java:728
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:637 RealmBase.java:728
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:694 RealmBase.java:728
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:803
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:798
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:427 RealmBase.java:428
      Atomic: NO

      Method: RealmBase.init()
      Calls Location: RealmBase.java:1397 RealmBase.java:1398
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:460 RealmBase.java:461
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:456 RealmBase.java:461
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:571 RealmBase.java:572
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:527 RealmBase.java:572
      Atomic: NO

      Method: RealmBase.init()
      Calls Location: RealmBase.java:1397 RealmBase.java:1414
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:456 RealmBase.java:457
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:527 RealmBase.java:528
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:812
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:809
      Atomic: NO

      Method: RealmBase.hasRole()
      Calls Location: RealmBase.java:880 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:881
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasRole()
      Calls Location: RealmBase.java:880 RealmBase.java:889
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:791 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:792
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:637 RealmBase.java:638
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:571 RealmBase.java:638
      Atomic: NO

      Method: RealmBase.findSecurityConstraints()
      Calls Location: RealmBase.java:527 RealmBase.java:638
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:819 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:791 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:820
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:787
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:839 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:819 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:791 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:840
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:829 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:819 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:791 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:786 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:802 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:797 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:811 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.hasResourcePermission()
      Calls Location: RealmBase.java:808 RealmBase.java:830
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:456 RealmBase.java:1225
      Atomic: NO

      Method: RealmBase.authenticate()
      Calls Location: RealmBase.java:460 RealmBase.java:1225
      Atomic: NO

Checking class JAASCallbackHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringManager:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingContextBindingsEnumeration:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FileDirContext$FileResource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FileDirContext$FileResourceAttributes:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingContextEnumeration:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamingEntry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationContext$DispatchData:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationContextFacade:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationDispatcher:

  Verifying word isDebugEnabled debug:

      Method: ApplicationDispatcher.doForward()
      Calls Location: ApplicationDispatcher.java:386 ApplicationDispatcher.java:387
      Atomic: NO

      Method: ApplicationDispatcher.doForward()
      Calls Location: ApplicationDispatcher.java:378 ApplicationDispatcher.java:387
      Atomic: NO

      Method: ApplicationDispatcher.doForward()
      Calls Location: ApplicationDispatcher.java:378 ApplicationDispatcher.java:379
      Atomic: NO

Checking class Extension:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ManifestResource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NameParserImpl:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DefaultAnnotationProcessor$2:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DefaultAnnotationProcessor$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DefaultAnnotationProcessor$3:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DefaultAnnotationProcessor$4:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CacheEntry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ManagerBase:

  Verifying word isDebugEnabled debug:

      Method: ManagerBase.init()
      Calls Location: ManagerBase.java:621 ManagerBase.java:802
      Atomic: NO

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:621 ManagerBase.java:624
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:621 ManagerBase.java:1025
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:621 ManagerBase.java:557
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:621 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:621 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:621 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.getRandom()
      Calls Location: ManagerBase.java:621 ManagerBase.java:624
      Atomic: NO

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:350 ManagerBase.java:624
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:350 ManagerBase.java:1025
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:350 ManagerBase.java:557
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:350 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:350 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:350 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.getDigest()
      Calls Location: ManagerBase.java:350 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:347 ManagerBase.java:624
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:347 ManagerBase.java:1025
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:347 ManagerBase.java:557
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:347 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:347 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:347 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.processExpires()
      Calls Location: ManagerBase.java:742 ManagerBase.java:743
      Atomic: NO

      Method: ManagerBase.getDigest()
      Calls Location: ManagerBase.java:347 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.getDigest()
      Calls Location: ManagerBase.java:347 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:333 ManagerBase.java:624
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:333 ManagerBase.java:1025
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:333 ManagerBase.java:557
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:333 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:333 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:333 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.getRandomBytes()
      Calls Location: ManagerBase.java:556 ManagerBase.java:624
      Atomic: NO

      Method: ManagerBase.getRandomBytes()
      Calls Location: ManagerBase.java:556 ManagerBase.java:1025
      Atomic: NO

      Method: ManagerBase.init()
      Calls Location: ManagerBase.java:556 ManagerBase.java:802
      Atomic: NO

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:556 ManagerBase.java:624
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:556 ManagerBase.java:1025
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:556 ManagerBase.java:557
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:556 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:556 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:556 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.doSetRandomFile()
      Calls Location: ManagerBase.java:556 ManagerBase.java:557
      Atomic: NO

      Method: ManagerBase.getRandomBytes()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:624
      Atomic: NO

      Method: ManagerBase.getRandomBytes()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:1025
      Atomic: NO

      Method: ManagerBase.getDigest()
      Calls Location: ManagerBase.java:333 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.getDigest()
      Calls Location: ManagerBase.java:333 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.getDigest()
      Calls Location: ManagerBase.java:333 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.init()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:802
      Atomic: NO

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:624
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:1025
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:557
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:348
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:334
      Atomic: YES

      Method: ManagerBase.generateSessionId()
      Calls Location: ManagerBase.java:1024 ManagerBase.java:351
      Atomic: YES

      Method: ManagerBase.init()
      Calls Location: ManagerBase.java:801 ManagerBase.java:802
      Atomic: NO

      Method: ManagerBase.processExpires()
      Calls Location: ManagerBase.java:734 ManagerBase.java:735
      Atomic: NO

      Method: ManagerBase.processExpires()
      Calls Location: ManagerBase.java:734 ManagerBase.java:743
      Atomic: NO

Checking class StandardSession:

  Verifying word isDebugEnabled debug:

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1586 StandardSession.java:1587
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1595 StandardSession.java:1596
      Atomic: NO

      Method: StandardSession.readObject()
      Calls Location: StandardSession.java:1497 StandardSession.java:1498
      Atomic: NO

      Method: StandardSession.readObject()
      Calls Location: StandardSession.java:1512 StandardSession.java:1513
      Atomic: NO

      Method: StandardSession.readObject()
      Calls Location: StandardSession.java:1497 StandardSession.java:1513
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1558 StandardSession.java:1587
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1595 StandardSession.java:1587
      Atomic: NO

      Method: StandardSession.writeObject()
      Calls Location: StandardSession.java:1558 StandardSession.java:1559
      Atomic: NO

Checking class StandardManager$PrivilegedDoUnload:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class TooManyActiveSessionsException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CustomObjectInputStream:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardManager$PrivilegedDoLoad:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ImmutableNameNotFoundException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceAttributes:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class TldRuleSet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardWrapperFacade:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class InstanceSupport:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardWrapperValve:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DummyRequest:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DummyResponse:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardWrapper$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Constants:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContainerServlet:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class PeriodicEventListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DirContextURLConnection:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WARDirContext$Entry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WARDirContext$WARResource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class InstanceEvent:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ClientAbortException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Contained:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Reloader:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceEntry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WebappClassLoader$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResource:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class JndiPermission:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WebappClassLoader$PrivilegedFindResourceByName:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WebappClassLoader$PrivilegedGetClassLoader:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HostConfig$DeployedApplication:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class IOTools:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DOMException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Attr:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class TypeInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DocumentType:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DOMImplementation:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DOMConfiguration:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamedNodeMap:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UserDataHandler:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CharacterData:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResourceBase:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NotificationInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class OperationInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CharChunk$CharInputChannel:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CharChunk$CharOutputChannel:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ByteChunk$ByteInputChannel:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ByteChunk$ByteOutputChannel:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MessageBytes$MessageBytesFactory:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DateTool:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HexUtils:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StringManager$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SessionListener:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MimeHeaderField:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class NamesEnumerator:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ValuesEnumerator:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class C2BConverter:

  Verifying word isDebugEnabled debug:

      Method: C2BConverter.convert()
      Calls Location: C2BConverter.java:122 C2BConverter.java:123
      Atomic: NO

Checking class OutputBuffer$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResponseFacade$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResponseFacade$SetContentTypePrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ResponseFacade$DateHeaderPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class OutputBuffer:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ActionHook:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MediaType:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HttpParser:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ServerCookie$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SecurityUtil$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestGroupInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class IntermediateInputStream:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ReadConvertor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UserDataHelper:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UserDataHelper$Mode:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Parameters$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UDecoder$DecodeException:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class InputBuffer:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ContentType:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BIOCallback:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class PasswordCallback:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetHeadersPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetParameterNamesPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetRequestDispatcherPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetHeaderNamesPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetAttributePrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetLocalePrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetParameterValuePrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetParameterMapPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetSessionPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetLocalesPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetCharacterEncodingPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetCookiesPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RequestFacade$GetParameterPrivilegedAction:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class InputBuffer$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationFilterChain:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometFilter:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteInputStream$3:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteInputStream$4:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteInputStream$5:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteInputStream$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CoyoteInputStream$2:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SecurityRoleRef:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FeatureInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BaseNotificationBroadcaster:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BaseAttributeFilter:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BaseModelMBean$MethodKey:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DomUtil$NullResolver:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class MD5Encoder:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class X509UsernameRetriever:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RealmBase$AllRolesMode:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HexUtils:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class X509SubjectDnRetriever:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationContextFacade$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationDispatcher$State:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedForward:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationResponse:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationHttpRequest:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationRequest:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationHttpResponse:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationDispatcher$PrivilegedInclude:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ManagerBase$SessionTiming:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ManagerBase$PrivilegedSetRandomFile:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardSessionFacade:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardSession$PrivilegedSetTccl:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardSession$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class SessionEvent:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class StandardSessionContext:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class RecyclableNamingEnumeration:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DummyRequest$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometProcessor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class Constants:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class DOMStringList:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ParameterInfo:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LSResourceResolver:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class IntermediateOutputStream:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class WriteConvertor:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class HttpParser$SkipConstantResult:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class UserDataHelper$Config:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class CometFilterChain:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationFilterChain$2:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationFilterChain$1:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class FixedNotificationFilter:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class BaseNotificationBroadcasterEntry:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class ApplicationHttpRequest$AttributeNamesEnumerator:

  Verifying word isDebugEnabled debug:

    No occurrences

Checking class LSInput:

  Verifying word isDebugEnabled debug:

    No occurrences


Run Time:
                                .buildTree     183.772s
                                    .onLCA     502.115s
                         analysis-behavior       9.205s
                          analysis-threads       0.009s
                       build-parsing-table       3.035s
                       check-word-instance       0.088s
                               grammar-opt       0.486s
                        grammar-rm-epsilon       8.454s
                                   parsing    1176.106s
                                 soot-init     156.717s
                                     total    1957.054s

Profiling Vars:
                                 cfg-nodes      82652
                       grammar-productions       6989
                            parse-branches  218571811
                               parse-trees        948
                      parsing-table-states       6476
                                   threads          1
Warning: java.dyn.InvokeDynamic is a phantom class!
