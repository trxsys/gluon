Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexSearcher:

  Verifying word seekExact docs:

    No occurrences

Checking class Query:

  Verifying word seekExact docs:

    No occurrences

Checking class Analyzer:

  Verifying word seekExact docs:

    No occurrences

Checking class QueryParser:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexReader:

  Verifying word seekExact docs:

    No occurrences

Checking class ScoreDoc:

  Verifying word seekExact docs:

    No occurrences

Checking class Filter:

  Verifying word seekExact docs:

    No occurrences

Checking class Directory:

  Verifying word seekExact docs:

    No occurrences

Checking class Document:

  Verifying word seekExact docs:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word seekExact docs:

    No occurrences

Checking class FSDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class Version:

  Verifying word seekExact docs:

    No occurrences

Checking class DirectoryReader:

  Verifying word seekExact docs:

    No occurrences

Checking class TopDocs:

  Verifying word seekExact docs:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word seekExact docs:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word seekExact docs:

    No occurrences

Checking class TokenStream:

  Verifying word seekExact docs:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class ReusableStringReader:

  Verifying word seekExact docs:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexCommit:

  Verifying word seekExact docs:

    No occurrences

Checking class Fields:

  Verifying word seekExact docs:

    No occurrences

Checking class Terms:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexReaderContext:

  Verifying word seekExact docs:

    No occurrences

Checking class Term:

  Verifying word seekExact docs:

    No occurrences

Checking class AtomicReader:

  Verifying word seekExact docs:

      Method: AtomicReader.termDocsEnum()
      Calls Location: AtomicReader.java:172 AtomicReader.java:173
      Atomic: NO

Checking class DocumentStoredFieldVisitor:

  Verifying word seekExact docs:

    No occurrences

Checking class CompositeReader:

  Verifying word seekExact docs:

    No occurrences

Checking class DocIdSet:

  Verifying word seekExact docs:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word seekExact docs:

    No occurrences

Checking class Bits:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class IOContext:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class Lock:

  Verifying word seekExact docs:

    No occurrences

Checking class LockFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word seekExact docs:

    No occurrences

Checking class Directory$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DataInput:

  Verifying word seekExact docs:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class IOUtils:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class Similarity:

  Verifying word seekExact docs:

    No occurrences

Checking class Collector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldDocs:

  Verifying word seekExact docs:

    No occurrences

Checking class Sort:

  Verifying word seekExact docs:

    No occurrences

Checking class Weight:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldDoc:

  Verifying word seekExact docs:

    No occurrences

Checking class Explanation:

  Verifying word seekExact docs:

    No occurrences

Checking class TermStatistics:

  Verifying word seekExact docs:

    No occurrences

Checking class TermContext:

  Verifying word seekExact docs:

    No occurrences

Checking class CollectionStatistics:

  Verifying word seekExact docs:

    No occurrences

Checking class HitQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word seekExact docs:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery:

  Verifying word seekExact docs:

    No occurrences

Checking class SortField:

  Verifying word seekExact docs:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class ReaderUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word seekExact docs:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiFields:

  Verifying word seekExact docs:

      Method: MultiFields.getTermDocsEnum()
      Calls Location: MultiFields.java:154 MultiFields.java:155
      Atomic: NO

Checking class BytesRef:

  Verifying word seekExact docs:

    No occurrences

Checking class Scorer:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexableField:

  Verifying word seekExact docs:

    No occurrences

Checking class BaseDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class MMapDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word seekExact docs:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word seekExact docs:

    No occurrences

Checking class FSLockFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class FSDirectory$1:

  Verifying word seekExact docs:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class Constants:

  Verifying word seekExact docs:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word seekExact docs:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word seekExact docs:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfos:

  Verifying word seekExact docs:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word seekExact docs:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class PriorityQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class Tokenizer:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeSource:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class DocsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class BinaryDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfos:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word seekExact docs:

    No occurrences

Checking class TextField:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldType:

  Verifying word seekExact docs:

    No occurrences

Checking class Field:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredField:

  Verifying word seekExact docs:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word seekExact docs:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeScheduler:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word seekExact docs:

      Method: BufferedUpdatesStream.applyTermDeletes()
      Calls Location: BufferedUpdatesStream.java:414 BufferedUpdatesStream.java:416
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:414 BufferedUpdatesStream.java:505
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:414 BufferedUpdatesStream.java:416
      Atomic: YES

      Method: BufferedUpdatesStream.applyNumericDocValuesUpdates()
      Calls Location: BufferedUpdatesStream.java:503 BufferedUpdatesStream.java:505
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:503 BufferedUpdatesStream.java:505
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:503 BufferedUpdatesStream.java:416
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word seekExact docs:

    No occurrences

Checking class Codec:

  Verifying word seekExact docs:

    No occurrences

Checking class InfoStream:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word seekExact docs:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeState:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word seekExact docs:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericUpdate:

  Verifying word seekExact docs:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentReader:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexFileNames:

  Verifying word seekExact docs:

    No occurrences

Checking class FlushPolicy:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentMerger:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word seekExact docs:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word seekExact docs:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word seekExact docs:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Terms$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word seekExact docs:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word seekExact docs:

    No occurrences

Checking class DataOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class IOContext$Context:

  Verifying word seekExact docs:

    No occurrences

Checking class FlushInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class Lock$With:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word seekExact docs:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word seekExact docs:

    No occurrences

Checking class ToStringUtils:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word seekExact docs:

    No occurrences

Checking class SortField$Type:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class SortField$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class StringHelper:

  Verifying word seekExact docs:

    No occurrences

Checking class TopDocsCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word seekExact docs:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInvertState:

  Verifying word seekExact docs:

    No occurrences

Checking class SmallFloat:

  Verifying word seekExact docs:

    No occurrences

Checking class ReaderSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiTerms:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiBits:

  Verifying word seekExact docs:

    No occurrences

Checking class MergedIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class UnicodeUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class CharsRef:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word seekExact docs:

    No occurrences

Checking class ArrayUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word seekExact docs:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class TermState:

  Verifying word seekExact docs:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexableFieldType:

  Verifying word seekExact docs:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class NativeFSLock:

  Verifying word seekExact docs:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word seekExact docs:

    No occurrences

Checking class LucenePackage:

  Verifying word seekExact docs:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word seekExact docs:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word seekExact docs:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class CorruptIndexException:

  Verifying word seekExact docs:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word seekExact docs:

    No occurrences

Checking class CodecUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Tokenizer$1:

  Verifying word seekExact docs:

    No occurrences

Checking class CharFilter:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeSource$State:

  Verifying word seekExact docs:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeReflector:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeSource$1:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeSource$2:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsEnum$1:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsEnum$2:

  Verifying word seekExact docs:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Store:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Index:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$TermVector:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericTokenStream:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$1:

  Verifying word seekExact docs:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word seekExact docs:

    No occurrences

Checking class SetOnce:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word seekExact docs:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word seekExact docs:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word seekExact docs:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedUpdates:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word seekExact docs:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word seekExact docs:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word seekExact docs:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word seekExact docs:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word seekExact docs:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word seekExact docs:

    No occurrences

Checking class PostingsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class NormsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentWriteState:

  Verifying word seekExact docs:

    No occurrences

Checking class MutableBits:

  Verifying word seekExact docs:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FixedBitSet:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word seekExact docs:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word seekExact docs:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word seekExact docs:

    No occurrences

Checking class TermVectorsReader:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldsProducer:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesProducer:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentReader$2:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldInfosReader:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentReader$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word seekExact docs:

    No occurrences

Checking class CollectionUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word seekExact docs:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word seekExact docs:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word seekExact docs:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word seekExact docs:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word seekExact docs:

    No occurrences

Checking class NamedSPILoader:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldsConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class FilterDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class PagedMutable:

  Verifying word seekExact docs:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts:

  Verifying word seekExact docs:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word seekExact docs:

    No occurrences

Checking class Transition:

  Verifying word seekExact docs:

    No occurrences

Checking class IntsRef:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word seekExact docs:

    No occurrences

Checking class State:

  Verifying word seekExact docs:

    No occurrences

Checking class Automaton:

  Verifying word seekExact docs:

    No occurrences

Checking class BasicOperations:

  Verifying word seekExact docs:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class BasicAutomata:

  Verifying word seekExact docs:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word seekExact docs:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class SpecialOperations:

  Verifying word seekExact docs:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word seekExact docs:

    No occurrences

Checking class Document:

  Verifying word seekExact docs:

    No occurrences

Checking class Element:

  Verifying word seekExact docs:

    No occurrences

Checking class Node:

  Verifying word seekExact docs:

    No occurrences

Checking class NodeList:

  Verifying word seekExact docs:

    No occurrences

Checking class Text:

  Verifying word seekExact docs:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word seekExact docs:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word seekExact docs:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$10:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$8:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$9:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$6:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$7:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$4:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$5:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$2:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$3:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class StringHelper$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word seekExact docs:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word seekExact docs:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word seekExact docs:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word seekExact docs:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word seekExact docs:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word seekExact docs:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word seekExact docs:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word seekExact docs:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word seekExact docs:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word seekExact docs:

    No occurrences

Checking class OrdTermState:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class TypeAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericUtils:

  Verifying word seekExact docs:

    No occurrences

Checking class CharTermAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class OffsetAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Index$2:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Index$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Index$4:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Index$3:

  Verifying word seekExact docs:

    No occurrences

Checking class Field$Index$5:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word seekExact docs:

    No occurrences

Checking class DocConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class Counter:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word seekExact docs:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteBlockPool:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word seekExact docs:

    No occurrences

Checking class IntBlockPool:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word seekExact docs:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word seekExact docs:

    No occurrences

Checking class RAMFile:

  Verifying word seekExact docs:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word seekExact docs:

    No occurrences

Checking class RAMOutputStream:

  Verifying word seekExact docs:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word seekExact docs:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word seekExact docs:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentReadState:

  Verifying word seekExact docs:

    No occurrences

Checking class BitVector:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFields:

  Verifying word seekExact docs:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word seekExact docs:

    No occurrences

Checking class OpenBitSet:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class BitUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word seekExact docs:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word seekExact docs:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word seekExact docs:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word seekExact docs:

    No occurrences

Checking class RefCount:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word seekExact docs:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word seekExact docs:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word seekExact docs:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word seekExact docs:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word seekExact docs:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word seekExact docs:

    No occurrences

Checking class SPIClassIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Format:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Header:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class DirectPackedReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Direct64:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$2:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word seekExact docs:

    No occurrences

Checking class Direct32:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperation:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class Direct8:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Direct16:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class GrowableWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class LongValues:

  Verifying word seekExact docs:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word seekExact docs:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word seekExact docs:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word seekExact docs:

    No occurrences

Checking class RunAutomaton:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedIntSet:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word seekExact docs:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word seekExact docs:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word seekExact docs:

    No occurrences

Checking class StatePair:

  Verifying word seekExact docs:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word seekExact docs:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word seekExact docs:

    No occurrences

Checking class MinimizationOperations:

  Verifying word seekExact docs:

    No occurrences

Checking class Util:

  Verifying word seekExact docs:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word seekExact docs:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word seekExact docs:

    No occurrences

Checking class DOMException:

  Verifying word seekExact docs:

    No occurrences

Checking class Attr:

  Verifying word seekExact docs:

    No occurrences

Checking class TypeInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class DocumentType:

  Verifying word seekExact docs:

    No occurrences

Checking class DOMImplementation:

  Verifying word seekExact docs:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word seekExact docs:

    No occurrences

Checking class DOMConfiguration:

  Verifying word seekExact docs:

    No occurrences

Checking class NamedNodeMap:

  Verifying word seekExact docs:

    No occurrences

Checking class UserDataHandler:

  Verifying word seekExact docs:

    No occurrences

Checking class CharacterData:

  Verifying word seekExact docs:

    No occurrences

Checking class ComplexExplanation:

  Verifying word seekExact docs:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word seekExact docs:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word seekExact docs:

    No occurrences

Checking class DocTermOrds:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class BitsSlice:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class TimSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class IntroSorter:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word seekExact docs:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericUtils$2:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericUtils$1:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word seekExact docs:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word seekExact docs:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word seekExact docs:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word seekExact docs:

    No occurrences

Checking class DocInverter:

  Verifying word seekExact docs:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class NormsConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word seekExact docs:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word seekExact docs:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsHash:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word seekExact docs:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word seekExact docs:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word seekExact docs:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word seekExact docs:

    No occurrences

Checking class RAMInputStream:

  Verifying word seekExact docs:

    No occurrences

Checking class RAMDirectory:

  Verifying word seekExact docs:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class TermInfosReader:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word seekExact docs:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word seekExact docs:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word seekExact docs:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class PostingsConsumer:

  Verifying word seekExact docs:

    No occurrences

Checking class TermStats:

  Verifying word seekExact docs:

    No occurrences

Checking class LongsRef:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word seekExact docs:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperation$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word seekExact docs:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word seekExact docs:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word seekExact docs:

    No occurrences

Checking class Sorter:

  Verifying word seekExact docs:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word seekExact docs:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word seekExact docs:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word seekExact docs:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word seekExact docs:

    No occurrences

Checking class FST:

  Verifying word seekExact docs:

    No occurrences

Checking class FST$BytesReader:

  Verifying word seekExact docs:

    No occurrences

Checking class FST$Arc:

  Verifying word seekExact docs:

    No occurrences

Checking class Util$MinResult:

  Verifying word seekExact docs:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word seekExact docs:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word seekExact docs:

    No occurrences

Checking class Outputs:

  Verifying word seekExact docs:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word seekExact docs:

    No occurrences

Checking class Util$FSTPath:

  Verifying word seekExact docs:

    No occurrences

Checking class DOMStringList:

  Verifying word seekExact docs:

    No occurrences

Checking class PagedBytes:

  Verifying word seekExact docs:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word seekExact docs:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word seekExact docs:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsHashPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefHash:

  Verifying word seekExact docs:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word seekExact docs:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class DocInverterPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteSliceReader:

  Verifying word seekExact docs:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word seekExact docs:

    No occurrences

Checking class DocValuesWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word seekExact docs:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word seekExact docs:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word seekExact docs:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word seekExact docs:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word seekExact docs:

    No occurrences

Checking class TermInfo:

  Verifying word seekExact docs:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word seekExact docs:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word seekExact docs:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word seekExact docs:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesStore:

  Verifying word seekExact docs:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word seekExact docs:

    No occurrences

Checking class Builder$Arc:

  Verifying word seekExact docs:

    No occurrences

Checking class Builder:

  Verifying word seekExact docs:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word seekExact docs:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word seekExact docs:

    No occurrences

Checking class Builder$Node:

  Verifying word seekExact docs:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word seekExact docs:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word seekExact docs:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word seekExact docs:

    No occurrences

Checking class LSResourceResolver:

  Verifying word seekExact docs:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word seekExact docs:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word seekExact docs:

    No occurrences

Checking class MapOfSets:

  Verifying word seekExact docs:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word seekExact docs:

    No occurrences

Checking class PayloadAttribute:

  Verifying word seekExact docs:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word seekExact docs:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word seekExact docs:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word seekExact docs:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word seekExact docs:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word seekExact docs:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word seekExact docs:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word seekExact docs:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word seekExact docs:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word seekExact docs:

    No occurrences

Checking class TermBuffer:

  Verifying word seekExact docs:

    No occurrences

Checking class MathUtil:

  Verifying word seekExact docs:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word seekExact docs:

    No occurrences

Checking class NodeHash:

  Verifying word seekExact docs:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesStore$1:

  Verifying word seekExact docs:

    No occurrences

Checking class BytesStore$2:

  Verifying word seekExact docs:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word seekExact docs:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word seekExact docs:

    No occurrences

Checking class LSInput:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word seekExact docs:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word seekExact docs:

    No occurrences


Run Time:
                                .buildTree       0.024s
                                    .onLCA       0.152s
                         analysis-behavior       9.261s
                          analysis-threads       0.007s
                       build-parsing-table       0.114s
                       check-word-instance       0.002s
                               grammar-opt       1.472s
                        grammar-rm-epsilon       7.381s
                                   parsing       0.541s
                                 soot-init      76.723s
                                     total     139.479s

Profiling Vars:
                                 cfg-nodes     110243
                       grammar-productions       1423
                            parse-branches      89328
                               parse-trees          8
                      parsing-table-states       2110
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexSearcher:

  Verifying word isEnabled message:

    No occurrences

Checking class Query:

  Verifying word isEnabled message:

    No occurrences

Checking class Analyzer:

  Verifying word isEnabled message:

    No occurrences

Checking class QueryParser:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexReader:

  Verifying word isEnabled message:

    No occurrences

Checking class ScoreDoc:

  Verifying word isEnabled message:

    No occurrences

Checking class Filter:

  Verifying word isEnabled message:

    No occurrences

Checking class Directory:

  Verifying word isEnabled message:

    No occurrences

Checking class Document:

  Verifying word isEnabled message:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word isEnabled message:

    No occurrences

Checking class FSDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class Version:

  Verifying word isEnabled message:

    No occurrences

Checking class DirectoryReader:

  Verifying word isEnabled message:

    No occurrences

Checking class TopDocs:

  Verifying word isEnabled message:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word isEnabled message:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word isEnabled message:

    No occurrences

Checking class TokenStream:

  Verifying word isEnabled message:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class ReusableStringReader:

  Verifying word isEnabled message:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexWriter:

  Verifying word isEnabled message:

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3604
      Atomic: YES

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3536
      Atomic: YES

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3680
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3700
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3754
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3773
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3737
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3778
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3473 IndexWriter.java:3731
      Atomic: NO

    *** Timeout ***

Checking class IndexCommit:

  Verifying word isEnabled message:

    No occurrences

Checking class Fields:

  Verifying word isEnabled message:

    No occurrences

Checking class Terms:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexReaderContext:

  Verifying word isEnabled message:

    No occurrences

Checking class Term:

  Verifying word isEnabled message:

    No occurrences

Checking class AtomicReader:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word isEnabled message:

    No occurrences

Checking class CompositeReader:

  Verifying word isEnabled message:

    No occurrences

Checking class DocIdSet:

  Verifying word isEnabled message:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word isEnabled message:

    No occurrences

Checking class Bits:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class IOContext:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class Lock:

  Verifying word isEnabled message:

    No occurrences

Checking class LockFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word isEnabled message:

    No occurrences

Checking class Directory$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DataInput:

  Verifying word isEnabled message:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class IOUtils:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class Similarity:

  Verifying word isEnabled message:

    No occurrences

Checking class Collector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldDocs:

  Verifying word isEnabled message:

    No occurrences

Checking class Sort:

  Verifying word isEnabled message:

    No occurrences

Checking class Weight:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldDoc:

  Verifying word isEnabled message:

    No occurrences

Checking class Explanation:

  Verifying word isEnabled message:

    No occurrences

Checking class TermStatistics:

  Verifying word isEnabled message:

    No occurrences

Checking class TermContext:

  Verifying word isEnabled message:

    No occurrences

Checking class CollectionStatistics:

  Verifying word isEnabled message:

    No occurrences

Checking class HitQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word isEnabled message:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery:

  Verifying word isEnabled message:

    No occurrences

Checking class SortField:

  Verifying word isEnabled message:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class ReaderUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word isEnabled message:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiFields:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRef:

  Verifying word isEnabled message:

    No occurrences

Checking class Scorer:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexableField:

  Verifying word isEnabled message:

    No occurrences

Checking class BaseDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class MMapDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word isEnabled message:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word isEnabled message:

    No occurrences

Checking class FSLockFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class FSDirectory$1:

  Verifying word isEnabled message:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class Constants:

  Verifying word isEnabled message:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word isEnabled message:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word isEnabled message:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentInfos:

  Verifying word isEnabled message:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word isEnabled message:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class PriorityQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class Tokenizer:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeSource:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class DocsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class BinaryDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfos:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word isEnabled message:

    No occurrences

Checking class TextField:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldType:

  Verifying word isEnabled message:

    No occurrences

Checking class Field:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredField:

  Verifying word isEnabled message:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word isEnabled message:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriter:

  Verifying word isEnabled message:

      Method: DocumentsWriter.doFlush()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:622
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:361
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:369
      Atomic: NO

      Method: DocumentsWriter.updateDocuments()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.updateDocument()
      Calls Location: DocumentsWriter.java:559 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.updateDocuments()
      Calls Location: DocumentsWriter.java:368 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.updateDocument()
      Calls Location: DocumentsWriter.java:368 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.updateDocuments()
      Calls Location: DocumentsWriter.java:348 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.updateDocument()
      Calls Location: DocumentsWriter.java:348 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:368 DocumentsWriter.java:369
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:348 DocumentsWriter.java:349
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:348 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:359 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:359 DocumentsWriter.java:361
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:348 DocumentsWriter.java:361
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:359 DocumentsWriter.java:369
      Atomic: NO

      Method: DocumentsWriter.preUpdate()
      Calls Location: DocumentsWriter.java:348 DocumentsWriter.java:369
      Atomic: NO

      Method: DocumentsWriter.updateDocuments()
      Calls Location: DocumentsWriter.java:359 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.updateDocument()
      Calls Location: DocumentsWriter.java:359 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.abort()
      Calls Location: DocumentsWriter.java:231 DocumentsWriter.java:232
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:258 DocumentsWriter.java:259
      Atomic: YES

      Method: DocumentsWriter.unlockAllAfterAbortAll()
      Calls Location: DocumentsWriter.java:289 DocumentsWriter.java:290
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:258 DocumentsWriter.java:290
      Atomic: YES

      Method: DocumentsWriter.unlockAllAfterAbortAll()
      Calls Location: DocumentsWriter.java:300 DocumentsWriter.java:301
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:258 DocumentsWriter.java:301
      Atomic: YES

      Method: DocumentsWriter.anyChanges()
      Calls Location: DocumentsWriter.java:309 DocumentsWriter.java:310
      Atomic: NO

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:621 DocumentsWriter.java:622
      Atomic: NO

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:309 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:309 DocumentsWriter.java:622
      Atomic: NO

      Method: DocumentsWriter.abort()
      Calls Location: DocumentsWriter.java:231 DocumentsWriter.java:232
      Atomic: YES

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:595 DocumentsWriter.java:560
      Atomic: NO

      Method: DocumentsWriter.abort()
      Calls Location: DocumentsWriter.java:213 DocumentsWriter.java:214
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:239 DocumentsWriter.java:259
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:258 DocumentsWriter.java:290
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:239 DocumentsWriter.java:290
      Atomic: YES

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:595 DocumentsWriter.java:596
      Atomic: NO

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:258 DocumentsWriter.java:301
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:239 DocumentsWriter.java:301
      Atomic: YES

      Method: DocumentsWriter.finishFullFlush()
      Calls Location: DocumentsWriter.java:636 DocumentsWriter.java:637
      Atomic: NO

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:595 DocumentsWriter.java:310
      Atomic: NO

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:239 DocumentsWriter.java:240
      Atomic: YES

      Method: DocumentsWriter.flushAllThreads()
      Calls Location: DocumentsWriter.java:595 DocumentsWriter.java:622
      Atomic: NO

      Method: DocumentsWriter.abort()
      Calls Location: DocumentsWriter.java:213 DocumentsWriter.java:232
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:258 DocumentsWriter.java:259
      Atomic: YES

Checking class IndexFileDeleter:

  Verifying word isEnabled message:

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:466 IndexFileDeleter.java:468
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:466 IndexFileDeleter.java:283
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:466 IndexFileDeleter.java:596
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:466 IndexFileDeleter.java:511
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:466 IndexFileDeleter.java:582
      Atomic: NO

      Method: IndexFileDeleter.refresh()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:347
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:511
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:283
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:245
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:439
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:596
      Atomic: NO

      Method: IndexFileDeleter.deletePendingFiles()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:596
      Atomic: NO

      Method: IndexFileDeleter.refresh()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:596
      Atomic: NO

      Method: IndexFileDeleter.deleteNewFiles()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:596
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:582
      Atomic: NO

      Method: IndexFileDeleter.deletePendingFiles()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:582
      Atomic: NO

      Method: IndexFileDeleter.refresh()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:582
      Atomic: NO

      Method: IndexFileDeleter.deleteNewFiles()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:582
      Atomic: NO

      Method: IndexFileDeleter.deleteNewFiles()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:570
      Atomic: NO

      Method: IndexFileDeleter.deletePendingFiles()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:405
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:405
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:493
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:468
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:283
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:596
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:511
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:582
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:595 IndexFileDeleter.java:468
      Atomic: NO

    *** Timeout ***

Checking class MergePolicy:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeScheduler:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word isEnabled message:

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:316 BufferedUpdatesStream.java:317
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:255 BufferedUpdatesStream.java:317
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:305 BufferedUpdatesStream.java:317
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:305 BufferedUpdatesStream.java:306
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:255 BufferedUpdatesStream.java:306
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:255 BufferedUpdatesStream.java:256
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:305 BufferedUpdatesStream.java:256
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:359 BufferedUpdatesStream.java:360
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:165 BufferedUpdatesStream.java:166
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:171 BufferedUpdatesStream.java:317
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:171 BufferedUpdatesStream.java:306
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:339 BufferedUpdatesStream.java:340
      Atomic: YES

      Method: BufferedUpdatesStream.push()
      Calls Location: BufferedUpdatesStream.java:93 BufferedUpdatesStream.java:94
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:339 BufferedUpdatesStream.java:360
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:171 BufferedUpdatesStream.java:256
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:171 BufferedUpdatesStream.java:172
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word isEnabled message:

    No occurrences

Checking class Codec:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word isEnabled message:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeState:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word isEnabled message:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericUpdate:

  Verifying word isEnabled message:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentReader:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word isEnabled message:

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:537 DocumentsWriterFlushControl.java:538
      Atomic: NO

      Method: DocumentsWriterFlushControl.waitIfStalled()
      Calls Location: DocumentsWriterFlushControl.java:679 DocumentsWriterFlushControl.java:680
      Atomic: NO

      Method: DocumentsWriterFlushControl.addFlushableState()
      Calls Location: DocumentsWriterFlushControl.java:537 DocumentsWriterFlushControl.java:538
      Atomic: NO

Checking class IndexFileNames:

  Verifying word isEnabled message:

    No occurrences

Checking class FlushPolicy:

  Verifying word isEnabled message:

      Method: FlushPolicy.assertMessage()
      Calls Location: FlushPolicy.java:131 FlushPolicy.java:132
      Atomic: NO

Checking class SegmentInfoFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentMerger:

  Verifying word isEnabled message:

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:128 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:139 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:135 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:128 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:118 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:112 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:124 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:118 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:112 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:118 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:112 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:124 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:107 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:107 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:107 SegmentMerger.java:109
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:107 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:288 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:288 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:288 SegmentMerger.java:109
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:288 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:288 SegmentMerger.java:97
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:103 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:95 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:91 SegmentMerger.java:130
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:103 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:95 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:91 SegmentMerger.java:120
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:103 SegmentMerger.java:109
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:95 SegmentMerger.java:109
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:91 SegmentMerger.java:109
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:103 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:95 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:91 SegmentMerger.java:141
      Atomic: NO

      Method: SegmentMerger.setMatchingSegmentReaders()
      Calls Location: SegmentMerger.java:288 SegmentMerger.java:289
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:95 SegmentMerger.java:97
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:91 SegmentMerger.java:97
      Atomic: NO

Checking class MergeInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word isEnabled message:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word isEnabled message:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word isEnabled message:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Terms$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word isEnabled message:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word isEnabled message:

    No occurrences

Checking class DataOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class IOContext$Context:

  Verifying word isEnabled message:

    No occurrences

Checking class FlushInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class Lock$With:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word isEnabled message:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word isEnabled message:

    No occurrences

Checking class ToStringUtils:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word isEnabled message:

    No occurrences

Checking class SortField$Type:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class SortField$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class StringHelper:

  Verifying word isEnabled message:

    No occurrences

Checking class TopDocsCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word isEnabled message:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInvertState:

  Verifying word isEnabled message:

    No occurrences

Checking class SmallFloat:

  Verifying word isEnabled message:

    No occurrences

Checking class ReaderSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiTerms:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiBits:

  Verifying word isEnabled message:

    No occurrences

Checking class MergedIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class UnicodeUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class CharsRef:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word isEnabled message:

    No occurrences

Checking class ArrayUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word isEnabled message:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class TermState:

  Verifying word isEnabled message:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexableFieldType:

  Verifying word isEnabled message:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class NativeFSLock:

  Verifying word isEnabled message:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word isEnabled message:

    No occurrences

Checking class LucenePackage:

  Verifying word isEnabled message:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word isEnabled message:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word isEnabled message:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class CorruptIndexException:

  Verifying word isEnabled message:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word isEnabled message:

    No occurrences

Checking class CodecUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Tokenizer$1:

  Verifying word isEnabled message:

    No occurrences

Checking class CharFilter:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeSource$State:

  Verifying word isEnabled message:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeReflector:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeSource$1:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeSource$2:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsEnum$1:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsEnum$2:

  Verifying word isEnabled message:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Store:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Index:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$TermVector:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericTokenStream:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$1:

  Verifying word isEnabled message:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word isEnabled message:

    No occurrences

Checking class SetOnce:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word isEnabled message:

      Method: DocumentsWriterPerThread.abort()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.abort()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.sealFlushedSegment()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.sealFlushedSegment()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.abort()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:492
      Atomic: NO

      Method: DocumentsWriterPerThread.sealFlushedSegment()
      Calls Location: DocumentsWriterPerThread.java:554 DocumentsWriterPerThread.java:555
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:555
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.abort()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:490 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.sealFlushedSegment()
      Calls Location: DocumentsWriterPerThread.java:554 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:163 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:151 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:554 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:554 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:554 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:577 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:452 DocumentsWriterPerThread.java:453
      Atomic: NO

      Method: DocumentsWriterPerThread.testPoint()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:236
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:472
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:472
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:478
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:478
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:492
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:492
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:555
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:555
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:459
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:479
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:479
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:471
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:471
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:470 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:458 DocumentsWriterPerThread.java:578
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:152
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:164
      Atomic: NO

      Method: DocumentsWriterPerThread.updateDocument()
      Calls Location: DocumentsWriterPerThread.java:235 DocumentsWriterPerThread.java:164
      Atomic: NO

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word isEnabled message:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word isEnabled message:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedUpdates:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word isEnabled message:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word isEnabled message:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word isEnabled message:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word isEnabled message:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word isEnabled message:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word isEnabled message:

    No occurrences

Checking class PostingsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class NormsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentWriteState:

  Verifying word isEnabled message:

    No occurrences

Checking class MutableBits:

  Verifying word isEnabled message:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FixedBitSet:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word isEnabled message:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word isEnabled message:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word isEnabled message:

    No occurrences

Checking class TermVectorsReader:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldsProducer:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesProducer:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentReader$2:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldInfosReader:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentReader$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word isEnabled message:

    No occurrences

Checking class CollectionUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word isEnabled message:

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:613 TieredMergePolicy.java:617
      Atomic: NO

      Method: TieredMergePolicy.findForcedMerges()
      Calls Location: TieredMergePolicy.java:613 TieredMergePolicy.java:617
      Atomic: NO

      Method: TieredMergePolicy.findForcedDeletesMerges()
      Calls Location: TieredMergePolicy.java:613 TieredMergePolicy.java:617
      Atomic: NO

Checking class FlushByRamOrCountsPolicy:

  Verifying word isEnabled message:

      Method: FlushByRamOrCountsPolicy.onInsert()
      Calls Location: FlushByRamOrCountsPolicy.java:91 FlushByRamOrCountsPolicy.java:92
      Atomic: NO

      Method: FlushByRamOrCountsPolicy.onDelete()
      Calls Location: FlushByRamOrCountsPolicy.java:74 FlushByRamOrCountsPolicy.java:75
      Atomic: NO

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word isEnabled message:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word isEnabled message:

      Method: ConcurrentMergeScheduler.merge()
      Calls Location: ConcurrentMergeScheduler.java:239 ConcurrentMergeScheduler.java:247
      Atomic: YES

      Method: ConcurrentMergeScheduler.updateMergeThreads()
      Calls Location: ConcurrentMergeScheduler.java:239 ConcurrentMergeScheduler.java:247
      Atomic: YES

Checking class DocumentsWriterFlushQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word isEnabled message:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word isEnabled message:

    No occurrences

Checking class NamedSPILoader:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldsConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class FilterDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class PagedMutable:

  Verifying word isEnabled message:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts:

  Verifying word isEnabled message:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word isEnabled message:

    No occurrences

Checking class Transition:

  Verifying word isEnabled message:

    No occurrences

Checking class IntsRef:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word isEnabled message:

    No occurrences

Checking class State:

  Verifying word isEnabled message:

    No occurrences

Checking class Automaton:

  Verifying word isEnabled message:

    No occurrences

Checking class BasicOperations:

  Verifying word isEnabled message:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class BasicAutomata:

  Verifying word isEnabled message:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word isEnabled message:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class SpecialOperations:

  Verifying word isEnabled message:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word isEnabled message:

    No occurrences

Checking class Document:

  Verifying word isEnabled message:

    No occurrences

Checking class Element:

  Verifying word isEnabled message:

    No occurrences

Checking class Node:

  Verifying word isEnabled message:

    No occurrences

Checking class NodeList:

  Verifying word isEnabled message:

    No occurrences

Checking class Text:

  Verifying word isEnabled message:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word isEnabled message:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word isEnabled message:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$10:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$8:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$9:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$6:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$7:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$4:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$5:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$2:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$3:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class StringHelper$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word isEnabled message:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word isEnabled message:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word isEnabled message:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word isEnabled message:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word isEnabled message:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word isEnabled message:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word isEnabled message:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word isEnabled message:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word isEnabled message:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word isEnabled message:

    No occurrences

Checking class OrdTermState:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class TypeAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericUtils:

  Verifying word isEnabled message:

    No occurrences

Checking class CharTermAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class OffsetAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Index$2:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Index$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Index$4:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Index$3:

  Verifying word isEnabled message:

    No occurrences

Checking class Field$Index$5:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word isEnabled message:

    No occurrences

Checking class DocConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class Counter:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word isEnabled message:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteBlockPool:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word isEnabled message:

    No occurrences

Checking class IntBlockPool:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word isEnabled message:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word isEnabled message:

    No occurrences

Checking class RAMFile:

  Verifying word isEnabled message:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word isEnabled message:

    No occurrences

Checking class RAMOutputStream:

  Verifying word isEnabled message:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word isEnabled message:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word isEnabled message:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentReadState:

  Verifying word isEnabled message:

    No occurrences

Checking class BitVector:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFields:

  Verifying word isEnabled message:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word isEnabled message:

    No occurrences

Checking class OpenBitSet:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class BitUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word isEnabled message:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word isEnabled message:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word isEnabled message:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word isEnabled message:

    No occurrences

Checking class RefCount:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word isEnabled message:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word isEnabled message:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word isEnabled message:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word isEnabled message:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word isEnabled message:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word isEnabled message:

      Method: DocumentsWriterFlushQueue$FlushTicket.publishFlushedSegment()
      Calls Location: DocumentsWriterFlushQueue.java:194 DocumentsWriterFlushQueue.java:195
      Atomic: NO

      Method: DocumentsWriterFlushQueue$FlushTicket.finishFlush()
      Calls Location: DocumentsWriterFlushQueue.java:208 DocumentsWriterFlushQueue.java:209
      Atomic: NO

      Method: DocumentsWriterFlushQueue$FlushTicket.publishFlushedSegment()
      Calls Location: DocumentsWriterFlushQueue.java:190 DocumentsWriterFlushQueue.java:191
      Atomic: NO

      Method: DocumentsWriterFlushQueue$FlushTicket.publishFlushedSegment()
      Calls Location: DocumentsWriterFlushQueue.java:190 DocumentsWriterFlushQueue.java:195
      Atomic: NO

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word isEnabled message:

    No occurrences

Checking class SPIClassIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Format:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Header:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class DirectPackedReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Direct64:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$2:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word isEnabled message:

    No occurrences

Checking class Direct32:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperation:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class Direct8:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Direct16:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class GrowableWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class LongValues:

  Verifying word isEnabled message:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word isEnabled message:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word isEnabled message:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word isEnabled message:

    No occurrences

Checking class RunAutomaton:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedIntSet:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word isEnabled message:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word isEnabled message:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word isEnabled message:

    No occurrences

Checking class StatePair:

  Verifying word isEnabled message:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word isEnabled message:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word isEnabled message:

    No occurrences

Checking class MinimizationOperations:

  Verifying word isEnabled message:

    No occurrences

Checking class Util:

  Verifying word isEnabled message:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word isEnabled message:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word isEnabled message:

    No occurrences

Checking class DOMException:

  Verifying word isEnabled message:

    No occurrences

Checking class Attr:

  Verifying word isEnabled message:

    No occurrences

Checking class TypeInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class DocumentType:

  Verifying word isEnabled message:

    No occurrences

Checking class DOMImplementation:

  Verifying word isEnabled message:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word isEnabled message:

    No occurrences

Checking class DOMConfiguration:

  Verifying word isEnabled message:

    No occurrences

Checking class NamedNodeMap:

  Verifying word isEnabled message:

    No occurrences

Checking class UserDataHandler:

  Verifying word isEnabled message:

    No occurrences

Checking class CharacterData:

  Verifying word isEnabled message:

    No occurrences

Checking class ComplexExplanation:

  Verifying word isEnabled message:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word isEnabled message:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word isEnabled message:

    No occurrences

Checking class DocTermOrds:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class BitsSlice:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class TimSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class IntroSorter:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word isEnabled message:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericUtils$2:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericUtils$1:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word isEnabled message:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word isEnabled message:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word isEnabled message:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word isEnabled message:

      Method: DocFieldProcessor.processDocument()
      Calls Location: DocFieldProcessor.java:251 DocFieldProcessor.java:252
      Atomic: NO

Checking class DocInverter:

  Verifying word isEnabled message:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class NormsConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word isEnabled message:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word isEnabled message:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsHash:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word isEnabled message:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word isEnabled message:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word isEnabled message:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word isEnabled message:

    No occurrences

Checking class RAMInputStream:

  Verifying word isEnabled message:

    No occurrences

Checking class RAMDirectory:

  Verifying word isEnabled message:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class TermInfosReader:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word isEnabled message:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word isEnabled message:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word isEnabled message:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class PostingsConsumer:

  Verifying word isEnabled message:

    No occurrences

Checking class TermStats:

  Verifying word isEnabled message:

    No occurrences

Checking class LongsRef:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word isEnabled message:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperation$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word isEnabled message:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word isEnabled message:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word isEnabled message:

    No occurrences

Checking class Sorter:

  Verifying word isEnabled message:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word isEnabled message:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word isEnabled message:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word isEnabled message:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word isEnabled message:

    No occurrences

Checking class FST:

  Verifying word isEnabled message:

    No occurrences

Checking class FST$BytesReader:

  Verifying word isEnabled message:

    No occurrences

Checking class FST$Arc:

  Verifying word isEnabled message:

    No occurrences

Checking class Util$MinResult:

  Verifying word isEnabled message:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word isEnabled message:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word isEnabled message:

    No occurrences

Checking class Outputs:

  Verifying word isEnabled message:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word isEnabled message:

    No occurrences

Checking class Util$FSTPath:

  Verifying word isEnabled message:

    No occurrences

Checking class DOMStringList:

  Verifying word isEnabled message:

    No occurrences

Checking class PagedBytes:

  Verifying word isEnabled message:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word isEnabled message:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word isEnabled message:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsHashPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefHash:

  Verifying word isEnabled message:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word isEnabled message:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class DocInverterPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteSliceReader:

  Verifying word isEnabled message:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word isEnabled message:

    No occurrences

Checking class DocValuesWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word isEnabled message:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word isEnabled message:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word isEnabled message:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word isEnabled message:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word isEnabled message:

    No occurrences

Checking class TermInfo:

  Verifying word isEnabled message:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word isEnabled message:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word isEnabled message:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word isEnabled message:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesStore:

  Verifying word isEnabled message:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word isEnabled message:

    No occurrences

Checking class Builder$Arc:

  Verifying word isEnabled message:

    No occurrences

Checking class Builder:

  Verifying word isEnabled message:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word isEnabled message:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word isEnabled message:

    No occurrences

Checking class Builder$Node:

  Verifying word isEnabled message:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word isEnabled message:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word isEnabled message:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word isEnabled message:

    No occurrences

Checking class LSResourceResolver:

  Verifying word isEnabled message:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word isEnabled message:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word isEnabled message:

    No occurrences

Checking class MapOfSets:

  Verifying word isEnabled message:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word isEnabled message:

    No occurrences

Checking class PayloadAttribute:

  Verifying word isEnabled message:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word isEnabled message:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word isEnabled message:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word isEnabled message:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word isEnabled message:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word isEnabled message:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word isEnabled message:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word isEnabled message:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word isEnabled message:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word isEnabled message:

    No occurrences

Checking class TermBuffer:

  Verifying word isEnabled message:

    No occurrences

Checking class MathUtil:

  Verifying word isEnabled message:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word isEnabled message:

    No occurrences

Checking class NodeHash:

  Verifying word isEnabled message:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesStore$1:

  Verifying word isEnabled message:

    No occurrences

Checking class BytesStore$2:

  Verifying word isEnabled message:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word isEnabled message:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word isEnabled message:

    No occurrences

Checking class LSInput:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word isEnabled message:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word isEnabled message:

    No occurrences


Run Time:
                                .buildTree      91.521s
                                    .onLCA     250.527s
                         analysis-behavior      10.093s
                          analysis-threads       0.007s
                       build-parsing-table      13.113s
                       check-word-instance       0.022s
                               grammar-opt       1.288s
                        grammar-rm-epsilon       7.697s
                                   parsing     310.729s
                                 soot-init      81.875s
                                     total     752.009s

Profiling Vars:
                                 cfg-nodes     110268
                       grammar-productions       3331
                            parse-branches   86044220
                               parse-trees        225
                      parsing-table-states       4671
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word get put:

    No occurrences

Checking class IndexSearcher:

  Verifying word get put:

    No occurrences

Checking class Query:

  Verifying word get put:

    No occurrences

Checking class Analyzer:

  Verifying word get put:

    No occurrences

Checking class QueryParser:

  Verifying word get put:

    No occurrences

Checking class IndexReader:

  Verifying word get put:

    No occurrences

Checking class ScoreDoc:

  Verifying word get put:

    No occurrences

Checking class Filter:

  Verifying word get put:

    No occurrences

Checking class Directory:

  Verifying word get put:

    No occurrences

Checking class Document:

  Verifying word get put:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word get put:

    No occurrences

Checking class FSDirectory:

  Verifying word get put:

    No occurrences

Checking class Version:

  Verifying word get put:

    No occurrences

Checking class DirectoryReader:

  Verifying word get put:

    No occurrences

Checking class TopDocs:

  Verifying word get put:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word get put:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word get put:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word get put:

    No occurrences

Checking class TokenStream:

  Verifying word get put:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word get put:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word get put:

    No occurrences

Checking class ReusableStringReader:

  Verifying word get put:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word get put:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word get put:

    No occurrences

Checking class IndexWriter:

  Verifying word get put:

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2652 IndexWriter.java:2654
      Atomic: NO

Checking class IndexCommit:

  Verifying word get put:

    No occurrences

Checking class Fields:

  Verifying word get put:

    No occurrences

Checking class Terms:

  Verifying word get put:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word get put:

    No occurrences

Checking class IndexReaderContext:

  Verifying word get put:

    No occurrences

Checking class Term:

  Verifying word get put:

    No occurrences

Checking class AtomicReader:

  Verifying word get put:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word get put:

    No occurrences

Checking class CompositeReader:

  Verifying word get put:

    No occurrences

Checking class DocIdSet:

  Verifying word get put:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word get put:

    No occurrences

Checking class Bits:

  Verifying word get put:

    No occurrences

Checking class IndexOutput:

  Verifying word get put:

    No occurrences

Checking class IOContext:

  Verifying word get put:

    No occurrences

Checking class IndexInput:

  Verifying word get put:

    No occurrences

Checking class Lock:

  Verifying word get put:

    No occurrences

Checking class LockFactory:

  Verifying word get put:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word get put:

    No occurrences

Checking class Directory$1:

  Verifying word get put:

    No occurrences

Checking class DataInput:

  Verifying word get put:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word get put:

    No occurrences

Checking class IOUtils:

  Verifying word get put:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word get put:

    No occurrences

Checking class Similarity:

  Verifying word get put:

    No occurrences

Checking class Collector:

  Verifying word get put:

    No occurrences

Checking class TopFieldDocs:

  Verifying word get put:

    No occurrences

Checking class Sort:

  Verifying word get put:

    No occurrences

Checking class Weight:

  Verifying word get put:

    No occurrences

Checking class FieldDoc:

  Verifying word get put:

    No occurrences

Checking class Explanation:

  Verifying word get put:

    No occurrences

Checking class TermStatistics:

  Verifying word get put:

    No occurrences

Checking class TermContext:

  Verifying word get put:

    No occurrences

Checking class CollectionStatistics:

  Verifying word get put:

    No occurrences

Checking class HitQueue:

  Verifying word get put:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word get put:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery:

  Verifying word get put:

    No occurrences

Checking class SortField:

  Verifying word get put:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word get put:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector:

  Verifying word get put:

    No occurrences

Checking class ReaderUtil:

  Verifying word get put:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word get put:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word get put:

    No occurrences

Checking class MultiFields:

  Verifying word get put:

      Method: MultiFields.terms()
      Calls Location: MultiFields.java:211 MultiFields.java:236
      Atomic: NO

Checking class BytesRef:

  Verifying word get put:

    No occurrences

Checking class Scorer:

  Verifying word get put:

    No occurrences

Checking class IndexableField:

  Verifying word get put:

    No occurrences

Checking class BaseDirectory:

  Verifying word get put:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word get put:

    No occurrences

Checking class MMapDirectory:

  Verifying word get put:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word get put:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word get put:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word get put:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word get put:

    No occurrences

Checking class FSLockFactory:

  Verifying word get put:

    No occurrences

Checking class FSDirectory$1:

  Verifying word get put:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word get put:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word get put:

    No occurrences

Checking class Constants:

  Verifying word get put:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word get put:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word get put:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word get put:

    No occurrences

Checking class SegmentInfos:

  Verifying word get put:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word get put:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word get put:

    No occurrences

Checking class PriorityQueue:

  Verifying word get put:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word get put:

    No occurrences

Checking class Tokenizer:

  Verifying word get put:

    No occurrences

Checking class AttributeSource:

  Verifying word get put:

      Method: AttributeSource.cloneAttributes()
      Calls Location: AttributeSource.java:478 AttributeSource.java:478
      Atomic: NO

      Method: AttributeSource.addAttribute()
      Calls Location: AttributeSource.java:263 AttributeSource.java:250
      Atomic: NO

      Method: AttributeSource.addAttribute()
      Calls Location: AttributeSource.java:263 AttributeSource.java:251
      Atomic: NO

Checking class AttributeSource$AttributeFactory:

  Verifying word get put:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word get put:

    No occurrences

Checking class DocsEnum:

  Verifying word get put:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word get put:

    No occurrences

Checking class NumericDocValues:

  Verifying word get put:

    No occurrences

Checking class BinaryDocValues:

  Verifying word get put:

    No occurrences

Checking class SortedDocValues:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word get put:

    No occurrences

Checking class FieldInfos:

  Verifying word get put:

    No occurrences

Checking class FieldInfo:

  Verifying word get put:

    No occurrences

Checking class TermsEnum:

  Verifying word get put:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word get put:

    No occurrences

Checking class TextField:

  Verifying word get put:

    No occurrences

Checking class FieldType:

  Verifying word get put:

    No occurrences

Checking class Field:

  Verifying word get put:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word get put:

    No occurrences

Checking class StoredField:

  Verifying word get put:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word get put:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word get put:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word get put:

      Method: FieldInfos$FieldNumbers.setDocValuesType()
      Calls Location: FieldInfos.java:221 FieldInfos.java:248
      Atomic: YES

      Method: FieldInfos$FieldNumbers.setDocValuesType()
      Calls Location: FieldInfos.java:221 FieldInfos.java:248
      Atomic: YES

      Method: FieldInfos$FieldNumbers.addOrGet()
      Calls Location: FieldInfos.java:197 FieldInfos.java:212
      Atomic: YES

      Method: FieldInfos$FieldNumbers.setDocValuesType()
      Calls Location: FieldInfos.java:221 FieldInfos.java:248
      Atomic: YES

      Method: FieldInfos$FieldNumbers.setDocValuesType()
      Calls Location: FieldInfos.java:221 FieldInfos.java:248
      Atomic: YES

      Method: FieldInfos$FieldNumbers.addOrGet()
      Calls Location: FieldInfos.java:190 FieldInfos.java:192
      Atomic: YES

      Method: FieldInfos$FieldNumbers.addOrGet()
      Calls Location: FieldInfos.java:190 FieldInfos.java:212
      Atomic: YES

Checking class DocumentsWriter:

  Verifying word get put:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word get put:

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

      Method: IndexFileDeleter.decRef()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

      Method: IndexFileDeleter.decRef()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

      Method: IndexFileDeleter.incRef()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

      Method: IndexFileDeleter.incRef()
      Calls Location: IndexFileDeleter.java:545 IndexFileDeleter.java:543
      Atomic: NO

    *** Timeout ***

Checking class MergePolicy:

  Verifying word get put:

    No occurrences

Checking class MergeScheduler:

  Verifying word get put:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word get put:

      Method: IndexWriter$ReaderPool.get()
      Calls Location: IndexWriter.java:582 IndexWriter.java:589
      Atomic: YES

Checking class BufferedUpdatesStream:

  Verifying word get put:

      Method: BufferedUpdatesStream.applyNumericDocValuesUpdates()
      Calls Location: BufferedUpdatesStream.java:509 BufferedUpdatesStream.java:512
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:509 BufferedUpdatesStream.java:512
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word get put:

    No occurrences

Checking class Codec:

  Verifying word get put:

    No occurrences

Checking class InfoStream:

  Verifying word get put:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word get put:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word get put:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word get put:

    No occurrences

Checking class MergeState:

  Verifying word get put:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word get put:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word get put:

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:493 ReadersAndUpdates.java:495
      Atomic: YES

Checking class SegmentInfo:

  Verifying word get put:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word get put:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word get put:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word get put:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word get put:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word get put:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word get put:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word get put:

    No occurrences

Checking class NumericUpdate:

  Verifying word get put:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word get put:

    No occurrences

Checking class SegmentReader:

  Verifying word get put:

      Method: SegmentReader.getBinaryDocValues()
      Calls Location: SegmentReader.java:455 SegmentReader.java:458
      Atomic: NO

      Method: SegmentReader.getDocsWithField()
      Calls Location: SegmentReader.java:433 SegmentReader.java:436
      Atomic: NO

      Method: SegmentReader.getNumericDocValues()
      Calls Location: SegmentReader.java:406 SegmentReader.java:409
      Atomic: NO

      Method: SegmentReader.getSortedSetDocValues()
      Calls Location: SegmentReader.java:499 SegmentReader.java:502
      Atomic: NO

      Method: SegmentReader.getSortedDocValues()
      Calls Location: SegmentReader.java:477 SegmentReader.java:480
      Atomic: NO

      Method: SegmentReader.getSortedSetDocValues()
      Calls Location: SegmentReader.java:494 SegmentReader.java:502
      Atomic: NO

      Method: SegmentReader.getSortedDocValues()
      Calls Location: SegmentReader.java:472 SegmentReader.java:480
      Atomic: NO

      Method: SegmentReader.getBinaryDocValues()
      Calls Location: SegmentReader.java:450 SegmentReader.java:458
      Atomic: NO

      Method: SegmentReader.getDocsWithField()
      Calls Location: SegmentReader.java:428 SegmentReader.java:436
      Atomic: NO

      Method: SegmentReader.getNumericDocValues()
      Calls Location: SegmentReader.java:401 SegmentReader.java:409
      Atomic: NO

Checking class IndexWriterConfig$OpenMode:

  Verifying word get put:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word get put:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word get put:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word get put:

    No occurrences

Checking class IndexFileNames:

  Verifying word get put:

    No occurrences

Checking class FlushPolicy:

  Verifying word get put:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word get put:

    No occurrences

Checking class SegmentMerger:

  Verifying word get put:

    No occurrences

Checking class MergeInfo:

  Verifying word get put:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word get put:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word get put:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word get put:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word get put:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word get put:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word get put:

    No occurrences

Checking class Terms$1:

  Verifying word get put:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word get put:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word get put:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word get put:

    No occurrences

Checking class DataOutput:

  Verifying word get put:

    No occurrences

Checking class IOContext$Context:

  Verifying word get put:

    No occurrences

Checking class FlushInfo:

  Verifying word get put:

    No occurrences

Checking class Lock$With:

  Verifying word get put:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word get put:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word get put:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word get put:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word get put:

    No occurrences

Checking class ToStringUtils:

  Verifying word get put:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word get put:

    No occurrences

Checking class SortField$Type:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word get put:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word get put:

    No occurrences

Checking class FieldComparator:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word get put:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word get put:

    No occurrences

Checking class SortField$1:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word get put:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word get put:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word get put:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word get put:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word get put:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word get put:

    No occurrences

Checking class FieldCache:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word get put:

    No occurrences

Checking class StringHelper:

  Verifying word get put:

    No occurrences

Checking class TopDocsCollector:

  Verifying word get put:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word get put:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word get put:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word get put:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word get put:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word get put:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word get put:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word get put:

    No occurrences

Checking class FieldInvertState:

  Verifying word get put:

    No occurrences

Checking class SmallFloat:

  Verifying word get put:

    No occurrences

Checking class ReaderSlice:

  Verifying word get put:

    No occurrences

Checking class MultiTerms:

  Verifying word get put:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word get put:

    No occurrences

Checking class MultiBits:

  Verifying word get put:

    No occurrences

Checking class MergedIterator:

  Verifying word get put:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word get put:

    No occurrences

Checking class UnicodeUtil:

  Verifying word get put:

    No occurrences

Checking class CharsRef:

  Verifying word get put:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word get put:

    No occurrences

Checking class ArrayUtil:

  Verifying word get put:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word get put:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word get put:

    No occurrences

Checking class TermState:

  Verifying word get put:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word get put:

    No occurrences

Checking class IndexableFieldType:

  Verifying word get put:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word get put:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word get put:

    No occurrences

Checking class NativeFSLock:

  Verifying word get put:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word get put:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word get put:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word get put:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word get put:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word get put:

    No occurrences

Checking class LucenePackage:

  Verifying word get put:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word get put:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word get put:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word get put:

    No occurrences

Checking class CorruptIndexException:

  Verifying word get put:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word get put:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word get put:

    No occurrences

Checking class CodecUtil:

  Verifying word get put:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word get put:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word get put:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word get put:

    No occurrences

Checking class Tokenizer$1:

  Verifying word get put:

    No occurrences

Checking class CharFilter:

  Verifying word get put:

    No occurrences

Checking class AttributeSource$State:

  Verifying word get put:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word get put:

    No occurrences

Checking class AttributeImpl:

  Verifying word get put:

    No occurrences

Checking class AttributeReflector:

  Verifying word get put:

    No occurrences

Checking class AttributeSource$1:

  Verifying word get put:

    No occurrences

Checking class AttributeSource$2:

  Verifying word get put:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word get put:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word get put:

    No occurrences

Checking class BytesRefIterator:

  Verifying word get put:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word get put:

    No occurrences

Checking class TermsEnum$1:

  Verifying word get put:

    No occurrences

Checking class TermsEnum$2:

  Verifying word get put:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word get put:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word get put:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word get put:

    No occurrences

Checking class Field$Store:

  Verifying word get put:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word get put:

    No occurrences

Checking class Field$Index:

  Verifying word get put:

    No occurrences

Checking class Field$TermVector:

  Verifying word get put:

    No occurrences

Checking class NumericTokenStream:

  Verifying word get put:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word get put:

    No occurrences

Checking class Field$1:

  Verifying word get put:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word get put:

    No occurrences

Checking class SetOnce:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word get put:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word get put:

      Method: ThreadAffinityDocumentsWriterThreadPool.getAndLock()
      Calls Location: ThreadAffinityDocumentsWriterThreadPool.java:46 ThreadAffinityDocumentsWriterThreadPool.java:61
      Atomic: NO

Checking class PrintStreamInfoStream:

  Verifying word get put:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word get put:

    No occurrences

Checking class BufferedUpdates:

  Verifying word get put:

      Method: BufferedUpdates.addTerm()
      Calls Location: BufferedUpdates.java:165 BufferedUpdates.java:177
      Atomic: NO

      Method: BufferedUpdates.addNumericUpdate()
      Calls Location: BufferedUpdates.java:188 BufferedUpdates.java:191
      Atomic: NO

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word get put:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word get put:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word get put:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word get put:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word get put:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word get put:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word get put:

    No occurrences

Checking class PostingsFormat:

  Verifying word get put:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word get put:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word get put:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word get put:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word get put:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word get put:

    No occurrences

Checking class DocValuesFormat:

  Verifying word get put:

    No occurrences

Checking class NormsFormat:

  Verifying word get put:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word get put:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word get put:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word get put:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word get put:

    No occurrences

Checking class SegmentWriteState:

  Verifying word get put:

    No occurrences

Checking class MutableBits:

  Verifying word get put:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word get put:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word get put:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word get put:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word get put:

    No occurrences

Checking class FixedBitSet:

  Verifying word get put:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word get put:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word get put:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word get put:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word get put:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word get put:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word get put:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word get put:

      Method: SegmentCoreReaders.getNormValues()
      Calls Location: SegmentCoreReaders.java:157 SegmentCoreReaders.java:160
      Atomic: NO

Checking class SegmentDocValues:

  Verifying word get put:

      Method: SegmentDocValues.getDocValuesProducer()
      Calls Location: SegmentDocValues.java:66 SegmentDocValues.java:70
      Atomic: YES

Checking class StoredFieldsReader:

  Verifying word get put:

    No occurrences

Checking class TermVectorsReader:

  Verifying word get put:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word get put:

    No occurrences

Checking class FieldsProducer:

  Verifying word get put:

    No occurrences

Checking class DocValuesProducer:

  Verifying word get put:

    No occurrences

Checking class SegmentReader$2:

  Verifying word get put:

    No occurrences

Checking class FieldInfosReader:

  Verifying word get put:

    No occurrences

Checking class SegmentReader$1:

  Verifying word get put:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word get put:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word get put:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word get put:

    No occurrences

Checking class CollectionUtil:

  Verifying word get put:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word get put:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word get put:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word get put:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word get put:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word get put:

    No occurrences

Checking class NamedSPILoader:

  Verifying word get put:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word get put:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word get put:

    No occurrences

Checking class FieldsConsumer:

  Verifying word get put:

    No occurrences

Checking class FilterDirectory:

  Verifying word get put:

    No occurrences

Checking class PagedMutable:

  Verifying word get put:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word get put:

    No occurrences

Checking class PackedInts:

  Verifying word get put:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word get put:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word get put:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word get put:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word get put:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word get put:

    No occurrences

Checking class Transition:

  Verifying word get put:

    No occurrences

Checking class IntsRef:

  Verifying word get put:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word get put:

    No occurrences

Checking class State:

  Verifying word get put:

    No occurrences

Checking class Automaton:

  Verifying word get put:

    No occurrences

Checking class BasicOperations:

  Verifying word get put:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word get put:

    No occurrences

Checking class BasicAutomata:

  Verifying word get put:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word get put:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word get put:

    No occurrences

Checking class SpecialOperations:

  Verifying word get put:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word get put:

    No occurrences

Checking class Document:

  Verifying word get put:

    No occurrences

Checking class Element:

  Verifying word get put:

    No occurrences

Checking class Node:

  Verifying word get put:

    No occurrences

Checking class NodeList:

  Verifying word get put:

    No occurrences

Checking class Text:

  Verifying word get put:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word get put:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word get put:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word get put:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word get put:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word get put:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word get put:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word get put:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word get put:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word get put:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word get put:

    No occurrences

Checking class FieldCache$10:

  Verifying word get put:

    No occurrences

Checking class FieldCache$8:

  Verifying word get put:

    No occurrences

Checking class FieldCache$9:

  Verifying word get put:

    No occurrences

Checking class FieldCache$6:

  Verifying word get put:

    No occurrences

Checking class FieldCache$7:

  Verifying word get put:

    No occurrences

Checking class FieldCache$4:

  Verifying word get put:

    No occurrences

Checking class FieldCache$5:

  Verifying word get put:

    No occurrences

Checking class FieldCache$2:

  Verifying word get put:

    No occurrences

Checking class FieldCache$3:

  Verifying word get put:

    No occurrences

Checking class FieldCache$1:

  Verifying word get put:

    No occurrences

Checking class StringHelper$1:

  Verifying word get put:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word get put:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word get put:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word get put:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word get put:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word get put:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word get put:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word get put:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word get put:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word get put:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word get put:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word get put:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word get put:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word get put:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word get put:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word get put:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word get put:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word get put:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word get put:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word get put:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word get put:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word get put:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word get put:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word get put:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word get put:

    No occurrences

Checking class OrdTermState:

  Verifying word get put:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word get put:

    No occurrences

Checking class TypeAttribute:

  Verifying word get put:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word get put:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word get put:

    No occurrences

Checking class NumericUtils:

  Verifying word get put:

    No occurrences

Checking class CharTermAttribute:

  Verifying word get put:

    No occurrences

Checking class OffsetAttribute:

  Verifying word get put:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word get put:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word get put:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word get put:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word get put:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word get put:

    No occurrences

Checking class Field$Index$2:

  Verifying word get put:

    No occurrences

Checking class Field$Index$1:

  Verifying word get put:

    No occurrences

Checking class Field$Index$4:

  Verifying word get put:

    No occurrences

Checking class Field$Index$3:

  Verifying word get put:

    No occurrences

Checking class Field$Index$5:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word get put:

    No occurrences

Checking class DocConsumer:

  Verifying word get put:

    No occurrences

Checking class Counter:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word get put:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word get put:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word get put:

    No occurrences

Checking class ByteBlockPool:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word get put:

    No occurrences

Checking class IntBlockPool:

  Verifying word get put:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word get put:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word get put:

    No occurrences

Checking class RAMFile:

  Verifying word get put:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word get put:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word get put:

    No occurrences

Checking class RAMOutputStream:

  Verifying word get put:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word get put:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word get put:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word get put:

    No occurrences

Checking class SegmentReadState:

  Verifying word get put:

    No occurrences

Checking class BitVector:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word get put:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFields:

  Verifying word get put:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word get put:

    No occurrences

Checking class OpenBitSet:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues:

  Verifying word get put:

    No occurrences

Checking class BitUtil:

  Verifying word get put:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word get put:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word get put:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word get put:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word get put:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word get put:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word get put:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word get put:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word get put:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word get put:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word get put:

    No occurrences

Checking class RefCount:

  Verifying word get put:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word get put:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word get put:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word get put:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word get put:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word get put:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word get put:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word get put:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word get put:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word get put:

    No occurrences

Checking class SPIClassIterator:

  Verifying word get put:

    No occurrences

Checking class TermsConsumer:

  Verifying word get put:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Format:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Header:

  Verifying word get put:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word get put:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word get put:

    No occurrences

Checking class DirectPackedReader:

  Verifying word get put:

    No occurrences

Checking class Packed64:

  Verifying word get put:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word get put:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word get put:

    No occurrences

Checking class PackedInts$1:

  Verifying word get put:

    No occurrences

Checking class Direct64:

  Verifying word get put:

    No occurrences

Checking class PackedInts$2:

  Verifying word get put:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word get put:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word get put:

    No occurrences

Checking class Direct32:

  Verifying word get put:

    No occurrences

Checking class BulkOperation:

  Verifying word get put:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word get put:

    No occurrences

Checking class Direct8:

  Verifying word get put:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word get put:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word get put:

    No occurrences

Checking class Direct16:

  Verifying word get put:

    No occurrences

Checking class PackedWriter:

  Verifying word get put:

    No occurrences

Checking class GrowableWriter:

  Verifying word get put:

    No occurrences

Checking class LongValues:

  Verifying word get put:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word get put:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word get put:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word get put:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word get put:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word get put:

    No occurrences

Checking class RunAutomaton:

  Verifying word get put:

    No occurrences

Checking class SortedIntSet:

  Verifying word get put:

      Method: SortedIntSet.incr()
      Calls Location: SortedIntSet.java:53 SortedIntSet.java:55
      Atomic: NO

      Method: SortedIntSet.decr()
      Calls Location: SortedIntSet.java:103 SortedIntSet.java:107
      Atomic: NO

Checking class SortedIntSet$FrozenIntSet:

  Verifying word get put:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word get put:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word get put:

    No occurrences

Checking class StatePair:

  Verifying word get put:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word get put:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word get put:

    No occurrences

Checking class MinimizationOperations:

  Verifying word get put:

    No occurrences

Checking class Util:

  Verifying word get put:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word get put:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word get put:

    No occurrences

Checking class DOMException:

  Verifying word get put:

    No occurrences

Checking class Attr:

  Verifying word get put:

    No occurrences

Checking class TypeInfo:

  Verifying word get put:

    No occurrences

Checking class DocumentType:

  Verifying word get put:

    No occurrences

Checking class DOMImplementation:

  Verifying word get put:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word get put:

    No occurrences

Checking class DOMConfiguration:

  Verifying word get put:

    No occurrences

Checking class NamedNodeMap:

  Verifying word get put:

    No occurrences

Checking class UserDataHandler:

  Verifying word get put:

    No occurrences

Checking class CharacterData:

  Verifying word get put:

    No occurrences

Checking class ComplexExplanation:

  Verifying word get put:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word get put:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word get put:

      Method: FieldCacheImpl$Cache.put()
      Calls Location: FieldCacheImpl.java:178 FieldCacheImpl.java:179
      Atomic: YES

      Method: FieldCacheImpl$Cache.get()
      Calls Location: FieldCacheImpl.java:200 FieldCacheImpl.java:204
      Atomic: YES

      Method: FieldCacheImpl$Cache.get()
      Calls Location: FieldCacheImpl.java:192 FieldCacheImpl.java:204
      Atomic: YES

      Method: FieldCacheImpl$Cache.put()
      Calls Location: FieldCacheImpl.java:171 FieldCacheImpl.java:175
      Atomic: YES

      Method: FieldCacheImpl$Cache.put()
      Calls Location: FieldCacheImpl.java:171 FieldCacheImpl.java:179
      Atomic: YES

      Method: FieldCacheImpl$Cache.get()
      Calls Location: FieldCacheImpl.java:192 FieldCacheImpl.java:196
      Atomic: YES

      Method: FieldCacheImpl$Cache.get()
      Calls Location: FieldCacheImpl.java:192 FieldCacheImpl.java:213
      Atomic: NO

      Method: FieldCacheImpl$Cache.get()
      Calls Location: FieldCacheImpl.java:200 FieldCacheImpl.java:213
      Atomic: NO

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word get put:

    No occurrences

Checking class DocTermOrds:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word get put:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word get put:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word get put:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word get put:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word get put:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word get put:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word get put:

    No occurrences

Checking class BitsSlice:

  Verifying word get put:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word get put:

    No occurrences

Checking class TimSorter:

  Verifying word get put:

    No occurrences

Checking class IntroSorter:

  Verifying word get put:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word get put:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word get put:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word get put:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word get put:

    No occurrences

Checking class NumericUtils$2:

  Verifying word get put:

    No occurrences

Checking class NumericUtils$1:

  Verifying word get put:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word get put:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word get put:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word get put:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word get put:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word get put:

    No occurrences

Checking class DocInverter:

  Verifying word get put:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word get put:

    No occurrences

Checking class NormsConsumer:

  Verifying word get put:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word get put:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word get put:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word get put:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word get put:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word get put:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word get put:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word get put:

    No occurrences

Checking class TermsHash:

  Verifying word get put:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word get put:

      Method: DocValuesProcessor.addSortedField()
      Calls Location: DocValuesProcessor.java:115 DocValuesProcessor.java:119
      Atomic: NO

      Method: DocValuesProcessor.addBinaryField()
      Calls Location: DocValuesProcessor.java:101 DocValuesProcessor.java:105
      Atomic: NO

      Method: DocValuesProcessor.addSortedSetField()
      Calls Location: DocValuesProcessor.java:129 DocValuesProcessor.java:133
      Atomic: NO

      Method: DocValuesProcessor.addNumericField()
      Calls Location: DocValuesProcessor.java:143 DocValuesProcessor.java:147
      Atomic: NO

Checking class IntBlockPool$SliceWriter:

  Verifying word get put:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word get put:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word get put:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word get put:

    No occurrences

Checking class RAMInputStream:

  Verifying word get put:

    No occurrences

Checking class RAMDirectory:

  Verifying word get put:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word get put:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word get put:

    No occurrences

Checking class TermInfosReader:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word get put:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word get put:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word get put:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word get put:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word get put:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word get put:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word get put:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word get put:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word get put:

    No occurrences

Checking class PostingsConsumer:

  Verifying word get put:

    No occurrences

Checking class TermStats:

  Verifying word get put:

    No occurrences

Checking class LongsRef:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word get put:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word get put:

    No occurrences

Checking class BulkOperation$1:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word get put:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word get put:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word get put:

    No occurrences

Checking class Sorter:

  Verifying word get put:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word get put:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word get put:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word get put:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word get put:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word get put:

    No occurrences

Checking class FST:

  Verifying word get put:

    No occurrences

Checking class FST$BytesReader:

  Verifying word get put:

    No occurrences

Checking class FST$Arc:

  Verifying word get put:

    No occurrences

Checking class Util$MinResult:

  Verifying word get put:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word get put:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word get put:

    No occurrences

Checking class Outputs:

  Verifying word get put:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word get put:

    No occurrences

Checking class Util$FSTPath:

  Verifying word get put:

    No occurrences

Checking class DOMStringList:

  Verifying word get put:

    No occurrences

Checking class PagedBytes:

  Verifying word get put:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word get put:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word get put:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word get put:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word get put:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word get put:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word get put:

    No occurrences

Checking class TermsHashPerField:

  Verifying word get put:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word get put:

    No occurrences

Checking class BytesRefHash:

  Verifying word get put:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word get put:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word get put:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word get put:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word get put:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word get put:

    No occurrences

Checking class DocInverterPerField:

  Verifying word get put:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word get put:

    No occurrences

Checking class ByteSliceReader:

  Verifying word get put:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word get put:

    No occurrences

Checking class DocValuesWriter:

  Verifying word get put:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word get put:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word get put:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word get put:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word get put:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word get put:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word get put:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word get put:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word get put:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word get put:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word get put:

      Method: DoubleBarrelLRUCache.get()
      Calls Location: DoubleBarrelLRUCache.java:82 DoubleBarrelLRUCache.java:101
      Atomic: NO

      Method: DoubleBarrelLRUCache.get()
      Calls Location: DoubleBarrelLRUCache.java:79 DoubleBarrelLRUCache.java:101
      Atomic: NO

Checking class TermInfosReader$ThreadResources:

  Verifying word get put:

    No occurrences

Checking class TermInfo:

  Verifying word get put:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word get put:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word get put:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word get put:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word get put:

    No occurrences

Checking class BytesStore:

  Verifying word get put:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word get put:

    No occurrences

Checking class Builder$Arc:

  Verifying word get put:

    No occurrences

Checking class Builder:

  Verifying word get put:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word get put:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word get put:

    No occurrences

Checking class Builder$Node:

  Verifying word get put:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word get put:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word get put:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word get put:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word get put:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word get put:

    No occurrences

Checking class LSResourceResolver:

  Verifying word get put:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word get put:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word get put:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word get put:

    No occurrences

Checking class MapOfSets:

  Verifying word get put:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word get put:

    No occurrences

Checking class PayloadAttribute:

  Verifying word get put:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word get put:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word get put:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word get put:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word get put:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word get put:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word get put:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word get put:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word get put:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word get put:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word get put:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word get put:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word get put:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word get put:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word get put:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word get put:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word get put:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word get put:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word get put:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word get put:

    No occurrences

Checking class TermBuffer:

  Verifying word get put:

    No occurrences

Checking class MathUtil:

  Verifying word get put:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word get put:

    No occurrences

Checking class NodeHash:

  Verifying word get put:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word get put:

    No occurrences

Checking class BytesStore$1:

  Verifying word get put:

    No occurrences

Checking class BytesStore$2:

  Verifying word get put:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word get put:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word get put:

    No occurrences

Checking class LSInput:

  Verifying word get put:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word get put:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word get put:

    No occurrences


Run Time:
                                .buildTree       7.840s
                                    .onLCA      36.684s
                         analysis-behavior      10.496s
                          analysis-threads       0.008s
                       build-parsing-table       0.299s
                       check-word-instance       0.005s
                               grammar-opt       1.368s
                        grammar-rm-epsilon       8.803s
                                   parsing     259.827s
                                 soot-init      78.184s
                                     total     442.747s

Profiling Vars:
                                 cfg-nodes     110298
                       grammar-productions       2740
                            parse-branches   34316562
                               parse-trees         54
                      parsing-table-states       3415
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexSearcher:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Query:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Analyzer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class QueryParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ScoreDoc:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Filter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Document:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FSDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Version:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DirectoryReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopDocs:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TokenStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReusableStringReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexWriter:

  Verifying word deleteFile deleteFile:

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2751
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2751
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2471
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2453
      Atomic: NO

      Method: IndexWriter.createCompoundFile()
      Calls Location: IndexWriter.java:4609 IndexWriter.java:4613
      Atomic: NO

      Method: IndexWriter.copySegmentAsIs()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2751
      Atomic: NO

      Method: IndexWriter.createCompoundFile()
      Calls Location: IndexWriter.java:4609 IndexWriter.java:4613
      Atomic: NO

      Method: IndexWriter.createCompoundFile()
      Calls Location: IndexWriter.java:4609 IndexWriter.java:4613
      Atomic: NO

      Method: IndexWriter.createCompoundFile()
      Calls Location: IndexWriter.java:4609 IndexWriter.java:4613
      Atomic: NO

      Method: IndexWriter.createCompoundFile()
      Calls Location: IndexWriter.java:4609 IndexWriter.java:4613
      Atomic: NO

      Method: IndexWriter.createCompoundFile()
      Calls Location: IndexWriter.java:4609 IndexWriter.java:4613
      Atomic: NO

      Method: IndexWriter.copySegmentAsIs()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2751
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2471 IndexWriter.java:2471
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2453 IndexWriter.java:2471
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2453 IndexWriter.java:2453
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2751
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2751
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2471
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2751 IndexWriter.java:2453
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2471 IndexWriter.java:2471
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:2453 IndexWriter.java:2453
      Atomic: NO

Checking class IndexCommit:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Fields:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Terms:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexReaderContext:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Term:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AtomicReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompositeReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocIdSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Bits:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IOContext:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lock:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LockFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Directory$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DataInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IOUtils:

  Verifying word deleteFile deleteFile:

      Method: IOUtils.deleteFilesIgnoringExceptions()
      Calls Location: IOUtils.java:321 IOUtils.java:321
      Atomic: NO

Checking class IndexSearcher$LeafSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Similarity:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Collector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldDocs:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Sort:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Weight:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldDoc:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Explanation:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermStatistics:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermContext:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CollectionStatistics:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class HitQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReaderUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiFields:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRef:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Scorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexableField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BaseDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MMapDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FSLockFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FSDirectory$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Constants:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentInfos:

  Verifying word deleteFile deleteFile:

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:569
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:507
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:498
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:569
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:569
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:507
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:498
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:569
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:569 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:507
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:498
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:507 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:507 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:507 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.finishCommit()
      Calls Location: SegmentInfos.java:1015 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:507 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:507 SegmentInfos.java:281
      Atomic: NO

      Method: SegmentInfos.commit()
      Calls Location: SegmentInfos.java:507 SegmentInfos.java:1015
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:498
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:498 SegmentInfos.java:507
      Atomic: NO

Checking class TopDocs$ShardRef:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PriorityQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Tokenizer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeSource:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BinaryDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfos:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TextField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldType:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word deleteFile deleteFile:

      Method: IndexFileDeleter.deletePendingFiles()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.decRef()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.close()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.decRef()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.refresh()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.deleteFiles()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

      Method: IndexFileDeleter.deleteNewFiles()
      Calls Location: IndexFileDeleter.java:584 IndexFileDeleter.java:584
      Atomic: NO

Checking class MergePolicy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeScheduler:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Codec:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InfoStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word deleteFile deleteFile:

      Method: ReadersAndUpdates.writeLiveDocs()
      Calls Location: ReadersAndUpdates.java:331 ReadersAndUpdates.java:331
      Atomic: YES

      Method: ReadersAndUpdates.writeLiveDocs()
      Calls Location: ReadersAndUpdates.java:331 ReadersAndUpdates.java:331
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:481 ReadersAndUpdates.java:481
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:481 ReadersAndUpdates.java:481
      Atomic: YES

Checking class SegmentInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericUpdate:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexFileNames:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FlushPolicy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentMerger:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Terms$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DataOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IOContext$Context:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FlushInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lock$With:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ToStringUtils:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortField$Type:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortField$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StringHelper:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopDocsCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInvertState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SmallFloat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReaderSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiTerms:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiBits:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergedIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class UnicodeUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CharsRef:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ArrayUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexableFieldType:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NativeFSLock:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LucenePackage:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CorruptIndexException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CodecUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Tokenizer$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CharFilter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeSource$State:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeReflector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeSource$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeSource$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsEnum$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsEnum$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Store:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Index:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$TermVector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericTokenStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SetOnce:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedUpdates:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PostingsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NormsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentWriteState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MutableBits:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FixedBitSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word deleteFile deleteFile:

      Method: CompoundFileWriter.prunePendingEntries()
      Calls Location: CompoundFileWriter.java:195 CompoundFileWriter.java:195
      Atomic: NO

      Method: CompoundFileWriter.prunePendingEntries()
      Calls Location: CompoundFileWriter.java:195 CompoundFileWriter.java:195
      Atomic: NO

      Method: CompoundFileWriter.prunePendingEntries()
      Calls Location: CompoundFileWriter.java:195 CompoundFileWriter.java:195
      Atomic: NO

      Method: CompoundFileWriter.prunePendingEntries()
      Calls Location: CompoundFileWriter.java:195 CompoundFileWriter.java:195
      Atomic: NO

Checking class CompoundFileDirectory$FileEntry:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermVectorsReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldsProducer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesProducer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentReader$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldInfosReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentReader$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CollectionUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NamedSPILoader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldsConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilterDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PagedMutable:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Transition:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntsRef:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class State:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Automaton:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BasicOperations:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BasicAutomata:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SpecialOperations:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Document:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Element:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Node:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NodeList:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Text:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$10:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$8:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$9:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$6:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$7:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StringHelper$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class OrdTermState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TypeAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericUtils:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CharTermAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class OffsetAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Index$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Index$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Index$4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Index$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Field$Index$5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Counter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteBlockPool:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntBlockPool:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RAMFile:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RAMOutputStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentReadState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BitVector:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFields:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class OpenBitSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BitUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RefCount:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SPIClassIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Format:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Header:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DirectPackedReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Direct64:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Direct32:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperation:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Direct8:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Direct16:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class GrowableWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LongValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RunAutomaton:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedIntSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StatePair:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MinimizationOperations:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Util:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DOMException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Attr:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TypeInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocumentType:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DOMImplementation:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DOMConfiguration:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NamedNodeMap:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class UserDataHandler:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CharacterData:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ComplexExplanation:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocTermOrds:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BitsSlice:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TimSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntroSorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericUtils$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericUtils$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocInverter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NormsConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsHash:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RAMInputStream:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class RAMDirectory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermInfosReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PostingsConsumer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermStats:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LongsRef:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperation$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Sorter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST$BytesReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST$Arc:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Util$MinResult:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Outputs:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Util$FSTPath:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DOMStringList:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PagedBytes:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsHashPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefHash:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocInverterPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteSliceReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DocValuesWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermInfo:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesStore:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Builder$Arc:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Builder:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Builder$Node:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LSResourceResolver:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MapOfSets:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class PayloadAttribute:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class TermBuffer:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MathUtil:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class NodeHash:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesStore$1:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class BytesStore$2:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class LSInput:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word deleteFile deleteFile:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word deleteFile deleteFile:

    No occurrences


Run Time:
                                .buildTree      12.406s
                                    .onLCA      72.653s
                         analysis-behavior       9.439s
                          analysis-threads       0.007s
                       build-parsing-table       0.182s
                       check-word-instance       0.014s
                               grammar-opt       1.458s
                        grammar-rm-epsilon       7.600s
                                   parsing      81.956s
                                 soot-init      78.661s
                                     total     303.080s

Profiling Vars:
                                 cfg-nodes     110181
                       grammar-productions       1925
                            parse-branches   14076591
                               parse-trees         71
                      parsing-table-states       2671
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSearcher:

  Verifying word hasNext next:

      Method: IndexSearcher.search()
      Calls Location: IndexSearcher.java:460 IndexSearcher.java:460
      Atomic: NO

      Method: IndexSearcher.search()
      Calls Location: IndexSearcher.java:610 IndexSearcher.java:610
      Atomic: NO

      Method: IndexSearcher.search()
      Calls Location: IndexSearcher.java:550 IndexSearcher.java:550
      Atomic: NO

Checking class Query:

  Verifying word hasNext next:

    No occurrences

Checking class Analyzer:

  Verifying word hasNext next:

    No occurrences

Checking class QueryParser:

  Verifying word hasNext next:

    No occurrences

Checking class IndexReader:

  Verifying word hasNext next:

      Method: IndexReader.reportCloseToParentReaders()
      Calls Location: IndexReader.java:140 IndexReader.java:140
      Atomic: YES

      Method: IndexReader.decRef()
      Calls Location: IndexReader.java:140 IndexReader.java:132
      Atomic: NO

      Method: IndexReader.notifyReaderClosedListeners()
      Calls Location: IndexReader.java:132 IndexReader.java:132
      Atomic: YES

Checking class ScoreDoc:

  Verifying word hasNext next:

    No occurrences

Checking class Filter:

  Verifying word hasNext next:

    No occurrences

Checking class Directory:

  Verifying word hasNext next:

    No occurrences

Checking class Document:

  Verifying word hasNext next:

      Method: Document.getFields()
      Calls Location: Document.java:175 Document.java:175
      Atomic: NO

      Method: Document.removeFields()
      Calls Location: Document.java:99 Document.java:100
      Atomic: NO

      Method: Document.getField()
      Calls Location: Document.java:157 Document.java:157
      Atomic: NO

      Method: Document.removeField()
      Calls Location: Document.java:79 Document.java:80
      Atomic: NO

      Method: Document.getValues()
      Calls Location: Document.java:208 Document.java:208
      Atomic: NO

      Method: Document.getBinaryValue()
      Calls Location: Document.java:141 Document.java:141
      Atomic: NO

      Method: Document.get()
      Calls Location: Document.java:230 Document.java:230
      Atomic: NO

      Method: Document.getBinaryValues()
      Calls Location: Document.java:119 Document.java:119
      Atomic: NO

Checking class StandardAnalyzer:

  Verifying word hasNext next:

    No occurrences

Checking class FSDirectory:

  Verifying word hasNext next:

      Method: FSDirectory.sync()
      Calls Location: FSDirectory.java:312 FSDirectory.java:312
      Atomic: NO

Checking class Version:

  Verifying word hasNext next:

    No occurrences

Checking class DirectoryReader:

  Verifying word hasNext next:

    No occurrences

Checking class TopDocs:

  Verifying word hasNext next:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word hasNext next:

      Method: CloseableThreadLocal.purge()
      Calls Location: CloseableThreadLocal.java:113 CloseableThreadLocal.java:114
      Atomic: YES

Checking class Analyzer$TokenStreamComponents:

  Verifying word hasNext next:

    No occurrences

Checking class TokenStream:

  Verifying word hasNext next:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class ReusableStringReader:

  Verifying word hasNext next:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word hasNext next:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word hasNext next:

    No occurrences

Checking class IndexWriter:

  Verifying word hasNext next:

      Method: IndexWriter.updatePendingMerges()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3728
      Atomic: YES

      Method: IndexWriter.forceMergeDeletes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3728
      Atomic: YES

      Method: IndexWriter.updatePendingMerges()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3172
      Atomic: YES

      Method: IndexWriter.forceMergeDeletes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3172
      Atomic: YES

      Method: IndexWriter.updatePendingMerges()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3785
      Atomic: YES

      Method: IndexWriter.forceMergeDeletes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3785
      Atomic: YES

      Method: IndexWriter.updatePendingMerges()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4265
      Atomic: YES

      Method: IndexWriter.forceMergeDeletes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4265
      Atomic: YES

      Method: IndexWriter.updatePendingMerges()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3766
      Atomic: YES

      Method: IndexWriter.forceMergeDeletes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3766
      Atomic: YES

      Method: IndexWriter.updatePendingMerges()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3776
      Atomic: YES

      Method: IndexWriter.forceMergeDeletes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3776
      Atomic: YES

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2749
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3785
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3785
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2430
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:1794
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2203
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:1799
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2749
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3766
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3766
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4265
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4265
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3776
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3776
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3918
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4313
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3172
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3172
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4595
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4332
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3728
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3728
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4329
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:3134
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2441
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2690
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:1729
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2723
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:1736
      Atomic: NO

      Method: IndexWriter.forceMerge()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:1741
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2469
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2468
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2451
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2450
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2212
      Atomic: NO

      Method: IndexWriter.addIndexes()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:2540
      Atomic: NO

      Method: IndexWriter.rollback()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:942
      Atomic: NO

      Method: IndexWriter.close()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:942
      Atomic: YES

      Method: IndexWriter.prepareCommitInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4265
      Atomic: NO

      Method: IndexWriter.prepareCommitInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4332
      Atomic: NO

      Method: IndexWriter.prepareCommitInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4313
      Atomic: NO

      Method: IndexWriter.prepareCommitInternal()
      Calls Location: IndexWriter.java:3766 IndexWriter.java:4329
      Atomic: NO

    *** Timeout ***

Checking class IndexCommit:

  Verifying word hasNext next:

    No occurrences

Checking class Fields:

  Verifying word hasNext next:

      Method: Fields.getUniqueTermCount()
      Calls Location: Fields.java:59 Fields.java:59
      Atomic: NO

Checking class Terms:

  Verifying word hasNext next:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word hasNext next:

    No occurrences

Checking class IndexReaderContext:

  Verifying word hasNext next:

    No occurrences

Checking class Term:

  Verifying word hasNext next:

    No occurrences

Checking class AtomicReader:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeReader:

  Verifying word hasNext next:

    No occurrences

Checking class DocIdSet:

  Verifying word hasNext next:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word hasNext next:

    No occurrences

Checking class Bits:

  Verifying word hasNext next:

    No occurrences

Checking class IndexOutput:

  Verifying word hasNext next:

    No occurrences

Checking class IOContext:

  Verifying word hasNext next:

    No occurrences

Checking class IndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class Lock:

  Verifying word hasNext next:

    No occurrences

Checking class LockFactory:

  Verifying word hasNext next:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word hasNext next:

    No occurrences

Checking class Directory$1:

  Verifying word hasNext next:

    No occurrences

Checking class DataInput:

  Verifying word hasNext next:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class IOUtils:

  Verifying word hasNext next:

      Method: IOUtils.close()
      Calls Location: IOUtils.java:160 IOUtils.java:160
      Atomic: NO

      Method: IOUtils.closeWhileHandlingException()
      Calls Location: IOUtils.java:104 IOUtils.java:104
      Atomic: NO

      Method: IOUtils.closeWhileHandlingException()
      Calls Location: IOUtils.java:199 IOUtils.java:199
      Atomic: NO

Checking class IndexSearcher$LeafSlice:

  Verifying word hasNext next:

    No occurrences

Checking class Similarity:

  Verifying word hasNext next:

    No occurrences

Checking class Collector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldDocs:

  Verifying word hasNext next:

    No occurrences

Checking class Sort:

  Verifying word hasNext next:

    No occurrences

Checking class Weight:

  Verifying word hasNext next:

    No occurrences

Checking class FieldDoc:

  Verifying word hasNext next:

    No occurrences

Checking class Explanation:

  Verifying word hasNext next:

    No occurrences

Checking class TermStatistics:

  Verifying word hasNext next:

    No occurrences

Checking class TermContext:

  Verifying word hasNext next:

      Method: TermContext.build()
      Calls Location: TermContext.java:88 TermContext.java:88
      Atomic: NO

Checking class CollectionStatistics:

  Verifying word hasNext next:

    No occurrences

Checking class HitQueue:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery:

  Verifying word hasNext next:

    No occurrences

Checking class SortField:

  Verifying word hasNext next:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector:

  Verifying word hasNext next:

    No occurrences

Checking class ReaderUtil:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word hasNext next:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word hasNext next:

    No occurrences

Checking class MultiFields:

  Verifying word hasNext next:

      Method: MultiFields.getIndexedFields()
      Calls Location: MultiFields.java:257 MultiFields.java:273
      Atomic: NO

      Method: MultiFields.getIndexedFields()
      Calls Location: MultiFields.java:273 MultiFields.java:273
      Atomic: NO

      Method: MultiFields.getFields()
      Calls Location: MultiFields.java:74 MultiFields.java:74
      Atomic: NO

      Method: MultiFields.getMergedFieldInfos()
      Calls Location: MultiFields.java:257 MultiFields.java:257
      Atomic: NO

Checking class BytesRef:

  Verifying word hasNext next:

    No occurrences

Checking class Scorer:

  Verifying word hasNext next:

    No occurrences

Checking class IndexableField:

  Verifying word hasNext next:

    No occurrences

Checking class BaseDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word hasNext next:

    No occurrences

Checking class MMapDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word hasNext next:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word hasNext next:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word hasNext next:

    No occurrences

Checking class FSLockFactory:

  Verifying word hasNext next:

    No occurrences

Checking class FSDirectory$1:

  Verifying word hasNext next:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class Constants:

  Verifying word hasNext next:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word hasNext next:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word hasNext next:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word hasNext next:

      Method: StandardDirectoryReader.open()
      Calls Location: StandardDirectoryReader.java:120 StandardDirectoryReader.java:120
      Atomic: NO

      Method: StandardDirectoryReader.doClose()
      Calls Location: StandardDirectoryReader.java:357 StandardDirectoryReader.java:357
      Atomic: NO

      Method: StandardDirectoryReader.toString()
      Calls Location: StandardDirectoryReader.java:240 StandardDirectoryReader.java:240
      Atomic: NO

      Method: StandardDirectoryReader.open()
      Calls Location: StandardDirectoryReader.java:120 StandardDirectoryReader.java:120
      Atomic: NO

Checking class SegmentInfos:

  Verifying word hasNext next:

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:496 SegmentInfos.java:496
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:439 SegmentInfos.java:496
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:448 SegmentInfos.java:496
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:439 SegmentInfos.java:439
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:448 SegmentInfos.java:439
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:448 SegmentInfos.java:448
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:439 SegmentInfos.java:448
      Atomic: NO

      Method: SegmentInfos.read()
      Calls Location: SegmentInfos.java:371 SegmentInfos.java:371
      Atomic: NO

      Method: SegmentInfos.clone()
      Calls Location: SegmentInfos.java:590 SegmentInfos.java:590
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:496 SegmentInfos.java:496
      Atomic: NO

      Method: SegmentInfos.totalDocCount()
      Calls Location: SegmentInfos.java:1082 SegmentInfos.java:1082
      Atomic: NO

      Method: SegmentInfos.addAll()
      Calls Location: SegmentInfos.java:1165 SegmentInfos.java:1165
      Atomic: NO

      Method: SegmentInfos.createBackupSegmentInfos()
      Calls Location: SegmentInfos.java:1129 SegmentInfos.java:1129
      Atomic: NO

Checking class TopDocs$ShardRef:

  Verifying word hasNext next:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word hasNext next:

    No occurrences

Checking class PriorityQueue:

  Verifying word hasNext next:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word hasNext next:

    No occurrences

Checking class Tokenizer:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeSource:

  Verifying word hasNext next:

      Method: AttributeSource.equals()
      Calls Location: AttributeSource.java:316 AttributeSource.java:319
      Atomic: NO

      Method: AttributeSource.cloneAttributes()
      Calls Location: AttributeSource.java:316 AttributeSource.java:477
      Atomic: NO

      Method: AttributeSource.equals()
      Calls Location: AttributeSource.java:316 AttributeSource.java:315
      Atomic: NO

      Method: AttributeSource.getCurrentState()
      Calls Location: AttributeSource.java:316 AttributeSource.java:319
      Atomic: NO

      Method: AttributeSource.cloneAttributes()
      Calls Location: AttributeSource.java:477 AttributeSource.java:477
      Atomic: NO

      Method: AttributeSource.addAttributeImpl()
      Calls Location: AttributeSource.java:242 AttributeSource.java:242
      Atomic: NO

Checking class AttributeSource$AttributeFactory:

  Verifying word hasNext next:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class DocsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class NumericDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class BinaryDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfos:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfo:

  Verifying word hasNext next:

    No occurrences

Checking class TermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word hasNext next:

    No occurrences

Checking class TextField:

  Verifying word hasNext next:

    No occurrences

Checking class FieldType:

  Verifying word hasNext next:

    No occurrences

Checking class Field:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word hasNext next:

    No occurrences

Checking class StoredField:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word hasNext next:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriter:

  Verifying word hasNext next:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word hasNext next:

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:285 IndexFileDeleter.java:285
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:240 IndexFileDeleter.java:285
      Atomic: NO

      Method: IndexFileDeleter.incRef()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:476
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:240 IndexFileDeleter.java:476
      Atomic: NO

      Method: IndexFileDeleter.deleteNewFiles()
      Calls Location: IndexFileDeleter.java:561 IndexFileDeleter.java:561
      Atomic: NO

      Method: IndexFileDeleter.deleteFiles()
      Calls Location: IndexFileDeleter.java:552 IndexFileDeleter.java:552
      Atomic: NO

      Method: IndexFileDeleter.decRef()
      Calls Location: IndexFileDeleter.java:501 IndexFileDeleter.java:501
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:240 IndexFileDeleter.java:501
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:240 IndexFileDeleter.java:240
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:501 IndexFileDeleter.java:285
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:285
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:476
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:501
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:501
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:240
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:476 IndexFileDeleter.java:285
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:285 IndexFileDeleter.java:285
      Atomic: NO

      Method: IndexFileDeleter.incRef()
      Calls Location: IndexFileDeleter.java:483 IndexFileDeleter.java:483
      Atomic: NO

      Method: IndexFileDeleter.decRef()
      Calls Location: IndexFileDeleter.java:524 IndexFileDeleter.java:524
      Atomic: NO

Checking class MergePolicy:

  Verifying word hasNext next:

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:503 MergePolicy.java:503
      Atomic: NO

Checking class MergeScheduler:

  Verifying word hasNext next:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word hasNext next:

      Method: IndexWriter$ReaderPool.dropAll()
      Calls Location: IndexWriter.java:498 IndexWriter.java:499
      Atomic: YES

      Method: IndexWriter$ReaderPool.commit()
      Calls Location: IndexWriter.java:553 IndexWriter.java:553
      Atomic: YES

      Method: IndexWriter$ReaderPool.noDups()
      Calls Location: IndexWriter.java:608 IndexWriter.java:608
      Atomic: NO

      Method: IndexWriter$ReaderPool.anyPendingDeletes()
      Calls Location: IndexWriter.java:448 IndexWriter.java:448
      Atomic: YES

Checking class BufferedUpdatesStream:

  Verifying word hasNext next:

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:541 BufferedUpdatesStream.java:471
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:541 BufferedUpdatesStream.java:392
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:541 BufferedUpdatesStream.java:541
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:541 BufferedUpdatesStream.java:584
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:392 BufferedUpdatesStream.java:471
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:392 BufferedUpdatesStream.java:392
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:392 BufferedUpdatesStream.java:541
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:392 BufferedUpdatesStream.java:584
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:335 BufferedUpdatesStream.java:335
      Atomic: YES

      Method: BufferedUpdatesStream.applyNumericDocValuesUpdates()
      Calls Location: BufferedUpdatesStream.java:471 BufferedUpdatesStream.java:471
      Atomic: YES

      Method: BufferedUpdatesStream.applyTermDeletes()
      Calls Location: BufferedUpdatesStream.java:392 BufferedUpdatesStream.java:392
      Atomic: YES

      Method: BufferedUpdatesStream.applyQueryDeletes()
      Calls Location: BufferedUpdatesStream.java:541 BufferedUpdatesStream.java:541
      Atomic: NO

      Method: BufferedUpdatesStream.checkDeleteStats()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:584
      Atomic: NO

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:335 BufferedUpdatesStream.java:584
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:335
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:471
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:392
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:541
      Atomic: YES

      Method: BufferedUpdatesStream.push()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:584
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:584
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:584 BufferedUpdatesStream.java:584
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:471 BufferedUpdatesStream.java:471
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:471 BufferedUpdatesStream.java:392
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:471 BufferedUpdatesStream.java:541
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:471 BufferedUpdatesStream.java:584
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word hasNext next:

    No occurrences

Checking class Codec:

  Verifying word hasNext next:

    No occurrences

Checking class InfoStream:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word hasNext next:

      Method: SegmentCommitInfo.files()
      Calls Location: SegmentCommitInfo.java:161 SegmentCommitInfo.java:161
      Atomic: NO

      Method: SegmentCommitInfo.sizeInBytes()
      Calls Location: SegmentCommitInfo.java:140 SegmentCommitInfo.java:140
      Atomic: NO

      Method: SegmentCommitInfo.clone()
      Calls Location: SegmentCommitInfo.java:261 SegmentCommitInfo.java:261
      Atomic: NO

      Method: SegmentCommitInfo.sizeInBytes()
      Calls Location: SegmentCommitInfo.java:161 SegmentCommitInfo.java:140
      Atomic: NO

Checking class IndexWriterConfig:

  Verifying word hasNext next:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word hasNext next:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word hasNext next:

      Method: MergePolicy$OneMerge.getMergeReaders()
      Calls Location: MergePolicy.java:144 MergePolicy.java:144
      Atomic: NO

      Method: MergePolicy$OneMerge.totalNumDocs()
      Calls Location: MergePolicy.java:274 MergePolicy.java:274
      Atomic: NO

      Method: MergePolicy$OneMerge.<init>()
      Calls Location: MergePolicy.java:127 MergePolicy.java:127
      Atomic: NO

Checking class FrozenBufferedUpdates:

  Verifying word hasNext next:

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:76 FrozenBufferedUpdates.java:76
      Atomic: NO

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:88 FrozenBufferedUpdates.java:88
      Atomic: NO

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:89 FrozenBufferedUpdates.java:88
      Atomic: NO

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:76 FrozenBufferedUpdates.java:88
      Atomic: NO

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:89 FrozenBufferedUpdates.java:89
      Atomic: NO

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:88 FrozenBufferedUpdates.java:89
      Atomic: NO

      Method: FrozenBufferedUpdates.<init>()
      Calls Location: FrozenBufferedUpdates.java:76 FrozenBufferedUpdates.java:89
      Atomic: NO

Checking class MergePolicy$DocMap:

  Verifying word hasNext next:

    No occurrences

Checking class MergeState:

  Verifying word hasNext next:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word hasNext next:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word hasNext next:

      Method: ReadersAndUpdates.writeLiveDocs()
      Calls Location: ReadersAndUpdates.java:329 ReadersAndUpdates.java:329
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:492 ReadersAndUpdates.java:492
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:479 ReadersAndUpdates.java:492
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:399 ReadersAndUpdates.java:492
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:386 ReadersAndUpdates.java:492
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:492
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:492
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:506 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:492 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:479 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:399 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:386 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:506
      Atomic: YES

      Method: ReadersAndUpdates.writeLiveDocs()
      Calls Location: ReadersAndUpdates.java:329 ReadersAndUpdates.java:329
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:479 ReadersAndUpdates.java:479
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:386 ReadersAndUpdates.java:386
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:386
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:386
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:375
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:375
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:379
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:379
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:399 ReadersAndUpdates.java:399
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:386 ReadersAndUpdates.java:399
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:399
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:399
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:479 ReadersAndUpdates.java:479
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:399 ReadersAndUpdates.java:479
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:386 ReadersAndUpdates.java:479
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:375 ReadersAndUpdates.java:479
      Atomic: YES

      Method: ReadersAndUpdates.writeFieldUpdates()
      Calls Location: ReadersAndUpdates.java:379 ReadersAndUpdates.java:479
      Atomic: YES

Checking class SegmentInfo:

  Verifying word hasNext next:

      Method: SegmentInfo.checkFileNames()
      Calls Location: SegmentInfo.java:275 SegmentInfo.java:275
      Atomic: NO

Checking class MergeState$CheckAbort:

  Verifying word hasNext next:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word hasNext next:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word hasNext next:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word hasNext next:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word hasNext next:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word hasNext next:

    No occurrences

Checking class NumericUpdate:

  Verifying word hasNext next:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentReader:

  Verifying word hasNext next:

      Method: SegmentReader.initDocValuesProducers()
      Calls Location: SegmentReader.java:183 SegmentReader.java:183
      Atomic: NO

      Method: SegmentReader.initDocValuesProducers()
      Calls Location: SegmentReader.java:179 SegmentReader.java:183
      Atomic: NO

      Method: SegmentReader.initDocValuesProducers()
      Calls Location: SegmentReader.java:179 SegmentReader.java:179
      Atomic: NO

      Method: SegmentReader.initDocValuesProducers()
      Calls Location: SegmentReader.java:183 SegmentReader.java:179
      Atomic: NO

      Method: SegmentReader.getGenInfos()
      Calls Location: SegmentReader.java:225 SegmentReader.java:225
      Atomic: NO

      Method: SegmentReader.initDocValuesProducers()
      Calls Location: SegmentReader.java:225 SegmentReader.java:183
      Atomic: NO

      Method: SegmentReader.initDocValuesProducers()
      Calls Location: SegmentReader.java:225 SegmentReader.java:179
      Atomic: NO

Checking class IndexWriterConfig$OpenMode:

  Verifying word hasNext next:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word hasNext next:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word hasNext next:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word hasNext next:

      Method: DocumentsWriterFlushControl.abortPendingFlushes()
      Calls Location: DocumentsWriterFlushControl.java:611 DocumentsWriterFlushControl.java:611
      Atomic: YES

      Method: DocumentsWriterFlushControl.abortPendingFlushes()
      Calls Location: DocumentsWriterFlushControl.java:621 DocumentsWriterFlushControl.java:621
      Atomic: YES

      Method: DocumentsWriterFlushControl.abortPendingFlushes()
      Calls Location: DocumentsWriterFlushControl.java:611 DocumentsWriterFlushControl.java:621
      Atomic: YES

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:565 DocumentsWriterFlushControl.java:595
      Atomic: YES

      Method: DocumentsWriterFlushControl.finishFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:595 DocumentsWriterFlushControl.java:566
      Atomic: YES

      Method: DocumentsWriterFlushControl.assertBlockedFlushes()
      Calls Location: DocumentsWriterFlushControl.java:595 DocumentsWriterFlushControl.java:595
      Atomic: NO

      Method: DocumentsWriterFlushControl.pruneBlockedQueue()
      Calls Location: DocumentsWriterFlushControl.java:565 DocumentsWriterFlushControl.java:566
      Atomic: NO

Checking class IndexFileNames:

  Verifying word hasNext next:

    No occurrences

Checking class FlushPolicy:

  Verifying word hasNext next:

      Method: FlushPolicy.findLargestNonPendingWriter()
      Calls Location: FlushPolicy.java:116 FlushPolicy.java:117
      Atomic: NO

Checking class SegmentInfoFormat:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentMerger:

  Verifying word hasNext next:

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:274
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:274
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.mergeNorms()
      Calls Location: SegmentMerger.java:231 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.mergeNorms()
      Calls Location: SegmentMerger.java:227 SegmentMerger.java:231
      Atomic: NO

      Method: SegmentMerger.setMatchingSegmentReaders()
      Calls Location: SegmentMerger.java:274 SegmentMerger.java:274
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:177
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:163
      Atomic: NO

      Method: SegmentMerger.mergeNorms()
      Calls Location: SegmentMerger.java:227 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.mergeNorms()
      Calls Location: SegmentMerger.java:231 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:157
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:200
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:190 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:157 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:177 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.mergeDocValues()
      Calls Location: SegmentMerger.java:163 SegmentMerger.java:190
      Atomic: NO

      Method: SegmentMerger.mergeFieldInfos()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:297
      Atomic: NO

      Method: SegmentMerger.mergeFieldInfos()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:297
      Atomic: NO

      Method: SegmentMerger.mergeFieldInfos()
      Calls Location: SegmentMerger.java:299 SegmentMerger.java:299
      Atomic: NO

      Method: SegmentMerger.mergeFieldInfos()
      Calls Location: SegmentMerger.java:297 SegmentMerger.java:299
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:227
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:200 SegmentMerger.java:231
      Atomic: NO

Checking class MergeInfo:

  Verifying word hasNext next:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word hasNext next:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word hasNext next:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word hasNext next:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word hasNext next:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Terms$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word hasNext next:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word hasNext next:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word hasNext next:

    No occurrences

Checking class DataOutput:

  Verifying word hasNext next:

      Method: DataOutput.writeStringSet()
      Calls Location: DataOutput.java:295 DataOutput.java:295
      Atomic: NO

      Method: DataOutput.writeStringStringMap()
      Calls Location: DataOutput.java:274 DataOutput.java:274
      Atomic: NO

Checking class IOContext$Context:

  Verifying word hasNext next:

    No occurrences

Checking class FlushInfo:

  Verifying word hasNext next:

    No occurrences

Checking class Lock$With:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word hasNext next:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word hasNext next:

    No occurrences

Checking class ToStringUtils:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word hasNext next:

    No occurrences

Checking class SortField$Type:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word hasNext next:

    No occurrences

Checking class SortField$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word hasNext next:

    No occurrences

Checking class StringHelper:

  Verifying word hasNext next:

    No occurrences

Checking class TopDocsCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word hasNext next:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word hasNext next:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInvertState:

  Verifying word hasNext next:

    No occurrences

Checking class SmallFloat:

  Verifying word hasNext next:

    No occurrences

Checking class ReaderSlice:

  Verifying word hasNext next:

    No occurrences

Checking class MultiTerms:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word hasNext next:

      Method: FieldInfos$Builder.add()
      Calls Location: FieldInfos.java:269 FieldInfos.java:269
      Atomic: NO

Checking class MultiBits:

  Verifying word hasNext next:

    No occurrences

Checking class MergedIterator:

  Verifying word hasNext next:

      Method: MergedIterator.pushTop()
      Calls Location: MergedIterator.java:128 MergedIterator.java:129
      Atomic: NO

      Method: MergedIterator.<init>()
      Calls Location: MergedIterator.java:66 MergedIterator.java:68
      Atomic: NO

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word hasNext next:

    No occurrences

Checking class UnicodeUtil:

  Verifying word hasNext next:

    No occurrences

Checking class CharsRef:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayUtil:

  Verifying word hasNext next:

      Method: ArrayUtil.toIntArray()
      Calls Location: ArrayUtil.java:606 ArrayUtil.java:606
      Atomic: NO

Checking class Similarity$SimWeight:

  Verifying word hasNext next:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word hasNext next:

    No occurrences

Checking class TermState:

  Verifying word hasNext next:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word hasNext next:

    No occurrences

Checking class IndexableFieldType:

  Verifying word hasNext next:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word hasNext next:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class NativeFSLock:

  Verifying word hasNext next:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word hasNext next:

    No occurrences

Checking class LucenePackage:

  Verifying word hasNext next:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word hasNext next:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word hasNext next:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word hasNext next:

    No occurrences

Checking class CorruptIndexException:

  Verifying word hasNext next:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word hasNext next:

      Method: Lucene3xSegmentInfoReader.readLegacySegmentInfo()
      Calls Location: Lucene3xSegmentInfoReader.java:228 Lucene3xSegmentInfoReader.java:228
      Atomic: NO

      Method: Lucene3xSegmentInfoReader.readLegacyInfos()
      Calls Location: Lucene3xSegmentInfoReader.java:228 Lucene3xSegmentInfoReader.java:228
      Atomic: NO

Checking class CodecUtil:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word hasNext next:

    No occurrences

Checking class Tokenizer$1:

  Verifying word hasNext next:

    No occurrences

Checking class CharFilter:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeSource$State:

  Verifying word hasNext next:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeImpl:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeReflector:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeSource$1:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeSource$2:

  Verifying word hasNext next:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word hasNext next:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefIterator:

  Verifying word hasNext next:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word hasNext next:

    No occurrences

Checking class TermsEnum$1:

  Verifying word hasNext next:

    No occurrences

Checking class TermsEnum$2:

  Verifying word hasNext next:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Store:

  Verifying word hasNext next:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Index:

  Verifying word hasNext next:

    No occurrences

Checking class Field$TermVector:

  Verifying word hasNext next:

    No occurrences

Checking class NumericTokenStream:

  Verifying word hasNext next:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word hasNext next:

    No occurrences

Checking class Field$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class SetOnce:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word hasNext next:

      Method: DocumentsWriterPerThread.updateDocuments()
      Calls Location: DocumentsWriterPerThread.java:291 DocumentsWriterPerThread.java:291
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:443 DocumentsWriterPerThread.java:443
      Atomic: NO

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word hasNext next:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word hasNext next:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedUpdates:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word hasNext next:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word hasNext next:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word hasNext next:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word hasNext next:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word hasNext next:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word hasNext next:

    No occurrences

Checking class PostingsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesFormat:

  Verifying word hasNext next:

    No occurrences

Checking class NormsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentWriteState:

  Verifying word hasNext next:

    No occurrences

Checking class MutableBits:

  Verifying word hasNext next:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word hasNext next:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word hasNext next:

    No occurrences

Checking class FixedBitSet:

  Verifying word hasNext next:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word hasNext next:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word hasNext next:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word hasNext next:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word hasNext next:

      Method: CompoundFileWriter.writeEntryTable()
      Calls Location: CompoundFileWriter.java:206 CompoundFileWriter.java:206
      Atomic: NO

Checking class CompoundFileDirectory$FileEntry:

  Verifying word hasNext next:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word hasNext next:

      Method: SegmentCoreReaders.notifyCoreClosedListeners()
      Calls Location: SegmentCoreReaders.java:177 SegmentCoreReaders.java:177
      Atomic: YES

Checking class SegmentDocValues:

  Verifying word hasNext next:

      Method: SegmentDocValues.ramBytesUsed()
      Calls Location: SegmentDocValues.java:102 SegmentDocValues.java:102
      Atomic: YES

      Method: SegmentDocValues.decRef()
      Calls Location: SegmentDocValues.java:83 SegmentDocValues.java:83
      Atomic: YES

Checking class StoredFieldsReader:

  Verifying word hasNext next:

    No occurrences

Checking class TermVectorsReader:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word hasNext next:

    No occurrences

Checking class FieldsProducer:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesProducer:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentReader$2:

  Verifying word hasNext next:

    No occurrences

Checking class FieldInfosReader:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentReader$1:

  Verifying word hasNext next:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word hasNext next:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word hasNext next:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionUtil:

  Verifying word hasNext next:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word hasNext next:

      Method: TieredMergePolicy.score()
      Calls Location: TieredMergePolicy.java:433 TieredMergePolicy.java:433
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:284 TieredMergePolicy.java:433
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:412 TieredMergePolicy.java:433
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:284 TieredMergePolicy.java:284
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:412 TieredMergePolicy.java:412
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:284 TieredMergePolicy.java:412
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:433 TieredMergePolicy.java:433
      Atomic: NO

      Method: TieredMergePolicy.findMerges()
      Calls Location: TieredMergePolicy.java:433 TieredMergePolicy.java:412
      Atomic: NO

      Method: TieredMergePolicy.findForcedDeletesMerges()
      Calls Location: TieredMergePolicy.java:563 TieredMergePolicy.java:563
      Atomic: NO

      Method: TieredMergePolicy.findForcedMerges()
      Calls Location: TieredMergePolicy.java:494 TieredMergePolicy.java:494
      Atomic: NO

Checking class FlushByRamOrCountsPolicy:

  Verifying word hasNext next:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word hasNext next:

      Method: ConcurrentMergeScheduler.merge()
      Calls Location: ConcurrentMergeScheduler.java:302 ConcurrentMergeScheduler.java:302
      Atomic: YES

      Method: ConcurrentMergeScheduler.sync()
      Calls Location: ConcurrentMergeScheduler.java:272 ConcurrentMergeScheduler.java:272
      Atomic: NO

      Method: ConcurrentMergeScheduler.mergeThreadCount()
      Calls Location: ConcurrentMergeScheduler.java:302 ConcurrentMergeScheduler.java:302
      Atomic: YES

Checking class DocumentsWriterFlushQueue:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word hasNext next:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word hasNext next:

    No occurrences

Checking class NamedSPILoader:

  Verifying word hasNext next:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word hasNext next:

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:121 StoredFieldsWriter.java:121
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:121 StoredFieldsWriter.java:86
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:121 StoredFieldsWriter.java:113
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:113 StoredFieldsWriter.java:121
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:113 StoredFieldsWriter.java:86
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:113 StoredFieldsWriter.java:113
      Atomic: NO

      Method: StoredFieldsWriter.addDocument()
      Calls Location: StoredFieldsWriter.java:121 StoredFieldsWriter.java:121
      Atomic: NO

      Method: StoredFieldsWriter.addDocument()
      Calls Location: StoredFieldsWriter.java:113 StoredFieldsWriter.java:121
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:86 StoredFieldsWriter.java:121
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:86 StoredFieldsWriter.java:86
      Atomic: NO

      Method: StoredFieldsWriter.addDocument()
      Calls Location: StoredFieldsWriter.java:113 StoredFieldsWriter.java:113
      Atomic: NO

      Method: StoredFieldsWriter.merge()
      Calls Location: StoredFieldsWriter.java:86 StoredFieldsWriter.java:113
      Atomic: NO

Checking class TermVectorsWriter:

  Verifying word hasNext next:

      Method: TermVectorsWriter.merge()
      Calls Location: TermVectorsWriter.java:230 TermVectorsWriter.java:230
      Atomic: NO

      Method: TermVectorsWriter.merge()
      Calls Location: TermVectorsWriter.java:230 TermVectorsWriter.java:218
      Atomic: NO

      Method: TermVectorsWriter.addAllDocVectors()
      Calls Location: TermVectorsWriter.java:230 TermVectorsWriter.java:230
      Atomic: NO

      Method: TermVectorsWriter.addAllDocVectors()
      Calls Location: TermVectorsWriter.java:217 TermVectorsWriter.java:230
      Atomic: NO

      Method: TermVectorsWriter.addAllDocVectors()
      Calls Location: TermVectorsWriter.java:217 TermVectorsWriter.java:218
      Atomic: NO

      Method: TermVectorsWriter.merge()
      Calls Location: TermVectorsWriter.java:217 TermVectorsWriter.java:230
      Atomic: NO

      Method: TermVectorsWriter.merge()
      Calls Location: TermVectorsWriter.java:217 TermVectorsWriter.java:218
      Atomic: NO

Checking class FieldsConsumer:

  Verifying word hasNext next:

      Method: FieldsConsumer.merge()
      Calls Location: FieldsConsumer.java:66 FieldsConsumer.java:66
      Atomic: NO

Checking class FilterDirectory:

  Verifying word hasNext next:

    No occurrences

Checking class PagedMutable:

  Verifying word hasNext next:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word hasNext next:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word hasNext next:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word hasNext next:

    No occurrences

Checking class Transition:

  Verifying word hasNext next:

    No occurrences

Checking class IntsRef:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word hasNext next:

    No occurrences

Checking class State:

  Verifying word hasNext next:

      Method: State.addEpsilon()
      Calls Location: State.java:178 State.java:178
      Atomic: NO

      Method: State.toString()
      Calls Location: State.java:267 State.java:267
      Atomic: NO

Checking class Automaton:

  Verifying word hasNext next:

      Method: Automaton.totalize()
      Calls Location: Automaton.java:364 Automaton.java:364
      Atomic: NO

      Method: Automaton.getStartPoints()
      Calls Location: Automaton.java:412 Automaton.java:412
      Atomic: NO

      Method: Automaton.getStartPoints()
      Calls Location: Automaton.java:405 Automaton.java:412
      Atomic: NO

      Method: Automaton.toDot()
      Calls Location: Automaton.java:606 Automaton.java:606
      Atomic: NO

      Method: Automaton.getStartPoints()
      Calls Location: Automaton.java:405 Automaton.java:405
      Atomic: NO

      Method: Automaton.clone()
      Calls Location: Automaton.java:650 Automaton.java:650
      Atomic: NO

      Method: Automaton.getAcceptStates()
      Calls Location: Automaton.java:344 Automaton.java:344
      Atomic: NO

      Method: Automaton.getLiveStates()
      Calls Location: Automaton.java:444 Automaton.java:444
      Atomic: NO

Checking class BasicOperations:

  Verifying word hasNext next:

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:126 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:126 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:103 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:103 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:96 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:96 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.sameLanguage()
      Calls Location: BasicOperations.java:835 BasicOperations.java:835
      Atomic: NO

      Method: BasicOperations.sameLanguage()
      Calls Location: BasicOperations.java:835 BasicOperations.java:832
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:763 BasicOperations.java:763
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:718 BasicOperations.java:763
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:741 BasicOperations.java:763
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:750 BasicOperations.java:763
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:750 BasicOperations.java:750
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:741 BasicOperations.java:750
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:718 BasicOperations.java:750
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:741 BasicOperations.java:741
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:750 BasicOperations.java:741
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:718 BasicOperations.java:741
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:172
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:96 BasicOperations.java:96
      Atomic: NO

      Method: BasicOperations.union()
      Calls Location: BasicOperations.java:439 BasicOperations.java:439
      Atomic: NO

      Method: BasicOperations.union()
      Calls Location: BasicOperations.java:435 BasicOperations.java:439
      Atomic: NO

      Method: BasicOperations.union()
      Calls Location: BasicOperations.java:435 BasicOperations.java:435
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:226 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:222 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:222 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:76 BasicOperations.java:76
      Atomic: NO

      Method: BasicOperations.run()
      Calls Location: BasicOperations.java:835 BasicOperations.java:835
      Atomic: NO

      Method: BasicOperations.run()
      Calls Location: BasicOperations.java:832 BasicOperations.java:835
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:103 BasicOperations.java:103
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:96 BasicOperations.java:103
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:107 BasicOperations.java:107
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:96 BasicOperations.java:107
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:126 BasicOperations.java:126
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:118 BasicOperations.java:126
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:110 BasicOperations.java:126
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:107 BasicOperations.java:126
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:96 BasicOperations.java:126
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:118 BasicOperations.java:118
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:110 BasicOperations.java:118
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:107 BasicOperations.java:118
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:96 BasicOperations.java:118
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:126 BasicOperations.java:118
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:110 BasicOperations.java:110
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:107 BasicOperations.java:110
      Atomic: NO

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:96 BasicOperations.java:110
      Atomic: NO

      Method: BasicOperations.run()
      Calls Location: BasicOperations.java:832 BasicOperations.java:832
      Atomic: NO

      Method: BasicOperations.run()
      Calls Location: BasicOperations.java:835 BasicOperations.java:832
      Atomic: NO

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:718 BasicOperations.java:718
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:107 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:107 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:110 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:110 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:103
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:96
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:107
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:126
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:118
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:172 BasicOperations.java:110
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:118 BasicOperations.java:226
      Atomic: NO

      Method: BasicOperations.repeat()
      Calls Location: BasicOperations.java:118 BasicOperations.java:222
      Atomic: NO

      Method: BasicOperations.sameLanguage()
      Calls Location: BasicOperations.java:832 BasicOperations.java:835
      Atomic: NO

      Method: BasicOperations.sameLanguage()
      Calls Location: BasicOperations.java:832 BasicOperations.java:832
      Atomic: NO

Checking class SingleTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class BasicAutomata:

  Verifying word hasNext next:

      Method: BasicAutomata.makeInterval()
      Calls Location: BasicAutomata.java:223 BasicAutomata.java:223
      Atomic: NO

Checking class CompiledAutomaton$1:

  Verifying word hasNext next:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class SpecialOperations:

  Verifying word hasNext next:

      Method: SpecialOperations.getFiniteStrings()
      Calls Location: SpecialOperations.java:245 SpecialOperations.java:245
      Atomic: NO

      Method: SpecialOperations.getCommonSuffixBytesRef()
      Calls Location: SpecialOperations.java:208 SpecialOperations.java:129
      Atomic: NO

      Method: SpecialOperations.getCommonSuffix()
      Calls Location: SpecialOperations.java:208 SpecialOperations.java:105
      Atomic: NO

      Method: SpecialOperations.isFinite()
      Calls Location: SpecialOperations.java:82 SpecialOperations.java:82
      Atomic: NO

      Method: SpecialOperations.getCommonSuffixBytesRef()
      Calls Location: SpecialOperations.java:199 SpecialOperations.java:129
      Atomic: NO

      Method: SpecialOperations.getCommonSuffix()
      Calls Location: SpecialOperations.java:199 SpecialOperations.java:105
      Atomic: NO

      Method: SpecialOperations.reverse()
      Calls Location: SpecialOperations.java:199 SpecialOperations.java:199
      Atomic: NO

      Method: SpecialOperations.reverse()
      Calls Location: SpecialOperations.java:208 SpecialOperations.java:208
      Atomic: NO

      Method: SpecialOperations.reverse()
      Calls Location: SpecialOperations.java:199 SpecialOperations.java:208
      Atomic: NO

Checking class UTF32ToUTF8:

  Verifying word hasNext next:

    No occurrences

Checking class Document:

  Verifying word hasNext next:

    No occurrences

Checking class Element:

  Verifying word hasNext next:

    No occurrences

Checking class Node:

  Verifying word hasNext next:

    No occurrences

Checking class NodeList:

  Verifying word hasNext next:

    No occurrences

Checking class Text:

  Verifying word hasNext next:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word hasNext next:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word hasNext next:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word hasNext next:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word hasNext next:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word hasNext next:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word hasNext next:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word hasNext next:

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:96 FieldCacheImpl.java:96
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:100 FieldCacheImpl.java:96
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:92 FieldCacheImpl.java:96
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:100 FieldCacheImpl.java:100
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:96 FieldCacheImpl.java:100
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:92 FieldCacheImpl.java:100
      Atomic: YES

      Method: FieldCacheImpl.purgeByCacheKey()
      Calls Location: FieldCacheImpl.java:84 FieldCacheImpl.java:84
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:92 FieldCacheImpl.java:92
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:100 FieldCacheImpl.java:92
      Atomic: YES

      Method: FieldCacheImpl.getCacheEntries()
      Calls Location: FieldCacheImpl.java:96 FieldCacheImpl.java:92
      Atomic: YES

Checking class FieldCache$10:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$8:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$9:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$6:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$7:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$4:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$5:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$2:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$3:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class StringHelper$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word hasNext next:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word hasNext next:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word hasNext next:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word hasNext next:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word hasNext next:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word hasNext next:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word hasNext next:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word hasNext next:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word hasNext next:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word hasNext next:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word hasNext next:

      Method: ByteBufferIndexInput.close()
      Calls Location: ByteBufferIndexInput.java:286 ByteBufferIndexInput.java:287
      Atomic: NO

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word hasNext next:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word hasNext next:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word hasNext next:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word hasNext next:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word hasNext next:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word hasNext next:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word hasNext next:

      Method: WeakIdentityMap$1.setNext()
      Calls Location: WeakIdentityMap.java:201 WeakIdentityMap.java:202
      Atomic: NO

Checking class AttributeImpl$1:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word hasNext next:

    No occurrences

Checking class OrdTermState:

  Verifying word hasNext next:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class TypeAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word hasNext next:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word hasNext next:

    No occurrences

Checking class NumericUtils:

  Verifying word hasNext next:

    No occurrences

Checking class CharTermAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class OffsetAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word hasNext next:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word hasNext next:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word hasNext next:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word hasNext next:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Index$2:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Index$1:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Index$4:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Index$3:

  Verifying word hasNext next:

    No occurrences

Checking class Field$Index$5:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word hasNext next:

    No occurrences

Checking class DocConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class Counter:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word hasNext next:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word hasNext next:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word hasNext next:

    No occurrences

Checking class ByteBlockPool:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word hasNext next:

    No occurrences

Checking class IntBlockPool:

  Verifying word hasNext next:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word hasNext next:

    No occurrences

Checking class RAMFile:

  Verifying word hasNext next:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word hasNext next:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word hasNext next:

    No occurrences

Checking class RAMOutputStream:

  Verifying word hasNext next:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word hasNext next:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word hasNext next:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentReadState:

  Verifying word hasNext next:

    No occurrences

Checking class BitVector:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word hasNext next:

      Method: Lucene3xNormsProducer.<init>()
      Calls Location: Lucene3xNormsProducer.java:78 Lucene3xNormsProducer.java:78
      Atomic: NO

Checking class Lucene3xFieldInfosReader:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xFields:

  Verifying word hasNext next:

      Method: Lucene3xFields.<init>()
      Calls Location: Lucene3xFields.java:99 Lucene3xFields.java:99
      Atomic: NO

Checking class ReadersAndUpdates$1$1:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word hasNext next:

    No occurrences

Checking class OpenBitSet:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class BitUtil:

  Verifying word hasNext next:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word hasNext next:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word hasNext next:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word hasNext next:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word hasNext next:

    No occurrences

Checking class RefCount:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word hasNext next:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word hasNext next:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word hasNext next:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word hasNext next:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word hasNext next:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word hasNext next:

    No occurrences

Checking class SPIClassIterator:

  Verifying word hasNext next:

      Method: SPIClassIterator.next()
      Calls Location: SPIClassIterator.java:133 SPIClassIterator.java:134
      Atomic: NO

      Method: SPIClassIterator.next()
      Calls Location: SPIClassIterator.java:124 SPIClassIterator.java:134
      Atomic: NO

Checking class TermsConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Format:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Header:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word hasNext next:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word hasNext next:

    No occurrences

Checking class DirectPackedReader:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64:

  Verifying word hasNext next:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word hasNext next:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$1:

  Verifying word hasNext next:

    No occurrences

Checking class Direct64:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$2:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word hasNext next:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word hasNext next:

    No occurrences

Checking class Direct32:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperation:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word hasNext next:

    No occurrences

Checking class Direct8:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word hasNext next:

    No occurrences

Checking class Direct16:

  Verifying word hasNext next:

    No occurrences

Checking class PackedWriter:

  Verifying word hasNext next:

    No occurrences

Checking class GrowableWriter:

  Verifying word hasNext next:

    No occurrences

Checking class LongValues:

  Verifying word hasNext next:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word hasNext next:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word hasNext next:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word hasNext next:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word hasNext next:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word hasNext next:

    No occurrences

Checking class RunAutomaton:

  Verifying word hasNext next:

    No occurrences

Checking class SortedIntSet:

  Verifying word hasNext next:

      Method: SortedIntSet.computeHash()
      Calls Location: SortedIntSet.java:144 SortedIntSet.java:144
      Atomic: NO

Checking class SortedIntSet$FrozenIntSet:

  Verifying word hasNext next:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word hasNext next:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word hasNext next:

    No occurrences

Checking class StatePair:

  Verifying word hasNext next:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word hasNext next:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word hasNext next:

      Method: DaciukMihovAutomatonBuilder.build()
      Calls Location: DaciukMihovAutomatonBuilder.java:279 DaciukMihovAutomatonBuilder.java:279
      Atomic: NO

Checking class MinimizationOperations:

  Verifying word hasNext next:

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:155 MinimizationOperations.java:155
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:114 MinimizationOperations.java:155
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:136 MinimizationOperations.java:155
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:183 MinimizationOperations.java:155
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:114 MinimizationOperations.java:114
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:205 MinimizationOperations.java:205
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:194 MinimizationOperations.java:205
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:114 MinimizationOperations.java:205
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:136 MinimizationOperations.java:205
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:183 MinimizationOperations.java:205
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:155 MinimizationOperations.java:205
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:194 MinimizationOperations.java:194
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:114 MinimizationOperations.java:194
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:136 MinimizationOperations.java:194
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:183 MinimizationOperations.java:194
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:155 MinimizationOperations.java:194
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:183 MinimizationOperations.java:183
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:155 MinimizationOperations.java:183
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:114 MinimizationOperations.java:183
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:136 MinimizationOperations.java:183
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:136 MinimizationOperations.java:136
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:114 MinimizationOperations.java:136
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:183 MinimizationOperations.java:136
      Atomic: NO

      Method: MinimizationOperations.minimizeHopcroft()
      Calls Location: MinimizationOperations.java:155 MinimizationOperations.java:136
      Atomic: NO

Checking class Util:

  Verifying word hasNext next:

      Method: Util.toDot()
      Calls Location: Util.java:739 Util.java:739
      Atomic: NO

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word hasNext next:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word hasNext next:

    No occurrences

Checking class DOMException:

  Verifying word hasNext next:

    No occurrences

Checking class Attr:

  Verifying word hasNext next:

    No occurrences

Checking class TypeInfo:

  Verifying word hasNext next:

    No occurrences

Checking class DocumentType:

  Verifying word hasNext next:

    No occurrences

Checking class DOMImplementation:

  Verifying word hasNext next:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word hasNext next:

    No occurrences

Checking class DOMConfiguration:

  Verifying word hasNext next:

    No occurrences

Checking class NamedNodeMap:

  Verifying word hasNext next:

    No occurrences

Checking class UserDataHandler:

  Verifying word hasNext next:

    No occurrences

Checking class CharacterData:

  Verifying word hasNext next:

    No occurrences

Checking class ComplexExplanation:

  Verifying word hasNext next:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word hasNext next:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word hasNext next:

    No occurrences

Checking class DocTermOrds:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word hasNext next:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word hasNext next:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class BitsSlice:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class TimSorter:

  Verifying word hasNext next:

    No occurrences

Checking class IntroSorter:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word hasNext next:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word hasNext next:

    No occurrences

Checking class NumericUtils$2:

  Verifying word hasNext next:

    No occurrences

Checking class NumericUtils$1:

  Verifying word hasNext next:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word hasNext next:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word hasNext next:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word hasNext next:

      Method: FreqProxTermsWriter.flush()
      Calls Location: FreqProxTermsWriter.java:47 FreqProxTermsWriter.java:47
      Atomic: NO

Checking class DocFieldProcessor:

  Verifying word hasNext next:

      Method: DocFieldProcessor.processDocument()
      Calls Location: DocFieldProcessor.java:185 DocFieldProcessor.java:185
      Atomic: NO

      Method: DocFieldProcessor.flush()
      Calls Location: DocFieldProcessor.java:74 DocFieldProcessor.java:74
      Atomic: NO

Checking class DocInverter:

  Verifying word hasNext next:

      Method: DocInverter.flush()
      Calls Location: DocInverter.java:47 DocInverter.java:47
      Atomic: NO

Checking class DocFieldConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class NormsConsumer:

  Verifying word hasNext next:

      Method: NormsConsumer.flush()
      Calls Location: NormsConsumer.java:50 NormsConsumer.java:50
      Atomic: NO

Checking class StoredFieldsConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word hasNext next:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word hasNext next:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word hasNext next:

      Method: TermVectorsConsumer.flush()
      Calls Location: TermVectorsConsumer.java:70 TermVectorsConsumer.java:70
      Atomic: NO

Checking class TermsHash:

  Verifying word hasNext next:

      Method: TermsHash.flush()
      Calls Location: TermsHash.java:108 TermsHash.java:108
      Atomic: NO

Checking class DocValuesProcessor:

  Verifying word hasNext next:

      Method: DocValuesProcessor.abort()
      Calls Location: DocValuesProcessor.java:169 DocValuesProcessor.java:169
      Atomic: NO

      Method: DocValuesProcessor.flush()
      Calls Location: DocValuesProcessor.java:80 DocValuesProcessor.java:80
      Atomic: NO

Checking class IntBlockPool$SliceWriter:

  Verifying word hasNext next:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word hasNext next:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word hasNext next:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word hasNext next:

    No occurrences

Checking class RAMInputStream:

  Verifying word hasNext next:

    No occurrences

Checking class RAMDirectory:

  Verifying word hasNext next:

      Method: RAMDirectory.listAll()
      Calls Location: RAMDirectory.java:112 RAMDirectory.java:112
      Atomic: NO

Checking class CoalescedUpdates$2$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class TermInfosReader:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word hasNext next:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word hasNext next:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class PostingsConsumer:

  Verifying word hasNext next:

    No occurrences

Checking class TermStats:

  Verifying word hasNext next:

    No occurrences

Checking class LongsRef:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word hasNext next:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperation$1:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word hasNext next:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word hasNext next:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word hasNext next:

    No occurrences

Checking class Sorter:

  Verifying word hasNext next:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word hasNext next:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word hasNext next:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word hasNext next:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word hasNext next:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word hasNext next:

    No occurrences

Checking class FST:

  Verifying word hasNext next:

      Method: FST.pack()
      Calls Location: FST.java:1799 FST.java:1799
      Atomic: NO

      Method: FST.pack()
      Calls Location: FST.java:1793 FST.java:1799
      Atomic: NO

      Method: FST.pack()
      Calls Location: FST.java:1793 FST.java:1793
      Atomic: NO

Checking class FST$BytesReader:

  Verifying word hasNext next:

    No occurrences

Checking class FST$Arc:

  Verifying word hasNext next:

    No occurrences

Checking class Util$MinResult:

  Verifying word hasNext next:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word hasNext next:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word hasNext next:

    No occurrences

Checking class Outputs:

  Verifying word hasNext next:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word hasNext next:

    No occurrences

Checking class Util$FSTPath:

  Verifying word hasNext next:

    No occurrences

Checking class DOMStringList:

  Verifying word hasNext next:

    No occurrences

Checking class PagedBytes:

  Verifying word hasNext next:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word hasNext next:

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:256 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:255 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:249 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:242 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:242 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:255 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:249 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:256 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:255 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:249 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:242 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:256 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:249 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:242 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:255 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:256 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:222
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:222
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:217
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:217
      Atomic: NO

      Method: FieldCacheSanityChecker.getAllDescendantReaderKeys()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:217 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:222 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:222
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:217
      Atomic: NO

      Method: FieldCacheSanityChecker.checkSubreaders()
      Calls Location: FieldCacheSanityChecker.java:291 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:222
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:217
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:222
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:217
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:256
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:242
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:255
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:249
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:222
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:217
      Atomic: NO

      Method: FieldCacheSanityChecker.check()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:291
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:176
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:176
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:176
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:178
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:178
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:178
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:179 FieldCacheSanityChecker.java:179
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:178 FieldCacheSanityChecker.java:179
      Atomic: NO

      Method: FieldCacheSanityChecker.checkValueMismatch()
      Calls Location: FieldCacheSanityChecker.java:176 FieldCacheSanityChecker.java:179
      Atomic: NO

Checking class DocTermOrds$Iterator:

  Verifying word hasNext next:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word hasNext next:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word hasNext next:

    No occurrences

Checking class TermsHashPerField:

  Verifying word hasNext next:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefHash:

  Verifying word hasNext next:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word hasNext next:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word hasNext next:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word hasNext next:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word hasNext next:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word hasNext next:

    No occurrences

Checking class DocInverterPerField:

  Verifying word hasNext next:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word hasNext next:

    No occurrences

Checking class ByteSliceReader:

  Verifying word hasNext next:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word hasNext next:

    No occurrences

Checking class DocValuesWriter:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word hasNext next:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word hasNext next:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word hasNext next:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word hasNext next:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word hasNext next:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word hasNext next:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word hasNext next:

    No occurrences

Checking class TermInfo:

  Verifying word hasNext next:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word hasNext next:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word hasNext next:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word hasNext next:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word hasNext next:

    No occurrences

Checking class BytesStore:

  Verifying word hasNext next:

      Method: BytesStore.writeTo()
      Calls Location: BytesStore.java:341 BytesStore.java:341
      Atomic: NO

Checking class Builder$UnCompiledNode:

  Verifying word hasNext next:

    No occurrences

Checking class Builder$Arc:

  Verifying word hasNext next:

    No occurrences

Checking class Builder:

  Verifying word hasNext next:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word hasNext next:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word hasNext next:

    No occurrences

Checking class Builder$Node:

  Verifying word hasNext next:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word hasNext next:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word hasNext next:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word hasNext next:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word hasNext next:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word hasNext next:

    No occurrences

Checking class LSResourceResolver:

  Verifying word hasNext next:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word hasNext next:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word hasNext next:

    No occurrences

Checking class MapOfSets:

  Verifying word hasNext next:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word hasNext next:

    No occurrences

Checking class PayloadAttribute:

  Verifying word hasNext next:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word hasNext next:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word hasNext next:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word hasNext next:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word hasNext next:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word hasNext next:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word hasNext next:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word hasNext next:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word hasNext next:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word hasNext next:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word hasNext next:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word hasNext next:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word hasNext next:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word hasNext next:

    No occurrences

Checking class TermBuffer:

  Verifying word hasNext next:

    No occurrences

Checking class MathUtil:

  Verifying word hasNext next:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word hasNext next:

    No occurrences

Checking class NodeHash:

  Verifying word hasNext next:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word hasNext next:

    No occurrences

Checking class BytesStore$1:

  Verifying word hasNext next:

    No occurrences

Checking class BytesStore$2:

  Verifying word hasNext next:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word hasNext next:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word hasNext next:

    No occurrences

Checking class LSInput:

  Verifying word hasNext next:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word hasNext next:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word hasNext next:

    No occurrences


Run Time:
                                .buildTree      55.969s
                                    .onLCA     128.818s
                         analysis-behavior       9.202s
                          analysis-threads       0.008s
                       build-parsing-table       1.581s
                       check-word-instance       0.052s
                               grammar-opt       1.231s
                        grammar-rm-epsilon       7.653s
                                   parsing     145.998s
                                 soot-init      75.056s
                                     total     437.984s

Profiling Vars:
                                 cfg-nodes     110298
                       grammar-productions       4316
                            parse-branches   56921795
                               parse-trees        535
                      parsing-table-states       4810
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexSearcher:

  Verifying word checkpoint changed:

    No occurrences

Checking class Query:

  Verifying word checkpoint changed:

    No occurrences

Checking class Analyzer:

  Verifying word checkpoint changed:

    No occurrences

Checking class QueryParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class ScoreDoc:

  Verifying word checkpoint changed:

    No occurrences

Checking class Filter:

  Verifying word checkpoint changed:

    No occurrences

Checking class Directory:

  Verifying word checkpoint changed:

    No occurrences

Checking class Document:

  Verifying word checkpoint changed:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FSDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class Version:

  Verifying word checkpoint changed:

    No occurrences

Checking class DirectoryReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopDocs:

  Verifying word checkpoint changed:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word checkpoint changed:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word checkpoint changed:

    No occurrences

Checking class TokenStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReusableStringReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexCommit:

  Verifying word checkpoint changed:

    No occurrences

Checking class Fields:

  Verifying word checkpoint changed:

    No occurrences

Checking class Terms:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexReaderContext:

  Verifying word checkpoint changed:

    No occurrences

Checking class Term:

  Verifying word checkpoint changed:

    No occurrences

Checking class AtomicReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompositeReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocIdSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word checkpoint changed:

    No occurrences

Checking class Bits:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class IOContext:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lock:

  Verifying word checkpoint changed:

    No occurrences

Checking class LockFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word checkpoint changed:

    No occurrences

Checking class Directory$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DataInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class IOUtils:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class Similarity:

  Verifying word checkpoint changed:

    No occurrences

Checking class Collector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldDocs:

  Verifying word checkpoint changed:

    No occurrences

Checking class Sort:

  Verifying word checkpoint changed:

    No occurrences

Checking class Weight:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldDoc:

  Verifying word checkpoint changed:

    No occurrences

Checking class Explanation:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermStatistics:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermContext:

  Verifying word checkpoint changed:

    No occurrences

Checking class CollectionStatistics:

  Verifying word checkpoint changed:

    No occurrences

Checking class HitQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word checkpoint changed:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortField:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReaderUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word checkpoint changed:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiFields:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRef:

  Verifying word checkpoint changed:

    No occurrences

Checking class Scorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexableField:

  Verifying word checkpoint changed:

    No occurrences

Checking class BaseDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class MMapDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word checkpoint changed:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word checkpoint changed:

    No occurrences

Checking class FSLockFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class FSDirectory$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class Constants:

  Verifying word checkpoint changed:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word checkpoint changed:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfos:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class PriorityQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class Tokenizer:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeSource:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class BinaryDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfos:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word checkpoint changed:

    No occurrences

Checking class TextField:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldType:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredField:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word checkpoint changed:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeScheduler:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word checkpoint changed:

    No occurrences

Checking class Codec:

  Verifying word checkpoint changed:

    No occurrences

Checking class InfoStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word checkpoint changed:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeState:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word checkpoint changed:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericUpdate:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexFileNames:

  Verifying word checkpoint changed:

    No occurrences

Checking class FlushPolicy:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentMerger:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word checkpoint changed:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Terms$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word checkpoint changed:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word checkpoint changed:

    No occurrences

Checking class DataOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class IOContext$Context:

  Verifying word checkpoint changed:

    No occurrences

Checking class FlushInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lock$With:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word checkpoint changed:

    No occurrences

Checking class ToStringUtils:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortField$Type:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortField$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class StringHelper:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopDocsCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word checkpoint changed:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInvertState:

  Verifying word checkpoint changed:

    No occurrences

Checking class SmallFloat:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReaderSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiTerms:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiBits:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergedIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class UnicodeUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class CharsRef:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class ArrayUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word checkpoint changed:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermState:

  Verifying word checkpoint changed:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexableFieldType:

  Verifying word checkpoint changed:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class NativeFSLock:

  Verifying word checkpoint changed:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class LucenePackage:

  Verifying word checkpoint changed:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class CorruptIndexException:

  Verifying word checkpoint changed:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class CodecUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Tokenizer$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class CharFilter:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeSource$State:

  Verifying word checkpoint changed:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeReflector:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeSource$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeSource$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsEnum$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsEnum$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Store:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Index:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$TermVector:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericTokenStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word checkpoint changed:

    No occurrences

Checking class SetOnce:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word checkpoint changed:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word checkpoint changed:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedUpdates:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word checkpoint changed:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word checkpoint changed:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class PostingsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class NormsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentWriteState:

  Verifying word checkpoint changed:

    No occurrences

Checking class MutableBits:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FixedBitSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word checkpoint changed:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermVectorsReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldsProducer:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesProducer:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentReader$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldInfosReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentReader$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word checkpoint changed:

    No occurrences

Checking class CollectionUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word checkpoint changed:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word checkpoint changed:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word checkpoint changed:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word checkpoint changed:

    No occurrences

Checking class NamedSPILoader:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldsConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilterDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class PagedMutable:

  Verifying word checkpoint changed:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts:

  Verifying word checkpoint changed:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word checkpoint changed:

    No occurrences

Checking class Transition:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntsRef:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word checkpoint changed:

    No occurrences

Checking class State:

  Verifying word checkpoint changed:

    No occurrences

Checking class Automaton:

  Verifying word checkpoint changed:

    No occurrences

Checking class BasicOperations:

  Verifying word checkpoint changed:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class BasicAutomata:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class SpecialOperations:

  Verifying word checkpoint changed:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word checkpoint changed:

    No occurrences

Checking class Document:

  Verifying word checkpoint changed:

    No occurrences

Checking class Element:

  Verifying word checkpoint changed:

    No occurrences

Checking class Node:

  Verifying word checkpoint changed:

    No occurrences

Checking class NodeList:

  Verifying word checkpoint changed:

    No occurrences

Checking class Text:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word checkpoint changed:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word checkpoint changed:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$10:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$8:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$9:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$6:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$7:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$4:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$5:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class StringHelper$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word checkpoint changed:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word checkpoint changed:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word checkpoint changed:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word checkpoint changed:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class OrdTermState:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class TypeAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericUtils:

  Verifying word checkpoint changed:

    No occurrences

Checking class CharTermAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class OffsetAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Index$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Index$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Index$4:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Index$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class Field$Index$5:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class Counter:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteBlockPool:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntBlockPool:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class RAMFile:

  Verifying word checkpoint changed:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class RAMOutputStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentReadState:

  Verifying word checkpoint changed:

    No occurrences

Checking class BitVector:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFields:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word checkpoint changed:

    No occurrences

Checking class OpenBitSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class BitUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word checkpoint changed:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word checkpoint changed:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word checkpoint changed:

    No occurrences

Checking class RefCount:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word checkpoint changed:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word checkpoint changed:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word checkpoint changed:

    No occurrences

Checking class SPIClassIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Format:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Header:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class DirectPackedReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Direct64:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word checkpoint changed:

    No occurrences

Checking class Direct32:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperation:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class Direct8:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Direct16:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class GrowableWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class LongValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word checkpoint changed:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word checkpoint changed:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word checkpoint changed:

    No occurrences

Checking class RunAutomaton:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedIntSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word checkpoint changed:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word checkpoint changed:

    No occurrences

Checking class StatePair:

  Verifying word checkpoint changed:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word checkpoint changed:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word checkpoint changed:

    No occurrences

Checking class MinimizationOperations:

  Verifying word checkpoint changed:

    No occurrences

Checking class Util:

  Verifying word checkpoint changed:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word checkpoint changed:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word checkpoint changed:

    No occurrences

Checking class DOMException:

  Verifying word checkpoint changed:

    No occurrences

Checking class Attr:

  Verifying word checkpoint changed:

    No occurrences

Checking class TypeInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocumentType:

  Verifying word checkpoint changed:

    No occurrences

Checking class DOMImplementation:

  Verifying word checkpoint changed:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word checkpoint changed:

    No occurrences

Checking class DOMConfiguration:

  Verifying word checkpoint changed:

    No occurrences

Checking class NamedNodeMap:

  Verifying word checkpoint changed:

    No occurrences

Checking class UserDataHandler:

  Verifying word checkpoint changed:

    No occurrences

Checking class CharacterData:

  Verifying word checkpoint changed:

    No occurrences

Checking class ComplexExplanation:

  Verifying word checkpoint changed:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocTermOrds:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class BitsSlice:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class TimSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntroSorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericUtils$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericUtils$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word checkpoint changed:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word checkpoint changed:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word checkpoint changed:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocInverter:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class NormsConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word checkpoint changed:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsHash:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word checkpoint changed:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class RAMInputStream:

  Verifying word checkpoint changed:

    No occurrences

Checking class RAMDirectory:

  Verifying word checkpoint changed:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermInfosReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word checkpoint changed:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word checkpoint changed:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class PostingsConsumer:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermStats:

  Verifying word checkpoint changed:

    No occurrences

Checking class LongsRef:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperation$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word checkpoint changed:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class Sorter:

  Verifying word checkpoint changed:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word checkpoint changed:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word checkpoint changed:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word checkpoint changed:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST$BytesReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST$Arc:

  Verifying word checkpoint changed:

    No occurrences

Checking class Util$MinResult:

  Verifying word checkpoint changed:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word checkpoint changed:

    No occurrences

Checking class Outputs:

  Verifying word checkpoint changed:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word checkpoint changed:

    No occurrences

Checking class Util$FSTPath:

  Verifying word checkpoint changed:

    No occurrences

Checking class DOMStringList:

  Verifying word checkpoint changed:

    No occurrences

Checking class PagedBytes:

  Verifying word checkpoint changed:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsHashPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefHash:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocInverterPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteSliceReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word checkpoint changed:

    No occurrences

Checking class DocValuesWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word checkpoint changed:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word checkpoint changed:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermInfo:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word checkpoint changed:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word checkpoint changed:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesStore:

  Verifying word checkpoint changed:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class Builder$Arc:

  Verifying word checkpoint changed:

    No occurrences

Checking class Builder:

  Verifying word checkpoint changed:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word checkpoint changed:

    No occurrences

Checking class Builder$Node:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word checkpoint changed:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word checkpoint changed:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class LSResourceResolver:

  Verifying word checkpoint changed:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word checkpoint changed:

    No occurrences

Checking class MapOfSets:

  Verifying word checkpoint changed:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word checkpoint changed:

    No occurrences

Checking class PayloadAttribute:

  Verifying word checkpoint changed:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word checkpoint changed:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word checkpoint changed:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word checkpoint changed:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word checkpoint changed:

    No occurrences

Checking class TermBuffer:

  Verifying word checkpoint changed:

    No occurrences

Checking class MathUtil:

  Verifying word checkpoint changed:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class NodeHash:

  Verifying word checkpoint changed:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesStore$1:

  Verifying word checkpoint changed:

    No occurrences

Checking class BytesStore$2:

  Verifying word checkpoint changed:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class LSInput:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word checkpoint changed:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word checkpoint changed:

    No occurrences


Run Time:
                         analysis-behavior       5.901s
                          analysis-threads       0.007s
                       build-parsing-table       0.084s
                               grammar-opt       1.311s
                        grammar-rm-epsilon       4.291s
                                   parsing       0.034s
                                 soot-init      79.656s
                                     total     140.085s

Profiling Vars:
                                 cfg-nodes     104281
                       grammar-productions       1263
                            parse-branches          1
                      parsing-table-states       2029
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexSearcher:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Query:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Analyzer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class QueryParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ScoreDoc:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Filter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Directory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Document:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FSDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Version:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DirectoryReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopDocs:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TokenStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReusableStringReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexWriter:

  Verifying word getDocCount getDocCount:

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3529
      Atomic: YES

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3529
      Atomic: YES

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3546
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:4226
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3786
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3788
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3789
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3451 IndexWriter.java:3700
      Atomic: NO

    *** Timeout ***

Checking class IndexCommit:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Fields:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Terms:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexReaderContext:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Term:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AtomicReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompositeReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocIdSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Bits:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IOContext:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lock:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LockFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Directory$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DataInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IOUtils:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Similarity:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Collector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldDocs:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Sort:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Weight:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldDoc:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Explanation:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermStatistics:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermContext:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CollectionStatistics:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class HitQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReaderUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiFields:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRef:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Scorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexableField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BaseDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MMapDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FSLockFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FSDirectory$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Constants:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentInfos:

  Verifying word getDocCount getDocCount:

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:454 SegmentInfos.java:554
      Atomic: NO

      Method: SegmentInfos.read()
      Calls Location: SegmentInfos.java:344 SegmentInfos.java:344
      Atomic: NO

      Method: SegmentInfos.totalDocCount()
      Calls Location: SegmentInfos.java:1083 SegmentInfos.java:1083
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:454 SegmentInfos.java:454
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:554 SegmentInfos.java:554
      Atomic: NO

      Method: SegmentInfos.write()
      Calls Location: SegmentInfos.java:554 SegmentInfos.java:454
      Atomic: NO

Checking class TopDocs$ShardRef:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PriorityQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Tokenizer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeSource:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BinaryDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfos:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfo:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TextField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldType:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy:

  Verifying word getDocCount getDocCount:

      Method: MergePolicy.size()
      Calls Location: MergePolicy.java:515 MergePolicy.java:517
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:517 MergePolicy.java:517
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:517 MergePolicy.java:515
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:517 MergePolicy.java:515
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:515 MergePolicy.java:517
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:515 MergePolicy.java:515
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:515 MergePolicy.java:515
      Atomic: NO

      Method: MergePolicy.size()
      Calls Location: MergePolicy.java:515 MergePolicy.java:517
      Atomic: NO

      Method: MergePolicy.size()
      Calls Location: MergePolicy.java:515 MergePolicy.java:515
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:515 MergePolicy.java:517
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:515 MergePolicy.java:515
      Atomic: NO

      Method: MergePolicy.useCompoundFile()
      Calls Location: MergePolicy.java:515 MergePolicy.java:515
      Atomic: NO

Checking class MergeScheduler:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word getDocCount getDocCount:

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:240 BufferedUpdatesStream.java:241
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:241 BufferedUpdatesStream.java:241
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:291 BufferedUpdatesStream.java:241
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:290 BufferedUpdatesStream.java:241
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:241 BufferedUpdatesStream.java:290
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:291 BufferedUpdatesStream.java:290
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:240 BufferedUpdatesStream.java:290
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:290 BufferedUpdatesStream.java:290
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:241 BufferedUpdatesStream.java:240
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:291 BufferedUpdatesStream.java:240
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:240 BufferedUpdatesStream.java:240
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:290 BufferedUpdatesStream.java:240
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:290 BufferedUpdatesStream.java:291
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:241 BufferedUpdatesStream.java:291
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:291 BufferedUpdatesStream.java:291
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:240 BufferedUpdatesStream.java:291
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Codec:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InfoStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word getDocCount getDocCount:

      Method: MergePolicy$OneMerge.totalNumDocs()
      Calls Location: MergePolicy.java:275 MergePolicy.java:275
      Atomic: NO

      Method: MergePolicy$OneMerge.<init>()
      Calls Location: MergePolicy.java:128 MergePolicy.java:128
      Atomic: NO

Checking class FrozenBufferedUpdates:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergeState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word getDocCount getDocCount:

      Method: ReadersAndUpdates.verifyDocCounts()
      Calls Location: ReadersAndUpdates.java:133 ReadersAndUpdates.java:133
      Atomic: YES

      Method: ReadersAndUpdates.verifyDocCounts()
      Calls Location: ReadersAndUpdates.java:124 ReadersAndUpdates.java:124
      Atomic: YES

      Method: ReadersAndUpdates.verifyDocCounts()
      Calls Location: ReadersAndUpdates.java:124 ReadersAndUpdates.java:133
      Atomic: YES

      Method: ReadersAndUpdates.initWritableLiveDocs()
      Calls Location: ReadersAndUpdates.java:250 ReadersAndUpdates.java:260
      Atomic: YES

      Method: ReadersAndUpdates.verifyDocCounts()
      Calls Location: ReadersAndUpdates.java:130 ReadersAndUpdates.java:133
      Atomic: YES

Checking class MergeState$CheckAbort:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericUpdate:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentReader:

  Verifying word getDocCount getDocCount:

      Method: SegmentReader.checkBounds()
      Calls Location: SegmentReader.java:294 SegmentReader.java:294
      Atomic: NO

Checking class IndexWriterConfig$OpenMode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexFileNames:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FlushPolicy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentMerger:

  Verifying word getDocCount getDocCount:

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:99 SegmentMerger.java:143
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:69 SegmentMerger.java:99
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:69 SegmentMerger.java:143
      Atomic: NO

Checking class MergeInfo:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Terms$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DataOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IOContext$Context:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FlushInfo:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lock$With:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ToStringUtils:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortField$Type:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortField$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StringHelper:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopDocsCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInvertState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SmallFloat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReaderSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiTerms:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiBits:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergedIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class UnicodeUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CharsRef:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ArrayUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexableFieldType:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NativeFSLock:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LucenePackage:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CorruptIndexException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CodecUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Tokenizer$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CharFilter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeSource$State:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeReflector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeSource$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeSource$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRefIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsEnum$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsEnum$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Store:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Index:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$TermVector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericTokenStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SetOnce:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word getDocCount getDocCount:

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:492 DocumentsWriterPerThread.java:529
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:471 DocumentsWriterPerThread.java:492
      Atomic: NO

      Method: DocumentsWriterPerThread.flush()
      Calls Location: DocumentsWriterPerThread.java:471 DocumentsWriterPerThread.java:529
      Atomic: NO

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedUpdates:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PostingsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NormsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word getDocCount getDocCount:

      Method: Lucene40LiveDocsFormat.writeLiveDocs()
      Calls Location: Lucene40LiveDocsFormat.java:101 Lucene40LiveDocsFormat.java:102
      Atomic: NO

      Method: Lucene40LiveDocsFormat.readLiveDocs()
      Calls Location: Lucene40LiveDocsFormat.java:92 Lucene40LiveDocsFormat.java:93
      Atomic: NO

      Method: Lucene40LiveDocsFormat.readLiveDocs()
      Calls Location: Lucene40LiveDocsFormat.java:92 Lucene40LiveDocsFormat.java:92
      Atomic: NO

Checking class Lucene3xTermVectorsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentWriteState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MutableBits:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FixedBitSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermVectorsReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldsProducer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesProducer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentReader$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldInfosReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentReader$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CollectionUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word getDocCount getDocCount:

      Method: TieredMergePolicy.findForcedDeletesMerges()
      Calls Location: TieredMergePolicy.java:564 TieredMergePolicy.java:564
      Atomic: NO

Checking class FlushByRamOrCountsPolicy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NamedSPILoader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldsConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilterDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PagedMutable:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Transition:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IntsRef:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class State:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Automaton:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BasicOperations:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BasicAutomata:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SpecialOperations:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Document:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Element:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Node:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NodeList:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Text:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$10:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$8:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$9:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$6:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$7:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StringHelper$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word getDocCount getDocCount:

      Method: Lucene3xStoredFieldsReader.<init>()
      Calls Location: Lucene3xStoredFieldsReader.java:179 Lucene3xStoredFieldsReader.java:180
      Atomic: NO

      Method: Lucene3xStoredFieldsReader.<init>()
      Calls Location: Lucene3xStoredFieldsReader.java:144 Lucene3xStoredFieldsReader.java:179
      Atomic: NO

Checking class IndexFormatTooNewException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class OrdTermState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TypeAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericUtils:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CharTermAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class OffsetAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Index$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Index$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Index$4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Index$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Field$Index$5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Counter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteBlockPool:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IntBlockPool:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RAMFile:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RAMOutputStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentReadState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BitVector:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFields:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class OpenBitSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BitUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RefCount:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SPIClassIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Format:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Header:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DirectPackedReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Direct64:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Direct32:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperation:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Direct8:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Direct16:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class GrowableWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LongValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RunAutomaton:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedIntSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StatePair:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MinimizationOperations:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Util:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DOMException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Attr:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TypeInfo:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocumentType:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DOMImplementation:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DOMConfiguration:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NamedNodeMap:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class UserDataHandler:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CharacterData:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ComplexExplanation:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocTermOrds:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BitsSlice:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TimSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IntroSorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericUtils$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericUtils$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocInverter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NormsConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsHash:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word getDocCount getDocCount:

      Method: DocValuesProcessor.flush()
      Calls Location: DocValuesProcessor.java:81 DocValuesProcessor.java:81
      Atomic: NO

Checking class IntBlockPool$SliceWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RAMInputStream:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class RAMDirectory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermInfosReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PostingsConsumer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermStats:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LongsRef:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperation$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Sorter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST$BytesReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST$Arc:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Util$MinResult:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Outputs:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Util$FSTPath:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DOMStringList:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PagedBytes:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsHashPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word getDocCount getDocCount:

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:483 FreqProxTermsWriterPerField.java:461
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:461 FreqProxTermsWriterPerField.java:461
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:461 FreqProxTermsWriterPerField.java:461
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:483 FreqProxTermsWriterPerField.java:461
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:461 FreqProxTermsWriterPerField.java:483
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:483 FreqProxTermsWriterPerField.java:483
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:381 FreqProxTermsWriterPerField.java:461
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:381 FreqProxTermsWriterPerField.java:461
      Atomic: NO

      Method: FreqProxTermsWriterPerField.flush()
      Calls Location: FreqProxTermsWriterPerField.java:381 FreqProxTermsWriterPerField.java:483
      Atomic: NO

Checking class BytesRefHash:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocInverterPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteSliceReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DocValuesWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermInfo:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesStore:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Builder$Arc:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Builder:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Builder$Node:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LSResourceResolver:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MapOfSets:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class PayloadAttribute:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class TermBuffer:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MathUtil:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class NodeHash:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesStore$1:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class BytesStore$2:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class LSInput:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word getDocCount getDocCount:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word getDocCount getDocCount:

    No occurrences


Run Time:
                                .buildTree      53.287s
                                    .onLCA     135.384s
                         analysis-behavior       9.719s
                          analysis-threads       0.007s
                       build-parsing-table       0.698s
                       check-word-instance       0.006s
                               grammar-opt       1.444s
                        grammar-rm-epsilon       7.911s
                                   parsing     140.366s
                                 soot-init      88.077s
                                     total     449.475s

Profiling Vars:
                                 cfg-nodes     110044
                       grammar-productions       1977
                            parse-branches   59257317
                               parse-trees         72
                      parsing-table-states       2760
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word size get:

    No occurrences

Checking class IndexSearcher:

  Verifying word size get:

      Method: IndexSearcher.slices()
      Calls Location: IndexSearcher.java:170 IndexSearcher.java:172
      Atomic: NO

Checking class Query:

  Verifying word size get:

    No occurrences

Checking class Analyzer:

  Verifying word size get:

    No occurrences

Checking class QueryParser:

  Verifying word size get:

    No occurrences

Checking class IndexReader:

  Verifying word size get:

    No occurrences

Checking class ScoreDoc:

  Verifying word size get:

    No occurrences

Checking class Filter:

  Verifying word size get:

    No occurrences

Checking class Directory:

  Verifying word size get:

    No occurrences

Checking class Document:

  Verifying word size get:

      Method: Document.toString()
      Calls Location: Document.java:243 Document.java:244
      Atomic: NO

      Method: Document.toString()
      Calls Location: Document.java:246 Document.java:244
      Atomic: NO

Checking class StandardAnalyzer:

  Verifying word size get:

    No occurrences

Checking class FSDirectory:

  Verifying word size get:

    No occurrences

Checking class Version:

  Verifying word size get:

    No occurrences

Checking class DirectoryReader:

  Verifying word size get:

    No occurrences

Checking class TopDocs:

  Verifying word size get:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word size get:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word size get:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word size get:

    No occurrences

Checking class TokenStream:

  Verifying word size get:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word size get:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word size get:

    No occurrences

Checking class ReusableStringReader:

  Verifying word size get:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word size get:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word size get:

    No occurrences

Checking class IndexWriter:

  Verifying word size get:

      Method: IndexWriter.closeMergeReaders()
      Calls Location: IndexWriter.java:3928 IndexWriter.java:3934
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:3928 IndexWriter.java:3934
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3928 IndexWriter.java:1971
      Atomic: NO

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3928 IndexWriter.java:1960
      Atomic: NO

    *** Timeout ***

Checking class IndexCommit:

  Verifying word size get:

    No occurrences

Checking class Fields:

  Verifying word size get:

    No occurrences

Checking class Terms:

  Verifying word size get:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word size get:

    No occurrences

Checking class IndexReaderContext:

  Verifying word size get:

    No occurrences

Checking class Term:

  Verifying word size get:

    No occurrences

Checking class AtomicReader:

  Verifying word size get:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word size get:

    No occurrences

Checking class CompositeReader:

  Verifying word size get:

      Method: CompositeReader.toString()
      Calls Location: CompositeReader.java:81 CompositeReader.java:82
      Atomic: NO

Checking class DocIdSet:

  Verifying word size get:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word size get:

    No occurrences

Checking class Bits:

  Verifying word size get:

    No occurrences

Checking class IndexOutput:

  Verifying word size get:

    No occurrences

Checking class IOContext:

  Verifying word size get:

    No occurrences

Checking class IndexInput:

  Verifying word size get:

    No occurrences

Checking class Lock:

  Verifying word size get:

    No occurrences

Checking class LockFactory:

  Verifying word size get:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word size get:

    No occurrences

Checking class Directory$1:

  Verifying word size get:

    No occurrences

Checking class DataInput:

  Verifying word size get:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word size get:

    No occurrences

Checking class IOUtils:

  Verifying word size get:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word size get:

    No occurrences

Checking class Similarity:

  Verifying word size get:

    No occurrences

Checking class Collector:

  Verifying word size get:

    No occurrences

Checking class TopFieldDocs:

  Verifying word size get:

    No occurrences

Checking class Sort:

  Verifying word size get:

    No occurrences

Checking class Weight:

  Verifying word size get:

    No occurrences

Checking class FieldDoc:

  Verifying word size get:

    No occurrences

Checking class Explanation:

  Verifying word size get:

    No occurrences

Checking class TermStatistics:

  Verifying word size get:

    No occurrences

Checking class TermContext:

  Verifying word size get:

    No occurrences

Checking class CollectionStatistics:

  Verifying word size get:

    No occurrences

Checking class HitQueue:

  Verifying word size get:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word size get:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery:

  Verifying word size get:

    No occurrences

Checking class SortField:

  Verifying word size get:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word size get:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector:

  Verifying word size get:

    No occurrences

Checking class ReaderUtil:

  Verifying word size get:

      Method: ReaderUtil.subIndex()
      Calls Location: ReaderUtil.java:75 ReaderUtil.java:86
      Atomic: NO

      Method: ReaderUtil.subIndex()
      Calls Location: ReaderUtil.java:75 ReaderUtil.java:80
      Atomic: NO

Checking class IndexSearcher$ExecutionHelper:

  Verifying word size get:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word size get:

    No occurrences

Checking class MultiFields:

  Verifying word size get:

      Method: MultiFields.getLiveDocs()
      Calls Location: MultiFields.java:105 MultiFields.java:108
      Atomic: NO

      Method: MultiFields.getLiveDocs()
      Calls Location: MultiFields.java:105 MultiFields.java:114
      Atomic: NO

      Method: MultiFields.getFields()
      Calls Location: MultiFields.java:64 MultiFields.java:70
      Atomic: NO

Checking class BytesRef:

  Verifying word size get:

    No occurrences

Checking class Scorer:

  Verifying word size get:

    No occurrences

Checking class IndexableField:

  Verifying word size get:

    No occurrences

Checking class BaseDirectory:

  Verifying word size get:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word size get:

    No occurrences

Checking class MMapDirectory:

  Verifying word size get:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word size get:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word size get:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word size get:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word size get:

    No occurrences

Checking class FSLockFactory:

  Verifying word size get:

    No occurrences

Checking class FSDirectory$1:

  Verifying word size get:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word size get:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word size get:

    No occurrences

Checking class Constants:

  Verifying word size get:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word size get:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word size get:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word size get:

      Method: StandardDirectoryReader.open()
      Calls Location: StandardDirectoryReader.java:142 StandardDirectoryReader.java:143
      Atomic: NO

      Method: StandardDirectoryReader.open()
      Calls Location: StandardDirectoryReader.java:142 StandardDirectoryReader.java:162
      Atomic: NO

Checking class SegmentInfos:

  Verifying word size get:

      Method: SegmentInfos.files()
      Calls Location: SegmentInfos.java:1155 SegmentInfos.java:167
      Atomic: NO

      Method: SegmentInfos.toString()
      Calls Location: SegmentInfos.java:1155 SegmentInfos.java:167
      Atomic: NO

      Method: SegmentInfos.applyMergeChanges()
      Calls Location: SegmentInfos.java:1099 SegmentInfos.java:1101
      Atomic: NO

Checking class TopDocs$ShardRef:

  Verifying word size get:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word size get:

    No occurrences

Checking class PriorityQueue:

  Verifying word size get:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word size get:

    No occurrences

Checking class Tokenizer:

  Verifying word size get:

    No occurrences

Checking class AttributeSource:

  Verifying word size get:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word size get:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word size get:

    No occurrences

Checking class DocsEnum:

  Verifying word size get:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word size get:

    No occurrences

Checking class NumericDocValues:

  Verifying word size get:

    No occurrences

Checking class BinaryDocValues:

  Verifying word size get:

    No occurrences

Checking class SortedDocValues:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word size get:

    No occurrences

Checking class FieldInfos:

  Verifying word size get:

    No occurrences

Checking class FieldInfo:

  Verifying word size get:

    No occurrences

Checking class TermsEnum:

  Verifying word size get:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word size get:

    No occurrences

Checking class TextField:

  Verifying word size get:

    No occurrences

Checking class FieldType:

  Verifying word size get:

    No occurrences

Checking class Field:

  Verifying word size get:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word size get:

    No occurrences

Checking class StoredField:

  Verifying word size get:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word size get:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word size get:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriter:

  Verifying word size get:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word size get:

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:274 IndexFileDeleter.java:281
      Atomic: NO

      Method: IndexFileDeleter.deletePendingFiles()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:407
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:292 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:274 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:292 IndexFileDeleter.java:296
      Atomic: NO

      Method: IndexFileDeleter.deleteCommits()
      Calls Location: IndexFileDeleter.java:274 IndexFileDeleter.java:296
      Atomic: NO

      Method: IndexFileDeleter.deletePendingFiles()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:405
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:274 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:274 IndexFileDeleter.java:296
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:274 IndexFileDeleter.java:281
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:296
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:281
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:296
      Atomic: NO

      Method: IndexFileDeleter.checkpoint()
      Calls Location: IndexFileDeleter.java:402 IndexFileDeleter.java:281
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:292 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:292 IndexFileDeleter.java:296
      Atomic: NO

      Method: IndexFileDeleter.<init>()
      Calls Location: IndexFileDeleter.java:292 IndexFileDeleter.java:281
      Atomic: NO

      Method: IndexFileDeleter.revisitPolicy()
      Calls Location: IndexFileDeleter.java:391 IndexFileDeleter.java:281
      Atomic: NO

      Method: IndexFileDeleter.revisitPolicy()
      Calls Location: IndexFileDeleter.java:391 IndexFileDeleter.java:299
      Atomic: NO

      Method: IndexFileDeleter.revisitPolicy()
      Calls Location: IndexFileDeleter.java:391 IndexFileDeleter.java:296
      Atomic: NO

Checking class MergePolicy:

  Verifying word size get:

    No occurrences

Checking class MergeScheduler:

  Verifying word size get:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word size get:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word size get:

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:360 BufferedUpdatesStream.java:363
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:185 BufferedUpdatesStream.java:192
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:342 BufferedUpdatesStream.java:363
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:340 BufferedUpdatesStream.java:363
      Atomic: YES

      Method: BufferedUpdatesStream.push()
      Calls Location: BufferedUpdatesStream.java:89 BufferedUpdatesStream.java:89
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:172 BufferedUpdatesStream.java:192
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:158 BufferedUpdatesStream.java:192
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:342 BufferedUpdatesStream.java:344
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:340 BufferedUpdatesStream.java:344
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word size get:

    No occurrences

Checking class Codec:

  Verifying word size get:

    No occurrences

Checking class InfoStream:

  Verifying word size get:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word size get:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word size get:

      Method: MergePolicy$OneMerge.segString()
      Calls Location: MergePolicy.java:242 MergePolicy.java:245
      Atomic: NO

Checking class FrozenBufferedUpdates:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word size get:

    No occurrences

Checking class MergeState:

  Verifying word size get:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word size get:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word size get:

    No occurrences

Checking class SegmentInfo:

  Verifying word size get:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word size get:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word size get:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word size get:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word size get:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word size get:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word size get:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word size get:

    No occurrences

Checking class NumericUpdate:

  Verifying word size get:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word size get:

    No occurrences

Checking class SegmentReader:

  Verifying word size get:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word size get:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word size get:

      Method: MergePolicy$MergeSpecification.segString()
      Calls Location: MergePolicy.java:316 MergePolicy.java:318
      Atomic: NO

Checking class Lucene3xSegmentInfoFormat:

  Verifying word size get:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word size get:

    No occurrences

Checking class IndexFileNames:

  Verifying word size get:

    No occurrences

Checking class FlushPolicy:

  Verifying word size get:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word size get:

    No occurrences

Checking class SegmentMerger:

  Verifying word size get:

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:291 SegmentMerger.java:370
      Atomic: NO

      Method: SegmentMerger.mergeTerms()
      Calls Location: SegmentMerger.java:369 SegmentMerger.java:370
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:289 SegmentMerger.java:370
      Atomic: NO

      Method: SegmentMerger.setMatchingSegmentReaders()
      Calls Location: SegmentMerger.java:256 SegmentMerger.java:264
      Atomic: NO

      Method: SegmentMerger.setDocMaps()
      Calls Location: SegmentMerger.java:347 SegmentMerger.java:349
      Atomic: NO

      Method: SegmentMerger.setDocMaps()
      Calls Location: SegmentMerger.java:338 SegmentMerger.java:349
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:290 SegmentMerger.java:370
      Atomic: NO

      Method: SegmentMerger.merge()
      Calls Location: SegmentMerger.java:256 SegmentMerger.java:370
      Atomic: NO

Checking class MergeInfo:

  Verifying word size get:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word size get:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word size get:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word size get:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word size get:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word size get:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word size get:

    No occurrences

Checking class Terms$1:

  Verifying word size get:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word size get:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word size get:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word size get:

    No occurrences

Checking class DataOutput:

  Verifying word size get:

    No occurrences

Checking class IOContext$Context:

  Verifying word size get:

    No occurrences

Checking class FlushInfo:

  Verifying word size get:

    No occurrences

Checking class Lock$With:

  Verifying word size get:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word size get:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word size get:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word size get:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word size get:

    No occurrences

Checking class ToStringUtils:

  Verifying word size get:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word size get:

    No occurrences

Checking class SortField$Type:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word size get:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word size get:

    No occurrences

Checking class FieldComparator:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word size get:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word size get:

    No occurrences

Checking class SortField$1:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word size get:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word size get:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word size get:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word size get:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word size get:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word size get:

    No occurrences

Checking class FieldCache:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word size get:

    No occurrences

Checking class StringHelper:

  Verifying word size get:

    No occurrences

Checking class TopDocsCollector:

  Verifying word size get:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word size get:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word size get:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word size get:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word size get:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word size get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word size get:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word size get:

    No occurrences

Checking class FieldInvertState:

  Verifying word size get:

    No occurrences

Checking class SmallFloat:

  Verifying word size get:

    No occurrences

Checking class ReaderSlice:

  Verifying word size get:

    No occurrences

Checking class MultiTerms:

  Verifying word size get:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word size get:

    No occurrences

Checking class MultiBits:

  Verifying word size get:

    No occurrences

Checking class MergedIterator:

  Verifying word size get:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word size get:

    No occurrences

Checking class UnicodeUtil:

  Verifying word size get:

    No occurrences

Checking class CharsRef:

  Verifying word size get:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word size get:

    No occurrences

Checking class ArrayUtil:

  Verifying word size get:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word size get:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word size get:

    No occurrences

Checking class TermState:

  Verifying word size get:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word size get:

    No occurrences

Checking class IndexableFieldType:

  Verifying word size get:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word size get:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word size get:

    No occurrences

Checking class NativeFSLock:

  Verifying word size get:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word size get:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word size get:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word size get:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word size get:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word size get:

    No occurrences

Checking class LucenePackage:

  Verifying word size get:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word size get:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word size get:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word size get:

    No occurrences

Checking class CorruptIndexException:

  Verifying word size get:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word size get:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word size get:

    No occurrences

Checking class CodecUtil:

  Verifying word size get:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word size get:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word size get:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word size get:

    No occurrences

Checking class Tokenizer$1:

  Verifying word size get:

    No occurrences

Checking class CharFilter:

  Verifying word size get:

    No occurrences

Checking class AttributeSource$State:

  Verifying word size get:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word size get:

    No occurrences

Checking class AttributeImpl:

  Verifying word size get:

    No occurrences

Checking class AttributeReflector:

  Verifying word size get:

    No occurrences

Checking class AttributeSource$1:

  Verifying word size get:

    No occurrences

Checking class AttributeSource$2:

  Verifying word size get:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word size get:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word size get:

    No occurrences

Checking class BytesRefIterator:

  Verifying word size get:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word size get:

    No occurrences

Checking class TermsEnum$1:

  Verifying word size get:

    No occurrences

Checking class TermsEnum$2:

  Verifying word size get:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word size get:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word size get:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word size get:

    No occurrences

Checking class Field$Store:

  Verifying word size get:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word size get:

    No occurrences

Checking class Field$Index:

  Verifying word size get:

    No occurrences

Checking class Field$TermVector:

  Verifying word size get:

    No occurrences

Checking class NumericTokenStream:

  Verifying word size get:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word size get:

    No occurrences

Checking class Field$1:

  Verifying word size get:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word size get:

      Method: CompositeReaderContext$Builder.build()
      Calls Location: CompositeReaderContext.java:104 CompositeReaderContext.java:113
      Atomic: NO

      Method: CompositeReaderContext$Builder.build()
      Calls Location: CompositeReaderContext.java:112 CompositeReaderContext.java:113
      Atomic: NO

      Method: CompositeReaderContext$Builder.build()
      Calls Location: CompositeReaderContext.java:97 CompositeReaderContext.java:113
      Atomic: NO

Checking class SetOnce:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word size get:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word size get:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word size get:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word size get:

    No occurrences

Checking class BufferedUpdates:

  Verifying word size get:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word size get:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word size get:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word size get:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word size get:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word size get:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word size get:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word size get:

    No occurrences

Checking class PostingsFormat:

  Verifying word size get:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word size get:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word size get:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word size get:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word size get:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word size get:

    No occurrences

Checking class DocValuesFormat:

  Verifying word size get:

    No occurrences

Checking class NormsFormat:

  Verifying word size get:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word size get:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word size get:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word size get:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word size get:

    No occurrences

Checking class SegmentWriteState:

  Verifying word size get:

    No occurrences

Checking class MutableBits:

  Verifying word size get:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word size get:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word size get:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word size get:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word size get:

    No occurrences

Checking class FixedBitSet:

  Verifying word size get:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word size get:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word size get:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word size get:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word size get:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word size get:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word size get:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word size get:

    No occurrences

Checking class SegmentDocValues:

  Verifying word size get:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word size get:

    No occurrences

Checking class TermVectorsReader:

  Verifying word size get:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word size get:

    No occurrences

Checking class FieldsProducer:

  Verifying word size get:

    No occurrences

Checking class DocValuesProducer:

  Verifying word size get:

    No occurrences

Checking class SegmentReader$2:

  Verifying word size get:

    No occurrences

Checking class FieldInfosReader:

  Verifying word size get:

    No occurrences

Checking class SegmentReader$1:

  Verifying word size get:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word size get:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word size get:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word size get:

    No occurrences

Checking class CollectionUtil:

  Verifying word size get:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word size get:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word size get:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word size get:

      Method: KeepOnlyLastCommitDeletionPolicy.onCommit()
      Calls Location: KeepOnlyLastCommitDeletionPolicy.java:51 KeepOnlyLastCommitDeletionPolicy.java:53
      Atomic: NO

Checking class ConcurrentMergeScheduler:

  Verifying word size get:

      Method: ConcurrentMergeScheduler.merge()
      Calls Location: ConcurrentMergeScheduler.java:177 ConcurrentMergeScheduler.java:178
      Atomic: YES

      Method: ConcurrentMergeScheduler.updateMergeThreads()
      Calls Location: ConcurrentMergeScheduler.java:177 ConcurrentMergeScheduler.java:178
      Atomic: YES

Checking class DocumentsWriterFlushQueue:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word size get:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word size get:

    No occurrences

Checking class NamedSPILoader:

  Verifying word size get:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word size get:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word size get:

      Method: TermVectorsWriter.merge()
      Calls Location: TermVectorsWriter.java:182 TermVectorsWriter.java:183
      Atomic: NO

Checking class FieldsConsumer:

  Verifying word size get:

    No occurrences

Checking class FilterDirectory:

  Verifying word size get:

    No occurrences

Checking class PagedMutable:

  Verifying word size get:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word size get:

    No occurrences

Checking class PackedInts:

  Verifying word size get:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word size get:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word size get:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word size get:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word size get:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word size get:

    No occurrences

Checking class Transition:

  Verifying word size get:

    No occurrences

Checking class IntsRef:

  Verifying word size get:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word size get:

    No occurrences

Checking class State:

  Verifying word size get:

    No occurrences

Checking class Automaton:

  Verifying word size get:

    No occurrences

Checking class BasicOperations:

  Verifying word size get:

      Method: BasicOperations.concatenate()
      Calls Location: BasicOperations.java:112 BasicOperations.java:113
      Atomic: NO

Checking class SingleTermsEnum:

  Verifying word size get:

    No occurrences

Checking class BasicAutomata:

  Verifying word size get:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word size get:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word size get:

    No occurrences

Checking class SpecialOperations:

  Verifying word size get:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word size get:

    No occurrences

Checking class Document:

  Verifying word size get:

    No occurrences

Checking class Element:

  Verifying word size get:

    No occurrences

Checking class Node:

  Verifying word size get:

    No occurrences

Checking class NodeList:

  Verifying word size get:

    No occurrences

Checking class Text:

  Verifying word size get:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word size get:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word size get:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word size get:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word size get:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word size get:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word size get:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word size get:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word size get:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word size get:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word size get:

    No occurrences

Checking class FieldCache$10:

  Verifying word size get:

    No occurrences

Checking class FieldCache$8:

  Verifying word size get:

    No occurrences

Checking class FieldCache$9:

  Verifying word size get:

    No occurrences

Checking class FieldCache$6:

  Verifying word size get:

    No occurrences

Checking class FieldCache$7:

  Verifying word size get:

    No occurrences

Checking class FieldCache$4:

  Verifying word size get:

    No occurrences

Checking class FieldCache$5:

  Verifying word size get:

    No occurrences

Checking class FieldCache$2:

  Verifying word size get:

    No occurrences

Checking class FieldCache$3:

  Verifying word size get:

    No occurrences

Checking class FieldCache$1:

  Verifying word size get:

    No occurrences

Checking class StringHelper$1:

  Verifying word size get:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word size get:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word size get:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word size get:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word size get:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word size get:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word size get:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word size get:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word size get:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word size get:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word size get:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word size get:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word size get:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word size get:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word size get:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word size get:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word size get:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word size get:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word size get:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word size get:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word size get:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word size get:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word size get:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word size get:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word size get:

    No occurrences

Checking class OrdTermState:

  Verifying word size get:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word size get:

    No occurrences

Checking class TypeAttribute:

  Verifying word size get:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word size get:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word size get:

    No occurrences

Checking class NumericUtils:

  Verifying word size get:

    No occurrences

Checking class CharTermAttribute:

  Verifying word size get:

    No occurrences

Checking class OffsetAttribute:

  Verifying word size get:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word size get:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word size get:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word size get:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word size get:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word size get:

    No occurrences

Checking class Field$Index$2:

  Verifying word size get:

    No occurrences

Checking class Field$Index$1:

  Verifying word size get:

    No occurrences

Checking class Field$Index$4:

  Verifying word size get:

    No occurrences

Checking class Field$Index$3:

  Verifying word size get:

    No occurrences

Checking class Field$Index$5:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word size get:

    No occurrences

Checking class DocConsumer:

  Verifying word size get:

    No occurrences

Checking class Counter:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word size get:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word size get:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word size get:

    No occurrences

Checking class ByteBlockPool:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word size get:

    No occurrences

Checking class IntBlockPool:

  Verifying word size get:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word size get:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word size get:

    No occurrences

Checking class RAMFile:

  Verifying word size get:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word size get:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word size get:

    No occurrences

Checking class RAMOutputStream:

  Verifying word size get:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word size get:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word size get:

      Method: CoalescedUpdates$1.iterator()
      Calls Location: CoalescedUpdates.java:62 CoalescedUpdates.java:63
      Atomic: NO

      Method: CoalescedUpdates$1.iterator()
      Calls Location: CoalescedUpdates.java:61 CoalescedUpdates.java:63
      Atomic: NO

Checking class QueryWrapperFilter$1:

  Verifying word size get:

    No occurrences

Checking class SegmentReadState:

  Verifying word size get:

    No occurrences

Checking class BitVector:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word size get:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFields:

  Verifying word size get:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word size get:

    No occurrences

Checking class OpenBitSet:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues:

  Verifying word size get:

      Method: MultiDocValues.getSortedSetValues()
      Calls Location: MultiDocValues.java:282 MultiDocValues.java:287
      Atomic: NO

      Method: MultiDocValues.getSortedValues()
      Calls Location: MultiDocValues.java:238 MultiDocValues.java:243
      Atomic: NO

      Method: MultiDocValues.getNormValues()
      Calls Location: MultiDocValues.java:58 MultiDocValues.java:73
      Atomic: NO

      Method: MultiDocValues.getNormValues()
      Calls Location: MultiDocValues.java:58 MultiDocValues.java:62
      Atomic: NO

      Method: MultiDocValues.getDocsWithField()
      Calls Location: MultiDocValues.java:148 MultiDocValues.java:160
      Atomic: NO

      Method: MultiDocValues.getSortedSetValues()
      Calls Location: MultiDocValues.java:282 MultiDocValues.java:294
      Atomic: NO

      Method: MultiDocValues.getSortedValues()
      Calls Location: MultiDocValues.java:238 MultiDocValues.java:250
      Atomic: NO

      Method: MultiDocValues.getBinaryValues()
      Calls Location: MultiDocValues.java:193 MultiDocValues.java:205
      Atomic: NO

      Method: MultiDocValues.getNumericValues()
      Calls Location: MultiDocValues.java:104 MultiDocValues.java:115
      Atomic: NO

      Method: MultiDocValues.getDocsWithField()
      Calls Location: MultiDocValues.java:148 MultiDocValues.java:152
      Atomic: NO

      Method: MultiDocValues.getBinaryValues()
      Calls Location: MultiDocValues.java:193 MultiDocValues.java:198
      Atomic: NO

      Method: MultiDocValues.getNumericValues()
      Calls Location: MultiDocValues.java:104 MultiDocValues.java:108
      Atomic: NO

Checking class BitUtil:

  Verifying word size get:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word size get:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word size get:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word size get:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word size get:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word size get:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word size get:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word size get:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word size get:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word size get:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word size get:

    No occurrences

Checking class RefCount:

  Verifying word size get:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word size get:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word size get:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word size get:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word size get:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word size get:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word size get:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word size get:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word size get:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word size get:

    No occurrences

Checking class SPIClassIterator:

  Verifying word size get:

    No occurrences

Checking class TermsConsumer:

  Verifying word size get:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Format:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Header:

  Verifying word size get:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word size get:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word size get:

    No occurrences

Checking class DirectPackedReader:

  Verifying word size get:

    No occurrences

Checking class Packed64:

  Verifying word size get:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word size get:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word size get:

    No occurrences

Checking class PackedInts$1:

  Verifying word size get:

    No occurrences

Checking class Direct64:

  Verifying word size get:

    No occurrences

Checking class PackedInts$2:

  Verifying word size get:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word size get:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word size get:

    No occurrences

Checking class Direct32:

  Verifying word size get:

    No occurrences

Checking class BulkOperation:

  Verifying word size get:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word size get:

    No occurrences

Checking class Direct8:

  Verifying word size get:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word size get:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word size get:

    No occurrences

Checking class Direct16:

  Verifying word size get:

    No occurrences

Checking class PackedWriter:

  Verifying word size get:

    No occurrences

Checking class GrowableWriter:

  Verifying word size get:

    No occurrences

Checking class LongValues:

  Verifying word size get:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word size get:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word size get:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word size get:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word size get:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word size get:

    No occurrences

Checking class RunAutomaton:

  Verifying word size get:

    No occurrences

Checking class SortedIntSet:

  Verifying word size get:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word size get:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word size get:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word size get:

    No occurrences

Checking class StatePair:

  Verifying word size get:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word size get:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word size get:

    No occurrences

Checking class MinimizationOperations:

  Verifying word size get:

    No occurrences

Checking class Util:

  Verifying word size get:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word size get:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word size get:

    No occurrences

Checking class DOMException:

  Verifying word size get:

    No occurrences

Checking class Attr:

  Verifying word size get:

    No occurrences

Checking class TypeInfo:

  Verifying word size get:

    No occurrences

Checking class DocumentType:

  Verifying word size get:

    No occurrences

Checking class DOMImplementation:

  Verifying word size get:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word size get:

    No occurrences

Checking class DOMConfiguration:

  Verifying word size get:

    No occurrences

Checking class NamedNodeMap:

  Verifying word size get:

    No occurrences

Checking class UserDataHandler:

  Verifying word size get:

    No occurrences

Checking class CharacterData:

  Verifying word size get:

    No occurrences

Checking class ComplexExplanation:

  Verifying word size get:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word size get:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word size get:

    No occurrences

Checking class DocTermOrds:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word size get:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word size get:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word size get:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word size get:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word size get:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word size get:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word size get:

    No occurrences

Checking class BitsSlice:

  Verifying word size get:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word size get:

    No occurrences

Checking class TimSorter:

  Verifying word size get:

    No occurrences

Checking class IntroSorter:

  Verifying word size get:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word size get:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word size get:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word size get:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word size get:

    No occurrences

Checking class NumericUtils$2:

  Verifying word size get:

    No occurrences

Checking class NumericUtils$1:

  Verifying word size get:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word size get:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word size get:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word size get:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word size get:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word size get:

    No occurrences

Checking class DocInverter:

  Verifying word size get:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word size get:

    No occurrences

Checking class NormsConsumer:

  Verifying word size get:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word size get:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word size get:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word size get:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word size get:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word size get:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word size get:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word size get:

    No occurrences

Checking class TermsHash:

  Verifying word size get:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word size get:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word size get:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word size get:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word size get:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word size get:

    No occurrences

Checking class RAMInputStream:

  Verifying word size get:

    No occurrences

Checking class RAMDirectory:

  Verifying word size get:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word size get:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word size get:

    No occurrences

Checking class TermInfosReader:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word size get:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word size get:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word size get:

      Method: DocValuesConsumer$1$1.setNext()
      Calls Location: DocValuesConsumer.java:158 DocValuesConsumer.java:162
      Atomic: NO

      Method: DocValuesConsumer$1$1.setNext()
      Calls Location: DocValuesConsumer.java:152 DocValuesConsumer.java:162
      Atomic: NO

      Method: DocValuesConsumer$1$1.setNext()
      Calls Location: DocValuesConsumer.java:158 DocValuesConsumer.java:159
      Atomic: NO

      Method: DocValuesConsumer$1$1.setNext()
      Calls Location: DocValuesConsumer.java:152 DocValuesConsumer.java:159
      Atomic: NO

      Method: DocValuesConsumer$1$1.setNext()
      Calls Location: DocValuesConsumer.java:158 DocValuesConsumer.java:160
      Atomic: NO

      Method: DocValuesConsumer$1$1.setNext()
      Calls Location: DocValuesConsumer.java:152 DocValuesConsumer.java:160
      Atomic: NO

Checking class DocValuesConsumer$2$1:

  Verifying word size get:

      Method: DocValuesConsumer$2$1.setNext()
      Calls Location: DocValuesConsumer.java:238 DocValuesConsumer.java:241
      Atomic: NO

      Method: DocValuesConsumer$2$1.setNext()
      Calls Location: DocValuesConsumer.java:232 DocValuesConsumer.java:241
      Atomic: NO

      Method: DocValuesConsumer$2$1.setNext()
      Calls Location: DocValuesConsumer.java:238 DocValuesConsumer.java:239
      Atomic: NO

      Method: DocValuesConsumer$2$1.setNext()
      Calls Location: DocValuesConsumer.java:232 DocValuesConsumer.java:239
      Atomic: NO

      Method: DocValuesConsumer$2$1.setNext()
      Calls Location: DocValuesConsumer.java:238 DocValuesConsumer.java:240
      Atomic: NO

      Method: DocValuesConsumer$2$1.setNext()
      Calls Location: DocValuesConsumer.java:232 DocValuesConsumer.java:240
      Atomic: NO

Checking class DocValuesConsumer$3$1:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word size get:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word size get:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word size get:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word size get:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word size get:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word size get:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word size get:

    No occurrences

Checking class PostingsConsumer:

  Verifying word size get:

    No occurrences

Checking class TermStats:

  Verifying word size get:

    No occurrences

Checking class LongsRef:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word size get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word size get:

    No occurrences

Checking class BulkOperation$1:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word size get:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word size get:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word size get:

    No occurrences

Checking class Sorter:

  Verifying word size get:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word size get:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word size get:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word size get:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word size get:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word size get:

    No occurrences

Checking class FST:

  Verifying word size get:

    No occurrences

Checking class FST$BytesReader:

  Verifying word size get:

    No occurrences

Checking class FST$Arc:

  Verifying word size get:

    No occurrences

Checking class Util$MinResult:

  Verifying word size get:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word size get:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word size get:

    No occurrences

Checking class Outputs:

  Verifying word size get:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word size get:

    No occurrences

Checking class Util$FSTPath:

  Verifying word size get:

    No occurrences

Checking class DOMStringList:

  Verifying word size get:

    No occurrences

Checking class PagedBytes:

  Verifying word size get:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word size get:

      Method: PagedBytes$Reader.<init>()
      Calls Location: PagedBytes.java:64 PagedBytes.java:66
      Atomic: NO

      Method: PagedBytes$Reader.<init>()
      Calls Location: PagedBytes.java:64 PagedBytes.java:70
      Atomic: NO

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word size get:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word size get:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word size get:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word size get:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word size get:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word size get:

    No occurrences

Checking class TermsHashPerField:

  Verifying word size get:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word size get:

    No occurrences

Checking class BytesRefHash:

  Verifying word size get:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word size get:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word size get:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word size get:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word size get:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word size get:

    No occurrences

Checking class DocInverterPerField:

  Verifying word size get:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word size get:

    No occurrences

Checking class ByteSliceReader:

  Verifying word size get:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word size get:

    No occurrences

Checking class DocValuesWriter:

  Verifying word size get:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word size get:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word size get:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word size get:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word size get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word size get:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word size get:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word size get:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word size get:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word size get:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word size get:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word size get:

    No occurrences

Checking class TermInfo:

  Verifying word size get:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word size get:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word size get:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word size get:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word size get:

    No occurrences

Checking class BytesStore:

  Verifying word size get:

      Method: BytesStore.copyBytes()
      Calls Location: BytesStore.java:307 BytesStore.java:168
      Atomic: NO

      Method: BytesStore.copyBytes()
      Calls Location: BytesStore.java:307 BytesStore.java:228
      Atomic: NO

      Method: BytesStore.copyBytes()
      Calls Location: BytesStore.java:307 BytesStore.java:155
      Atomic: NO

      Method: BytesStore.reverse()
      Calls Location: BytesStore.java:307 BytesStore.java:264
      Atomic: NO

      Method: BytesStore.reverse()
      Calls Location: BytesStore.java:307 BytesStore.java:260
      Atomic: NO

      Method: BytesStore.truncate()
      Calls Location: BytesStore.java:307 BytesStore.java:325
      Atomic: NO

      Method: BytesStore.reverse()
      Calls Location: BytesStore.java:307 BytesStore.java:276
      Atomic: NO

      Method: BytesStore.writeBytes()
      Calls Location: BytesStore.java:307 BytesStore.java:168
      Atomic: NO

      Method: BytesStore.reverse()
      Calls Location: BytesStore.java:307 BytesStore.java:284
      Atomic: NO

      Method: BytesStore.writeBytes()
      Calls Location: BytesStore.java:307 BytesStore.java:155
      Atomic: NO

      Method: BytesStore.getReverseReader()
      Calls Location: BytesStore.java:415 BytesStore.java:416
      Atomic: NO

      Method: BytesStore.<init>()
      Calls Location: BytesStore.java:69 BytesStore.java:69
      Atomic: NO

      Method: BytesStore.getForwardReader()
      Calls Location: BytesStore.java:347 BytesStore.java:348
      Atomic: NO

      Method: BytesStore.truncate()
      Calls Location: BytesStore.java:321 BytesStore.java:325
      Atomic: NO

Checking class Builder$UnCompiledNode:

  Verifying word size get:

    No occurrences

Checking class Builder$Arc:

  Verifying word size get:

    No occurrences

Checking class Builder:

  Verifying word size get:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word size get:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word size get:

    No occurrences

Checking class Builder$Node:

  Verifying word size get:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word size get:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word size get:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word size get:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word size get:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word size get:

    No occurrences

Checking class LSResourceResolver:

  Verifying word size get:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word size get:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word size get:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word size get:

    No occurrences

Checking class MapOfSets:

  Verifying word size get:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word size get:

    No occurrences

Checking class PayloadAttribute:

  Verifying word size get:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word size get:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word size get:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word size get:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word size get:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word size get:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word size get:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word size get:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word size get:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word size get:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word size get:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word size get:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word size get:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word size get:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word size get:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word size get:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word size get:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word size get:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word size get:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word size get:

    No occurrences

Checking class TermBuffer:

  Verifying word size get:

    No occurrences

Checking class MathUtil:

  Verifying word size get:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word size get:

    No occurrences

Checking class NodeHash:

  Verifying word size get:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word size get:

    No occurrences

Checking class BytesStore$1:

  Verifying word size get:

    No occurrences

Checking class BytesStore$2:

  Verifying word size get:

      Method: BytesStore$2.<init>()
      Calls Location: BytesStore.java:419 BytesStore.java:419
      Atomic: NO

Checking class ForwardBytesReader:

  Verifying word size get:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word size get:

    No occurrences

Checking class LSInput:

  Verifying word size get:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word size get:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word size get:

    No occurrences


Run Time:
                                .buildTree      46.123s
                                    .onLCA     150.395s
                         analysis-behavior       9.258s
                          analysis-threads       0.007s
                       build-parsing-table       0.738s
                       check-word-instance       0.010s
                               grammar-opt       1.341s
                        grammar-rm-epsilon       7.593s
                                   parsing     130.460s
                                 soot-init      72.319s
                                     total     443.701s

Profiling Vars:
                                 cfg-nodes     110298
                       grammar-productions       3126
                            parse-branches   63790891
                               parse-trees        110
                      parsing-table-states       3845
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word contains remove:

    No occurrences

Checking class IndexSearcher:

  Verifying word contains remove:

    No occurrences

Checking class Query:

  Verifying word contains remove:

    No occurrences

Checking class Analyzer:

  Verifying word contains remove:

    No occurrences

Checking class QueryParser:

  Verifying word contains remove:

    No occurrences

Checking class IndexReader:

  Verifying word contains remove:

    No occurrences

Checking class ScoreDoc:

  Verifying word contains remove:

    No occurrences

Checking class Filter:

  Verifying word contains remove:

    No occurrences

Checking class Directory:

  Verifying word contains remove:

    No occurrences

Checking class Document:

  Verifying word contains remove:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word contains remove:

    No occurrences

Checking class FSDirectory:

  Verifying word contains remove:

    No occurrences

Checking class Version:

  Verifying word contains remove:

    No occurrences

Checking class DirectoryReader:

  Verifying word contains remove:

    No occurrences

Checking class TopDocs:

  Verifying word contains remove:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word contains remove:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word contains remove:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word contains remove:

    No occurrences

Checking class TokenStream:

  Verifying word contains remove:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word contains remove:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word contains remove:

    No occurrences

Checking class ReusableStringReader:

  Verifying word contains remove:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word contains remove:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word contains remove:

    No occurrences

Checking class IndexWriter:

  Verifying word contains remove:

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3729 IndexWriter.java:3919
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3139 IndexWriter.java:3919
      Atomic: NO

Checking class IndexCommit:

  Verifying word contains remove:

    No occurrences

Checking class Fields:

  Verifying word contains remove:

    No occurrences

Checking class Terms:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word contains remove:

    No occurrences

Checking class IndexReaderContext:

  Verifying word contains remove:

    No occurrences

Checking class Term:

  Verifying word contains remove:

    No occurrences

Checking class AtomicReader:

  Verifying word contains remove:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word contains remove:

    No occurrences

Checking class CompositeReader:

  Verifying word contains remove:

    No occurrences

Checking class DocIdSet:

  Verifying word contains remove:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word contains remove:

    No occurrences

Checking class Bits:

  Verifying word contains remove:

    No occurrences

Checking class IndexOutput:

  Verifying word contains remove:

    No occurrences

Checking class IOContext:

  Verifying word contains remove:

    No occurrences

Checking class IndexInput:

  Verifying word contains remove:

    No occurrences

Checking class Lock:

  Verifying word contains remove:

    No occurrences

Checking class LockFactory:

  Verifying word contains remove:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word contains remove:

    No occurrences

Checking class Directory$1:

  Verifying word contains remove:

    No occurrences

Checking class DataInput:

  Verifying word contains remove:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class IOUtils:

  Verifying word contains remove:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word contains remove:

    No occurrences

Checking class Similarity:

  Verifying word contains remove:

    No occurrences

Checking class Collector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldDocs:

  Verifying word contains remove:

    No occurrences

Checking class Sort:

  Verifying word contains remove:

    No occurrences

Checking class Weight:

  Verifying word contains remove:

    No occurrences

Checking class FieldDoc:

  Verifying word contains remove:

    No occurrences

Checking class Explanation:

  Verifying word contains remove:

    No occurrences

Checking class TermStatistics:

  Verifying word contains remove:

    No occurrences

Checking class TermContext:

  Verifying word contains remove:

    No occurrences

Checking class CollectionStatistics:

  Verifying word contains remove:

    No occurrences

Checking class HitQueue:

  Verifying word contains remove:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word contains remove:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery:

  Verifying word contains remove:

    No occurrences

Checking class SortField:

  Verifying word contains remove:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word contains remove:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector:

  Verifying word contains remove:

    No occurrences

Checking class ReaderUtil:

  Verifying word contains remove:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word contains remove:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word contains remove:

    No occurrences

Checking class MultiFields:

  Verifying word contains remove:

    No occurrences

Checking class BytesRef:

  Verifying word contains remove:

    No occurrences

Checking class Scorer:

  Verifying word contains remove:

    No occurrences

Checking class IndexableField:

  Verifying word contains remove:

    No occurrences

Checking class BaseDirectory:

  Verifying word contains remove:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word contains remove:

    No occurrences

Checking class MMapDirectory:

  Verifying word contains remove:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word contains remove:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word contains remove:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word contains remove:

    No occurrences

Checking class FSLockFactory:

  Verifying word contains remove:

    No occurrences

Checking class FSDirectory$1:

  Verifying word contains remove:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word contains remove:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word contains remove:

    No occurrences

Checking class Constants:

  Verifying word contains remove:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word contains remove:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word contains remove:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfos:

  Verifying word contains remove:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word contains remove:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word contains remove:

    No occurrences

Checking class PriorityQueue:

  Verifying word contains remove:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word contains remove:

    No occurrences

Checking class Tokenizer:

  Verifying word contains remove:

    No occurrences

Checking class AttributeSource:

  Verifying word contains remove:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word contains remove:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word contains remove:

    No occurrences

Checking class DocsEnum:

  Verifying word contains remove:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word contains remove:

    No occurrences

Checking class NumericDocValues:

  Verifying word contains remove:

    No occurrences

Checking class BinaryDocValues:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValues:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfos:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfo:

  Verifying word contains remove:

    No occurrences

Checking class TermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word contains remove:

    No occurrences

Checking class TextField:

  Verifying word contains remove:

    No occurrences

Checking class FieldType:

  Verifying word contains remove:

    No occurrences

Checking class Field:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word contains remove:

    No occurrences

Checking class StoredField:

  Verifying word contains remove:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word contains remove:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriter:

  Verifying word contains remove:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy:

  Verifying word contains remove:

    No occurrences

Checking class MergeScheduler:

  Verifying word contains remove:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word contains remove:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word contains remove:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word contains remove:

    No occurrences

Checking class Codec:

  Verifying word contains remove:

    No occurrences

Checking class InfoStream:

  Verifying word contains remove:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word contains remove:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word contains remove:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word contains remove:

    No occurrences

Checking class MergeState:

  Verifying word contains remove:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word contains remove:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfo:

  Verifying word contains remove:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word contains remove:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word contains remove:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word contains remove:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word contains remove:

    No occurrences

Checking class NumericUpdate:

  Verifying word contains remove:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word contains remove:

    No occurrences

Checking class SegmentReader:

  Verifying word contains remove:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word contains remove:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word contains remove:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word contains remove:

    No occurrences

Checking class IndexFileNames:

  Verifying word contains remove:

    No occurrences

Checking class FlushPolicy:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word contains remove:

    No occurrences

Checking class SegmentMerger:

  Verifying word contains remove:

    No occurrences

Checking class MergeInfo:

  Verifying word contains remove:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word contains remove:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word contains remove:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word contains remove:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word contains remove:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word contains remove:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Terms$1:

  Verifying word contains remove:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word contains remove:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word contains remove:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word contains remove:

    No occurrences

Checking class DataOutput:

  Verifying word contains remove:

    No occurrences

Checking class IOContext$Context:

  Verifying word contains remove:

    No occurrences

Checking class FlushInfo:

  Verifying word contains remove:

    No occurrences

Checking class Lock$With:

  Verifying word contains remove:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word contains remove:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word contains remove:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word contains remove:

    No occurrences

Checking class ToStringUtils:

  Verifying word contains remove:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word contains remove:

    No occurrences

Checking class SortField$Type:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word contains remove:

    No occurrences

Checking class SortField$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word contains remove:

    No occurrences

Checking class StringHelper:

  Verifying word contains remove:

    No occurrences

Checking class TopDocsCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word contains remove:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word contains remove:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word contains remove:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word contains remove:

    No occurrences

Checking class FieldInvertState:

  Verifying word contains remove:

    No occurrences

Checking class SmallFloat:

  Verifying word contains remove:

    No occurrences

Checking class ReaderSlice:

  Verifying word contains remove:

    No occurrences

Checking class MultiTerms:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word contains remove:

    No occurrences

Checking class MultiBits:

  Verifying word contains remove:

    No occurrences

Checking class MergedIterator:

  Verifying word contains remove:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word contains remove:

    No occurrences

Checking class UnicodeUtil:

  Verifying word contains remove:

    No occurrences

Checking class CharsRef:

  Verifying word contains remove:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word contains remove:

    No occurrences

Checking class ArrayUtil:

  Verifying word contains remove:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word contains remove:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word contains remove:

    No occurrences

Checking class TermState:

  Verifying word contains remove:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word contains remove:

    No occurrences

Checking class IndexableFieldType:

  Verifying word contains remove:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word contains remove:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class NativeFSLock:

  Verifying word contains remove:

      Method: NativeFSLock.obtain()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.obtain()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.obtain()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:252 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.obtain()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.obtain()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:253
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.release()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

      Method: NativeFSLock.isLocked()
      Calls Location: NativeFSLockFactory.java:189 NativeFSLockFactory.java:277
      Atomic: YES

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word contains remove:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word contains remove:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word contains remove:

    No occurrences

Checking class LucenePackage:

  Verifying word contains remove:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word contains remove:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word contains remove:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word contains remove:

    No occurrences

Checking class CorruptIndexException:

  Verifying word contains remove:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word contains remove:

    No occurrences

Checking class CodecUtil:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word contains remove:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word contains remove:

    No occurrences

Checking class Tokenizer$1:

  Verifying word contains remove:

    No occurrences

Checking class CharFilter:

  Verifying word contains remove:

    No occurrences

Checking class AttributeSource$State:

  Verifying word contains remove:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word contains remove:

    No occurrences

Checking class AttributeImpl:

  Verifying word contains remove:

    No occurrences

Checking class AttributeReflector:

  Verifying word contains remove:

    No occurrences

Checking class AttributeSource$1:

  Verifying word contains remove:

    No occurrences

Checking class AttributeSource$2:

  Verifying word contains remove:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word contains remove:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefIterator:

  Verifying word contains remove:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word contains remove:

    No occurrences

Checking class TermsEnum$1:

  Verifying word contains remove:

    No occurrences

Checking class TermsEnum$2:

  Verifying word contains remove:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Field$Store:

  Verifying word contains remove:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word contains remove:

    No occurrences

Checking class Field$Index:

  Verifying word contains remove:

    No occurrences

Checking class Field$TermVector:

  Verifying word contains remove:

    No occurrences

Checking class NumericTokenStream:

  Verifying word contains remove:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word contains remove:

    No occurrences

Checking class Field$1:

  Verifying word contains remove:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word contains remove:

    No occurrences

Checking class SetOnce:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word contains remove:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word contains remove:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word contains remove:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word contains remove:

    No occurrences

Checking class BufferedUpdates:

  Verifying word contains remove:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word contains remove:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word contains remove:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word contains remove:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word contains remove:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word contains remove:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word contains remove:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word contains remove:

    No occurrences

Checking class PostingsFormat:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word contains remove:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word contains remove:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesFormat:

  Verifying word contains remove:

    No occurrences

Checking class NormsFormat:

  Verifying word contains remove:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word contains remove:

    No occurrences

Checking class SegmentWriteState:

  Verifying word contains remove:

    No occurrences

Checking class MutableBits:

  Verifying word contains remove:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word contains remove:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word contains remove:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word contains remove:

    No occurrences

Checking class FixedBitSet:

  Verifying word contains remove:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word contains remove:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word contains remove:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word contains remove:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word contains remove:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word contains remove:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word contains remove:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word contains remove:

    No occurrences

Checking class SegmentDocValues:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word contains remove:

    No occurrences

Checking class TermVectorsReader:

  Verifying word contains remove:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word contains remove:

    No occurrences

Checking class FieldsProducer:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesProducer:

  Verifying word contains remove:

    No occurrences

Checking class SegmentReader$2:

  Verifying word contains remove:

    No occurrences

Checking class FieldInfosReader:

  Verifying word contains remove:

    No occurrences

Checking class SegmentReader$1:

  Verifying word contains remove:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word contains remove:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word contains remove:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word contains remove:

    No occurrences

Checking class CollectionUtil:

  Verifying word contains remove:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word contains remove:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word contains remove:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word contains remove:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word contains remove:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word contains remove:

    No occurrences

Checking class NamedSPILoader:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word contains remove:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word contains remove:

    No occurrences

Checking class FieldsConsumer:

  Verifying word contains remove:

    No occurrences

Checking class FilterDirectory:

  Verifying word contains remove:

    No occurrences

Checking class PagedMutable:

  Verifying word contains remove:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts:

  Verifying word contains remove:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word contains remove:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word contains remove:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word contains remove:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word contains remove:

    No occurrences

Checking class Transition:

  Verifying word contains remove:

    No occurrences

Checking class IntsRef:

  Verifying word contains remove:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word contains remove:

    No occurrences

Checking class State:

  Verifying word contains remove:

    No occurrences

Checking class Automaton:

  Verifying word contains remove:

    No occurrences

Checking class BasicOperations:

  Verifying word contains remove:

      Method: BasicOperations.addEpsilons()
      Calls Location: BasicOperations.java:752 BasicOperations.java:737
      Atomic: NO

Checking class SingleTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class BasicAutomata:

  Verifying word contains remove:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word contains remove:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class SpecialOperations:

  Verifying word contains remove:

      Method: SpecialOperations.getFiniteStrings()
      Calls Location: SpecialOperations.java:246 SpecialOperations.java:265
      Atomic: NO

Checking class UTF32ToUTF8:

  Verifying word contains remove:

    No occurrences

Checking class Document:

  Verifying word contains remove:

    No occurrences

Checking class Element:

  Verifying word contains remove:

    No occurrences

Checking class Node:

  Verifying word contains remove:

    No occurrences

Checking class NodeList:

  Verifying word contains remove:

    No occurrences

Checking class Text:

  Verifying word contains remove:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word contains remove:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word contains remove:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word contains remove:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word contains remove:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word contains remove:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word contains remove:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$10:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$8:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$9:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$6:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$7:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$4:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$5:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$2:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$3:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$1:

  Verifying word contains remove:

    No occurrences

Checking class StringHelper$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word contains remove:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word contains remove:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word contains remove:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word contains remove:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word contains remove:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word contains remove:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word contains remove:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word contains remove:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word contains remove:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word contains remove:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word contains remove:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word contains remove:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word contains remove:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word contains remove:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word contains remove:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word contains remove:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word contains remove:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word contains remove:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word contains remove:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word contains remove:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word contains remove:

    No occurrences

Checking class OrdTermState:

  Verifying word contains remove:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word contains remove:

    No occurrences

Checking class TypeAttribute:

  Verifying word contains remove:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word contains remove:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word contains remove:

    No occurrences

Checking class NumericUtils:

  Verifying word contains remove:

    No occurrences

Checking class CharTermAttribute:

  Verifying word contains remove:

    No occurrences

Checking class OffsetAttribute:

  Verifying word contains remove:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word contains remove:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word contains remove:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word contains remove:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word contains remove:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word contains remove:

    No occurrences

Checking class Field$Index$2:

  Verifying word contains remove:

    No occurrences

Checking class Field$Index$1:

  Verifying word contains remove:

    No occurrences

Checking class Field$Index$4:

  Verifying word contains remove:

    No occurrences

Checking class Field$Index$3:

  Verifying word contains remove:

    No occurrences

Checking class Field$Index$5:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word contains remove:

    No occurrences

Checking class DocConsumer:

  Verifying word contains remove:

    No occurrences

Checking class Counter:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word contains remove:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word contains remove:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word contains remove:

    No occurrences

Checking class ByteBlockPool:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word contains remove:

    No occurrences

Checking class IntBlockPool:

  Verifying word contains remove:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word contains remove:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word contains remove:

    No occurrences

Checking class RAMFile:

  Verifying word contains remove:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word contains remove:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word contains remove:

    No occurrences

Checking class RAMOutputStream:

  Verifying word contains remove:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word contains remove:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word contains remove:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word contains remove:

    No occurrences

Checking class SegmentReadState:

  Verifying word contains remove:

    No occurrences

Checking class BitVector:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFields:

  Verifying word contains remove:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word contains remove:

    No occurrences

Checking class OpenBitSet:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues:

  Verifying word contains remove:

    No occurrences

Checking class BitUtil:

  Verifying word contains remove:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word contains remove:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word contains remove:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word contains remove:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word contains remove:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word contains remove:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word contains remove:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word contains remove:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word contains remove:

    No occurrences

Checking class RefCount:

  Verifying word contains remove:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word contains remove:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word contains remove:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word contains remove:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word contains remove:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word contains remove:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word contains remove:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word contains remove:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word contains remove:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word contains remove:

    No occurrences

Checking class SPIClassIterator:

  Verifying word contains remove:

    No occurrences

Checking class TermsConsumer:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Format:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Header:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word contains remove:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word contains remove:

    No occurrences

Checking class DirectPackedReader:

  Verifying word contains remove:

    No occurrences

Checking class Packed64:

  Verifying word contains remove:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word contains remove:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$1:

  Verifying word contains remove:

    No occurrences

Checking class Direct64:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$2:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word contains remove:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word contains remove:

    No occurrences

Checking class Direct32:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperation:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word contains remove:

    No occurrences

Checking class Direct8:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word contains remove:

    No occurrences

Checking class Direct16:

  Verifying word contains remove:

    No occurrences

Checking class PackedWriter:

  Verifying word contains remove:

    No occurrences

Checking class GrowableWriter:

  Verifying word contains remove:

    No occurrences

Checking class LongValues:

  Verifying word contains remove:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word contains remove:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word contains remove:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word contains remove:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word contains remove:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word contains remove:

    No occurrences

Checking class RunAutomaton:

  Verifying word contains remove:

    No occurrences

Checking class SortedIntSet:

  Verifying word contains remove:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word contains remove:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word contains remove:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word contains remove:

    No occurrences

Checking class StatePair:

  Verifying word contains remove:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word contains remove:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word contains remove:

    No occurrences

Checking class MinimizationOperations:

  Verifying word contains remove:

    No occurrences

Checking class Util:

  Verifying word contains remove:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word contains remove:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word contains remove:

    No occurrences

Checking class DOMException:

  Verifying word contains remove:

    No occurrences

Checking class Attr:

  Verifying word contains remove:

    No occurrences

Checking class TypeInfo:

  Verifying word contains remove:

    No occurrences

Checking class DocumentType:

  Verifying word contains remove:

    No occurrences

Checking class DOMImplementation:

  Verifying word contains remove:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word contains remove:

    No occurrences

Checking class DOMConfiguration:

  Verifying word contains remove:

    No occurrences

Checking class NamedNodeMap:

  Verifying word contains remove:

    No occurrences

Checking class UserDataHandler:

  Verifying word contains remove:

    No occurrences

Checking class CharacterData:

  Verifying word contains remove:

    No occurrences

Checking class ComplexExplanation:

  Verifying word contains remove:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word contains remove:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word contains remove:

    No occurrences

Checking class DocTermOrds:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word contains remove:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word contains remove:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word contains remove:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word contains remove:

    No occurrences

Checking class BitsSlice:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word contains remove:

    No occurrences

Checking class TimSorter:

  Verifying word contains remove:

    No occurrences

Checking class IntroSorter:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word contains remove:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word contains remove:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word contains remove:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word contains remove:

    No occurrences

Checking class NumericUtils$2:

  Verifying word contains remove:

    No occurrences

Checking class NumericUtils$1:

  Verifying word contains remove:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word contains remove:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word contains remove:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word contains remove:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word contains remove:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word contains remove:

    No occurrences

Checking class DocInverter:

  Verifying word contains remove:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word contains remove:

    No occurrences

Checking class NormsConsumer:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word contains remove:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word contains remove:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word contains remove:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word contains remove:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word contains remove:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word contains remove:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word contains remove:

    No occurrences

Checking class TermsHash:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word contains remove:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word contains remove:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word contains remove:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word contains remove:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word contains remove:

    No occurrences

Checking class RAMInputStream:

  Verifying word contains remove:

    No occurrences

Checking class RAMDirectory:

  Verifying word contains remove:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word contains remove:

    No occurrences

Checking class TermInfosReader:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word contains remove:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word contains remove:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word contains remove:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word contains remove:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word contains remove:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word contains remove:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word contains remove:

    No occurrences

Checking class PostingsConsumer:

  Verifying word contains remove:

    No occurrences

Checking class TermStats:

  Verifying word contains remove:

    No occurrences

Checking class LongsRef:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word contains remove:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperation$1:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word contains remove:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word contains remove:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word contains remove:

    No occurrences

Checking class Sorter:

  Verifying word contains remove:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word contains remove:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word contains remove:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word contains remove:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word contains remove:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word contains remove:

    No occurrences

Checking class FST:

  Verifying word contains remove:

    No occurrences

Checking class FST$BytesReader:

  Verifying word contains remove:

    No occurrences

Checking class FST$Arc:

  Verifying word contains remove:

    No occurrences

Checking class Util$MinResult:

  Verifying word contains remove:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word contains remove:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word contains remove:

    No occurrences

Checking class Outputs:

  Verifying word contains remove:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word contains remove:

    No occurrences

Checking class Util$FSTPath:

  Verifying word contains remove:

    No occurrences

Checking class DOMStringList:

  Verifying word contains remove:

    No occurrences

Checking class PagedBytes:

  Verifying word contains remove:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word contains remove:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word contains remove:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word contains remove:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word contains remove:

    No occurrences

Checking class TermsHashPerField:

  Verifying word contains remove:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefHash:

  Verifying word contains remove:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word contains remove:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word contains remove:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word contains remove:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word contains remove:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word contains remove:

    No occurrences

Checking class DocInverterPerField:

  Verifying word contains remove:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word contains remove:

    No occurrences

Checking class ByteSliceReader:

  Verifying word contains remove:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word contains remove:

    No occurrences

Checking class DocValuesWriter:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word contains remove:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word contains remove:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word contains remove:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word contains remove:

      Method: SingleInstanceLockFactory.clearLock()
      Calls Location: SingleInstanceLockFactory.java:49 SingleInstanceLockFactory.java:50
      Atomic: YES

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word contains remove:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word contains remove:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word contains remove:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word contains remove:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word contains remove:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word contains remove:

    No occurrences

Checking class TermInfo:

  Verifying word contains remove:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word contains remove:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word contains remove:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word contains remove:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word contains remove:

    No occurrences

Checking class BytesStore:

  Verifying word contains remove:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word contains remove:

    No occurrences

Checking class Builder$Arc:

  Verifying word contains remove:

    No occurrences

Checking class Builder:

  Verifying word contains remove:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word contains remove:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word contains remove:

    No occurrences

Checking class Builder$Node:

  Verifying word contains remove:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word contains remove:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word contains remove:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word contains remove:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word contains remove:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word contains remove:

    No occurrences

Checking class LSResourceResolver:

  Verifying word contains remove:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word contains remove:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word contains remove:

    No occurrences

Checking class MapOfSets:

  Verifying word contains remove:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word contains remove:

    No occurrences

Checking class PayloadAttribute:

  Verifying word contains remove:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word contains remove:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word contains remove:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word contains remove:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word contains remove:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word contains remove:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word contains remove:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word contains remove:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word contains remove:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word contains remove:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word contains remove:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word contains remove:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word contains remove:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word contains remove:

    No occurrences

Checking class TermBuffer:

  Verifying word contains remove:

    No occurrences

Checking class MathUtil:

  Verifying word contains remove:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word contains remove:

    No occurrences

Checking class NodeHash:

  Verifying word contains remove:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word contains remove:

    No occurrences

Checking class BytesStore$1:

  Verifying word contains remove:

    No occurrences

Checking class BytesStore$2:

  Verifying word contains remove:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word contains remove:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word contains remove:

    No occurrences

Checking class LSInput:

  Verifying word contains remove:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word contains remove:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word contains remove:

    No occurrences


Run Time:
                                .buildTree       0.747s
                                    .onLCA       2.582s
                         analysis-behavior       9.864s
                          analysis-threads       0.007s
                       build-parsing-table       0.229s
                       check-word-instance       0.012s
                               grammar-opt       1.613s
                        grammar-rm-epsilon       7.906s
                                   parsing       7.326s
                                 soot-init      75.667s
                                     total     151.491s

Profiling Vars:
                                 cfg-nodes     110298
                       grammar-productions       1936
                            parse-branches    1121855
                               parse-trees         98
                      parsing-table-states       2696
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexSearcher:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Query:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Analyzer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class QueryParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ScoreDoc:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Filter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Directory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Document:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FSDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Version:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DirectoryReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopDocs:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TokenStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReusableStringReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexCommit:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Fields:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Terms:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexReaderContext:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Term:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AtomicReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompositeReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocIdSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Bits:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IOContext:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lock:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LockFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Directory$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DataInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IOUtils:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Similarity:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Collector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldDocs:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Sort:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Weight:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldDoc:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Explanation:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermStatistics:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermContext:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CollectionStatistics:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class HitQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReaderUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiFields:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRef:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Scorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexableField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BaseDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MMapDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FSLockFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FSDirectory$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Constants:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfos:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PriorityQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Tokenizer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeSource:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BinaryDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfos:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TextField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldType:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeScheduler:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Codec:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InfoStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericUpdate:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexFileNames:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FlushPolicy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentMerger:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Terms$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DataOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IOContext$Context:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FlushInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lock$With:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ToStringUtils:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortField$Type:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortField$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StringHelper:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopDocsCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInvertState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SmallFloat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReaderSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiTerms:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiBits:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergedIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class UnicodeUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CharsRef:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ArrayUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexableFieldType:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NativeFSLock:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LucenePackage:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CorruptIndexException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CodecUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Tokenizer$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CharFilter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeSource$State:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeReflector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeSource$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeSource$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsEnum$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsEnum$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Store:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Index:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$TermVector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericTokenStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SetOnce:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedUpdates:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PostingsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NormsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentWriteState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MutableBits:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FixedBitSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermVectorsReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldsProducer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesProducer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentReader$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldInfosReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentReader$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CollectionUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NamedSPILoader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldsConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilterDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PagedMutable:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Transition:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntsRef:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class State:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Automaton:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BasicOperations:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BasicAutomata:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SpecialOperations:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Document:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Element:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Node:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NodeList:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Text:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$10:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$8:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$9:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$6:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$7:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StringHelper$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class OrdTermState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TypeAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericUtils:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CharTermAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class OffsetAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Index$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Index$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Index$4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Index$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Field$Index$5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Counter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteBlockPool:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntBlockPool:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RAMFile:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RAMOutputStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentReadState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BitVector:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFields:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class OpenBitSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BitUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RefCount:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SPIClassIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Format:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Header:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DirectPackedReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Direct64:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Direct32:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperation:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Direct8:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Direct16:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class GrowableWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LongValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RunAutomaton:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedIntSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StatePair:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MinimizationOperations:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Util:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DOMException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Attr:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TypeInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocumentType:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DOMImplementation:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DOMConfiguration:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NamedNodeMap:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class UserDataHandler:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CharacterData:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ComplexExplanation:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocTermOrds:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BitsSlice:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TimSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntroSorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericUtils$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericUtils$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocInverter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NormsConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsHash:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RAMInputStream:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class RAMDirectory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermInfosReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PostingsConsumer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermStats:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LongsRef:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperation$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Sorter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST$BytesReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST$Arc:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Util$MinResult:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Outputs:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Util$FSTPath:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DOMStringList:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PagedBytes:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsHashPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefHash:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocInverterPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteSliceReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DocValuesWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermInfo:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesStore:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Builder$Arc:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Builder:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Builder$Node:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LSResourceResolver:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MapOfSets:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class PayloadAttribute:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class TermBuffer:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MathUtil:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class NodeHash:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesStore$1:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class BytesStore$2:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class LSInput:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word ensureOpen checkpoint:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word ensureOpen checkpoint:

    No occurrences


Run Time:
                         analysis-behavior       5.928s
                          analysis-threads       0.007s
                       build-parsing-table       0.095s
                               grammar-opt       1.258s
                        grammar-rm-epsilon       4.362s
                                   parsing       0.001s
                                 soot-init      79.279s
                                     total     142.333s

Profiling Vars:
                                 cfg-nodes     104281
                       grammar-productions       1263
                      parsing-table-states       2029
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexSearcher:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Query:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Analyzer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class QueryParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ScoreDoc:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Filter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Directory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Document:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FSDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Version:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DirectoryReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopDocs:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TokenStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReusableStringReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexWriter:

  Verifying word deleteFile deleteNewFiles:

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4151
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4157 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4157 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4157 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4151
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4151
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4151
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4151
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4151
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4182
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4136 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4135 IndexWriter.java:4137
      Atomic: YES

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4158 IndexWriter.java:3576
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4158 IndexWriter.java:3515
      Atomic: NO

      Method: IndexWriter.mergeMiddle()
      Calls Location: IndexWriter.java:4158 IndexWriter.java:4182
      Atomic: NO

Checking class IndexCommit:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Fields:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Terms:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexReaderContext:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Term:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AtomicReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompositeReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocIdSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Bits:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IOContext:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lock:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LockFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Directory$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DataInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IOUtils:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Similarity:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Collector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldDocs:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Sort:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Weight:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldDoc:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Explanation:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermStatistics:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermContext:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CollectionStatistics:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class HitQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReaderUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiFields:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRef:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Scorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexableField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BaseDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MMapDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FSLockFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FSDirectory$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Constants:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfos:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PriorityQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Tokenizer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeSource:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BinaryDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfos:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TextField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldType:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeScheduler:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Codec:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InfoStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericUpdate:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexFileNames:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FlushPolicy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentMerger:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Terms$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DataOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IOContext$Context:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FlushInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lock$With:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ToStringUtils:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortField$Type:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortField$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StringHelper:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopDocsCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInvertState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SmallFloat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReaderSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiTerms:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiBits:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergedIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class UnicodeUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CharsRef:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ArrayUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexableFieldType:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NativeFSLock:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LucenePackage:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CorruptIndexException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CodecUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Tokenizer$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CharFilter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeSource$State:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeReflector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeSource$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeSource$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsEnum$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsEnum$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Store:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Index:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$TermVector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericTokenStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SetOnce:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedUpdates:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PostingsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NormsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentWriteState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MutableBits:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FixedBitSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermVectorsReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldsProducer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesProducer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentReader$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldInfosReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentReader$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CollectionUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NamedSPILoader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldsConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilterDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PagedMutable:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Transition:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntsRef:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class State:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Automaton:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BasicOperations:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BasicAutomata:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SpecialOperations:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Document:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Element:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Node:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NodeList:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Text:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$10:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$8:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$9:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$6:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$7:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StringHelper$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class OrdTermState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TypeAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericUtils:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CharTermAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class OffsetAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Index$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Index$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Index$4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Index$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Field$Index$5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Counter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteBlockPool:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntBlockPool:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RAMFile:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RAMOutputStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentReadState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BitVector:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFields:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class OpenBitSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BitUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RefCount:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SPIClassIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Format:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Header:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DirectPackedReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Direct64:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Direct32:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperation:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Direct8:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Direct16:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class GrowableWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LongValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RunAutomaton:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedIntSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StatePair:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MinimizationOperations:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Util:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DOMException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Attr:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TypeInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocumentType:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DOMImplementation:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DOMConfiguration:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NamedNodeMap:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class UserDataHandler:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CharacterData:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ComplexExplanation:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocTermOrds:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BitsSlice:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TimSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntroSorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericUtils$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericUtils$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocInverter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NormsConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsHash:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RAMInputStream:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class RAMDirectory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermInfosReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PostingsConsumer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermStats:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LongsRef:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperation$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Sorter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST$BytesReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST$Arc:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Util$MinResult:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Outputs:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Util$FSTPath:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DOMStringList:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PagedBytes:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsHashPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefHash:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocInverterPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteSliceReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DocValuesWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermInfo:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesStore:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Builder$Arc:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Builder:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Builder$Node:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LSResourceResolver:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MapOfSets:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class PayloadAttribute:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class TermBuffer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MathUtil:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class NodeHash:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesStore$1:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class BytesStore$2:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class LSInput:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word deleteFile deleteNewFiles:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word deleteFile deleteNewFiles:

    No occurrences


Run Time:
                                .buildTree       0.025s
                                    .onLCA       0.123s
                         analysis-behavior       9.628s
                          analysis-threads       0.008s
                       build-parsing-table       0.296s
                       check-word-instance       0.008s
                               grammar-opt       1.472s
                        grammar-rm-epsilon       7.833s
                                   parsing       0.211s
                                 soot-init      74.281s
                                     total     136.645s

Profiling Vars:
                                 cfg-nodes     109501
                       grammar-productions       1403
                            parse-branches      14155
                               parse-trees         38
                      parsing-table-states       2292
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexSearcher:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Query:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Analyzer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class QueryParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ScoreDoc:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Filter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Directory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Document:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FSDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Version:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DirectoryReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopDocs:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TokenStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReusableStringReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexWriter:

  Verifying word applyDeletesAndUpdates prune:

      Method: IndexWriter.applyAllDeletesAndUpdates()
      Calls Location: IndexWriter.java:3126 IndexWriter.java:3146
      Atomic: YES

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3126 IndexWriter.java:3146
      Atomic: NO

      Method: IndexWriter._mergeInit()
      Calls Location: IndexWriter.java:3844 IndexWriter.java:3879
      Atomic: YES

Checking class IndexCommit:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Fields:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Terms:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexReaderContext:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Term:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AtomicReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompositeReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocIdSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Bits:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IOContext:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lock:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LockFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Directory$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DataInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IOUtils:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Similarity:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Collector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldDocs:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Sort:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Weight:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldDoc:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Explanation:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermStatistics:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermContext:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CollectionStatistics:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class HitQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReaderUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiFields:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRef:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Scorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexableField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BaseDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MMapDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FSLockFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FSDirectory$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Constants:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfos:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PriorityQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Tokenizer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeSource:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BinaryDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfos:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TextField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldType:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeScheduler:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Codec:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InfoStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericUpdate:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexFileNames:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FlushPolicy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentMerger:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Terms$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DataOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IOContext$Context:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FlushInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lock$With:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ToStringUtils:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortField$Type:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortField$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StringHelper:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopDocsCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInvertState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SmallFloat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReaderSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiTerms:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiBits:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergedIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class UnicodeUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CharsRef:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ArrayUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexableFieldType:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NativeFSLock:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LucenePackage:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CorruptIndexException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CodecUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Tokenizer$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CharFilter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeSource$State:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeReflector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeSource$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeSource$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsEnum$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsEnum$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Store:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Index:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$TermVector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericTokenStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SetOnce:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedUpdates:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PostingsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NormsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentWriteState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MutableBits:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FixedBitSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermVectorsReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldsProducer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesProducer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentReader$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldInfosReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentReader$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CollectionUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NamedSPILoader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldsConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilterDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PagedMutable:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Transition:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntsRef:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class State:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Automaton:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BasicOperations:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BasicAutomata:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SpecialOperations:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Document:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Element:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Node:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NodeList:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Text:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$10:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$8:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$9:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$6:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$7:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StringHelper$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class OrdTermState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TypeAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericUtils:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CharTermAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class OffsetAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Index$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Index$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Index$4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Index$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Field$Index$5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Counter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteBlockPool:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntBlockPool:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RAMFile:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RAMOutputStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentReadState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BitVector:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFields:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class OpenBitSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BitUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RefCount:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SPIClassIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Format:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Header:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DirectPackedReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Direct64:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Direct32:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperation:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Direct8:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Direct16:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class GrowableWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LongValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RunAutomaton:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedIntSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StatePair:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MinimizationOperations:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Util:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DOMException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Attr:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TypeInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocumentType:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DOMImplementation:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DOMConfiguration:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NamedNodeMap:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class UserDataHandler:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CharacterData:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ComplexExplanation:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocTermOrds:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BitsSlice:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TimSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntroSorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericUtils$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericUtils$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocInverter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NormsConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsHash:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RAMInputStream:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class RAMDirectory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermInfosReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PostingsConsumer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermStats:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LongsRef:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperation$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Sorter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST$BytesReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST$Arc:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Util$MinResult:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Outputs:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Util$FSTPath:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DOMStringList:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PagedBytes:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsHashPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefHash:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocInverterPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteSliceReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DocValuesWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermInfo:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesStore:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Builder$Arc:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Builder:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Builder$Node:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LSResourceResolver:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MapOfSets:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class PayloadAttribute:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class TermBuffer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MathUtil:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class NodeHash:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesStore$1:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class BytesStore$2:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class LSInput:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word applyDeletesAndUpdates prune:

    No occurrences


Run Time:
                                .buildTree       2.415s
                                    .onLCA       6.373s
                         analysis-behavior       9.571s
                          analysis-threads       0.007s
                       build-parsing-table       0.176s
                       check-word-instance       0.002s
                               grammar-opt       1.502s
                        grammar-rm-epsilon       7.723s
                                   parsing      19.506s
                                 soot-init      75.398s
                                     total     168.042s

Profiling Vars:
                                 cfg-nodes     109383
                       grammar-productions       1119
                            parse-branches    1774096
                               parse-trees          3
                      parsing-table-states       1941
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexSearcher:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Query:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Analyzer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class QueryParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ScoreDoc:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Filter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Directory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Document:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FSDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Version:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DirectoryReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopDocs:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TokenStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReusableStringReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexCommit:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Fields:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Terms:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexReaderContext:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Term:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AtomicReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompositeReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocIdSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Bits:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IOContext:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lock:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LockFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Directory$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DataInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IOUtils:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Similarity:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Collector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldDocs:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Sort:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Weight:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldDoc:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Explanation:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermStatistics:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermContext:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CollectionStatistics:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class HitQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReaderUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiFields:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRef:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Scorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexableField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BaseDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MMapDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FSLockFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FSDirectory$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Constants:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfos:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PriorityQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Tokenizer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeSource:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BinaryDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfos:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TextField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldType:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriter:

  Verifying word abortPendingFlushes waitForFlush:

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:253 DocumentsWriter.java:255
      Atomic: YES

      Method: DocumentsWriter.abort()
      Calls Location: DocumentsWriter.java:226 DocumentsWriter.java:228
      Atomic: YES

Checking class IndexFileDeleter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeScheduler:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Codec:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InfoStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericUpdate:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexFileNames:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FlushPolicy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentMerger:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Terms$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DataOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IOContext$Context:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FlushInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lock$With:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ToStringUtils:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortField$Type:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortField$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StringHelper:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopDocsCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInvertState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SmallFloat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReaderSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiTerms:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiBits:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergedIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class UnicodeUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CharsRef:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ArrayUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexableFieldType:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NativeFSLock:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LucenePackage:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CorruptIndexException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CodecUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Tokenizer$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CharFilter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeSource$State:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeReflector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeSource$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeSource$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsEnum$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsEnum$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Store:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Index:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$TermVector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericTokenStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SetOnce:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedUpdates:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PostingsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NormsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentWriteState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MutableBits:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FixedBitSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermVectorsReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldsProducer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesProducer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentReader$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldInfosReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentReader$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CollectionUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NamedSPILoader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldsConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilterDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PagedMutable:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Transition:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntsRef:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class State:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Automaton:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BasicOperations:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BasicAutomata:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SpecialOperations:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Document:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Element:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Node:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NodeList:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Text:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$10:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$8:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$9:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$6:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$7:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StringHelper$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class OrdTermState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TypeAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericUtils:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CharTermAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class OffsetAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Index$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Index$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Index$4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Index$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Field$Index$5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Counter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteBlockPool:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntBlockPool:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RAMFile:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RAMOutputStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentReadState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BitVector:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFields:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class OpenBitSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BitUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RefCount:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SPIClassIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Format:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Header:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DirectPackedReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Direct64:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Direct32:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperation:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Direct8:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Direct16:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class GrowableWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LongValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RunAutomaton:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedIntSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StatePair:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MinimizationOperations:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Util:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DOMException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Attr:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TypeInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocumentType:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DOMImplementation:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DOMConfiguration:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NamedNodeMap:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class UserDataHandler:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CharacterData:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ComplexExplanation:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocTermOrds:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BitsSlice:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TimSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntroSorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericUtils$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericUtils$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocInverter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NormsConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsHash:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RAMInputStream:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class RAMDirectory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermInfosReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PostingsConsumer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermStats:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LongsRef:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperation$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Sorter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST$BytesReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST$Arc:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Util$MinResult:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Outputs:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Util$FSTPath:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DOMStringList:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PagedBytes:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsHashPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefHash:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocInverterPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteSliceReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DocValuesWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermInfo:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesStore:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Builder$Arc:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Builder:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Builder$Node:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LSResourceResolver:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MapOfSets:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class PayloadAttribute:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class TermBuffer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MathUtil:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class NodeHash:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesStore$1:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class BytesStore$2:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class LSInput:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word abortPendingFlushes waitForFlush:

    No occurrences


Run Time:
                                .buildTree       0.000s
                                    .onLCA       0.001s
                         analysis-behavior      10.455s
                          analysis-threads       0.007s
                       build-parsing-table       0.219s
                       check-word-instance       0.001s
                               grammar-opt       1.492s
                        grammar-rm-epsilon       8.632s
                                   parsing       0.002s
                                 soot-init      73.477s
                                     total     137.548s

Profiling Vars:
                                 cfg-nodes     109175
                       grammar-productions       1127
                            parse-branches          4
                               parse-trees          2
                      parsing-table-states       1944
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexSearcher:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Query:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Analyzer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class QueryParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ScoreDoc:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Filter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Directory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Document:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FSDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Version:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DirectoryReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopDocs:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TokenStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReusableStringReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexWriter:

  Verifying word flushAllThreads finishFullFlush:

      Method: IndexWriter.prepareCommitInternal()
      Calls Location: IndexWriter.java:2829 IndexWriter.java:2868
      Atomic: YES

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3082 IndexWriter.java:2868
      Atomic: NO

      Method: IndexWriter.closeInternal()
      Calls Location: IndexWriter.java:3082 IndexWriter.java:2868
      Atomic: NO

      Method: IndexWriter.doFlush()
      Calls Location: IndexWriter.java:3082 IndexWriter.java:3085
      Atomic: YES

      Method: IndexWriter.getReader()
      Calls Location: IndexWriter.java:370 IndexWriter.java:398
      Atomic: YES

Checking class IndexCommit:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Fields:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Terms:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexReaderContext:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Term:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AtomicReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompositeReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocIdSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Bits:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IOContext:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lock:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LockFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Directory$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DataInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IOUtils:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Similarity:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Collector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldDocs:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Sort:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Weight:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldDoc:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Explanation:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermStatistics:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermContext:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CollectionStatistics:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class HitQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReaderUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiFields:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRef:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Scorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexableField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BaseDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MMapDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FSLockFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FSDirectory$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Constants:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfos:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PriorityQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Tokenizer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeSource:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BinaryDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfos:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TextField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldType:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeScheduler:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Codec:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InfoStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericUpdate:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexFileNames:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FlushPolicy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentMerger:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Terms$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DataOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IOContext$Context:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FlushInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lock$With:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ToStringUtils:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortField$Type:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortField$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StringHelper:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopDocsCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInvertState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SmallFloat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReaderSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiTerms:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiBits:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergedIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class UnicodeUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CharsRef:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ArrayUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexableFieldType:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NativeFSLock:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LucenePackage:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CorruptIndexException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CodecUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Tokenizer$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CharFilter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeSource$State:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeReflector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeSource$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeSource$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsEnum$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsEnum$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Store:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Index:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$TermVector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericTokenStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SetOnce:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedUpdates:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PostingsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NormsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentWriteState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MutableBits:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FixedBitSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermVectorsReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldsProducer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesProducer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentReader$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldInfosReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentReader$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CollectionUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NamedSPILoader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldsConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilterDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PagedMutable:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Transition:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntsRef:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class State:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Automaton:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BasicOperations:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BasicAutomata:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SpecialOperations:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Document:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Element:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Node:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NodeList:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Text:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$10:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$8:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$9:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$6:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$7:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StringHelper$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class OrdTermState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TypeAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericUtils:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CharTermAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class OffsetAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Index$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Index$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Index$4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Index$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Field$Index$5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Counter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteBlockPool:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntBlockPool:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RAMFile:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RAMOutputStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentReadState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BitVector:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFields:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class OpenBitSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BitUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RefCount:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SPIClassIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Format:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Header:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DirectPackedReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Direct64:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Direct32:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperation:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Direct8:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Direct16:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class GrowableWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LongValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RunAutomaton:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedIntSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StatePair:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MinimizationOperations:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Util:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DOMException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Attr:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TypeInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocumentType:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DOMImplementation:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DOMConfiguration:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NamedNodeMap:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class UserDataHandler:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CharacterData:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ComplexExplanation:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocTermOrds:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BitsSlice:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TimSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntroSorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericUtils$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericUtils$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocInverter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NormsConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsHash:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RAMInputStream:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class RAMDirectory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermInfosReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PostingsConsumer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermStats:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LongsRef:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperation$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Sorter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST$BytesReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST$Arc:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Util$MinResult:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Outputs:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Util$FSTPath:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DOMStringList:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PagedBytes:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsHashPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefHash:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocInverterPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteSliceReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DocValuesWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermInfo:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesStore:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Builder$Arc:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Builder:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Builder$Node:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LSResourceResolver:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MapOfSets:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class PayloadAttribute:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class TermBuffer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MathUtil:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class NodeHash:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesStore$1:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class BytesStore$2:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class LSInput:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word flushAllThreads finishFullFlush:

    No occurrences


Run Time:
                                .buildTree       0.027s
                                    .onLCA       0.171s
                         analysis-behavior      10.047s
                          analysis-threads       0.008s
                       build-parsing-table       0.208s
                       check-word-instance       0.000s
                               grammar-opt       1.555s
                        grammar-rm-epsilon       8.136s
                                   parsing       0.418s
                                 soot-init      76.802s
                                     total     142.329s

Profiling Vars:
                                 cfg-nodes     109344
                       grammar-productions       1200
                            parse-branches      23771
                               parse-trees          5
                      parsing-table-states       2024
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word lock unlock:

    No occurrences

Checking class IndexSearcher:

  Verifying word lock unlock:

    No occurrences

Checking class Query:

  Verifying word lock unlock:

    No occurrences

Checking class Analyzer:

  Verifying word lock unlock:

    No occurrences

Checking class QueryParser:

  Verifying word lock unlock:

    No occurrences

Checking class IndexReader:

  Verifying word lock unlock:

    No occurrences

Checking class ScoreDoc:

  Verifying word lock unlock:

    No occurrences

Checking class Filter:

  Verifying word lock unlock:

    No occurrences

Checking class Directory:

  Verifying word lock unlock:

    No occurrences

Checking class Document:

  Verifying word lock unlock:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word lock unlock:

    No occurrences

Checking class FSDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class Version:

  Verifying word lock unlock:

    No occurrences

Checking class DirectoryReader:

  Verifying word lock unlock:

    No occurrences

Checking class TopDocs:

  Verifying word lock unlock:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word lock unlock:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word lock unlock:

    No occurrences

Checking class TokenStream:

  Verifying word lock unlock:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class ReusableStringReader:

  Verifying word lock unlock:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word lock unlock:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word lock unlock:

    No occurrences

Checking class IndexWriter:

  Verifying word lock unlock:

    No occurrences

Checking class IndexCommit:

  Verifying word lock unlock:

    No occurrences

Checking class Fields:

  Verifying word lock unlock:

    No occurrences

Checking class Terms:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word lock unlock:

    No occurrences

Checking class IndexReaderContext:

  Verifying word lock unlock:

    No occurrences

Checking class Term:

  Verifying word lock unlock:

    No occurrences

Checking class AtomicReader:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word lock unlock:

    No occurrences

Checking class CompositeReader:

  Verifying word lock unlock:

    No occurrences

Checking class DocIdSet:

  Verifying word lock unlock:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word lock unlock:

    No occurrences

Checking class Bits:

  Verifying word lock unlock:

    No occurrences

Checking class IndexOutput:

  Verifying word lock unlock:

    No occurrences

Checking class IOContext:

  Verifying word lock unlock:

    No occurrences

Checking class IndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class Lock:

  Verifying word lock unlock:

    No occurrences

Checking class LockFactory:

  Verifying word lock unlock:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word lock unlock:

    No occurrences

Checking class Directory$1:

  Verifying word lock unlock:

    No occurrences

Checking class DataInput:

  Verifying word lock unlock:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class IOUtils:

  Verifying word lock unlock:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word lock unlock:

    No occurrences

Checking class Similarity:

  Verifying word lock unlock:

    No occurrences

Checking class Collector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldDocs:

  Verifying word lock unlock:

    No occurrences

Checking class Sort:

  Verifying word lock unlock:

    No occurrences

Checking class Weight:

  Verifying word lock unlock:

    No occurrences

Checking class FieldDoc:

  Verifying word lock unlock:

    No occurrences

Checking class Explanation:

  Verifying word lock unlock:

    No occurrences

Checking class TermStatistics:

  Verifying word lock unlock:

    No occurrences

Checking class TermContext:

  Verifying word lock unlock:

    No occurrences

Checking class CollectionStatistics:

  Verifying word lock unlock:

    No occurrences

Checking class HitQueue:

  Verifying word lock unlock:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word lock unlock:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery:

  Verifying word lock unlock:

    No occurrences

Checking class SortField:

  Verifying word lock unlock:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word lock unlock:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector:

  Verifying word lock unlock:

    No occurrences

Checking class ReaderUtil:

  Verifying word lock unlock:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word lock unlock:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word lock unlock:

    No occurrences

Checking class MultiFields:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRef:

  Verifying word lock unlock:

    No occurrences

Checking class Scorer:

  Verifying word lock unlock:

    No occurrences

Checking class IndexableField:

  Verifying word lock unlock:

    No occurrences

Checking class BaseDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word lock unlock:

    No occurrences

Checking class MMapDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word lock unlock:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word lock unlock:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word lock unlock:

    No occurrences

Checking class FSLockFactory:

  Verifying word lock unlock:

    No occurrences

Checking class FSDirectory$1:

  Verifying word lock unlock:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class Constants:

  Verifying word lock unlock:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word lock unlock:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word lock unlock:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfos:

  Verifying word lock unlock:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word lock unlock:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word lock unlock:

    No occurrences

Checking class PriorityQueue:

  Verifying word lock unlock:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word lock unlock:

    No occurrences

Checking class Tokenizer:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeSource:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word lock unlock:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class DocsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class NumericDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class BinaryDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfos:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfo:

  Verifying word lock unlock:

    No occurrences

Checking class TermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word lock unlock:

    No occurrences

Checking class TextField:

  Verifying word lock unlock:

    No occurrences

Checking class FieldType:

  Verifying word lock unlock:

    No occurrences

Checking class Field:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word lock unlock:

    No occurrences

Checking class StoredField:

  Verifying word lock unlock:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word lock unlock:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriter:

  Verifying word lock unlock:

      Method: DocumentsWriter.abort()
      Calls Location: DocumentsWriter.java:219 DocumentsWriter.java:223
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:249 DocumentsWriter.java:297
      Atomic: YES

Checking class IndexFileDeleter:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy:

  Verifying word lock unlock:

    No occurrences

Checking class MergeScheduler:

  Verifying word lock unlock:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word lock unlock:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word lock unlock:

    No occurrences

Checking class Codec:

  Verifying word lock unlock:

    No occurrences

Checking class InfoStream:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word lock unlock:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word lock unlock:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word lock unlock:

    No occurrences

Checking class MergeState:

  Verifying word lock unlock:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word lock unlock:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfo:

  Verifying word lock unlock:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word lock unlock:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word lock unlock:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word lock unlock:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word lock unlock:

    No occurrences

Checking class NumericUpdate:

  Verifying word lock unlock:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentReader:

  Verifying word lock unlock:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word lock unlock:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word lock unlock:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word lock unlock:

      Method: DocumentsWriterPerThreadPool.newThreadState()
      Calls Location: DocumentsWriterPerThreadPool.java:198 DocumentsWriterPerThreadPool.java:214
      Atomic: YES

      Method: DocumentsWriterPerThreadPool.newThreadState()
      Calls Location: DocumentsWriterPerThreadPool.java:198 DocumentsWriterPerThreadPool.java:227
      Atomic: YES

      Method: DocumentsWriterPerThreadPool.numDeactivatedThreadStates()
      Calls Location: DocumentsWriterPerThreadPool.java:308 DocumentsWriterPerThreadPool.java:314
      Atomic: NO

      Method: DocumentsWriterPerThreadPool.newThreadState()
      Calls Location: DocumentsWriterPerThreadPool.java:198 DocumentsWriterPerThreadPool.java:227
      Atomic: YES

      Method: DocumentsWriterPerThreadPool.newThreadState()
      Calls Location: DocumentsWriterPerThreadPool.java:198 DocumentsWriterPerThreadPool.java:214
      Atomic: YES

      Method: DocumentsWriterPerThreadPool.deactivateUnreleasedStates()
      Calls Location: DocumentsWriterPerThreadPool.java:239 DocumentsWriterPerThreadPool.java:243
      Atomic: YES

Checking class DocumentsWriterFlushControl:

  Verifying word lock unlock:

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:503
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:503
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:332
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:503
      Atomic: NO

      Method: DocumentsWriterFlushControl.assertActiveDeleteQueue()
      Calls Location: DocumentsWriterFlushControl.java:524 DocumentsWriterFlushControl.java:528
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:528
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:332
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:332
      Atomic: NO

      Method: DocumentsWriterFlushControl.markForFullFlush()
      Calls Location: DocumentsWriterFlushControl.java:481 DocumentsWriterFlushControl.java:528
      Atomic: NO

      Method: DocumentsWriterFlushControl.doAfterDocument()
      Calls Location: DocumentsWriterFlushControl.java:297 DocumentsWriterFlushControl.java:332
      Atomic: YES

      Method: DocumentsWriterFlushControl.doAfterDocument()
      Calls Location: DocumentsWriterFlushControl.java:297 DocumentsWriterFlushControl.java:332
      Atomic: YES

      Method: DocumentsWriterFlushControl.doAfterDocument()
      Calls Location: DocumentsWriterFlushControl.java:297 DocumentsWriterFlushControl.java:332
      Atomic: YES

      Method: DocumentsWriterFlushControl.checkoutAndBlock()
      Calls Location: DocumentsWriterFlushControl.java:297 DocumentsWriterFlushControl.java:307
      Atomic: NO

Checking class IndexFileNames:

  Verifying word lock unlock:

    No occurrences

Checking class FlushPolicy:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentMerger:

  Verifying word lock unlock:

    No occurrences

Checking class MergeInfo:

  Verifying word lock unlock:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word lock unlock:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word lock unlock:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word lock unlock:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word lock unlock:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Terms$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word lock unlock:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word lock unlock:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word lock unlock:

    No occurrences

Checking class DataOutput:

  Verifying word lock unlock:

    No occurrences

Checking class IOContext$Context:

  Verifying word lock unlock:

    No occurrences

Checking class FlushInfo:

  Verifying word lock unlock:

    No occurrences

Checking class Lock$With:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word lock unlock:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word lock unlock:

    No occurrences

Checking class ToStringUtils:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word lock unlock:

    No occurrences

Checking class SortField$Type:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word lock unlock:

    No occurrences

Checking class SortField$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word lock unlock:

    No occurrences

Checking class StringHelper:

  Verifying word lock unlock:

    No occurrences

Checking class TopDocsCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word lock unlock:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word lock unlock:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInvertState:

  Verifying word lock unlock:

    No occurrences

Checking class SmallFloat:

  Verifying word lock unlock:

    No occurrences

Checking class ReaderSlice:

  Verifying word lock unlock:

    No occurrences

Checking class MultiTerms:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word lock unlock:

    No occurrences

Checking class MultiBits:

  Verifying word lock unlock:

    No occurrences

Checking class MergedIterator:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word lock unlock:

    No occurrences

Checking class UnicodeUtil:

  Verifying word lock unlock:

    No occurrences

Checking class CharsRef:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word lock unlock:

    No occurrences

Checking class ArrayUtil:

  Verifying word lock unlock:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word lock unlock:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word lock unlock:

    No occurrences

Checking class TermState:

  Verifying word lock unlock:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word lock unlock:

    No occurrences

Checking class IndexableFieldType:

  Verifying word lock unlock:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word lock unlock:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class NativeFSLock:

  Verifying word lock unlock:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word lock unlock:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word lock unlock:

    No occurrences

Checking class LucenePackage:

  Verifying word lock unlock:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word lock unlock:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word lock unlock:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word lock unlock:

    No occurrences

Checking class CorruptIndexException:

  Verifying word lock unlock:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word lock unlock:

    No occurrences

Checking class CodecUtil:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word lock unlock:

    No occurrences

Checking class Tokenizer$1:

  Verifying word lock unlock:

    No occurrences

Checking class CharFilter:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeSource$State:

  Verifying word lock unlock:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeImpl:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeReflector:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeSource$1:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeSource$2:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word lock unlock:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefIterator:

  Verifying word lock unlock:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word lock unlock:

    No occurrences

Checking class TermsEnum$1:

  Verifying word lock unlock:

    No occurrences

Checking class TermsEnum$2:

  Verifying word lock unlock:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Store:

  Verifying word lock unlock:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Index:

  Verifying word lock unlock:

    No occurrences

Checking class Field$TermVector:

  Verifying word lock unlock:

    No occurrences

Checking class NumericTokenStream:

  Verifying word lock unlock:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word lock unlock:

    No occurrences

Checking class Field$1:

  Verifying word lock unlock:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word lock unlock:

    No occurrences

Checking class SetOnce:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word lock unlock:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word lock unlock:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word lock unlock:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedUpdates:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word lock unlock:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word lock unlock:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word lock unlock:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word lock unlock:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word lock unlock:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word lock unlock:

    No occurrences

Checking class PostingsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesFormat:

  Verifying word lock unlock:

    No occurrences

Checking class NormsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentWriteState:

  Verifying word lock unlock:

    No occurrences

Checking class MutableBits:

  Verifying word lock unlock:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word lock unlock:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word lock unlock:

    No occurrences

Checking class FixedBitSet:

  Verifying word lock unlock:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word lock unlock:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word lock unlock:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word lock unlock:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word lock unlock:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word lock unlock:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word lock unlock:

    No occurrences

Checking class TermVectorsReader:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word lock unlock:

    No occurrences

Checking class FieldsProducer:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesProducer:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentReader$2:

  Verifying word lock unlock:

    No occurrences

Checking class FieldInfosReader:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentReader$1:

  Verifying word lock unlock:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word lock unlock:

      Method: DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize()
      Calls Location: DocumentsWriterDeleteQueue.java:406 DocumentsWriterDeleteQueue.java:425
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.clear()
      Calls Location: DocumentsWriterDeleteQueue.java:309 DocumentsWriterDeleteQueue.java:315
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.forceApplyGlobalSlice()
      Calls Location: DocumentsWriterDeleteQueue.java:406 DocumentsWriterDeleteQueue.java:415
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.anyChanges()
      Calls Location: DocumentsWriterDeleteQueue.java:175 DocumentsWriterDeleteQueue.java:185
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.freezeGlobalBuffer()
      Calls Location: DocumentsWriterDeleteQueue.java:209 DocumentsWriterDeleteQueue.java:234
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize()
      Calls Location: DocumentsWriterDeleteQueue.java:420 DocumentsWriterDeleteQueue.java:425
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize()
      Calls Location: DocumentsWriterDeleteQueue.java:420 DocumentsWriterDeleteQueue.java:415
      Atomic: NO

      Method: DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize()
      Calls Location: DocumentsWriterDeleteQueue.java:420 DocumentsWriterDeleteQueue.java:415
      Atomic: NO

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word lock unlock:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word lock unlock:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word lock unlock:

    No occurrences

Checking class CollectionUtil:

  Verifying word lock unlock:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word lock unlock:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word lock unlock:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word lock unlock:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word lock unlock:

      Method: DocumentsWriterFlushQueue.forcePurge()
      Calls Location: DocumentsWriterFlushQueue.java:136 DocumentsWriterFlushQueue.java:140
      Atomic: NO

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word lock unlock:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word lock unlock:

    No occurrences

Checking class NamedSPILoader:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word lock unlock:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word lock unlock:

    No occurrences

Checking class FieldsConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class FilterDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class PagedMutable:

  Verifying word lock unlock:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts:

  Verifying word lock unlock:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word lock unlock:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word lock unlock:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word lock unlock:

    No occurrences

Checking class Transition:

  Verifying word lock unlock:

    No occurrences

Checking class IntsRef:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word lock unlock:

    No occurrences

Checking class State:

  Verifying word lock unlock:

    No occurrences

Checking class Automaton:

  Verifying word lock unlock:

    No occurrences

Checking class BasicOperations:

  Verifying word lock unlock:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class BasicAutomata:

  Verifying word lock unlock:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word lock unlock:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class SpecialOperations:

  Verifying word lock unlock:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word lock unlock:

    No occurrences

Checking class Document:

  Verifying word lock unlock:

    No occurrences

Checking class Element:

  Verifying word lock unlock:

    No occurrences

Checking class Node:

  Verifying word lock unlock:

    No occurrences

Checking class NodeList:

  Verifying word lock unlock:

    No occurrences

Checking class Text:

  Verifying word lock unlock:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word lock unlock:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word lock unlock:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word lock unlock:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word lock unlock:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word lock unlock:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word lock unlock:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$10:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$8:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$9:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$6:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$7:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$4:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$5:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$2:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$3:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class StringHelper$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word lock unlock:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word lock unlock:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word lock unlock:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word lock unlock:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word lock unlock:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word lock unlock:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word lock unlock:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word lock unlock:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word lock unlock:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word lock unlock:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word lock unlock:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word lock unlock:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word lock unlock:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word lock unlock:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word lock unlock:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word lock unlock:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word lock unlock:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word lock unlock:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word lock unlock:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word lock unlock:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word lock unlock:

    No occurrences

Checking class OrdTermState:

  Verifying word lock unlock:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class TypeAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word lock unlock:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word lock unlock:

    No occurrences

Checking class NumericUtils:

  Verifying word lock unlock:

    No occurrences

Checking class CharTermAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class OffsetAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word lock unlock:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word lock unlock:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word lock unlock:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word lock unlock:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Index$2:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Index$1:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Index$4:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Index$3:

  Verifying word lock unlock:

    No occurrences

Checking class Field$Index$5:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word lock unlock:

    No occurrences

Checking class DocConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class Counter:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word lock unlock:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word lock unlock:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word lock unlock:

    No occurrences

Checking class ByteBlockPool:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word lock unlock:

    No occurrences

Checking class IntBlockPool:

  Verifying word lock unlock:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word lock unlock:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word lock unlock:

    No occurrences

Checking class RAMFile:

  Verifying word lock unlock:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word lock unlock:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word lock unlock:

    No occurrences

Checking class RAMOutputStream:

  Verifying word lock unlock:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word lock unlock:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word lock unlock:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentReadState:

  Verifying word lock unlock:

    No occurrences

Checking class BitVector:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFields:

  Verifying word lock unlock:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word lock unlock:

    No occurrences

Checking class OpenBitSet:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class BitUtil:

  Verifying word lock unlock:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word lock unlock:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word lock unlock:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word lock unlock:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word lock unlock:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word lock unlock:

    No occurrences

Checking class RefCount:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word lock unlock:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word lock unlock:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word lock unlock:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word lock unlock:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word lock unlock:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word lock unlock:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word lock unlock:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word lock unlock:

    No occurrences

Checking class SPIClassIterator:

  Verifying word lock unlock:

    No occurrences

Checking class TermsConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Format:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Header:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word lock unlock:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word lock unlock:

    No occurrences

Checking class DirectPackedReader:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64:

  Verifying word lock unlock:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word lock unlock:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$1:

  Verifying word lock unlock:

    No occurrences

Checking class Direct64:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$2:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word lock unlock:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word lock unlock:

    No occurrences

Checking class Direct32:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperation:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word lock unlock:

    No occurrences

Checking class Direct8:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word lock unlock:

    No occurrences

Checking class Direct16:

  Verifying word lock unlock:

    No occurrences

Checking class PackedWriter:

  Verifying word lock unlock:

    No occurrences

Checking class GrowableWriter:

  Verifying word lock unlock:

    No occurrences

Checking class LongValues:

  Verifying word lock unlock:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word lock unlock:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word lock unlock:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word lock unlock:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word lock unlock:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word lock unlock:

    No occurrences

Checking class RunAutomaton:

  Verifying word lock unlock:

    No occurrences

Checking class SortedIntSet:

  Verifying word lock unlock:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word lock unlock:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word lock unlock:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word lock unlock:

    No occurrences

Checking class StatePair:

  Verifying word lock unlock:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word lock unlock:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word lock unlock:

    No occurrences

Checking class MinimizationOperations:

  Verifying word lock unlock:

    No occurrences

Checking class Util:

  Verifying word lock unlock:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word lock unlock:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word lock unlock:

    No occurrences

Checking class DOMException:

  Verifying word lock unlock:

    No occurrences

Checking class Attr:

  Verifying word lock unlock:

    No occurrences

Checking class TypeInfo:

  Verifying word lock unlock:

    No occurrences

Checking class DocumentType:

  Verifying word lock unlock:

    No occurrences

Checking class DOMImplementation:

  Verifying word lock unlock:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word lock unlock:

    No occurrences

Checking class DOMConfiguration:

  Verifying word lock unlock:

    No occurrences

Checking class NamedNodeMap:

  Verifying word lock unlock:

    No occurrences

Checking class UserDataHandler:

  Verifying word lock unlock:

    No occurrences

Checking class CharacterData:

  Verifying word lock unlock:

    No occurrences

Checking class ComplexExplanation:

  Verifying word lock unlock:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word lock unlock:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word lock unlock:

    No occurrences

Checking class DocTermOrds:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word lock unlock:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word lock unlock:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class BitsSlice:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class TimSorter:

  Verifying word lock unlock:

    No occurrences

Checking class IntroSorter:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word lock unlock:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word lock unlock:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word lock unlock:

    No occurrences

Checking class NumericUtils$2:

  Verifying word lock unlock:

    No occurrences

Checking class NumericUtils$1:

  Verifying word lock unlock:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word lock unlock:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word lock unlock:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word lock unlock:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word lock unlock:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word lock unlock:

    No occurrences

Checking class DocInverter:

  Verifying word lock unlock:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class NormsConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word lock unlock:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word lock unlock:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class TermsHash:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word lock unlock:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word lock unlock:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word lock unlock:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word lock unlock:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word lock unlock:

    No occurrences

Checking class RAMInputStream:

  Verifying word lock unlock:

    No occurrences

Checking class RAMDirectory:

  Verifying word lock unlock:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class TermInfosReader:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word lock unlock:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word lock unlock:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word lock unlock:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word lock unlock:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class PostingsConsumer:

  Verifying word lock unlock:

    No occurrences

Checking class TermStats:

  Verifying word lock unlock:

    No occurrences

Checking class LongsRef:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word lock unlock:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperation$1:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word lock unlock:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word lock unlock:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word lock unlock:

    No occurrences

Checking class Sorter:

  Verifying word lock unlock:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word lock unlock:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word lock unlock:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word lock unlock:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word lock unlock:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word lock unlock:

    No occurrences

Checking class FST:

  Verifying word lock unlock:

    No occurrences

Checking class FST$BytesReader:

  Verifying word lock unlock:

    No occurrences

Checking class FST$Arc:

  Verifying word lock unlock:

    No occurrences

Checking class Util$MinResult:

  Verifying word lock unlock:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word lock unlock:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word lock unlock:

    No occurrences

Checking class Outputs:

  Verifying word lock unlock:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word lock unlock:

    No occurrences

Checking class Util$FSTPath:

  Verifying word lock unlock:

    No occurrences

Checking class DOMStringList:

  Verifying word lock unlock:

    No occurrences

Checking class PagedBytes:

  Verifying word lock unlock:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word lock unlock:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word lock unlock:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word lock unlock:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word lock unlock:

    No occurrences

Checking class TermsHashPerField:

  Verifying word lock unlock:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefHash:

  Verifying word lock unlock:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word lock unlock:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word lock unlock:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word lock unlock:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word lock unlock:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word lock unlock:

    No occurrences

Checking class DocInverterPerField:

  Verifying word lock unlock:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word lock unlock:

    No occurrences

Checking class ByteSliceReader:

  Verifying word lock unlock:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word lock unlock:

    No occurrences

Checking class DocValuesWriter:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word lock unlock:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word lock unlock:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word lock unlock:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word lock unlock:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word lock unlock:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word lock unlock:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word lock unlock:

    No occurrences

Checking class TermInfo:

  Verifying word lock unlock:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word lock unlock:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word lock unlock:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word lock unlock:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word lock unlock:

    No occurrences

Checking class BytesStore:

  Verifying word lock unlock:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word lock unlock:

    No occurrences

Checking class Builder$Arc:

  Verifying word lock unlock:

    No occurrences

Checking class Builder:

  Verifying word lock unlock:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word lock unlock:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word lock unlock:

    No occurrences

Checking class Builder$Node:

  Verifying word lock unlock:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word lock unlock:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word lock unlock:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word lock unlock:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word lock unlock:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word lock unlock:

    No occurrences

Checking class LSResourceResolver:

  Verifying word lock unlock:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word lock unlock:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word lock unlock:

    No occurrences

Checking class MapOfSets:

  Verifying word lock unlock:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word lock unlock:

    No occurrences

Checking class PayloadAttribute:

  Verifying word lock unlock:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word lock unlock:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word lock unlock:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word lock unlock:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word lock unlock:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word lock unlock:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word lock unlock:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word lock unlock:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word lock unlock:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word lock unlock:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word lock unlock:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word lock unlock:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word lock unlock:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word lock unlock:

    No occurrences

Checking class TermBuffer:

  Verifying word lock unlock:

    No occurrences

Checking class MathUtil:

  Verifying word lock unlock:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word lock unlock:

    No occurrences

Checking class NodeHash:

  Verifying word lock unlock:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word lock unlock:

    No occurrences

Checking class BytesStore$1:

  Verifying word lock unlock:

    No occurrences

Checking class BytesStore$2:

  Verifying word lock unlock:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word lock unlock:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word lock unlock:

    No occurrences

Checking class LSInput:

  Verifying word lock unlock:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word lock unlock:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word lock unlock:

    No occurrences


Run Time:
                                .buildTree       0.008s
                                    .onLCA       0.029s
                         analysis-behavior      10.847s
                          analysis-threads       0.008s
                       build-parsing-table       0.177s
                       check-word-instance       0.006s
                               grammar-opt       2.619s
                        grammar-rm-epsilon       7.889s
                                   parsing       0.130s
                                 soot-init      79.825s
                                     total     143.472s

Profiling Vars:
                                 cfg-nodes     110298
                       grammar-productions       1312
                            parse-branches       2733
                               parse-trees         30
                      parsing-table-states       2079
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexSearcher:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Query:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Analyzer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class QueryParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ScoreDoc:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Filter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Directory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Document:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FSDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Version:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DirectoryReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopDocs:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TokenStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReusableStringReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexCommit:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Fields:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Terms:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexReaderContext:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Term:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AtomicReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompositeReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocIdSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Bits:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IOContext:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lock:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LockFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Directory$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DataInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IOUtils:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Similarity:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Collector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldDocs:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Sort:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Weight:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldDoc:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Explanation:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermStatistics:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermContext:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CollectionStatistics:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class HitQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReaderUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiFields:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRef:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Scorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexableField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BaseDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MMapDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FSLockFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FSDirectory$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Constants:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfos:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PriorityQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Tokenizer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeSource:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BinaryDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfos:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TextField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldType:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriter:

  Verifying word getMaxThreadStates getThreadState:

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:245 DocumentsWriter.java:248
      Atomic: YES

      Method: DocumentsWriter.unlockAllAfterAbortAll()
      Calls Location: DocumentsWriter.java:292 DocumentsWriter.java:295
      Atomic: YES

      Method: DocumentsWriter.lockAndAbortAll()
      Calls Location: DocumentsWriter.java:245 DocumentsWriter.java:295
      Atomic: YES

Checking class IndexFileDeleter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeScheduler:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LiveIndexWriterConfig:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Codec:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InfoStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericUpdate:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexFileNames:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FlushPolicy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentMerger:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Terms$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DataOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IOContext$Context:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FlushInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lock$With:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ToStringUtils:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortField$Type:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortField$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StringHelper:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopDocsCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInvertState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SmallFloat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReaderSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiTerms:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiBits:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergedIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class UnicodeUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CharsRef:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ArrayUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexableFieldType:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NativeFSLock:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LucenePackage:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CorruptIndexException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CodecUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Tokenizer$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CharFilter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeSource$State:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeReflector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeSource$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeSource$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsEnum$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsEnum$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Store:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Index:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$TermVector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericTokenStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SetOnce:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedUpdates:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PostingsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NormsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentWriteState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MutableBits:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FixedBitSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermVectorsReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldsProducer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesProducer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentReader$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldInfosReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentReader$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CollectionUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NamedSPILoader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldsConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilterDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PagedMutable:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Transition:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntsRef:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class State:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Automaton:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BasicOperations:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BasicAutomata:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SpecialOperations:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Document:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Element:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Node:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NodeList:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Text:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$10:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$8:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$9:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$6:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$7:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StringHelper$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class OrdTermState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TypeAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericUtils:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CharTermAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class OffsetAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Index$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Index$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Index$4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Index$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Field$Index$5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Counter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteBlockPool:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntBlockPool:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RAMFile:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RAMOutputStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentReadState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BitVector:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFields:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class OpenBitSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BitUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RefCount:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SPIClassIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Format:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Header:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DirectPackedReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Direct64:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Direct32:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperation:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Direct8:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Direct16:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class GrowableWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LongValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RunAutomaton:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedIntSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StatePair:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MinimizationOperations:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Util:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DOMException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Attr:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TypeInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocumentType:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DOMImplementation:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DOMConfiguration:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NamedNodeMap:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class UserDataHandler:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CharacterData:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ComplexExplanation:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocTermOrds:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BitsSlice:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TimSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntroSorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericUtils$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericUtils$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocInverter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NormsConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsHash:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RAMInputStream:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class RAMDirectory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermInfosReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PostingsConsumer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermStats:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LongsRef:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperation$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Sorter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST$BytesReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST$Arc:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Util$MinResult:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Outputs:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Util$FSTPath:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DOMStringList:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PagedBytes:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsHashPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefHash:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocInverterPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteSliceReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DocValuesWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermInfo:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesStore:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Builder$Arc:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Builder:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Builder$Node:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LSResourceResolver:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MapOfSets:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class PayloadAttribute:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class TermBuffer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MathUtil:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class NodeHash:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesStore$1:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class BytesStore$2:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class LSInput:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word getMaxThreadStates getThreadState:

    No occurrences


Run Time:
                                .buildTree       0.000s
                                    .onLCA       0.001s
                         analysis-behavior      10.058s
                          analysis-threads       0.008s
                       build-parsing-table       0.111s
                       check-word-instance       0.001s
                               grammar-opt       1.614s
                        grammar-rm-epsilon       8.102s
                                   parsing       0.009s
                                 soot-init      77.817s
                                     total     143.974s

Profiling Vars:
                                 cfg-nodes     110043
                       grammar-productions       1183
                            parse-branches         23
                               parse-trees          3
                      parsing-table-states       2006
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexSearcher:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Query:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Analyzer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class QueryParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ScoreDoc:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Filter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Directory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Document:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FSDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Version:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DirectoryReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopDocs:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TokenStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ReusableStringReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3379 IndexWriter.java:3382 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3375 IndexWriter.java:3382 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3291 IndexWriter.java:3382 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3382 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3291 IndexWriter.java:3294 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3294 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3379 IndexWriter.java:3294 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3375 IndexWriter.java:3294 IndexWriter.java:3477
      Atomic: YES

      Method: IndexWriter.tryDeleteDocument()
      Calls Location: IndexWriter.java:1381 IndexWriter.java:1382 IndexWriter.java:1383
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3379 IndexWriter.java:3382 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3375 IndexWriter.java:3382 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3291 IndexWriter.java:3382 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3382 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3291 IndexWriter.java:3294 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3294 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3379 IndexWriter.java:3294 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMergedDeletesAndUpdates()
      Calls Location: IndexWriter.java:3375 IndexWriter.java:3294 IndexWriter.java:3365
      Atomic: YES

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3382 IndexWriter.java:3529
      Atomic: YES

      Method: IndexWriter.commitMerge()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3382 IndexWriter.java:627
      Atomic: YES

      Method: IndexWriter.merge()
      Calls Location: IndexWriter.java:3287 IndexWriter.java:3382 IndexWriter.java:627
      Atomic: NO

    *** Timeout ***

Checking class IndexCommit:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Fields:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Terms:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexReaderContext:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Term:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AtomicReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompositeReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocIdSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Bits:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IOContext:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lock:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LockFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Directory$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DataInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IOUtils:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Similarity:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Collector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldDocs:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Sort:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Weight:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldDoc:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Explanation:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermStatistics:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermContext:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CollectionStatistics:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class HitQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ReaderUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiFields:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRef:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Scorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexableField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BaseDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MMapDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FSLockFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FSDirectory$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Constants:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfos:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PriorityQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Tokenizer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeSource:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BinaryDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfos:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TextField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldType:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeScheduler:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:555 BufferedUpdatesStream.java:559 BufferedUpdatesStream.java:289
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:555 BufferedUpdatesStream.java:559 BufferedUpdatesStream.java:239
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:427 BufferedUpdatesStream.java:435 BufferedUpdatesStream.java:289
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:427 BufferedUpdatesStream.java:435 BufferedUpdatesStream.java:239
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:555 BufferedUpdatesStream.java:435 BufferedUpdatesStream.java:289
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:555 BufferedUpdatesStream.java:435 BufferedUpdatesStream.java:239
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:427 BufferedUpdatesStream.java:559 BufferedUpdatesStream.java:289
      Atomic: YES

      Method: BufferedUpdatesStream.applyDeletesAndUpdates()
      Calls Location: BufferedUpdatesStream.java:427 BufferedUpdatesStream.java:559 BufferedUpdatesStream.java:239
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Codec:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InfoStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericUpdate:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexFileNames:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FlushPolicy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentMerger:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Terms$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DataOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IOContext$Context:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FlushInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lock$With:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ToStringUtils:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortField$Type:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortField$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StringHelper:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopDocsCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInvertState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SmallFloat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ReaderSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiTerms:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiBits:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergedIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class UnicodeUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CharsRef:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ArrayUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexableFieldType:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NativeFSLock:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LucenePackage:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CorruptIndexException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CodecUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Tokenizer$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CharFilter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeSource$State:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeReflector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeSource$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeSource$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsEnum$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsEnum$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Store:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Index:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$TermVector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericTokenStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SetOnce:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedUpdates:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PostingsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NormsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentWriteState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MutableBits:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FixedBitSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermVectorsReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldsProducer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesProducer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentReader$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldInfosReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentReader$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CollectionUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NamedSPILoader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldsConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilterDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PagedMutable:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Transition:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntsRef:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class State:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Automaton:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BasicOperations:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BasicAutomata:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SpecialOperations:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Document:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Element:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Node:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NodeList:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Text:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$10:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$8:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$9:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$6:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$7:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StringHelper$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class OrdTermState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TypeAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericUtils:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CharTermAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class OffsetAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Index$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Index$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Index$4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Index$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Field$Index$5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Counter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteBlockPool:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntBlockPool:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RAMFile:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RAMOutputStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentReadState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BitVector:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFields:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class OpenBitSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BitUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RefCount:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SPIClassIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Format:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Header:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DirectPackedReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Direct64:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Direct32:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperation:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Direct8:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Direct16:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class GrowableWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LongValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RunAutomaton:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedIntSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StatePair:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MinimizationOperations:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Util:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DOMException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Attr:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TypeInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocumentType:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DOMImplementation:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DOMConfiguration:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NamedNodeMap:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class UserDataHandler:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CharacterData:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ComplexExplanation:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocTermOrds:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BitsSlice:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TimSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntroSorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericUtils$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericUtils$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocInverter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NormsConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsHash:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RAMInputStream:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class RAMDirectory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermInfosReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PostingsConsumer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermStats:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LongsRef:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperation$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Sorter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST$BytesReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST$Arc:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Util$MinResult:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Outputs:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Util$FSTPath:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DOMStringList:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PagedBytes:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsHashPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefHash:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocInverterPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteSliceReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DocValuesWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermInfo:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesStore:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Builder$Arc:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Builder:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Builder$Node:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LSResourceResolver:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MapOfSets:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class PayloadAttribute:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class TermBuffer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MathUtil:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class NodeHash:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesStore$1:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class BytesStore$2:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class LSInput:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word initWritableLiveDocs delete getPendingDeleteCount:

    No occurrences


Run Time:
                                .buildTree      71.647s
                                    .onLCA     174.022s
                         analysis-behavior       9.212s
                          analysis-threads       0.008s
                       build-parsing-table       0.713s
                       check-word-instance       0.008s
                               grammar-opt       1.438s
                        grammar-rm-epsilon       7.436s
                                   parsing     199.913s
                                 soot-init      75.352s
                                     total     539.900s

Profiling Vars:
                                 cfg-nodes     109531
                       grammar-productions       1720
                            parse-branches   55229439
                               parse-trees         28
                      parsing-table-states       2500
                                   threads          1
Warning: org.apache.lucene.queryparser.classic.QueryParser is a phantom class!
Warning: org.apache.lucene.analysis.standard.StandardAnalyzer is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Checking class SearchFiles:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexSearcher:

  Verifying word addAndGet get:

    No occurrences

Checking class Query:

  Verifying word addAndGet get:

    No occurrences

Checking class Analyzer:

  Verifying word addAndGet get:

    No occurrences

Checking class QueryParser:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexReader:

  Verifying word addAndGet get:

    No occurrences

Checking class ScoreDoc:

  Verifying word addAndGet get:

    No occurrences

Checking class Filter:

  Verifying word addAndGet get:

    No occurrences

Checking class Directory:

  Verifying word addAndGet get:

    No occurrences

Checking class Document:

  Verifying word addAndGet get:

    No occurrences

Checking class StandardAnalyzer:

  Verifying word addAndGet get:

    No occurrences

Checking class FSDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class Version:

  Verifying word addAndGet get:

    No occurrences

Checking class DirectoryReader:

  Verifying word addAndGet get:

    No occurrences

Checking class TopDocs:

  Verifying word addAndGet get:

    No occurrences

Checking class Analyzer$ReuseStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class CloseableThreadLocal:

  Verifying word addAndGet get:

    No occurrences

Checking class Analyzer$TokenStreamComponents:

  Verifying word addAndGet get:

    No occurrences

Checking class TokenStream:

  Verifying word addAndGet get:

    No occurrences

Checking class Analyzer$GlobalReuseStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class Analyzer$PerFieldReuseStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class ReusableStringReader:

  Verifying word addAndGet get:

    No occurrences

Checking class AlreadyClosedException:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexReader$ReaderClosedListener:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexCommit:

  Verifying word addAndGet get:

    No occurrences

Checking class Fields:

  Verifying word addAndGet get:

    No occurrences

Checking class Terms:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldVisitor:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexReaderContext:

  Verifying word addAndGet get:

    No occurrences

Checking class Term:

  Verifying word addAndGet get:

    No occurrences

Checking class AtomicReader:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentStoredFieldVisitor:

  Verifying word addAndGet get:

    No occurrences

Checking class CompositeReader:

  Verifying word addAndGet get:

    No occurrences

Checking class DocIdSet:

  Verifying word addAndGet get:

    No occurrences

Checking class AtomicReaderContext:

  Verifying word addAndGet get:

    No occurrences

Checking class Bits:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class IOContext:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class Lock:

  Verifying word addAndGet get:

    No occurrences

Checking class LockFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class Directory$IndexInputSlicer:

  Verifying word addAndGet get:

    No occurrences

Checking class Directory$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DataInput:

  Verifying word addAndGet get:

    No occurrences

Checking class Directory$SlicedIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class IOUtils:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexSearcher$LeafSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class Similarity:

  Verifying word addAndGet get:

    No occurrences

Checking class Collector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldDocs:

  Verifying word addAndGet get:

    No occurrences

Checking class Sort:

  Verifying word addAndGet get:

    No occurrences

Checking class Weight:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldDoc:

  Verifying word addAndGet get:

    No occurrences

Checking class Explanation:

  Verifying word addAndGet get:

    No occurrences

Checking class TermStatistics:

  Verifying word addAndGet get:

    No occurrences

Checking class TermContext:

  Verifying word addAndGet get:

    No occurrences

Checking class CollectionStatistics:

  Verifying word addAndGet get:

    No occurrences

Checking class HitQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort:

  Verifying word addAndGet get:

    No occurrences

Checking class CollectionTerminatedException:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery:

  Verifying word addAndGet get:

    No occurrences

Checking class SortField:

  Verifying word addAndGet get:

    No occurrences

Checking class TopScoreDocCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexSearcher$SearcherCallableNoSort:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class ReaderUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexSearcher$ExecutionHelper:

  Verifying word addAndGet get:

    No occurrences

Checking class DefaultSimilarity:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiFields:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRef:

  Verifying word addAndGet get:

    No occurrences

Checking class Scorer:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexableField:

  Verifying word addAndGet get:

    No occurrences

Checking class BaseDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class FSDirectory$FSIndexOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class MMapDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class FSDirectory$FSIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class NoSuchDirectoryException:

  Verifying word addAndGet get:

    No occurrences

Checking class NativeFSLockFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class ThreadInterruptedException:

  Verifying word addAndGet get:

    No occurrences

Checking class FSLockFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class FSDirectory$1:

  Verifying word addAndGet get:

    No occurrences

Checking class NIOFSDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class SimpleFSDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class Constants:

  Verifying word addAndGet get:

    No occurrences

Checking class BaseCompositeReader:

  Verifying word addAndGet get:

    No occurrences

Checking class StandardDirectoryReader$ReaderCommit:

  Verifying word addAndGet get:

    No occurrences

Checking class StandardDirectoryReader:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfos:

  Verifying word addAndGet get:

    No occurrences

Checking class TopDocs$ShardRef:

  Verifying word addAndGet get:

    No occurrences

Checking class TopDocs$MergeSortQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class PriorityQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class TopDocs$ScoreMergeSortQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class Tokenizer:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeSource:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeSource$AttributeFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class PositionIncrementAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class DocsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class DocsAndPositionsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class BinaryDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfos:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldVisitor$Status:

  Verifying word addAndGet get:

    No occurrences

Checking class TextField:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldType:

  Verifying word addAndGet get:

    No occurrences

Checking class Field:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfo$IndexOptions:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredField:

  Verifying word addAndGet get:

    No occurrences

Checking class CompositeReaderContext:

  Verifying word addAndGet get:

    No occurrences

Checking class TwoPhaseCommit:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfos$FieldNumbers:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexFileDeleter:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeScheduler:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexWriter$ReaderPool:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedUpdatesStream:

  Verifying word addAndGet get:

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:366 BufferedUpdatesStream.java:108
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:366 BufferedUpdatesStream.java:589
      Atomic: YES

      Method: BufferedUpdatesStream.prune()
      Calls Location: BufferedUpdatesStream.java:366 BufferedUpdatesStream.java:367
      Atomic: YES

      Method: BufferedUpdatesStream.push()
      Calls Location: BufferedUpdatesStream.java:92 BufferedUpdatesStream.java:94
      Atomic: YES

      Method: BufferedUpdatesStream.push()
      Calls Location: BufferedUpdatesStream.java:92 BufferedUpdatesStream.java:589
      Atomic: YES

Checking class LiveIndexWriterConfig:

  Verifying word addAndGet get:

    No occurrences

Checking class Codec:

  Verifying word addAndGet get:

    No occurrences

Checking class InfoStream:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentCommitInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexWriterConfig:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$MergeTrigger:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$OneMerge:

  Verifying word addAndGet get:

    No occurrences

Checking class FrozenBufferedUpdates:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$DocMap:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeState:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericFieldUpdates$UpdatesIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class ReadersAndUpdates:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeState$CheckAbort:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$MergeException:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xCodec:

  Verifying word addAndGet get:

    No occurrences

Checking class LockObtainFailedException:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfo$DocValuesType:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericFieldUpdates:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriter$MergePendingEvent:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfoWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$MergeAbortedException:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexDeletionPolicy:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericUpdate:

  Verifying word addAndGet get:

    No occurrences

Checking class CompoundFileDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentReader:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexWriterConfig$OpenMode:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexWriter$Event:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$MergeSpecification:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xSegmentInfoFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexWriter$IndexReaderWarmer:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThreadPool:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushControl:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexFileNames:

  Verifying word addAndGet get:

    No occurrences

Checking class FlushPolicy:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfoFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentMerger:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class TrackingDirectoryWrapper:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedUpdatesStream$ApplyDeletesResult:

  Verifying word addAndGet get:

    No occurrences

Checking class CompiledAutomaton:

  Verifying word addAndGet get:

    No occurrences

Checking class CompiledAutomaton$AUTOMATON_TYPE:

  Verifying word addAndGet get:

    No occurrences

Checking class AutomatonTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Terms$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocIdSetIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class Bits$MatchAllBits:

  Verifying word addAndGet get:

    No occurrences

Checking class Bits$MatchNoBits:

  Verifying word addAndGet get:

    No occurrences

Checking class DataOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class IOContext$Context:

  Verifying word addAndGet get:

    No occurrences

Checking class FlushInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class Lock$With:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexSearcher$SearcherCallableWithSort$FakeScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$FilterStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$LeapFrogScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$QueryFirstScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$LeapFrogFilterStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$PrimaryAdvancedLeapFrogScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$QueryFirstFilterStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class MatchAllDocsQuery:

  Verifying word addAndGet get:

    No occurrences

Checking class ConstantScoreQuery:

  Verifying word addAndGet get:

    No occurrences

Checking class ToStringUtils:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredQuery$RandomAccessFilterStrategy:

  Verifying word addAndGet get:

    No occurrences

Checking class SortField$Type:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Parser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparatorSource:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$TermValComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$DoubleParser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$LongComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class SortField$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$ByteComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$LongParser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$ShortComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$IntParser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$ShortParser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$ByteParser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$FloatParser:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$IntComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$RelevanceComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$TermOrdValComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$DoubleComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$FloatComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$DocComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class StringHelper:

  Verifying word addAndGet get:

    No occurrences

Checking class TopDocsCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderTopScoreDocCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopScoreDocCollector$InOrderPagingScoreDocCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopScoreDocCollector$InOrderTopScoreDocCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopScoreDocCollector$OutOfOrderPagingScoreDocCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldValueHitQueue$Entry:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringNoMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldValueHitQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$MultiComparatorNonScoringCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$PagingFieldCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OneComparatorScoringMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OneComparatorNonScoringCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$MultiComparatorScoringMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector:

  Verifying word addAndGet get:

    No occurrences

Checking class TFIDFSimilarity:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInvertState:

  Verifying word addAndGet get:

    No occurrences

Checking class SmallFloat:

  Verifying word addAndGet get:

    No occurrences

Checking class ReaderSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiTerms:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfos$Builder:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiBits:

  Verifying word addAndGet get:

    No occurrences

Checking class MergedIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRef$UTF8SortedAsUnicodeComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class UnicodeUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class CharsRef:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRef$UTF8SortedAsUTF16Comparator:

  Verifying word addAndGet get:

    No occurrences

Checking class ArrayUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class Similarity$SimWeight:

  Verifying word addAndGet get:

    No occurrences

Checking class Similarity$SimScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class TermState:

  Verifying word addAndGet get:

    No occurrences

Checking class Scorer$ChildScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexableFieldType:

  Verifying word addAndGet get:

    No occurrences

Checking class MMapDirectory$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MMapDirectory$MMapIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class NativeFSLock:

  Verifying word addAndGet get:

    No occurrences

Checking class NIOFSDirectory$NIOFSIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class NIOFSDirectory$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedIndexOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class SimpleFSDirectory$SimpleFSIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class SimpleFSDirectory$1:

  Verifying word addAndGet get:

    No occurrences

Checking class LucenePackage:

  Verifying word addAndGet get:

    No occurrences

Checking class StandardDirectoryReader$2:

  Verifying word addAndGet get:

    No occurrences

Checking class StandardDirectoryReader$1:

  Verifying word addAndGet get:

    No occurrences

Checking class ChecksumIndexOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class CorruptIndexException:

  Verifying word addAndGet get:

    No occurrences

Checking class ChecksumIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xSegmentInfoReader:

  Verifying word addAndGet get:

    No occurrences

Checking class CodecUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfos$FindSegmentsFile:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfos$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentInfoReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Tokenizer$1:

  Verifying word addAndGet get:

    No occurrences

Checking class CharFilter:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeSource$State:

  Verifying word addAndGet get:

    No occurrences

Checking class WeakIdentityMap:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeReflector:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeSource$1:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeSource$2:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeSource$AttributeFactory$DefaultAttributeFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsEnum$SeekStatus:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsEnum$1:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsEnum$2:

  Verifying word addAndGet get:

    No occurrences

Checking class BinaryDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValuesTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Store:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldType$NumericType:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Index:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$TermVector:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericTokenStream:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$StringTokenStream:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$1:

  Verifying word addAndGet get:

    No occurrences

Checking class CompositeReaderContext$Builder:

  Verifying word addAndGet get:

    No occurrences

Checking class SetOnce:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThread$IndexingChain:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThread:

  Verifying word addAndGet get:

    No occurrences

Checking class ThreadAffinityDocumentsWriterThreadPool:

  Verifying word addAndGet get:

    No occurrences

Checking class PrintStreamInfoStream:

  Verifying word addAndGet get:

    No occurrences

Checking class PrefixCodedTerms:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedUpdates:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedUpdatesStream$QueryAndLimit:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator:

  Verifying word addAndGet get:

    No occurrences

Checking class FrozenBufferedUpdates$2:

  Verifying word addAndGet get:

    No occurrences

Checking class FrozenBufferedUpdates$1:

  Verifying word addAndGet get:

    No occurrences

Checking class PrefixCodedTerms$Builder:

  Verifying word addAndGet get:

    No occurrences

Checking class CoalescedUpdates:

  Verifying word addAndGet get:

    No occurrences

Checking class QueryWrapperFilter:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedUpdatesStream$1:

  Verifying word addAndGet get:

    No occurrences

Checking class PostingsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class TermVectorsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfosFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xNormsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class LiveDocsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class NormsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene40LiveDocsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xCodec$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFieldInfosFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xStoredFieldsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xPostingsFormat:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentWriteState:

  Verifying word addAndGet get:

    No occurrences

Checking class MutableBits:

  Verifying word addAndGet get:

    No occurrences

Checking class ReadersAndUpdates$1:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericDocValuesField:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfosWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeState$CheckAbort$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FixedBitSet:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeState$DocMap:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeState$NoDelDocMap:

  Verifying word addAndGet get:

    No occurrences

Checking class InfoStream$NoOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class CompoundFileWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class CompoundFileDirectory$FileEntry:

  Verifying word addAndGet get:

    No occurrences

Checking class CompoundFileDirectory$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentCoreReaders:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldsReader:

  Verifying word addAndGet get:

    No occurrences

Checking class TermVectorsReader:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentReader$CoreClosedListener:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldsProducer:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesProducer:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentReader$2:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldInfosReader:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentReader$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MergePolicy$OneMerge$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThreadPool$ThreadState:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterStallControl:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushControl$BlockedFlush:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushControl$1:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexFileDeleter$RefCount:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexFileDeleter$CommitPoint:

  Verifying word addAndGet get:

    No occurrences

Checking class CollectionUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class TieredMergePolicy:

  Verifying word addAndGet get:

    No occurrences

Checking class FlushByRamOrCountsPolicy:

  Verifying word addAndGet get:

    No occurrences

Checking class KeepOnlyLastCommitDeletionPolicy:

  Verifying word addAndGet get:

    No occurrences

Checking class ConcurrentMergeScheduler:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriter$ForcedPurgeEvent:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThread$FlushedSegment:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriter$FlushFailedEvent:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriter$DeleteNewFilesEvent:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushQueue$SegmentFlushTicket:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriter$ApplyDeletesEvent:

  Verifying word addAndGet get:

    No occurrences

Checking class NamedSPILoader$NamedSPI:

  Verifying word addAndGet get:

    No occurrences

Checking class NamedSPILoader:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldsWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class TermVectorsWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldsConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class FilterDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class PagedMutable:

  Verifying word addAndGet get:

    No occurrences

Checking class PagedGrowableWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts:

  Verifying word addAndGet get:

    No occurrences

Checking class AbstractPagedMutable:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$2:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericFieldUpdates$PackedNumericFieldUpdates$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteRunAutomaton:

  Verifying word addAndGet get:

    No occurrences

Checking class Transition:

  Verifying word addAndGet get:

    No occurrences

Checking class IntsRef:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredTermsEnum$AcceptStatus:

  Verifying word addAndGet get:

    No occurrences

Checking class State:

  Verifying word addAndGet get:

    No occurrences

Checking class Automaton:

  Verifying word addAndGet get:

    No occurrences

Checking class BasicOperations:

  Verifying word addAndGet get:

    No occurrences

Checking class SingleTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class BasicAutomata:

  Verifying word addAndGet get:

    No occurrences

Checking class CompiledAutomaton$1:

  Verifying word addAndGet get:

    No occurrences

Checking class PrefixTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class SpecialOperations:

  Verifying word addAndGet get:

    No occurrences

Checking class UTF32ToUTF8:

  Verifying word addAndGet get:

    No occurrences

Checking class Document:

  Verifying word addAndGet get:

    No occurrences

Checking class Element:

  Verifying word addAndGet get:

    No occurrences

Checking class Node:

  Verifying word addAndGet get:

    No occurrences

Checking class NodeList:

  Verifying word addAndGet get:

    No occurrences

Checking class Text:

  Verifying word addAndGet get:

    No occurrences

Checking class DocIdSetIterator$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BufferedIndexInput$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllDocsWeight:

  Verifying word addAndGet get:

    No occurrences

Checking class MatchAllDocsQuery$MatchAllScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class ConstantScoreQuery$ConstantWeight:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$NumericComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Longs:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Bytes:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Shorts:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Ints:

  Verifying word addAndGet get:

    No occurrences

Checking class ScoreCachingWrappingScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$PerSegmentComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldComparator$TermOrdValComparator$AnyOrdComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Floats:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Doubles:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$CacheEntry:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$CreationPlaceholder:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$10:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$8:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$9:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$6:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$7:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$4:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$5:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$2:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$3:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class StringHelper$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldValueHitQueue$OneComparatorFieldValueHitQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldValueHitQueue$MultiComparatorsFieldValueHitQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class TFIDFSimilarity$IDFStats:

  Verifying word addAndGet get:

    No occurrences

Checking class TFIDFSimilarity$TFIDFSimScorer:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiTermsEnum$TermsEnumIndex:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiBits$SubResult:

  Verifying word addAndGet get:

    No occurrences

Checking class MergedIterator$TermMergeQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class MergedIterator$SubIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class CharsRef$UTF16SortedAsUTF8Comparator:

  Verifying word addAndGet get:

    No occurrences

Checking class ArrayUtil$NaturalComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class ArrayTimSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class ArrayIntroSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteBufferIndexInput:

  Verifying word addAndGet get:

    No occurrences

Checking class MMapDirectory$MMapIndexInput$1:

  Verifying word addAndGet get:

    No occurrences

Checking class LockReleaseFailedException:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexFormatTooOldException:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xStoredFieldsReader:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexFormatTooNewException:

  Verifying word addAndGet get:

    No occurrences

Checking class IndexNotFoundException:

  Verifying word addAndGet get:

    No occurrences

Checking class WeakIdentityMap$IdentityWeakReference:

  Verifying word addAndGet get:

    No occurrences

Checking class WeakIdentityMap$1:

  Verifying word addAndGet get:

    No occurrences

Checking class AttributeImpl$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefIterator$1:

  Verifying word addAndGet get:

    No occurrences

Checking class OrdTermState:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericTokenStream$NumericTermAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class TypeAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericTokenStream$NumericAttributeFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericTokenStream$NumericTermAttributeImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericUtils:

  Verifying word addAndGet get:

    No occurrences

Checking class CharTermAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class OffsetAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$TermVector$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$TermVector$4:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$TermVector$5:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$TermVector$2:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$TermVector$3:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Index$2:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Index$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Index$4:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Index$3:

  Verifying word addAndGet get:

    No occurrences

Checking class Field$Index$5:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThread$DocState:

  Verifying word addAndGet get:

    No occurrences

Checking class DocConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class Counter:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$DeleteSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteBlockPool$Allocator:

  Verifying word addAndGet get:

    No occurrences

Checking class IntBlockPool$Allocator:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteBlockPool:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThread$1:

  Verifying word addAndGet get:

    No occurrences

Checking class IntBlockPool:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteBlockPool$DirectTrackingAllocator:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterPerThread$IntBlockAllocator:

  Verifying word addAndGet get:

    No occurrences

Checking class SetOnce$AlreadySetException:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator$ClassCache:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator$DummyTwoLongObject:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator$JvmFeature:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator$DummyOneFieldObject:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet:

  Verifying word addAndGet get:

    No occurrences

Checking class RAMFile:

  Verifying word addAndGet get:

    No occurrences

Checking class PrefixCodedTerms$PrefixCodedTermsIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class FrozenBufferedUpdates$2$1:

  Verifying word addAndGet get:

    No occurrences

Checking class RAMOutputStream:

  Verifying word addAndGet get:

    No occurrences

Checking class CoalescedUpdates$2:

  Verifying word addAndGet get:

    No occurrences

Checking class CoalescedUpdates$1:

  Verifying word addAndGet get:

    No occurrences

Checking class QueryWrapperFilter$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentReadState:

  Verifying word addAndGet get:

    No occurrences

Checking class BitVector:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xNormsProducer:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFieldInfosReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFields:

  Verifying word addAndGet get:

    No occurrences

Checking class ReadersAndUpdates$1$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues$OrdinalMap:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$7:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$BitsFilteredTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$2:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$3:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$4:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$5:

  Verifying word addAndGet get:

    No occurrences

Checking class OpenBitSet:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$6:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class BitUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class OpenBitSetIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class MonotonicAppendingLongBuffer:

  Verifying word addAndGet get:

    No occurrences

Checking class MergeState$DocMap$1:

  Verifying word addAndGet get:

    No occurrences

Checking class CompoundFileWriter$FileEntry:

  Verifying word addAndGet get:

    No occurrences

Checking class CompoundFileWriter$DirectCFSIndexOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentCoreReaders$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentCoreReaders$2:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentCoreReaders$3:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesProducer$SortedDocsWithField:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesProducer$SortedSetDocsWithField:

  Verifying word addAndGet get:

    No occurrences

Checking class RefCount:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$Node:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermNode:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$NumericUpdateNode:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$QueryArrayNode:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterDeleteQueue$TermArrayNode:

  Verifying word addAndGet get:

    No occurrences

Checking class CollectionUtil$ListTimSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class CollectionUtil$ListIntroSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class TieredMergePolicy$MergeScore:

  Verifying word addAndGet get:

    No occurrences

Checking class TieredMergePolicy$SegmentByteSizeDescending:

  Verifying word addAndGet get:

    No occurrences

Checking class TieredMergePolicy$1:

  Verifying word addAndGet get:

    No occurrences

Checking class ConcurrentMergeScheduler$MergeThread:

  Verifying word addAndGet get:

    No occurrences

Checking class ConcurrentMergeScheduler$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushQueue$FlushTicket:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentsWriterFlushQueue$GlobalDeletesTicket:

  Verifying word addAndGet get:

    No occurrences

Checking class SPIClassIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$FormatAndBits:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Decoder:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Format:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Encoder:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Reader:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Header:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$ReaderIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Mutable:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Writer:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedReaderIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class DirectPackedReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed8ThreeBlocks:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed16ThreeBlocks:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Direct64:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$2:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$ReaderIteratorImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class DirectPacked64SingleBlockReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock:

  Verifying word addAndGet get:

    No occurrences

Checking class Direct32:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperation:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$MutableImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class Direct8:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$ReaderImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$NullReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Direct16:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class GrowableWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class LongValues:

  Verifying word addAndGet get:

    No occurrences

Checking class InPlaceMergeSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class FilteredTermsEnum$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Transition$CompareByDestThenMinMaxSingle:

  Verifying word addAndGet get:

    No occurrences

Checking class Transition$CompareByMinMaxThenDestSingle:

  Verifying word addAndGet get:

    No occurrences

Checking class State$TransitionsIterable:

  Verifying word addAndGet get:

    No occurrences

Checking class RunAutomaton:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedIntSet:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedIntSet$FrozenIntSet:

  Verifying word addAndGet get:

    No occurrences

Checking class BasicOperations$PointTransitionSet:

  Verifying word addAndGet get:

    No occurrences

Checking class BasicOperations$TransitionList:

  Verifying word addAndGet get:

    No occurrences

Checking class StatePair:

  Verifying word addAndGet get:

    No occurrences

Checking class BasicOperations$PointTransitions:

  Verifying word addAndGet get:

    No occurrences

Checking class DaciukMihovAutomatonBuilder:

  Verifying word addAndGet get:

    No occurrences

Checking class MinimizationOperations:

  Verifying word addAndGet get:

    No occurrences

Checking class Util:

  Verifying word addAndGet get:

    No occurrences

Checking class UTF32ToUTF8$UTF8Sequence:

  Verifying word addAndGet get:

    No occurrences

Checking class UTF32ToUTF8$UTF8Byte:

  Verifying word addAndGet get:

    No occurrences

Checking class DOMException:

  Verifying word addAndGet get:

    No occurrences

Checking class Attr:

  Verifying word addAndGet get:

    No occurrences

Checking class TypeInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class DocumentType:

  Verifying word addAndGet get:

    No occurrences

Checking class DOMImplementation:

  Verifying word addAndGet get:

    No occurrences

Checking class ProcessingInstruction:

  Verifying word addAndGet get:

    No occurrences

Checking class DOMConfiguration:

  Verifying word addAndGet get:

    No occurrences

Checking class NamedNodeMap:

  Verifying word addAndGet get:

    No occurrences

Checking class UserDataHandler:

  Verifying word addAndGet get:

    No occurrences

Checking class CharacterData:

  Verifying word addAndGet get:

    No occurrences

Checking class ComplexExplanation:

  Verifying word addAndGet get:

    No occurrences

Checking class ConstantScoreQuery$ConstantScorer$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Longs$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Bytes$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Shorts$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Ints$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Floats$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$Uninvert:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$ShortsFromArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$4:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$5:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$6:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$7:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$8:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$2:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$3:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$IntsFromArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$FloatsFromArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$SortedDocValuesImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$BytesFromArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$DoublesFromArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$DoubleCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$ShortCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$LongsFromArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$DocTermOrdsCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$FloatCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$ByteCache:

  Verifying word addAndGet get:

    No occurrences

Checking class SingletonSortedSetDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$LongCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$GrowableWriterAndMinValue:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$IntCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$Cache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$HoldsOneThing:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesImpl:

  Verifying word addAndGet get:

    No occurrences

Checking class DocTermOrds:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$CacheKey:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$DocsWithFieldCache:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCache$Doubles$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiTermsEnum$TermMergeQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiTermsEnum$TermsEnumWithSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocsEnum$EnumWithSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocsAndPositionsEnum$EnumWithSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class BitsSlice:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocsAndPositionsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class TimSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class IntroSorter:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xStoredFieldsReader$1:

  Verifying word addAndGet get:

    No occurrences

Checking class TermToBytesRefAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericUtils$LongRangeBuilder:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericUtils$IntRangeBuilder:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericUtils$2:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericUtils$1:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteBlockPool$DirectAllocator:

  Verifying word addAndGet get:

    No occurrences

Checking class Counter$SerialCounter:

  Verifying word addAndGet get:

    No occurrences

Checking class Counter$AtomicCounter:

  Verifying word addAndGet get:

    No occurrences

Checking class FreqProxTermsWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class DocFieldProcessor:

  Verifying word addAndGet get:

    No occurrences

Checking class DocInverter:

  Verifying word addAndGet get:

    No occurrences

Checking class DocFieldConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class NormsConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldsConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsHashConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class InvertedDocConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class StoredFieldsProcessor:

  Verifying word addAndGet get:

    No occurrences

Checking class InvertedDocEndConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class TwoStoredFieldsConsumers:

  Verifying word addAndGet get:

    No occurrences

Checking class TermVectorsConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsHash:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesProcessor:

  Verifying word addAndGet get:

    No occurrences

Checking class IntBlockPool$SliceWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class IntBlockPool$DirectAllocator:

  Verifying word addAndGet get:

    No occurrences

Checking class IntBlockPool$SliceReader:

  Verifying word addAndGet get:

    No occurrences

Checking class RamUsageEstimator$IdentityHashSet$1:

  Verifying word addAndGet get:

    No occurrences

Checking class RAMInputStream:

  Verifying word addAndGet get:

    No occurrences

Checking class RAMDirectory:

  Verifying word addAndGet get:

    No occurrences

Checking class CoalescedUpdates$2$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVDocsAndPositionsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TermAndPostings:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTerms:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class TermInfosReader:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFields$PreDocsAndPositionsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFields$PreTerms:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFields$PreTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xFields$PreDocsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class AppendingPackedLongBuffer:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$7$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$1$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$2$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$3$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$4$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$5$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesConsumer$6$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues$MultiSortedSetDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues$2:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues$3:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiDocValues$MultiSortedDocValues:

  Verifying word addAndGet get:

    No occurrences

Checking class AbstractAppendingLongBuffer:

  Verifying word addAndGet get:

    No occurrences

Checking class AbstractAppendingLongBuffer$Iterator:

  Verifying word addAndGet get:

    No occurrences

Checking class MappingMultiDocsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class MappingMultiDocsAndPositionsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class PostingsConsumer:

  Verifying word addAndGet get:

    No occurrences

Checking class TermStats:

  Verifying word addAndGet get:

    No occurrences

Checking class LongsRef:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock16:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock32:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock12:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock10:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock5:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock4:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock3:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock2:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock9:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock8:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock7:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock6:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock1:

  Verifying word addAndGet get:

    No occurrences

Checking class Packed64SingleBlock$Packed64SingleBlock21:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked12:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPackedSingleBlock:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked13:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked10:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked11:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked4:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked3:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked2:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked1:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperation$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked17:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked16:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked15:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked14:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked9:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked8:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked7:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked19:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked6:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked18:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked5:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked20:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked21:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked22:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked23:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked:

  Verifying word addAndGet get:

    No occurrences

Checking class BulkOperationPacked24:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Format$1:

  Verifying word addAndGet get:

    No occurrences

Checking class PackedInts$Format$2:

  Verifying word addAndGet get:

    No occurrences

Checking class Sorter:

  Verifying word addAndGet get:

    No occurrences

Checking class State$TransitionsIterable$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DaciukMihovAutomatonBuilder$State:

  Verifying word addAndGet get:

    No occurrences

Checking class MinimizationOperations$StateList:

  Verifying word addAndGet get:

    No occurrences

Checking class MinimizationOperations$IntPair:

  Verifying word addAndGet get:

    No occurrences

Checking class MinimizationOperations$StateListNode:

  Verifying word addAndGet get:

    No occurrences

Checking class FST:

  Verifying word addAndGet get:

    No occurrences

Checking class FST$BytesReader:

  Verifying word addAndGet get:

    No occurrences

Checking class FST$Arc:

  Verifying word addAndGet get:

    No occurrences

Checking class Util$MinResult:

  Verifying word addAndGet get:

    No occurrences

Checking class Util$TieBreakByInputComparator:

  Verifying word addAndGet get:

    No occurrences

Checking class FST$INPUT_TYPE:

  Verifying word addAndGet get:

    No occurrences

Checking class Outputs:

  Verifying word addAndGet get:

    No occurrences

Checking class Util$TopNSearcher:

  Verifying word addAndGet get:

    No occurrences

Checking class Util$FSTPath:

  Verifying word addAndGet get:

    No occurrences

Checking class DOMStringList:

  Verifying word addAndGet get:

    No occurrences

Checking class PagedBytes:

  Verifying word addAndGet get:

    No occurrences

Checking class PagedBytes$Reader:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$DoubleCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$BinaryDocValuesCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$ShortCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$FloatCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$ByteCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$LongCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheImpl$IntCache$1:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheSanityChecker$Insanity:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheSanityChecker:

  Verifying word addAndGet get:

    No occurrences

Checking class DocTermOrds$Iterator:

  Verifying word addAndGet get:

    No occurrences

Checking class DocTermOrds$OrdWrappedTermsEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsHashConsumerPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsHashPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class FreqProxTermsWriterPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefHash:

  Verifying word addAndGet get:

    No occurrences

Checking class DocFieldProcessorPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class DocFieldProcessor$1:

  Verifying word addAndGet get:

    No occurrences

Checking class DocFieldConsumerPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class InvertedDocConsumerPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class InvertedDocEndConsumerPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class DocInverterPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class NormsConsumerPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteSliceReader:

  Verifying word addAndGet get:

    No occurrences

Checking class TermVectorsConsumerPerField:

  Verifying word addAndGet get:

    No occurrences

Checking class DocValuesWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValuesWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class BinaryDocValuesWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericDocValuesWriter:

  Verifying word addAndGet get:

    No occurrences

Checking class SingleInstanceLockFactory:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVTermsEnum$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xTermVectorsReader$TVFields$1:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xNormsProducer$NormsDocValues$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentTermPositions:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentTermEnum:

  Verifying word addAndGet get:

    No occurrences

Checking class TermInfosReaderIndex:

  Verifying word addAndGet get:

    No occurrences

Checking class DoubleBarrelLRUCache:

  Verifying word addAndGet get:

    No occurrences

Checking class TermInfosReader$ThreadResources:

  Verifying word addAndGet get:

    No occurrences

Checking class TermInfo:

  Verifying word addAndGet get:

    No occurrences

Checking class TermInfosReader$TermInfoAndOrd:

  Verifying word addAndGet get:

    No occurrences

Checking class DoubleBarrelLRUCache$CloneableKey:

  Verifying word addAndGet get:

    No occurrences

Checking class TermInfosReader$CloneableTerm:

  Verifying word addAndGet get:

    No occurrences

Checking class SegmentTermDocs:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesStore:

  Verifying word addAndGet get:

    No occurrences

Checking class Builder$UnCompiledNode:

  Verifying word addAndGet get:

    No occurrences

Checking class Builder$Arc:

  Verifying word addAndGet get:

    No occurrences

Checking class Builder:

  Verifying word addAndGet get:

    No occurrences

Checking class Builder$CompiledNode:

  Verifying word addAndGet get:

    No occurrences

Checking class FST$NodeAndInCount:

  Verifying word addAndGet get:

    No occurrences

Checking class Builder$Node:

  Verifying word addAndGet get:

    No occurrences

Checking class FST$NodeQueue:

  Verifying word addAndGet get:

    No occurrences

Checking class ByteArrayDataOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class FST$ArcAndState:

  Verifying word addAndGet get:

    No occurrences

Checking class OutputStreamDataOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class InputStreamDataInput:

  Verifying word addAndGet get:

    No occurrences

Checking class LSResourceResolver:

  Verifying word addAndGet get:

    No occurrences

Checking class PagedBytes$PagedBytesDataInput:

  Verifying word addAndGet get:

    No occurrences

Checking class PagedBytes$PagedBytesDataOutput:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheSanityChecker$InsanityType:

  Verifying word addAndGet get:

    No occurrences

Checking class MapOfSets:

  Verifying word addAndGet get:

    No occurrences

Checking class FieldCacheSanityChecker$ReaderField:

  Verifying word addAndGet get:

    No occurrences

Checking class PayloadAttribute:

  Verifying word addAndGet get:

    No occurrences

Checking class ParallelPostingsArray:

  Verifying word addAndGet get:

    No occurrences

Checking class FreqProxTermsWriterPerField$FreqProxPostingsArray:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefHash$MaxBytesLengthExceededException:

  Verifying word addAndGet get:

    No occurrences

Checking class TermsHashPerField$PostingsBytesStartArray:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefHash$BytesStartArray:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefHash$DirectBytesStartArray:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesRefHash$1:

  Verifying word addAndGet get:

    No occurrences

Checking class TermVectorsConsumerPerField$TermVectorsPostingsArray:

  Verifying word addAndGet get:

    No occurrences

Checking class AppendingDeltaPackedLongBuffer:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValuesWriter$ValuesIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValuesWriter$OrdsIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValuesWriter$2:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedDocValuesWriter$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdsIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter$OrdCountIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter$ValuesIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter$1:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter$2:

  Verifying word addAndGet get:

    No occurrences

Checking class SortedSetDocValuesWriter$3:

  Verifying word addAndGet get:

    No occurrences

Checking class BinaryDocValuesWriter$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BinaryDocValuesWriter$BytesIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericDocValuesWriter$1:

  Verifying word addAndGet get:

    No occurrences

Checking class NumericDocValuesWriter$NumericIterator:

  Verifying word addAndGet get:

    No occurrences

Checking class SingleInstanceLock:

  Verifying word addAndGet get:

    No occurrences

Checking class TermBuffer:

  Verifying word addAndGet get:

    No occurrences

Checking class MathUtil:

  Verifying word addAndGet get:

    No occurrences

Checking class Lucene3xSkipListReader:

  Verifying word addAndGet get:

    No occurrences

Checking class NodeHash:

  Verifying word addAndGet get:

    No occurrences

Checking class Builder$FreezeTail:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesStore$1:

  Verifying word addAndGet get:

    No occurrences

Checking class BytesStore$2:

  Verifying word addAndGet get:

    No occurrences

Checking class ForwardBytesReader:

  Verifying word addAndGet get:

    No occurrences

Checking class ReverseBytesReader:

  Verifying word addAndGet get:

    No occurrences

Checking class LSInput:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiLevelSkipListReader:

  Verifying word addAndGet get:

    No occurrences

Checking class MultiLevelSkipListReader$SkipBuffer:

  Verifying word addAndGet get:

    No occurrences


Run Time:
                                .buildTree       0.001s
                                    .onLCA       0.002s
                         analysis-behavior       9.137s
                          analysis-threads       0.008s
                       build-parsing-table       0.069s
                       check-word-instance       0.001s
                               grammar-opt       1.467s
                        grammar-rm-epsilon       7.357s
                                   parsing       0.012s
                                 soot-init      78.564s
                                     total     142.222s

Profiling Vars:
                                 cfg-nodes     110298
                       grammar-productions       1019
                            parse-branches        235
                               parse-trees          5
                      parsing-table-states       1824
                                   threads          1
